{"version":3,"file":"static/js/795.653b2cb5.chunk.js","mappings":"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","sources":["components/Cover.tsx","components/HorizontalSlide.tsx","views/app/Find.tsx","store/selectors.ts","components/get_started/Authenticated.tsx","components/ForYou.tsx","components/get_started/Setup.tsx","components/get_started/Unauthenticated.tsx","views/app/Home.tsx","components/FileList.tsx","hooks/toggle.ts","components/PersonList.tsx","views/app/Movie.tsx","components/ItemGrid.tsx","components/VerticalSlide.tsx","components/authentication/AddProviderModal.tsx","views/app/Movies.tsx","components/icons/Nucleo/FindIcon.tsx","components/icons/Nucleo/ForYouIcon.tsx","components/icons/Nucleo/MovieIcon.tsx","components/icons/Nucleo/SettingsIcon.tsx","components/icons/Nucleo/ShowIcon.tsx","components/Tab.tsx","components/Nav.tsx","views/app/Person.tsx","components/EpisodeEntry.tsx","views/app/Season.tsx","components/icons/Nucleo/AddIcon.tsx","components/ProviderButton.tsx","components/authentication/ChooseProvider.tsx","components/icons/Nucleo/CheckIcon.tsx","components/authentication/FTPProviderForm.tsx","components/authentication/EnterDetailsProvider.tsx","components/authentication/ProviderForm.tsx","components/authentication/SetupProvider.tsx","components/authentication/UpdateProviderModal.tsx","components/LanguageSelector.tsx","views/app/Settings.tsx","views/app/Show.tsx","views/app/Shows.tsx","views/app/index.tsx"],"sourcesContent":["import './Cover.scss'\nimport React from 'react'\n\ntype CoverProps = {\n  url: string\n  alt: string\n}\n\nexport const Cover = ({ url, alt }: CoverProps) => (\n  <img className=\"Cover\" src={url} alt={alt} />\n)\n","import './HorizontalSlide.scss'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport { buildCoverUrl, buildItemUrl } from '../util'\nimport { Cover } from './Cover'\nimport { Link } from 'react-router-dom'\nimport { Movie } from '../types/items/Movie'\nimport React from 'react'\nimport { Season } from '../types/items/Season'\nimport { Show } from '../types/items/Show'\nimport { useTranslation } from 'react-i18next'\n\ntype HorizontalSlideProps = {\n  id: string\n  items: (Movie | Season | Show)[]\n}\n\nexport const HorizontalSlide = ({ id, items }: HorizontalSlideProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"HorizontalSlide\" id={id}>\n      <Swiper\n        spaceBetween={15}\n        slidesPerView=\"auto\"\n        slidesOffsetBefore={20}\n        slidesOffsetAfter={20}\n        grabCursor\n      >\n        {items.length > 0 ? (\n          items.map((item, index) => (\n            <SwiperSlide key={index}>\n              <Link to={buildItemUrl(item)}>\n                <Cover url={buildCoverUrl(item.posterPath)} alt={item.title} />\n              </Link>\n            </SwiperSlide>\n          ))\n        ) : (\n          <SwiperSlide>\n            <h3>{t('Nothing found.')}</h3>\n          </SwiperSlide>\n        )}\n      </Swiper>\n    </div>\n  )\n}\n","import './Find.scss'\nimport { Navigate, useLocation, useNavigate } from 'react-router-dom'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { movieSelector, moviesSelector } from '../../store/movies/selectors'\nimport { showSelector, showsSelector } from '../../store/shows/selectors'\nimport { HorizontalSlide } from '../../components/HorizontalSlide'\nimport { Index } from 'flexsearch'\nimport { Item } from '../../types/items/Item'\nimport { RootState } from '../../store'\nimport { notUndefined } from '../../util'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\nconst QUERY_PARAMETER = 'q'\n\nconst buildIndex = <T extends Item>(\n  items: T[],\n  itemToText: (item: T) => string,\n) => {\n  const index = new Index({\n    tokenize: 'forward',\n  })\n  items.forEach((item) => index.add(item.id, itemToText(item)))\n  return index\n}\n\nexport const Find = () => {\n  const { t } = useTranslation()\n  const navigate = useNavigate()\n  const location = useLocation()\n\n  const initialQuery = useMemo(\n    () => new URLSearchParams(location.search).get(QUERY_PARAMETER),\n    [location],\n  )\n\n  const { movies, shows } = useSelector((state: RootState) => ({\n    movies: state.movies,\n    shows: state.shows,\n  }))\n\n  const [query, setQuery] = useState(initialQuery || '')\n\n  const moviesIndex = useMemo(\n    () =>\n      buildIndex(\n        moviesSelector(movies),\n        (movie) => `${movie.title};${movie.summary}`,\n      ),\n    [movies],\n  )\n  const showsIndex = useMemo(\n    () =>\n      buildIndex(\n        showsSelector(shows),\n        (show) => `${show.title};${show.summary}`,\n      ),\n    [shows],\n  )\n\n  const foundMovies = useMemo(() => {\n    const result = moviesIndex.search(query)\n    return result\n      .map((id) => movieSelector(id as string)(movies))\n      .filter(notUndefined)\n  }, [moviesIndex, query])\n  const foundShows = useMemo(() => {\n    const result = showsIndex.search(query)\n    return result\n      .map((id) => showSelector(id as string)(shows))\n      .filter(notUndefined)\n  }, [showsIndex, query])\n\n  const handleInputChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      navigate(`/app/find?${QUERY_PARAMETER}=${event.target.value}`, {\n        replace: true,\n      })\n      setQuery(event.target.value)\n    },\n    [navigate, setQuery],\n  )\n\n  return moviesSelector(movies).length > 0 ||\n    showsSelector(shows).length > 0 ? (\n    <div className=\"Find\">\n      <form>\n        <input\n          autoFocus\n          value={query}\n          placeholder={t('Search your library')}\n          onChange={handleInputChange}\n        />\n      </form>\n\n      {foundMovies && Object.keys(foundMovies).length > 0 && (\n        <section>\n          <h2>{t('Movies')}</h2>\n          <HorizontalSlide items={foundMovies} id=\"movies\" />\n        </section>\n      )}\n\n      {foundShows && Object.keys(foundShows).length > 0 && (\n        <section>\n          <h2>{t('TV shows')}</h2>\n          <HorizontalSlide items={foundShows} id=\"shows\" />\n        </section>\n      )}\n    </div>\n  ) : (\n    <Navigate to=\"/app\" />\n  )\n}\n","import {\n  inProgressSelector as inProgressMoviesSelector,\n  moviesPersonSelector,\n  recentlyWatchedSelector as recentlyWatchedMoviesSelector,\n} from './movies/selectors'\nimport {\n  inProgressSelector as inProgressSeasonsSelector,\n  recentlyWatchedSelector as recentlyWatchedSeasonsSelector,\n  seasonsPersonSelector,\n} from './seasons/selectors'\nimport { AccPerson } from '../types/items/Person'\nimport { ItemKind } from '../types/items/Item'\nimport { RootState } from '.'\nimport { createSelector } from 'reselect'\n\nexport const inProgressSelector = createSelector(\n  [\n    (state: RootState) => inProgressMoviesSelector(state.movies),\n    (state: RootState) => inProgressSeasonsSelector(state.seasons),\n  ],\n  (movies, seasons) => [...movies, ...seasons],\n)\n\nexport const recentlyWatchedSelector = createSelector(\n  [\n    (state: RootState) => recentlyWatchedMoviesSelector(state.movies),\n    (state: RootState) => recentlyWatchedSeasonsSelector(state.seasons),\n  ],\n  (movies, seasons) => [...movies, ...seasons],\n)\n\nexport const personSelector = (id: string) =>\n  createSelector(\n    [\n      ({ movies }) => moviesPersonSelector(id, (movie) => movie.cast)(movies),\n      ({ movies }) => moviesPersonSelector(id, (movie) => movie.crew)(movies),\n      ({ seasons }) =>\n        seasonsPersonSelector(id, (season) => season.cast)(seasons),\n      ({ seasons }) =>\n        seasonsPersonSelector(id, (season) => season.crew)(seasons),\n    ],\n    (moviesCast, moviesCrew, seasonsCast, seasonsCrew) => {\n      const roles = [\n        ...moviesCast,\n        ...moviesCrew,\n        ...seasonsCast,\n        ...seasonsCrew,\n      ]\n\n      return roles.reduce<AccPerson | undefined>(\n        (acc, person) => ({\n          kind: ItemKind.Person,\n          id,\n          tmdbId: person.tmdbId,\n          name: person.name,\n          gender: person.gender,\n          profilePath: person.profilePath,\n          jobs:\n            person.job === undefined\n              ? acc?.jobs\n              : acc !== undefined && acc.jobs !== undefined\n              ? [...new Set([...acc.jobs, person.job])]\n              : [person.job],\n        }),\n        undefined,\n      )\n    },\n  )\n","import './Authenticated.scss'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\ntype AuthenticatedProps = {\n  onIndex: () => void\n}\n\nexport const Authenticated = ({ onIndex }: AuthenticatedProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"Authenticated\">\n      <h2>{t('Get started')}</h2>\n      <p>\n        {t(\n          \"You signed into a cloud service, but we didn't find any movies or TV shows.\",\n        )}\n      </p>\n      <p>\n        {t(\n          \"It's likely that you just have to move some of your files around and create some folders to make it work.\",\n        )}\n      </p>\n      <p>\n        {t(\n          \"Reference the getting started guide to learn how to organize your files so that Plaain finds them. After you're done, just re-index.\",\n        )}\n      </p>\n      <div className=\"Authenticated__buttons\">\n        <a\n          className=\"button primary\"\n          href=\"https://github.com/jonhue/plaain#getting-started\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {t('Getting started')}\n        </a>\n        <button onClick={onIndex}>{t('Index')}</button>\n      </div>\n    </div>\n  )\n}\n","import './ForYou.scss'\nimport { HorizontalSlide } from './HorizontalSlide'\nimport { Movie } from '../types/items/Movie'\nimport React from 'react'\nimport { Season } from '../types/items/Season'\nimport { useTranslation } from 'react-i18next'\n\ntype ForYouProps = {\n  inProgress: (Movie | Season)[]\n  recentlyWatched: (Movie | Season)[]\n}\n\nexport const ForYou = ({ inProgress, recentlyWatched }: ForYouProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"ForYou\">\n      {inProgress.length > 0 && (\n        <section>\n          <h2>{t('Continue watching')}</h2>\n          <HorizontalSlide items={inProgress} id=\"inProgress\" />\n        </section>\n      )}\n\n      {recentlyWatched.length > 0 && (\n        <section>\n          <h2>{t('Recently watched')}</h2>\n          <HorizontalSlide items={recentlyWatched} id=\"recentlyWatched\" />\n        </section>\n      )}\n    </div>\n  )\n}\n","import './Setup.scss'\nimport { Link } from 'react-router-dom'\nimport { Movie } from '../../types/items/Movie'\nimport React from 'react'\nimport { Show } from '../../types/items/Show'\nimport { useTranslation } from 'react-i18next'\n\ntype SetupProps = {\n  movies: Movie[]\n  shows: Show[]\n}\n\nexport const Setup = ({ movies, shows }: SetupProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"Setup\">\n      <h2>{t('Get started')}</h2>\n      <p>\n        {t(\n          \"Here, you'll be able to find your recently watched movie or the show you didn't finish yet.\",\n        )}\n      </p>\n      <div className=\"Setup__buttons\">\n        {movies.length > 0 && (\n          <Link to=\"/app/movies\" className=\"button\">\n            {t('Discover your movies')}\n          </Link>\n        )}\n        {shows.length > 0 && (\n          <Link to=\"/app/shows\" className=\"button\">\n            {t('Discover your shows')}\n          </Link>\n        )}\n      </div>\n    </div>\n  )\n}\n","import './Unauthenticated.scss'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\n\nexport const Unauthenticated = () => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"Unauthenticated\">\n      <h2>{t('Get started')}</h2>\n      <p>\n        {t(\n          'To watch your movies and TV shows, you first have to sign in with the cloud service that hosts your media.',\n        )}\n      </p>\n      <Link to=\"/app/settings\" className=\"button\">\n        {t('Authenticate')}\n      </Link>\n      <p className=\"small\">\n        <Trans>\n          Note that Plaain may <span className=\"bold\">not</span> be used to\n          stream pirated content or publicly share your private media library.\n          You may only connect to your private cloud storage.\n        </Trans>\n      </p>\n    </div>\n  )\n}\n","import React, { useCallback } from 'react'\nimport {\n  inProgressSelector,\n  recentlyWatchedSelector,\n} from '../../store/selectors'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Authenticated } from '../../components/get_started/Authenticated'\nimport { ForYou } from '../../components/ForYou'\nimport { RootState } from '../../store'\nimport { Setup } from '../../components/get_started/Setup'\nimport { Unauthenticated } from '../../components/get_started/Unauthenticated'\nimport { index } from '../../store/thunks'\nimport { load } from '../../store/ui/thunks'\nimport { moviesSelector } from '../../store/movies/selectors'\nimport { providersSelector } from '../../store/auth/selectors'\nimport { showsSelector } from '../../store/shows/selectors'\nimport { sortByLastWatched } from '../../util'\n\nexport const Home = () => {\n  const dispatch = useDispatch()\n\n  const { inProgress, movies, providers, recentlyWatched, shows } = useSelector(\n    (state: RootState) => ({\n      inProgress: sortByLastWatched(inProgressSelector(state)),\n      movies: moviesSelector(state.movies),\n      providers: providersSelector(state.auth),\n      recentlyWatched: sortByLastWatched(recentlyWatchedSelector(state)),\n      shows: showsSelector(state.shows),\n    }),\n  )\n\n  const handleIndex = useCallback(() => {\n    dispatch(load(index(providers)))\n  }, [dispatch, providers])\n\n  return inProgress.length > 0 || recentlyWatched.length > 0 ? (\n    <ForYou inProgress={inProgress} recentlyWatched={recentlyWatched} />\n  ) : providers.length === 0 ? (\n    <Unauthenticated />\n  ) : movies.length === 0 && shows.length === 0 ? (\n    <Authenticated onIndex={handleIndex} />\n  ) : (\n    <Setup movies={movies} shows={shows} />\n  )\n}\n","import { File } from '../types/files/File'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\ntype FileListProps = {\n  files: File[]\n}\n\nexport const FileList = ({ files }: FileListProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"FileList\">\n      {files.map((file, index) => {\n        return (\n          <p className=\"small\" key={index}>\n            {file.name}\n          </p>\n        )\n      })}\n      {files.length === 0 && <p className=\"small\">{t('None')}</p>}\n    </div>\n  )\n}\n","import { useCallback, useState } from 'react'\n\nexport const useToggle = (\n  initialValue: boolean,\n): [value: boolean, handleToggle: () => void] => {\n  const [value, setValue] = useState(initialValue)\n  const handleToggle = useCallback(\n    () => setValue((state) => !state),\n    [setValue],\n  )\n\n  return [value, handleToggle]\n}\n","import './PersonList.scss'\nimport React, { useMemo } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Person } from '../types/items/Person'\nimport { buildItemUrl } from '../util'\nimport { useToggle } from '../hooks/toggle'\nimport { useTranslation } from 'react-i18next'\n\nconst WRAPPED_SIZE = 10\n\ntype PersonListProps<T extends Person> = {\n  people: T[]\n\n  details: (person: T) => string\n}\n\nexport const PersonList = <T extends Person>({\n  people,\n  details,\n}: PersonListProps<T>) => {\n  const { t } = useTranslation()\n\n  const [isWrapped, toggleIsWrapped] = useToggle(true)\n\n  const displayedPeople = useMemo(\n    () => people.slice(0, isWrapped ? WRAPPED_SIZE : people.length),\n    [isWrapped, people],\n  )\n\n  return (\n    <div className=\"PersonList\">\n      {people.length > 0 ? (\n        displayedPeople.map((person, index) => {\n          return (\n            <p key={index}>\n              <Link to={buildItemUrl(person)}>{person.name}</Link> ·{' '}\n              <span>{details(person)}</span>\n            </p>\n          )\n        })\n      ) : (\n        <p>{t('None')}</p>\n      )}\n      {people.length > WRAPPED_SIZE && (\n        <span onClick={toggleIsWrapped}>\n          {isWrapped ? t('Show more') : t('Show less')}\n        </span>\n      )}\n    </div>\n  )\n}\n","import './Movie.scss'\nimport React, { useCallback } from 'react'\nimport {\n  buildBackdropUrl,\n  buildCoverUrl,\n  buildJobTitle,\n  isInProgress,\n  splitHoursAndMinutes,\n} from '../../util'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { Backdrop } from '../../components/Backdrop'\nimport { Cover } from '../../components/Cover'\nimport { FileList } from '../../components/FileList'\nimport { NotFound } from '../NotFound'\nimport { PersonList } from '../../components/PersonList'\nimport { RootState } from '../../store'\nimport classNames from 'classnames'\nimport { movieSelector } from '../../store/movies/selectors'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\nexport const Movie = () => {\n  const { t } = useTranslation()\n  const navigate = useNavigate()\n  const { id } = useParams()\n\n  const movie = useSelector((state: RootState) =>\n    movieSelector(id!)(state.movies),\n  )\n\n  const handleContinue = useCallback(() => {\n    if (movie === undefined) return\n    navigate(\n      `/player?id=${movie.id}&type=${movie.kind}&s=${movie.usage.progress}`,\n    )\n  }, [movie, navigate])\n\n  const handleWatch = useCallback(() => {\n    if (movie === undefined) return\n    navigate(`/player?id=${movie.id}&type=${movie.kind}`)\n  }, [movie, navigate])\n\n  return movie !== undefined ? (\n    <div className=\"Movie\">\n      <Backdrop url={buildBackdropUrl(movie.backdropPath)} />\n      <div className=\"Movie__details\">\n        <Cover url={buildCoverUrl(movie.posterPath)} alt=\"poster\" />\n        <h1>{movie.title}</h1>\n        <div className=\"Movie__information\">\n          <p className=\"small\">{new Date(movie.releaseDate).getFullYear()}</p>\n          {movie.duration && (\n            <p className=\"small\">{splitHoursAndMinutes(t, movie.duration)}</p>\n          )}\n        </div>\n        <div className=\"Movie__actions\">\n          {isInProgress(movie) && (\n            <button\n              className=\"primary\"\n              onClick={handleContinue}\n              disabled={movie.sources.length === 0}\n            >\n              {t('Continue')}\n            </button>\n          )}\n          <button\n            className={classNames({ primary: !isInProgress(movie) })}\n            onClick={handleWatch}\n            disabled={movie.sources.length === 0}\n          >\n            {t('Watch')}\n          </button>\n          <a\n            className=\"button\"\n            href={movie.trailerUrl}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {t('Play trailer')}\n          </a>\n        </div>\n        <p className=\"Movie__overview\">{movie.summary}</p>\n        <div className=\"Movie__people\">\n          <div className=\"Movie__people__cast\">\n            <h4>{t('Starring')}</h4>\n            <PersonList\n              people={movie.cast}\n              details={(person) => person.character}\n            />\n          </div>\n          <div className=\"Movie__people__crew\">\n            <h4>{t('Crew')}</h4>\n            <PersonList\n              people={movie.crew}\n              details={(person) => buildJobTitle(t, person.job, person.gender)}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"Movie__sources\">\n        <div>\n          <h4>{t('Sources')}</h4>\n          <div>\n            <div className=\"Movie__sources__versions\">\n              <h5>{t('Versions')}</h5>\n              <FileList files={movie.sources} />\n            </div>\n            <div className=\"Movie__sources__captions\">\n              <h5>{t('Subtitles')}</h5>\n              <FileList files={movie.captions} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <NotFound />\n  )\n}\n","import './ItemGrid.scss'\nimport { buildCoverUrl, buildItemUrl } from '../util'\nimport { Cover } from './Cover'\nimport { Link } from 'react-router-dom'\nimport { Movie } from '../types/items/Movie'\nimport React from 'react'\nimport { Season } from '../types/items/Season'\nimport { Show } from '../types/items/Show'\nimport { useTranslation } from 'react-i18next'\n\ntype ItemGridProps = {\n  items: (Movie | Season | Show)[]\n}\n\nexport const ItemGrid = ({ items }: ItemGridProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"ItemGrid\">\n      {items.length > 0 ? (\n        items.map((item, index) => (\n          <div className=\"ItemGrid__item\" key={index}>\n            <Link to={buildItemUrl(item)}>\n              <Cover url={buildCoverUrl(item.posterPath)} alt={item.title} />\n            </Link>\n          </div>\n        ))\n      ) : (\n        <div className=\"ItemGrid__item\">\n          <h3>{t('Nothing found.')}</h3>\n        </div>\n      )}\n    </div>\n  )\n}\n","import './VerticalSlide.scss'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport SwiperCore, { EffectCoverflow } from 'swiper'\nimport { buildCoverUrl, buildItemUrl } from '../util'\nimport { Cover } from './Cover'\nimport { Link } from 'react-router-dom'\nimport { Movie } from '../types/items/Movie'\nimport React from 'react'\nimport { Season } from '../types/items/Season'\nimport { Show } from '../types/items/Show'\nimport { useTranslation } from 'react-i18next'\n\nSwiperCore.use([EffectCoverflow])\n\ntype VerticalSlideProps = {\n  id: string\n  items: (Movie | Season | Show)[]\n  path: string\n}\n\nexport const VerticalSlide = ({ id, items, path }: VerticalSlideProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"VerticalSlide\" id={id}>\n      <Swiper\n        direction=\"vertical\"\n        slidesPerView=\"auto\"\n        grabCursor\n        effect=\"coverflow\"\n        coverflowEffect={{\n          rotate: 0,\n          stretch: 425,\n          depth: 150,\n          modifier: 1,\n          slideShadows: false,\n        }}\n        history={{\n          replaceState: true,\n          key: path,\n        }}\n      >\n        {items.length > 0 ? (\n          items.map((item, index) => (\n            <SwiperSlide data-history={item.id} key={index}>\n              <Link to={buildItemUrl(item)}>\n                <Cover url={buildCoverUrl(item.posterPath)} alt={item.title} />\n              </Link>\n            </SwiperSlide>\n          ))\n        ) : (\n          <SwiperSlide>\n            <h3>{t('Nothing found.')}</h3>\n          </SwiperSlide>\n        )}\n      </Swiper>\n    </div>\n  )\n}\n","import './AddProviderModal.scss'\nimport { AuthResponse, AuthSetup } from '../../services/auth/types'\nimport { Provider, ProviderKind } from '../../types/providers/Provider'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { ChooseProvider } from './ChooseProvider'\nimport { EnterDetailsProvider } from './EnterDetailsProvider'\nimport { Modal } from '../Modal'\nimport { SetupProvider } from './SetupProvider'\nimport { useModal } from '../../hooks/modal'\nimport { useSetupAuthRedirect } from '../../hooks/auth'\n\nenum State {\n  Choose,\n  EnterDetails,\n  Setup,\n}\n\ntype AddProviderModalProps = {\n  isActive: boolean\n\n  onClose: () => void\n  onSetupAuth: (config: AuthSetup) => Promise<AuthResponse | undefined>\n  onAddProvider: (provider: Provider) => void\n}\n\nexport const AddProviderModal = ({\n  isActive,\n  onClose,\n  onSetupAuth,\n  onAddProvider,\n}: AddProviderModalProps) => {\n  const [show, handleOpen] = useModal()\n\n  const initialState = useMemo(() => State.Choose, [])\n  const [state, setState] = useState(initialState)\n  const [kind, setKind] = useState<ProviderKind | undefined>()\n  const [authResponse, setAuthResponse] = useState<AuthResponse | undefined>()\n  useSetupAuthRedirect((response) => {\n    setAuthResponse(response)\n    setState(State.Setup)\n    handleOpen()\n  })\n\n  const handleClose = useCallback(() => {\n    onClose()\n    setTimeout(() => {\n      setState(initialState)\n      setKind(undefined)\n      setAuthResponse(undefined)\n    }, 500)\n  }, [initialState, onClose, setAuthResponse, setKind, setState])\n\n  const handleChoose = useCallback(\n    async (kind: ProviderKind) => {\n      setKind(kind)\n      switch (kind) {\n        case ProviderKind.FTP:\n          setState(State.EnterDetails)\n          return\n        case ProviderKind.OneDrive:\n          const authResponse = await onSetupAuth({ kind })\n          setAuthResponse(authResponse)\n          setState(State.Setup)\n          return\n      }\n    },\n    [setAuthResponse, setKind, onSetupAuth, setState],\n  )\n\n  const handleEnteredDetails = useCallback(\n    async (config: AuthSetup) => {\n      const authResponse = await onSetupAuth(config)\n      setAuthResponse(authResponse)\n      setState(State.Setup)\n    },\n    [setAuthResponse, onSetupAuth],\n  )\n\n  const handleSetup = useCallback(\n    (moviesPath: string | undefined, showsPath: string | undefined) => {\n      if (authResponse === undefined) return\n\n      const provider = { ...authResponse, moviesPath, showsPath }\n      onAddProvider(provider)\n      handleClose()\n    },\n    [authResponse, onAddProvider, handleClose],\n  )\n\n  return (\n    <div className=\"AddProviderModal\">\n      <Modal isActive={isActive || show} onClose={handleClose}>\n        {state === State.Choose ? (\n          <ChooseProvider onChoose={handleChoose} />\n        ) : state === State.EnterDetails ? (\n          <EnterDetailsProvider\n            kind={kind!}\n            onEnteredDetails={handleEnteredDetails}\n          />\n        ) : state === State.Setup ? (\n          <SetupProvider onSetup={handleSetup} />\n        ) : null}\n      </Modal>\n    </div>\n  )\n}\n","import './Movies.scss'\nimport { ItemGrid } from '../../components/ItemGrid'\nimport { Navigate } from 'react-router-dom'\nimport React from 'react'\nimport { RootState } from '../../store'\nimport { VerticalSlide } from '../../components/VerticalSlide'\nimport { moviesSelector } from '../../store/movies/selectors'\nimport { sortAlphabetically } from '../../util'\nimport { useSelector } from 'react-redux'\n\nexport const Movies = () => {\n  const movies = useSelector((state: RootState) =>\n    sortAlphabetically(moviesSelector(state.movies), (movie) => movie.title),\n  )\n\n  return movies.length > 0 ? (\n    <div className=\"Movies\">\n      <VerticalSlide items={movies} path=\"movies\" id=\"movies\" />\n      <ItemGrid items={movies} />\n    </div>\n  ) : (\n    <Navigate to=\"/app\" />\n  )\n}\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const FindIcon = () => (\n  <Icon className=\"zoom\" width={24} height={24}>\n    <title>Find</title>\n    <g fill=\"#ffffff\">\n      <line\n        fill=\"none\"\n        stroke=\"#ffffff\"\n        x1=\"22\"\n        x2=\"15.656\"\n        y1=\"22\"\n        y2=\"15.656\"\n      />\n      <circle cx=\"10\" cy=\"10\" fill=\"none\" r=\"8\" stroke=\"#ffffff\" />\n    </g>\n  </Icon>\n)\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const ForYouIcon = () => (\n  <Icon className=\"popcorn\" width={24} height={24}>\n    <title>For You</title>\n    <g fill=\"#ffffff\">\n      <polygon fill=\"none\" points=\"21 7 3 7 5 23 19 23 21 7\" stroke=\"#ffffff\" />\n      <path\n        d=\"M19,5a3,3,0,0,0-3-3,2.97,2.97,0,0,0-1.47.4,2.986,2.986,0,0,0-5.06,0A2.97,2.97,0,0,0,8,2,3,3,0,0,0,5,5\"\n        fill=\"none\"\n        stroke=\"#ffffff\"\n      />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"9\" x2=\"8\" y1=\"23\" y2=\"7\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"15\" x2=\"16\" y1=\"23\" y2=\"7\" />\n    </g>\n  </Icon>\n)\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const MovieIcon = () => (\n  <Icon className=\"movie-61\" width={24} height={24}>\n    <title>Movie</title>\n    <g fill=\"#ffffff\">\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"1\" x2=\"1\" y1=\"1\" y2=\"23\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"23\" x2=\"23\" y1=\"1\" y2=\"23\" />\n      <rect height=\"22\" width=\"14\" fill=\"none\" stroke=\"#ffffff\" x=\"5\" y=\"1\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"1\" x2=\"23\" y1=\"12\" y2=\"12\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"1\" x2=\"5\" y1=\"8\" y2=\"8\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"1\" x2=\"5\" y1=\"4\" y2=\"4\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"19\" x2=\"23\" y1=\"8\" y2=\"8\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"19\" x2=\"23\" y1=\"4\" y2=\"4\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"19\" x2=\"23\" y1=\"20\" y2=\"20\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"19\" x2=\"23\" y1=\"16\" y2=\"16\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"1\" x2=\"5\" y1=\"20\" y2=\"20\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"1\" x2=\"5\" y1=\"16\" y2=\"16\" />\n    </g>\n  </Icon>\n)\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const SettingsIcon = () => (\n  <Icon className=\"settings-gear\" width={24} height={24}>\n    <title>Settings</title>\n    <g fill=\"#ffffff\" stroke=\"#ffffff\">\n      <circle cx=\"12\" cy=\"12\" fill=\"none\" r=\"3\" />\n      <path\n        d=\"M20,12a8.049,8.049,0,0,0-.188-1.713l2.714-2.055-2-3.464L17.383,6.094a7.987,7.987,0,0,0-2.961-1.719L14,1H10L9.578,4.375A7.987,7.987,0,0,0,6.617,6.094L3.474,4.768l-2,3.464,2.714,2.055a7.9,7.9,0,0,0,0,3.426L1.474,15.768l2,3.464,3.143-1.326a7.987,7.987,0,0,0,2.961,1.719L10,23h4l.422-3.375a7.987,7.987,0,0,0,2.961-1.719l3.143,1.326,2-3.464-2.714-2.055A8.049,8.049,0,0,0,20,12Z\"\n        fill=\"none\"\n        stroke=\"#ffffff\"\n      />\n    </g>\n  </Icon>\n)\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const ShowIcon = () => (\n  <Icon className=\"desktop-screen\" width={24} height={24}>\n    <title>Show</title>\n    <g fill=\"#ffffff\">\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"12\" x2=\"12\" y1=\"22\" y2=\"18\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"6\" x2=\"18\" y1=\"22\" y2=\"22\" />\n      <rect height=\"16\" width=\"22\" fill=\"none\" stroke=\"#ffffff\" x=\"1\" y=\"2\" />\n    </g>\n  </Icon>\n)\n","import './Tab.scss'\nimport { Link, useMatch } from 'react-router-dom'\nimport React, { FunctionComponent } from 'react'\nimport classNames from 'classnames'\n\ntype TabProps = {\n  to: string\n  inexact?: boolean\n  disabled?: boolean\n}\n\nexport const Tab: FunctionComponent<TabProps> = ({\n  children,\n  to,\n  inexact,\n  disabled,\n}) => {\n  const isActive = !!useMatch({ path: `${to}${inexact ? '/*' : ''}` })\n\n  return (\n    <Link className={classNames('Tab', { active: isActive, disabled })} to={to}>\n      {children}\n    </Link>\n  )\n}\n","import './Nav.scss'\nimport { FindIcon } from './icons/Nucleo/FindIcon'\nimport { ForYouIcon } from './icons/Nucleo/ForYouIcon'\nimport { MovieIcon } from './icons/Nucleo/MovieIcon'\nimport React from 'react'\nimport { SettingsIcon } from './icons/Nucleo/SettingsIcon'\nimport { ShowIcon } from './icons/Nucleo/ShowIcon'\nimport { Tab } from './Tab'\nimport { useTranslation } from 'react-i18next'\n\ntype NavProps = {\n  moviesDisabled?: boolean\n  showsDisabled?: boolean\n}\n\nexport const Nav = ({ moviesDisabled, showsDisabled }: NavProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"Nav\">\n      <div className=\"Nav__wrapper\">\n        <Tab to=\"/app\">\n          <ForYouIcon />\n          <p>{t('For you')}</p>\n        </Tab>\n        <Tab disabled={moviesDisabled} to=\"/app/movies\" inexact>\n          <MovieIcon />\n          <p>{t('Movies')}</p>\n        </Tab>\n        <Tab disabled={showsDisabled} to=\"/app/shows\" inexact>\n          <ShowIcon />\n          <p>{t('Shows')}</p>\n        </Tab>\n        <Tab disabled={moviesDisabled && showsDisabled} to=\"/app/find\">\n          <FindIcon />\n          <p>{t('Find')}</p>\n        </Tab>\n        <Tab to=\"/app/settings\">\n          <SettingsIcon />\n          <p>{t('Settings')}</p>\n        </Tab>\n      </div>\n    </div>\n  )\n}\n","import './Person.scss'\nimport React, { useMemo } from 'react'\nimport { buildBackdropUrl, buildCoverUrl, buildJobTitle } from '../../util'\nimport { Backdrop } from '../../components/Backdrop'\nimport { Cover } from '../../components/Cover'\nimport { HorizontalSlide } from '../../components/HorizontalSlide'\nimport { NotFound } from '../NotFound'\nimport { RootState } from '../../store'\nimport { moviesByPersonSelector } from '../../store/movies/selectors'\nimport { personSelector } from '../../store/selectors'\nimport { seasonsByPersonSelector } from '../../store/seasons/selectors'\nimport { useParams } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\nexport const Person = () => {\n  const { t } = useTranslation()\n  const { id } = useParams()\n\n  const person = useSelector((state: RootState) => personSelector(id!)(state))\n  const { movies, seasons } = useSelector((state: RootState) => ({\n    movies: person && moviesByPersonSelector(person.id)(state.movies),\n    seasons: person && seasonsByPersonSelector(person.id)(state.seasons),\n  }))\n\n  const backdropPath = useMemo(() => {\n    if (movies !== undefined && movies.length > 0) return movies[0].backdropPath\n    else if (seasons !== undefined && seasons.length > 0)\n      return seasons[0].showBackdropPath\n  }, [movies, seasons])\n\n  return person !== undefined &&\n    movies !== undefined &&\n    seasons !== undefined ? (\n    <div className=\"Person\">\n      <Backdrop url={buildBackdropUrl(backdropPath)} />\n      <div className=\"Person__details\">\n        <Cover url={buildCoverUrl(person.profilePath)} alt=\"profile\" />\n        <h1>{person.name}</h1>\n        {person.jobs && (\n          <p>\n            {person.jobs\n              .map((job) => buildJobTitle(t, job, person.gender))\n              .join(', ')}\n          </p>\n        )}\n      </div>\n\n      {movies.length > 0 && (\n        <div className=\"Person__movies\">\n          <h2>{t('Movies')}</h2>\n          <HorizontalSlide items={movies} id=\"movies\" />\n        </div>\n      )}\n\n      {seasons.length > 0 && (\n        <div className=\"Person__seasons\">\n          <h2>{t('TV seasons')}</h2>\n          <HorizontalSlide items={seasons} id=\"seasons\" />\n        </div>\n      )}\n    </div>\n  ) : (\n    <NotFound />\n  )\n}\n","import './EpisodeEntry.scss'\nimport { Episode } from '../types/items/Episode'\nimport React from 'react'\nimport classNames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\ntype EpisodeEntryProps = {\n  episode: Episode\n\n  onClick: () => void\n}\n\nexport const EpisodeEntry = ({ episode, onClick }: EpisodeEntryProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div\n      className={classNames('EpisodeEntry', {\n        disabled: episode.sources.length === 0,\n      })}\n      onClick={onClick}\n    >\n      <div className=\"EpisodeEntry__number\">{episode.number}</div>\n      <div className=\"EpisodeEntry__details\">\n        <h2>{episode.title}</h2>\n        <p className=\"small\">\n          {t('Aired')} {new Date(episode.airDate).toDateString()}\n        </p>\n        <p>{episode.summary}</p>\n      </div>\n    </div>\n  )\n}\n","import './Season.scss'\nimport React, { useCallback, useMemo } from 'react'\nimport {\n  buildBackdropUrl,\n  buildCoverUrl,\n  buildJobTitle,\n  sortByNumber,\n} from '../../util'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { Backdrop } from '../../components/Backdrop'\nimport { Cover } from '../../components/Cover'\nimport { Episode } from '../../types/items/Episode'\nimport { EpisodeEntry } from '../../components/EpisodeEntry'\nimport { NotFound } from '../NotFound'\nimport { PersonList } from '../../components/PersonList'\nimport { RootState } from '../../store'\nimport classNames from 'classnames'\nimport { episodesBySeasonSelector } from '../../store/episodes/selectors'\nimport { seasonSelector } from '../../store/seasons/selectors'\nimport { showSelector } from '../../store/shows/selectors'\nimport { useSelector } from 'react-redux'\nimport { useToggle } from '../../hooks/toggle'\nimport { useTranslation } from 'react-i18next'\n\nexport const Season = () => {\n  const { t } = useTranslation()\n  const navigate = useNavigate()\n  const { id } = useParams()\n\n  const season = useSelector((state: RootState) =>\n    seasonSelector(id!)(state.seasons),\n  )\n  const { show, episodes } = useSelector((state: RootState) => ({\n    show: season && showSelector(season.showId)(state.shows),\n    episodes:\n      season &&\n      sortByNumber(\n        episodesBySeasonSelector(season.id)(state.episodes),\n        (episode) => episode.number,\n      ),\n  }))\n  const currentEpisode = useMemo(() => {\n    if (season !== undefined && episodes !== undefined)\n      return episodes.find(\n        (episode) => episode.number === season.usage.progress,\n      )\n  }, [season, episodes])\n\n  const [showEpisodes, toggleEpisodes] = useToggle(false)\n\n  const handleContinue = useCallback(\n    (episode: Episode) => () => {\n      navigate(\n        `/player?id=${episode.id}&type=${episode.kind}&s=${episode.usage.progress}`,\n      )\n    },\n    [navigate],\n  )\n\n  const handleWatch = useCallback(\n    (episodeNumber: number) => () => {\n      if (episodes === undefined) return\n\n      const episode = episodes.find(\n        (episode) => episode.number === episodeNumber,\n      )!\n\n      navigate(`/player?id=${episode.id}&type=${episode.kind}`)\n    },\n    [episodes, navigate],\n  )\n\n  return show !== undefined &&\n    season !== undefined &&\n    episodes !== undefined ? (\n    <div className=\"Season\">\n      <Backdrop url={buildBackdropUrl(season.showBackdropPath)} />\n      <div className=\"Season__details\">\n        <Cover url={buildCoverUrl(season.posterPath)} alt=\"poster\" />\n        <h1>\n          {t('Season')} {season.number}\n        </h1>\n        <div className=\"Season__information\">\n          <p className=\"small\">{show.title}</p>\n          <p className=\"small\">{new Date(season.airDate).getFullYear()}</p>\n        </div>\n        <div className=\"Season__actions\">\n          {currentEpisode !== undefined && (\n            <button\n              className=\"primary\"\n              onClick={handleContinue(currentEpisode)}\n              disabled={currentEpisode.sources.length === 0}\n            >\n              {t('Continue episode')} {currentEpisode.number}\n            </button>\n          )}\n          {episodes.length > 0 && (\n            <button\n              className={classNames({ primary: currentEpisode === undefined })}\n              onClick={handleWatch(0)}\n              disabled={episodes[0].sources.length === 0}\n            >\n              {t('Watch')}\n            </button>\n          )}\n          <a\n            className=\"button\"\n            id=\"trailer\"\n            href={season.trailerUrl}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {t('Play trailer')}\n          </a>\n        </div>\n        <div className=\"Season__episodes\">\n          <div\n            className={classNames('Season__episodes__list', {\n              shown: showEpisodes,\n            })}\n          >\n            {episodes\n              .slice(0, showEpisodes ? episodes.length : 0)\n              .map((episode, index) => (\n                <EpisodeEntry\n                  episode={episode}\n                  onClick={handleWatch(episode.number)}\n                  key={index}\n                />\n              ))}\n          </div>\n          {episodes.length > 0 && (\n            <div className=\"Season__episodes__toggle\" onClick={toggleEpisodes}>\n              {showEpisodes ? t('Hide episodes') : t('Show all episodes')}\n            </div>\n          )}\n        </div>\n        <p className=\"Season__overview\">{season.summary}</p>\n        <div className=\"Season__people\">\n          <div className=\"Season__people__cast\">\n            <h4>{t('Starring')}</h4>\n            <PersonList\n              people={season.cast}\n              details={(person) => person.character}\n            />\n          </div>\n          <div className=\"Season__people__crew\">\n            <h4>{t('Crew')}</h4>\n            <PersonList\n              people={season.crew}\n              details={(person) => buildJobTitle(t, person.job, person.gender)}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <NotFound />\n  )\n}\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const AddIcon = () => (\n  <Icon className=\"e-add\" width={32} height={32}>\n    <title>Add</title>\n    <g fill=\"#ffffff\" stroke=\"#ffffff\">\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"16\" x2=\"16\" y1=\"2\" y2=\"30\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"30\" x2=\"2\" y1=\"16\" y2=\"16\" />\n    </g>\n  </Icon>\n)\n","import './ProviderButton.scss'\nimport React from 'react'\nimport classNames from 'classnames'\n\ntype ProviderButtonProps = {\n  className?: string\n  icon: JSX.Element\n  title?: string\n  disabled?: boolean\n\n  onClick: (event: React.MouseEvent) => void\n}\n\nexport const ProviderButton = ({\n  className,\n  icon,\n  title,\n  disabled,\n  onClick,\n}: ProviderButtonProps) => (\n  <div className={classNames('ProviderButton', { large: title !== undefined })}>\n    <button className={className} onClick={onClick} disabled={disabled}>\n      {icon}\n      {title && <h3>{title}</h3>}\n    </button>\n  </div>\n)\n","import './ChooseProvider.scss'\nimport {\n  DISABLED_PROVIDER_KINDS,\n  PROVIDER_KINDS,\n  ProviderKind,\n} from '../../types/providers/Provider'\nimport React, { useCallback } from 'react'\nimport { buildProviderIcon, buildProviderKindName } from '../../util'\nimport { ProviderButton } from '../ProviderButton'\nimport { useTranslation } from 'react-i18next'\n\ntype ChooseProviderProps = {\n  onChoose: (kind: ProviderKind) => Promise<void>\n}\n\nexport const ChooseProvider = ({ onChoose }: ChooseProviderProps) => {\n  const { t } = useTranslation()\n\n  const handleChoose = useCallback(\n    (kind: ProviderKind) => () => onChoose(kind),\n    [onChoose],\n  )\n\n  return (\n    <div className=\"ChooseProvider\">\n      <h2>{t('Add a provider')}</h2>\n      <p>\n        {t(\n          'Select which service you want to use to stream your movies & shows.',\n        )}\n      </p>\n      <div className=\"ChooseProvider__providers\">\n        {PROVIDER_KINDS.map((kind, index) => (\n          <ProviderButton\n            icon={buildProviderIcon(kind)}\n            title={buildProviderKindName(t, kind)}\n            disabled={DISABLED_PROVIDER_KINDS.includes(kind)}\n            onClick={handleChoose(kind)}\n            key={index}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const CheckIcon = () => (\n  <Icon className=\"c-check\" width={24} height={24}>\n    <title>Check</title>\n    <g fill=\"#ffffff\">\n      <path\n        d=\"M12,0A12,12,0,1,0,24,12,12.035,12.035,0,0,0,12,0ZM10,17.414,4.586,12,6,10.586l4,4,8-8L19.414,8Z\"\n        fill=\"#ffffff\"\n      />\n    </g>\n  </Icon>\n)\n","import './FTPProviderForm.scss'\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { CheckIcon } from '../icons/Nucleo/CheckIcon'\nimport { FTP } from '../../types/providers/FTP'\nimport { FTPAuthSetup } from '../../services/auth/types'\nimport { ProviderKind } from '../../types/providers/Provider'\nimport classNames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\ntype FTPProviderFormProps = {\n  submitCaption: string\n  provider?: FTP\n\n  onSubmit: (config: FTPAuthSetup) => void\n}\n\ntype FTPProviderFormState = {\n  name?: string\n  host?: string\n  port?: number\n  username?: string\n  password?: string\n  secure: boolean\n}\n\nexport const FTPProviderForm = ({\n  submitCaption,\n  provider,\n  onSubmit,\n}: FTPProviderFormProps) => {\n  const { t } = useTranslation()\n\n  const initalState = useMemo<FTPProviderFormState>(\n    () => ({\n      name: provider?.name,\n      host: provider?.host,\n      port: provider?.port || 21,\n      username: provider?.username,\n      password: provider?.password,\n      secure: provider?.secure || true,\n    }),\n    [provider],\n  )\n  const [state, setState] = useState<FTPProviderFormState>(initalState)\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>): void => {\n      const target = event.currentTarget\n      setState((state) => ({\n        ...state,\n        [target.name]:\n          target.type === 'checkbox'\n            ? target.checked\n            : target.value === ''\n            ? undefined\n            : target.value,\n      }))\n    },\n    [setState],\n  )\n\n  const handleSubmit = useCallback(\n    (event: React.FormEvent<HTMLFormElement>): void => {\n      event.preventDefault()\n      onSubmit({\n        kind: ProviderKind.FTP,\n        name: state.name!,\n        host: state.host!,\n        port: state.port!,\n        username: state.username!,\n        password: state.password!,\n        secure: state.secure,\n      })\n    },\n    [onSubmit, state],\n  )\n\n  const isSetupInput = useCallback(\n    (value: unknown | undefined) => value !== undefined && value !== '',\n    [],\n  )\n\n  const isValid = useMemo(\n    () =>\n      isSetupInput(state.name) &&\n      isSetupInput(state.host) &&\n      isSetupInput(state.port) &&\n      isSetupInput(state.username) &&\n      isSetupInput(state.password),\n    [isSetupInput, state],\n  )\n\n  useEffect(() => {\n    setState(initalState)\n  }, [initalState, setState])\n\n  return (\n    <form className=\"FTPProviderForm\" onSubmit={handleSubmit}>\n      <label>\n        {t('Name')}\n        <p className=\"small\">\n          {t('Friendly name to identify server, not used for connecting.')}\n        </p>\n        <div\n          className={classNames('FTPProviderForm__input', 'warn', {\n            valid: isSetupInput(state.name),\n          })}\n        >\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={state.name || ''}\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <label>\n        {t('Host')}\n        <div\n          className={classNames('FTPProviderForm__input', 'warn', {\n            valid: isSetupInput(state.host),\n          })}\n        >\n          <input\n            type=\"text\"\n            name=\"host\"\n            value={state.host || ''}\n            placeholder=\"example.com\"\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <label>\n        {t('Port')}\n        <div\n          className={classNames('FTPProviderForm__input', 'warn', {\n            valid: isSetupInput(state.port),\n          })}\n        >\n          <input\n            type=\"number\"\n            min={0}\n            step={1}\n            name=\"port\"\n            value={state.port || ''}\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <label>\n        {t('Username')}\n        <div\n          className={classNames('FTPProviderForm__input', 'warn', {\n            valid: isSetupInput(state.username),\n          })}\n        >\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={state.username || ''}\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <label>\n        {t('Password')}\n        <div\n          className={classNames('FTPProviderForm__input', 'warn', {\n            valid: isSetupInput(state.password),\n          })}\n        >\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={state.password || ''}\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <div className=\"FTPProviderForm__checkbox\">\n        <input\n          type=\"checkbox\"\n          name=\"secure\"\n          checked={state.secure}\n          onChange={handleChange}\n        />\n        <label>\n          {t('Secure')}\n          <p className=\"small\">{t('Explicit FTPS over TLS.')}</p>\n        </label>\n      </div>\n\n      <div className=\"FTPProviderForm__actions\">\n        <button type=\"submit\" disabled={!isValid}>\n          {submitCaption}\n        </button>\n      </div>\n    </form>\n  )\n}\n","import './EnterDetailsProvider.scss'\nimport { AuthSetup } from '../../services/auth/types'\nimport { FTPProviderForm } from './FTPProviderForm'\nimport { ProviderKind } from '../../types/providers/Provider'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\ntype EnterDetailsProviderProps = {\n  kind: ProviderKind\n  onEnteredDetails: (config: AuthSetup) => void\n}\n\nexport const EnterDetailsProvider = ({\n  kind,\n  onEnteredDetails,\n}: EnterDetailsProviderProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"EnterDetailsProvider\">\n      <h2>{t('Configure your provider')}</h2>\n      <p>{t('Plaain needs some more details to connect to your provider.')}</p>\n      {kind === ProviderKind.FTP ? (\n        <FTPProviderForm\n          submitCaption={t('Continue')}\n          onSubmit={onEnteredDetails}\n        />\n      ) : null}\n    </div>\n  )\n}\n","import './ProviderForm.scss'\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { CheckIcon } from '../icons/Nucleo/CheckIcon'\nimport { Provider } from '../../types/providers/Provider'\nimport classNames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\ntype ProviderFormProps = {\n  submitCaption: string\n  provider?: Provider\n\n  onSubmit: (\n    moviesPath: string | undefined,\n    showsPath: string | undefined,\n  ) => void\n}\n\ntype ProviderFormState = {\n  moviesPath?: string\n  showsPath?: string\n}\n\nexport const ProviderForm = ({\n  submitCaption,\n  provider,\n  onSubmit,\n}: ProviderFormProps) => {\n  const { t } = useTranslation()\n\n  const initalState = useMemo<ProviderFormState>(\n    () => ({\n      moviesPath: provider?.moviesPath,\n      showsPath: provider?.showsPath,\n    }),\n    [provider],\n  )\n  const [state, setState] = useState<ProviderFormState>(initalState)\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>): void => {\n      const target = event.currentTarget\n      setState((state) => ({\n        ...state,\n        [target.name]: target.value === '' ? undefined : target.value,\n      }))\n    },\n    [setState],\n  )\n\n  const handleSubmit = useCallback(\n    (event: React.FormEvent<HTMLFormElement>): void => {\n      event.preventDefault()\n      onSubmit(state.moviesPath, state.showsPath)\n    },\n    [onSubmit, state],\n  )\n\n  const isSetupInput = useCallback(\n    (value: string | undefined) => value !== undefined && value !== '',\n    [],\n  )\n\n  const isValidPath = useCallback(\n    (value: string | undefined) => value !== undefined && value.startsWith('/'),\n    [],\n  )\n\n  const isValid = useMemo(\n    () =>\n      (!isSetupInput(state.moviesPath) || isValidPath(state.moviesPath)) &&\n      (!isSetupInput(state.showsPath) || isValidPath(state.showsPath)),\n    [isSetupInput, isValidPath, state],\n  )\n\n  useEffect(() => {\n    setState(initalState)\n  }, [initalState, setState])\n\n  return (\n    <form className=\"ProviderForm\" onSubmit={handleSubmit}>\n      <label>\n        {t('Movies path')}\n        <p className=\"small\">\n          {t(\n            'The path from your home directory to where you keep your movies.',\n          )}\n        </p>\n        <div\n          className={classNames('ProviderForm__input', {\n            warn: isSetupInput(state.moviesPath),\n            valid: isValidPath(state.moviesPath),\n          })}\n        >\n          <input\n            type=\"text\"\n            name=\"moviesPath\"\n            value={state.moviesPath || ''}\n            placeholder=\"/Plaain/movies\"\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <label>\n        {t('Shows path')}\n        <p className=\"small\">\n          {t('The path from your home directory to where you keep your shows.')}\n        </p>\n        <div\n          className={classNames('ProviderForm__input', {\n            warn: isSetupInput(state.showsPath),\n            valid: isValidPath(state.showsPath),\n          })}\n        >\n          <input\n            type=\"text\"\n            name=\"showsPath\"\n            value={state.showsPath || ''}\n            placeholder=\"/Plaain/shows\"\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <div className=\"ProviderForm__actions\">\n        <button type=\"submit\" disabled={!isValid}>\n          {submitCaption}\n        </button>\n      </div>\n    </form>\n  )\n}\n","import './SetupProvider.scss'\nimport { ProviderForm } from './ProviderForm'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\ntype SetupProviderProps = {\n  onSetup: (\n    moviesPath: string | undefined,\n    showsPath: string | undefined,\n  ) => void\n}\n\nexport const SetupProvider = ({ onSetup }: SetupProviderProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"SetupProvider\">\n      <h2>{t('Setup your provider')}</h2>\n      <p>\n        {t(\n          \"All that's left is to tell Plaain where to look for your movies and shows. You can always skip this step and come back later.\",\n        )}\n      </p>\n      <ProviderForm submitCaption={t('Complete')} onSubmit={onSetup} />\n    </div>\n  )\n}\n","import './UpdateProviderModal.scss'\nimport { AuthResponse, AuthSetup } from '../../services/auth/types'\nimport { Provider, ProviderKind } from '../../types/providers/Provider'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { FTPProviderForm } from './FTPProviderForm'\nimport { Modal } from '../Modal'\nimport { ProviderForm } from './ProviderForm'\nimport { buildProviderKindName } from '../../util'\nimport { useTranslation } from 'react-i18next'\n\nenum State {\n  Specific,\n  General,\n}\n\ntype UpdateProviderModalProps = {\n  isActive: boolean\n  provider: Provider\n\n  onClose: () => void\n  onSetupAuth: (config: AuthSetup) => Promise<AuthResponse | undefined>\n  onUpdateProvider: (provider: Provider) => void\n  onRemoveProvider: () => void\n}\n\nexport const UpdateProviderModal = ({\n  isActive,\n  provider,\n  onClose,\n  onSetupAuth,\n  onUpdateProvider,\n  onRemoveProvider,\n}: UpdateProviderModalProps) => {\n  const { t } = useTranslation()\n\n  const initialState = useMemo(\n    () => (provider.kind === ProviderKind.FTP ? State.Specific : State.General),\n    [provider],\n  )\n  const [state, setState] = useState(initialState)\n  const [details, setDetails] = useState<AuthResponse | undefined>()\n\n  const handleClose = useCallback(() => {\n    onClose()\n    setTimeout(() => {\n      setState(initialState)\n      setDetails(undefined)\n    }, 500)\n  }, [initialState, onClose, setDetails, setState])\n\n  const handleDetails = useCallback(\n    async (config: AuthSetup) => {\n      const authResponse = await onSetupAuth(config)\n      setDetails(authResponse)\n      setState(State.General)\n    },\n    [setDetails, setState],\n  )\n\n  const handleUpdate = useCallback(\n    (moviesPath: string | undefined, showsPath: string | undefined) => {\n      const newProvider: Provider =\n        details !== undefined\n          ? { ...details, moviesPath, showsPath }\n          : { ...provider, moviesPath, showsPath }\n      onUpdateProvider(newProvider)\n      handleClose()\n    },\n    [details, handleClose, onUpdateProvider, provider],\n  )\n\n  const handleRemoveProvider = useCallback(() => {\n    if (!window.confirm(t('Are you sure?'))) return\n\n    onRemoveProvider()\n    handleClose()\n  }, [handleClose, onRemoveProvider, t])\n\n  return (\n    <div className=\"UpdateProviderModal\">\n      <Modal isActive={isActive} onClose={handleClose}>\n        <h2>{buildProviderKindName(t, provider.kind)}</h2>\n        <p>{provider.name}</p>\n        {state === State.Specific ? (\n          <>\n            {provider.kind === ProviderKind.FTP ? (\n              <FTPProviderForm\n                submitCaption={t('Continue')}\n                provider={provider}\n                onSubmit={handleDetails}\n              />\n            ) : null}\n          </>\n        ) : state === State.General ? (\n          <ProviderForm\n            submitCaption={t('Update')}\n            provider={provider}\n            onSubmit={handleUpdate}\n          />\n        ) : null}\n        <button className=\"secondary\" onClick={handleRemoveProvider}>\n          {t('Remove')}\n        </button>\n      </Modal>\n    </div>\n  )\n}\n","import React, { useCallback } from 'react'\nimport { LANGUAGES } from '../i18n'\nimport i18next from 'i18next'\nimport { useTranslation } from 'react-i18next'\n\ntype LanguageSelectorProps = {\n  onChange?: (lng: string | undefined) => void\n}\n\nexport const LanguageSelector = ({ onChange }: LanguageSelectorProps) => {\n  const { t } = useTranslation()\n\n  const handleChange = useCallback(\n    (event) => {\n      i18next.changeLanguage(event.target.value)\n      if (onChange) onChange(event.target.value)\n    },\n    [onChange],\n  )\n\n  return (\n    <div className=\"LanguageSelector\">\n      <select defaultValue={i18next.language} onChange={handleChange}>\n        {LANGUAGES.map((language) => (\n          <option value={language} key={language}>\n            {t(language)}\n          </option>\n        ))}\n      </select>\n    </div>\n  )\n}\n","import './Settings.scss'\nimport { AppDispatch, RootState } from '../../store'\nimport React, { useCallback, useState } from 'react'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { buildCommitId, buildProviderIcon } from '../../util'\nimport { fetchAllMetadata, index } from '../../store/thunks'\nimport { removeProvider, updateProvider } from '../../store/auth/actions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AddIcon } from '../../components/icons/Nucleo/AddIcon'\nimport { AddProviderModal } from '../../components/authentication/AddProviderModal'\nimport { AuthSetup } from '../../services/auth/types'\nimport { LanguageSelector } from '../../components/LanguageSelector'\nimport { Provider } from '../../types/providers/Provider'\nimport { ProviderButton } from '../../components/ProviderButton'\nimport { UpdateProviderModal } from '../../components/authentication/UpdateProviderModal'\nimport { VERSION } from '../../constants'\nimport classNames from 'classnames'\nimport { load } from '../../store/ui/thunks'\nimport { providersSelector } from '../../store/auth/selectors'\nimport { setupAuth } from '../../store/auth/thunks'\nimport { useModal } from '../../hooks/modal'\n\nexport const Settings = () => {\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n\n  const providers = useSelector((state: RootState) =>\n    providersSelector(state.auth),\n  )\n\n  const handleSetupAuth = useCallback(\n    (config: AuthSetup) => dispatch(load(setupAuth(config))),\n    [dispatch],\n  )\n\n  const handleUpdateProvider = useCallback(\n    (provider: Provider) => {\n      dispatch(updateProvider(provider))\n      dispatch(load(index([provider])))\n    },\n    [dispatch],\n  )\n\n  const handleIndex = useCallback(\n    () => dispatch(load(index(providers))),\n    [dispatch, providers],\n  )\n\n  const handleFetchMetadataAll = useCallback(\n    () => dispatch(load(fetchAllMetadata())),\n    [dispatch],\n  )\n\n  const handleRemoveProvider = useCallback(\n    (id: string) => () => dispatch(removeProvider(id)),\n    [dispatch],\n  )\n\n  const [\n    showAddProviderModal,\n    handleShowAddProviderModal,\n    handleCloseAddProviderModal,\n  ] = useModal()\n\n  const [showUpdateProviderModals, setShowUpdateProviderModals] = useState<{\n    [index: number]: boolean\n  }>(providers.reduce((acc, _, index) => ({ ...acc, [index]: false }), {}))\n  const handleShowUpdateProviderModal = useCallback(\n    (index: number) => () =>\n      setShowUpdateProviderModals((state) => ({ ...state, [index]: true })),\n    [setShowUpdateProviderModals],\n  )\n  const handleCloseUpdateProviderModal = useCallback(\n    (index: number) => () =>\n      setShowUpdateProviderModals((state) => ({ ...state, [index]: false })),\n    [setShowUpdateProviderModals],\n  )\n\n  return (\n    <div className=\"Settings\">\n      <section className=\"Settings__auth\">\n        <h2>{t('Authentication')}</h2>\n        <p>\n          {t(\n            'Sign into your cloud to add your movies and TV shows to your library.',\n          )}\n        </p>\n        <div className=\"Settings__auth__scroll\">\n          <div className=\"Settings__auth__providers\">\n            {providers.map((provider, index) => (\n              <div className=\"Settings__auth__provider\" key={index}>\n                <ProviderButton\n                  className={classNames('primary', {\n                    warn:\n                      provider.moviesPath === undefined &&\n                      provider.showsPath === undefined,\n                  })}\n                  icon={buildProviderIcon(provider.kind)}\n                  onClick={handleShowUpdateProviderModal(index)}\n                />\n                <UpdateProviderModal\n                  isActive={showUpdateProviderModals[index]}\n                  provider={provider}\n                  onClose={handleCloseUpdateProviderModal(index)}\n                  onSetupAuth={handleSetupAuth}\n                  onUpdateProvider={handleUpdateProvider}\n                  onRemoveProvider={handleRemoveProvider(provider.id)}\n                  key={7}\n                />\n              </div>\n            ))}\n            <div className=\"Settings__auth__provider\" key={providers.length}>\n              <ProviderButton\n                icon={<AddIcon />}\n                onClick={handleShowAddProviderModal}\n                key={5}\n              />\n              <AddProviderModal\n                isActive={showAddProviderModal}\n                onClose={handleCloseAddProviderModal}\n                onSetupAuth={handleSetupAuth}\n                onAddProvider={handleUpdateProvider}\n                key={7}\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"Settings__indexing\">\n        <h2>{t('Indexing')}</h2>\n        <p>\n          {t(\n            'Index to look for new media on your linked services or fetch the latest metadata.',\n          )}\n        </p>\n        <div className=\"Settings__indexing__actions\">\n          <button disabled={providers.length === 0} onClick={handleIndex}>\n            {t('Index')}\n          </button>\n          <button\n            disabled={providers.length === 0}\n            onClick={handleFetchMetadataAll}\n          >\n            {t('Update metadata')}\n          </button>\n        </div>\n      </section>\n\n      <section className=\"Settings__language\">\n        <h2>{t('Language')}</h2>\n        <p>{t('Change the display language.')}</p>\n        <LanguageSelector onChange={handleFetchMetadataAll} />\n      </section>\n\n      <section className=\"Settings__version\">\n        <h2>{t('Version')}</h2>\n        <p>{t('Plaain {{version}}.', { version: VERSION })}</p>\n        <p className=\"small\">\n          <Trans>\n            Plaain is{' '}\n            <a\n              href=\"https://github.com/jonhue/plaain\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              open-source\n            </a>\n            . See the{' '}\n            <a\n              href=\"https://github.com/jonhue/plaain/releases\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              changelog\n            </a>\n            .\n          </Trans>\n        </p>\n        <p className=\"small\">\n          <Trans>\n            You are running commit{' '}\n            <a\n              href={`https://github.com/jonhue/plaain/commit/${process.env.REACT_APP_GIT_SHA}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {process.env.REACT_APP_GIT_SHA\n                ? buildCommitId(process.env.REACT_APP_GIT_SHA)\n                : t('Unknown')}\n            </a>\n            .\n          </Trans>\n        </p>\n        <p className=\"small\">\n          <Trans>\n            Note that Plaain may <span className=\"bold\">not</span> be used to\n            stream pirated content or publicly share your private media library.\n            You may only connect to your private cloud storage.\n          </Trans>\n        </p>\n      </section>\n    </div>\n  )\n}\n","import './Show.scss'\nimport { buildBackdropUrl, buildCoverUrl } from '../../util'\nimport { Backdrop } from '../../components/Backdrop'\nimport { Cover } from '../../components/Cover'\nimport { HorizontalSlide } from '../../components/HorizontalSlide'\nimport { NotFound } from '../NotFound'\nimport React from 'react'\nimport { RootState } from '../../store'\nimport { seasonsByShowSelector } from '../../store/seasons/selectors'\nimport { showSelector } from '../../store/shows/selectors'\nimport { sortByNumber } from '../../util'\nimport { useParams } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\nexport const Show = () => {\n  const { t } = useTranslation()\n  const { id } = useParams()\n\n  const show = useSelector((state: RootState) => showSelector(id!)(state.shows))\n\n  const seasons = useSelector(\n    (state: RootState) =>\n      show &&\n      sortByNumber(\n        seasonsByShowSelector(show.id)(state.seasons),\n        (season) => season.number,\n      ),\n  )\n\n  return show !== undefined && seasons !== undefined ? (\n    <div className=\"Show\">\n      <Backdrop url={buildBackdropUrl(show.backdropPath)} />\n      <div className=\"Show__details\">\n        <Cover url={buildCoverUrl(show.posterPath)} alt=\"poster\" />\n        <h1>{show.title}</h1>\n        <div className=\"Show__information\">\n          <p className=\"small\">\n            {new Date(show.firstAirDate).getFullYear()} -{' '}\n            {new Date(show.lastAirDate).getFullYear()}\n          </p>\n        </div>\n        <p className=\"Show__overview\">{show.summary}</p>\n      </div>\n      {seasons.length > 0 && (\n        <div className=\"Show__seasons\">\n          <h2>{t('Seasons')}</h2>\n          <HorizontalSlide items={seasons} id=\"seasons\" />\n        </div>\n      )}\n    </div>\n  ) : (\n    <NotFound />\n  )\n}\n","import './Shows.scss'\nimport { ItemGrid } from '../../components/ItemGrid'\nimport { Navigate } from 'react-router-dom'\nimport React from 'react'\nimport { RootState } from '../../store'\nimport { VerticalSlide } from '../../components/VerticalSlide'\nimport { showsSelector } from '../../store/shows/selectors'\nimport { sortAlphabetically } from '../../util'\nimport { useSelector } from 'react-redux'\n\nexport const Shows = () => {\n  const shows = useSelector((state: RootState) =>\n    sortAlphabetically(showsSelector(state.shows), (show) => show.title),\n  )\n\n  return shows.length > 0 ? (\n    <div className=\"Shows\">\n      <VerticalSlide items={shows} path=\"shows\" id=\"shows\" />\n      <ItemGrid items={shows} />\n    </div>\n  ) : (\n    <Navigate to=\"/app\" />\n  )\n}\n","import './index.scss'\nimport { Route, Routes } from 'react-router-dom'\nimport { Find } from './Find'\nimport { Home } from './Home'\nimport { Movie } from './Movie'\nimport { Movies } from './Movies'\nimport { Nav } from '../../components/Nav'\nimport { NotFound } from '../NotFound'\nimport { Person } from './Person'\nimport React from 'react'\nimport { RootState } from '../../store'\nimport { Season } from './Season'\nimport { Settings } from './Settings'\nimport { Show } from './Show'\nimport { Shows } from './Shows'\nimport { useSelector } from 'react-redux'\n\nconst App = () => {\n  const { moviesCount, showsCount } = useSelector((state: RootState) => ({\n    moviesCount: Object.keys(state.movies).length,\n    showsCount: Object.keys(state.shows).length,\n  }))\n\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path={'/'} element={<Home />} />\n        <Route path={'movies/:id'} element={<Movie />} />\n        <Route path={'movies'} element={<Movies />} />\n        <Route path={'shows/:id'} element={<Show />} />\n        <Route path={'shows'} element={<Shows />} />\n        <Route path={'seasons/:id'} element={<Season />} />\n        <Route path={'people/:id'} element={<Person />} />\n        <Route path={'settings'} element={<Settings />} />\n        <Route path={'find'} element={<Find />} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n\n      <Nav\n        moviesDisabled={moviesCount === 0}\n        showsDisabled={showsCount === 0}\n      />\n    </div>\n  )\n}\n\nexport default App\n"],"names":["Cover","url","alt","className","src","HorizontalSlide","id","items","t","useTranslation","spaceBetween","slidesPerView","slidesOffsetBefore","slidesOffsetAfter","grabCursor","length","map","item","index","to","buildItemUrl","buildCoverUrl","posterPath","title","buildIndex","itemToText","Index","tokenize","forEach","add","Find","navigate","useNavigate","location","useLocation","initialQuery","useMemo","URLSearchParams","search","get","useSelector","state","movies","shows","useState","query","setQuery","moviesIndex","moviesSelector","movie","summary","showsIndex","showsSelector","show","foundMovies","movieSelector","filter","notUndefined","foundShows","showSelector","handleInputChange","useCallback","event","target","value","replace","autoFocus","placeholder","onChange","Object","keys","inProgressSelector","createSelector","inProgressMoviesSelector","inProgressSeasonsSelector","seasons","recentlyWatchedSelector","recentlyWatchedMoviesSelector","recentlyWatchedSeasonsSelector","Authenticated","onIndex","href","rel","onClick","ForYou","inProgress","recentlyWatched","Setup","Unauthenticated","Trans","Home","dispatch","useDispatch","sortByLastWatched","providers","providersSelector","auth","handleIndex","load","FileList","files","file","name","useToggle","initialValue","setValue","PersonList","people","details","isWrapped","toggleIsWrapped","displayedPeople","slice","person","Movie","useParams","handleContinue","undefined","kind","usage","progress","handleWatch","Backdrop","buildBackdropUrl","backdropPath","Date","releaseDate","getFullYear","duration","splitHoursAndMinutes","isInProgress","disabled","sources","classNames","primary","trailerUrl","cast","character","crew","buildJobTitle","job","gender","captions","NotFound","ItemGrid","SwiperCore","EffectCoverflow","State","VerticalSlide","path","direction","effect","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","history","replaceState","key","Movies","sortAlphabetically","FindIcon","Icon","width","height","fill","stroke","x1","x2","y1","y2","cx","cy","r","ForYouIcon","points","d","MovieIcon","x","y","SettingsIcon","ShowIcon","Tab","children","inexact","isActive","useMatch","active","Nav","moviesDisabled","showsDisabled","Person","moviesPersonSelector","seasonsPersonSelector","season","moviesCast","moviesCrew","seasonsCast","seasonsCrew","reduce","acc","ItemKind","tmdbId","profilePath","jobs","Set","personSelector","moviesByPersonSelector","seasonsByPersonSelector","showBackdropPath","join","EpisodeEntry","episode","number","airDate","toDateString","Season","seasonSelector","showId","episodes","sortByNumber","episodesBySeasonSelector","currentEpisode","find","showEpisodes","toggleEpisodes","episodeNumber","shown","AddIcon","ProviderButton","icon","large","ChooseProvider","onChoose","handleChoose","PROVIDER_KINDS","buildProviderIcon","buildProviderKindName","DISABLED_PROVIDER_KINDS","CheckIcon","FTPProviderForm","submitCaption","provider","onSubmit","initalState","host","port","username","password","secure","setState","handleChange","currentTarget","type","checked","handleSubmit","preventDefault","ProviderKind","isSetupInput","isValid","useEffect","valid","min","step","EnterDetailsProvider","onEnteredDetails","ProviderForm","moviesPath","showsPath","isValidPath","startsWith","warn","SetupProvider","onSetup","AddProviderModal","onClose","onSetupAuth","onAddProvider","useModal","handleOpen","initialState","Choose","setKind","authResponse","setAuthResponse","useSetupAuthRedirect","response","handleClose","setTimeout","EnterDetails","handleEnteredDetails","config","handleSetup","Modal","LanguageSelector","i18next","defaultValue","LANGUAGES","language","UpdateProviderModal","onUpdateProvider","onRemoveProvider","Specific","General","setDetails","handleDetails","handleUpdate","newProvider","handleRemoveProvider","window","confirm","Settings","handleSetupAuth","setupAuth","handleUpdateProvider","updateProvider","handleFetchMetadataAll","fetchAllMetadata","removeProvider","showAddProviderModal","handleShowAddProviderModal","handleCloseAddProviderModal","_","showUpdateProviderModals","setShowUpdateProviderModals","handleShowUpdateProviderModal","handleCloseUpdateProviderModal","version","VERSION","process","buildCommitId","Show","seasonsByShowSelector","firstAirDate","lastAirDate","Shows","moviesCount","showsCount","element"],"sourceRoot":""}