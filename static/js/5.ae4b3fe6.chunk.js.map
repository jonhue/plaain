{"version":3,"sources":["components/Cover.tsx","components/HorizontalSlide.tsx","views/app/Find.tsx","store/selectors.ts","components/get_started/Authenticated.tsx","components/ForYou.tsx","components/get_started/Setup.tsx","components/get_started/Unauthenticated.tsx","views/app/Home.tsx","components/Backdrop.tsx","components/FileList.tsx","hooks/toggle.ts","components/PersonList.tsx","views/app/Movie.tsx","components/ItemGrid.tsx","components/VerticalSlide.tsx","components/authentication/AddProviderModal.tsx","views/app/Movies.tsx","components/icons/Nucleo/FindIcon.tsx","components/icons/Nucleo/ForYouIcon.tsx","components/icons/Nucleo/MovieIcon.tsx","components/icons/Nucleo/SettingsIcon.tsx","components/icons/Nucleo/ShowIcon.tsx","components/Tab.tsx","components/Nav.tsx","views/app/Person.tsx","components/EpisodeEntry.tsx","views/app/Season.tsx","components/icons/Nucleo/AddIcon.tsx","components/ProviderButton.tsx","components/authentication/ChooseProvider.tsx","components/icons/Nucleo/CheckIcon.tsx","components/authentication/FTPProviderForm.tsx","components/authentication/EnterDetailsProvider.tsx","components/Modal.tsx","components/authentication/ProviderForm.tsx","components/authentication/SetupProvider.tsx","hooks/modal.ts","components/authentication/UpdateProviderModal.tsx","components/LanguageSelector.tsx","views/app/Settings.tsx","views/app/Show.tsx","views/app/Shows.tsx","views/app/index.tsx"],"names":["Cover","url","alt","className","src","HorizontalSlide","id","items","t","useTranslation","spaceBetween","slidesPerView","slidesOffsetBefore","slidesOffsetAfter","grabCursor","length","map","item","index","to","buildItemUrl","buildCoverUrl","posterPath","title","buildIndex","itemToText","FlexSearch","create","forEach","key","add","Find","history","useHistory","location","useLocation","initialQuery","useMemo","URLSearchParams","search","get","useSelector","state","movies","shows","useState","query","setQuery","moviesIndex","moviesSelector","movie","summary","showsIndex","showsSelector","show","foundMovies","useAsyncMemo","a","result","movieSelector","filter","notUndefined","foundShows","showSelector","handleInputChange","useCallback","event","replace","target","value","autoFocus","placeholder","onChange","Object","keys","inProgressSelector","createSelector","inProgressMoviesSelector","inProgressSeasonsSelector","seasons","recentlyWatchedSelector","recentlyWatchedMoviesSelector","recentlyWatchedSeasonsSelector","Authenticated","onIndex","href","rel","onClick","ForYou","inProgress","recentlyWatched","Setup","Unauthenticated","Trans","Home","dispatch","useDispatch","sortByLastWatched","providers","providersSelector","auth","handleIndex","load","Backdrop","FileList","files","file","name","useToggle","initialValue","setValue","PersonList","people","details","isWrapped","toggleIsWrapped","displayedPeople","slice","person","Movie","match","params","handleContinue","undefined","push","kind","usage","progress","handleWatch","buildBackdropUrl","backdropPath","Date","releaseDate","getFullYear","duration","splitHoursAndMinutes","isInProgress","disabled","sources","classNames","primary","trailerUrl","cast","character","crew","buildJobTitle","job","gender","captions","NotFound","ItemGrid","SwiperCore","use","EffectCoverflow","State","VerticalSlide","path","direction","effect","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","replaceState","data-history","Movies","sortAlphabetically","FindIcon","Icon","width","height","fill","stroke","x1","x2","y1","y2","cx","cy","r","ForYouIcon","points","d","MovieIcon","x","y","SettingsIcon","ShowIcon","Tab","children","exact","isActive","matchPath","pathname","active","Nav","moviesDisabled","showsDisabled","Person","moviesPersonSelector","seasonsPersonSelector","season","moviesCast","moviesCrew","seasonsCast","seasonsCrew","reduce","acc","ItemKind","tmdbId","profilePath","jobs","Set","moviesByPersonSelector","seasonsByPersonSelector","showBackdropPath","join","EpisodeEntry","episode","number","airDate","toDateString","Season","seasonSelector","showId","episodes","sortByNumber","episodesBySeasonSelector","currentEpisode","find","showEpisodes","toggleEpisodes","episodeNumber","shown","AddIcon","ProviderButton","icon","large","ChooseProvider","onChoose","handleChoose","PROVIDER_KINDS","buildProviderIcon","buildProviderKindName","CheckIcon","FTPProviderForm","submitCaption","provider","onSubmit","initalState","host","port","username","password","secure","setState","handleChange","currentTarget","type","checked","handleSubmit","preventDefault","ProviderKind","FTP","isSetupInput","isValid","useEffect","valid","min","step","EnterDetailsProvider","onEnteredDetails","Modal","onClose","modalRef","useRef","useOnClickOutside","ref","ProviderForm","moviesPath","showsPath","isValidPath","startsWith","warn","SetupProvider","onSetup","useModal","setShow","AddProviderModal","onSetupAuth","onAddProvider","handleOpen","initialState","Choose","setKind","authResponse","setAuthResponse","useSetupAuthRedirect","response","handleClose","setTimeout","OneDrive","EnterDetails","handleEnteredDetails","config","handleSetup","LanguageSelector","i18next","changeLanguage","defaultValue","language","LANGUAGES","UpdateProviderModal","onUpdateProvider","onRemoveProvider","Specific","General","setDetails","handleDetails","handleUpdate","newProvider","handleRemoveProvider","window","confirm","Settings","handleSetupAuth","setupAuth","handleUpdateProvider","updateProvider","handleFetchMetadataAll","fetchAllMetadata","removeProvider","showAddProviderModal","handleShowAddProviderModal","handleCloseAddProviderModal","_","showUpdateProviderModals","setShowUpdateProviderModals","handleShowUpdateProviderModal","handleCloseUpdateProviderModal","version","VERSION","process","buildCommitId","Show","seasonsByShowSelector","firstAirDate","lastAirDate","Shows","App","moviesCount","showsCount","component"],"mappings":"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","file":"static/js/5.ae4b3fe6.chunk.js","sourcesContent":["import './Cover.scss'\nimport React from 'react'\n\ntype CoverProps = {\n  url: string\n  alt: string\n}\n\nexport const Cover = ({ url, alt }: CoverProps) => (\n  <img className=\"Cover\" src={url} alt={alt} />\n)\n","import './HorizontalSlide.scss'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport { buildCoverUrl, buildItemUrl } from '../util'\nimport { Cover } from './Cover'\nimport { Link } from 'react-router-dom'\nimport { Movie } from '../types/items/Movie'\nimport React from 'react'\nimport { Season } from '../types/items/Season'\nimport { Show } from '../types/items/Show'\nimport { useTranslation } from 'react-i18next'\n\ntype HorizontalSlideProps = {\n  id: string\n  items: (Movie | Season | Show)[]\n}\n\nexport const HorizontalSlide = ({ id, items }: HorizontalSlideProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"HorizontalSlide\" id={id}>\n      <Swiper\n        spaceBetween={15}\n        slidesPerView=\"auto\"\n        slidesOffsetBefore={20}\n        slidesOffsetAfter={20}\n        grabCursor\n      >\n        {items.length > 0 ? (\n          items.map((item, index) => (\n            <SwiperSlide key={index}>\n              <Link to={buildItemUrl(item)}>\n                <Cover url={buildCoverUrl(item.posterPath)} alt={item.title} />\n              </Link>\n            </SwiperSlide>\n          ))\n        ) : (\n          <SwiperSlide>\n            <h3>{t('Nothing found.')}</h3>\n          </SwiperSlide>\n        )}\n      </Swiper>\n    </div>\n  )\n}\n","import './Find.scss'\nimport FlexSearch, { Index } from 'flexsearch'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { movieSelector, moviesSelector } from '../../store/movies/selectors'\nimport { showSelector, showsSelector } from '../../store/shows/selectors'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { HorizontalSlide } from '../../components/HorizontalSlide'\nimport { Item } from '../../types/items/Item'\nimport { RootState } from '../../store'\nimport { notUndefined } from '../../util'\nimport { useAsyncMemo } from 'use-async-memo'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\nconst QUERY_PARAMETER = 'q'\n\nconst buildIndex = <T extends Item>(\n  items: T[],\n  itemToText: (item: T) => string,\n) => {\n  const index: Index<string> = FlexSearch.create()\n  items.forEach((item) => {\n    // a workaround to use strings as keys\n    const key = item.id as unknown as number\n\n    index.add(key, itemToText(item))\n  })\n  return index\n}\n\nexport const Find = () => {\n  const { t } = useTranslation()\n  const history = useHistory()\n  const location = useLocation()\n\n  const initialQuery = useMemo(\n    () => new URLSearchParams(location.search).get(QUERY_PARAMETER),\n    [location],\n  )\n\n  const { movies, shows } = useSelector((state: RootState) => ({\n    movies: state.movies,\n    shows: state.shows,\n  }))\n\n  const [query, setQuery] = useState(initialQuery || '')\n\n  const moviesIndex = useMemo(\n    () =>\n      buildIndex(\n        moviesSelector(movies),\n        (movie) => `${movie.title};${movie.summary}`,\n      ),\n    [movies],\n  )\n  const showsIndex = useMemo(\n    () =>\n      buildIndex(\n        showsSelector(shows),\n        (show) => `${show.title};${show.summary}`,\n      ),\n    [shows],\n  )\n\n  const foundMovies = useAsyncMemo(async () => {\n    const result = await moviesIndex.search(query)\n    return result.map((id) => movieSelector(id)(movies)).filter(notUndefined)\n  }, [moviesIndex, query])\n  const foundShows = useAsyncMemo(async () => {\n    const result = await showsIndex.search(query)\n    return result.map((id) => showSelector(id)(shows)).filter(notUndefined)\n  }, [showsIndex, query])\n\n  const handleInputChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      history.replace(`/app/find?${QUERY_PARAMETER}=${event.target.value}`)\n      setQuery(event.target.value)\n    },\n    [history, setQuery],\n  )\n\n  return (\n    <div className=\"Find\">\n      <form>\n        <input\n          autoFocus\n          value={query}\n          placeholder={t('Search your library')}\n          onChange={handleInputChange}\n        />\n      </form>\n\n      {foundMovies && Object.keys(foundMovies).length > 0 && (\n        <section>\n          <h2>{t('Movies')}</h2>\n          <HorizontalSlide items={foundMovies} id=\"movies\" />\n        </section>\n      )}\n\n      {foundShows && Object.keys(foundShows).length > 0 && (\n        <section>\n          <h2>{t('TV shows')}</h2>\n          <HorizontalSlide items={foundShows} id=\"shows\" />\n        </section>\n      )}\n    </div>\n  )\n}\n","import { AccPerson, Person } from '../types/items/Person'\nimport {\n  inProgressSelector as inProgressMoviesSelector,\n  moviesPersonSelector,\n  recentlyWatchedSelector as recentlyWatchedMoviesSelector,\n} from './movies/selectors'\nimport {\n  inProgressSelector as inProgressSeasonsSelector,\n  recentlyWatchedSelector as recentlyWatchedSeasonsSelector,\n  seasonsPersonSelector,\n} from './seasons/selectors'\nimport { ItemKind } from '../types/items/Item'\nimport { MoviesState } from './movies/types'\nimport { RootState } from '.'\nimport { SeasonsState } from './seasons/types'\nimport { createSelector } from 'reselect'\n\nexport const inProgressSelector = createSelector(\n  [\n    (state: RootState) => inProgressMoviesSelector(state.movies),\n    (state: RootState) => inProgressSeasonsSelector(state.seasons),\n  ],\n  (movies, seasons) => [...movies, ...seasons],\n)\n\nexport const recentlyWatchedSelector = createSelector(\n  [\n    (state: RootState) => recentlyWatchedMoviesSelector(state.movies),\n    (state: RootState) => recentlyWatchedSeasonsSelector(state.seasons),\n  ],\n  (movies, seasons) => [...movies, ...seasons],\n)\n\nexport const personSelector = (id: string) =>\n  createSelector<\n    { movies: MoviesState; seasons: SeasonsState },\n    Person[],\n    AccPerson | undefined\n  >(\n    [\n      ({ movies }) => moviesPersonSelector(id, (movie) => movie.cast)(movies),\n      ({ movies }) => moviesPersonSelector(id, (movie) => movie.crew)(movies),\n      ({ seasons }) =>\n        seasonsPersonSelector(id, (season) => season.cast)(seasons),\n      ({ seasons }) =>\n        seasonsPersonSelector(id, (season) => season.crew)(seasons),\n    ],\n    (moviesCast, moviesCrew, seasonsCast, seasonsCrew) => {\n      const roles = [\n        ...moviesCast,\n        ...moviesCrew,\n        ...seasonsCast,\n        ...seasonsCrew,\n      ]\n\n      return roles.reduce<AccPerson | undefined>(\n        (acc, person) => ({\n          kind: ItemKind.Person,\n          id,\n          tmdbId: person.tmdbId,\n          name: person.name,\n          gender: person.gender,\n          profilePath: person.profilePath,\n          jobs:\n            person.job === undefined\n              ? acc?.jobs\n              : acc !== undefined && acc.jobs !== undefined\n              ? [...new Set([...acc.jobs, person.job])]\n              : [person.job],\n        }),\n        undefined,\n      )\n    },\n  )\n","import './Authenticated.scss'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\ntype AuthenticatedProps = {\n  onIndex: () => void\n}\n\nexport const Authenticated = ({ onIndex }: AuthenticatedProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"Authenticated\">\n      <h2>{t('Get started')}</h2>\n      <p>\n        {t(\n          \"You signed into a cloud service, but we didn't find any movies or TV shows.\",\n        )}\n      </p>\n      <p>\n        {t(\n          \"It's likely that you just have to move some of your files around and create some folders to make it work.\",\n        )}\n      </p>\n      <p>\n        {t(\n          \"Reference the getting started guide to learn how to organize your files so that Plaain finds them. After you're done, just re-index.\",\n        )}\n      </p>\n      <div className=\"Authenticated__buttons\">\n        <a\n          className=\"button primary\"\n          href=\"https://github.com/jonhue/plaain#getting-started\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {t('Getting started')}\n        </a>\n        <button onClick={onIndex}>{t('Index')}</button>\n      </div>\n    </div>\n  )\n}\n","import './ForYou.scss'\nimport { HorizontalSlide } from './HorizontalSlide'\nimport { Movie } from '../types/items/Movie'\nimport React from 'react'\nimport { Season } from '../types/items/Season'\nimport { useTranslation } from 'react-i18next'\n\ntype ForYouProps = {\n  inProgress: (Movie | Season)[]\n  recentlyWatched: (Movie | Season)[]\n}\n\nexport const ForYou = ({ inProgress, recentlyWatched }: ForYouProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"ForYou\">\n      {inProgress.length > 0 && (\n        <section>\n          <h2>{t('Continue watching')}</h2>\n          <HorizontalSlide items={inProgress} id=\"inProgress\" />\n        </section>\n      )}\n\n      {recentlyWatched.length > 0 && (\n        <section>\n          <h2>{t('Recently watched')}</h2>\n          <HorizontalSlide items={recentlyWatched} id=\"recentlyWatched\" />\n        </section>\n      )}\n    </div>\n  )\n}\n","import './Setup.scss'\nimport { Link } from 'react-router-dom'\nimport { Movie } from '../../types/items/Movie'\nimport React from 'react'\nimport { Show } from '../../types/items/Show'\nimport { useTranslation } from 'react-i18next'\n\ntype SetupProps = {\n  movies: Movie[]\n  shows: Show[]\n}\n\nexport const Setup = ({ movies, shows }: SetupProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"Setup\">\n      <h2>{t('Get started')}</h2>\n      <p>\n        {t(\n          \"Here, you'll be able to find your recently watched movie or the show you didn't finish yet.\",\n        )}\n      </p>\n      <div className=\"Setup__buttons\">\n        {movies.length > 0 && (\n          <Link to=\"/app/movies\" className=\"button\">\n            {t('Discover your movies')}\n          </Link>\n        )}\n        {shows.length > 0 && (\n          <Link to=\"/app/shows\" className=\"button\">\n            {t('Discover your shows')}\n          </Link>\n        )}\n      </div>\n    </div>\n  )\n}\n","import './Unauthenticated.scss'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\n\nexport const Unauthenticated = () => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"Unauthenticated\">\n      <h2>{t('Get started')}</h2>\n      <p>\n        {t(\n          'To watch your movies and TV shows, you first have to sign in with the cloud service that hosts your media.',\n        )}\n      </p>\n      <Link to=\"/app/settings\" className=\"button\">\n        {t('Authenticate')}\n      </Link>\n      <p className=\"small\">\n        <Trans>\n          Note that Plaain may <span className=\"bold\">not</span> be used to\n          stream pirated content or publicly share your private media library.\n          You may only connect to your private cloud storage.\n        </Trans>\n      </p>\n    </div>\n  )\n}\n","import React, { useCallback } from 'react'\nimport {\n  inProgressSelector,\n  recentlyWatchedSelector,\n} from '../../store/selectors'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Authenticated } from '../../components/get_started/Authenticated'\nimport { ForYou } from '../../components/ForYou'\nimport { RootState } from '../../store'\nimport { Setup } from '../../components/get_started/Setup'\nimport { Unauthenticated } from '../../components/get_started/Unauthenticated'\nimport { index } from '../../store/thunks'\nimport { load } from '../../store/ui/thunks'\nimport { moviesSelector } from '../../store/movies/selectors'\nimport { providersSelector } from '../../store/auth/selectors'\nimport { showsSelector } from '../../store/shows/selectors'\nimport { sortByLastWatched } from '../../util'\n\nexport const Home = () => {\n  const dispatch = useDispatch()\n\n  const { inProgress, movies, providers, recentlyWatched, shows } = useSelector(\n    (state: RootState) => ({\n      inProgress: sortByLastWatched(inProgressSelector(state)),\n      movies: moviesSelector(state.movies),\n      providers: providersSelector(state.auth),\n      recentlyWatched: sortByLastWatched(recentlyWatchedSelector(state)),\n      shows: showsSelector(state.shows),\n    }),\n  )\n\n  const handleIndex = useCallback(() => {\n    dispatch(load(index(providers)))\n  }, [dispatch, providers])\n\n  return inProgress.length > 0 || recentlyWatched.length > 0 ? (\n    <ForYou inProgress={inProgress} recentlyWatched={recentlyWatched} />\n  ) : providers.length === 0 ? (\n    <Unauthenticated />\n  ) : movies.length === 0 && shows.length === 0 ? (\n    <Authenticated onIndex={handleIndex} />\n  ) : (\n    <Setup movies={movies} shows={shows} />\n  )\n}\n","import './Backdrop.scss'\nimport React from 'react'\n\ntype BackdropProps = {\n  url: string\n}\n\nexport const Backdrop = ({ url }: BackdropProps) => (\n  <picture className=\"Backdrop\">\n    <img src={url} alt=\"backdrop\" />\n  </picture>\n)\n","import { File } from '../types/files/File'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\ntype FileListProps = {\n  files: File[]\n}\n\nexport const FileList = ({ files }: FileListProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"FileList\">\n      {files.map((file, index) => {\n        return (\n          <p className=\"small\" key={index}>\n            {file.name}\n          </p>\n        )\n      })}\n      {files.length === 0 && <p className=\"small\">{t('None')}</p>}\n    </div>\n  )\n}\n","import { useCallback, useState } from 'react'\n\nexport const useToggle = (\n  initialValue: boolean,\n): [value: boolean, handleToggle: () => void] => {\n  const [value, setValue] = useState(initialValue)\n  const handleToggle = useCallback(\n    () => setValue((state) => !state),\n    [setValue],\n  )\n\n  return [value, handleToggle]\n}\n","import './PersonList.scss'\nimport React, { useMemo } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Person } from '../types/items/Person'\nimport { buildItemUrl } from '../util'\nimport { useToggle } from '../hooks/toggle'\nimport { useTranslation } from 'react-i18next'\n\nconst WRAPPED_SIZE = 10\n\ntype PersonListProps<T extends Person> = {\n  people: T[]\n\n  details: (person: T) => string\n}\n\nexport const PersonList = <T extends Person>({\n  people,\n  details,\n}: PersonListProps<T>) => {\n  const { t } = useTranslation()\n\n  const [isWrapped, toggleIsWrapped] = useToggle(true)\n\n  const displayedPeople = useMemo(\n    () => people.slice(0, isWrapped ? WRAPPED_SIZE : people.length),\n    [isWrapped, people],\n  )\n\n  return (\n    <div className=\"PersonList\">\n      {people.length > 0 ? (\n        displayedPeople.map((person, index) => {\n          return (\n            <p key={index}>\n              <Link to={buildItemUrl(person)}>{person.name}</Link> ·{' '}\n              <span>{details(person)}</span>\n            </p>\n          )\n        })\n      ) : (\n        <p>{t('None')}</p>\n      )}\n      {people.length > WRAPPED_SIZE && (\n        <span onClick={toggleIsWrapped}>\n          {isWrapped ? t('Show more') : t('Show less')}\n        </span>\n      )}\n    </div>\n  )\n}\n","import './Movie.scss'\nimport React, { useCallback } from 'react'\nimport { RouteComponentProps, useHistory } from 'react-router-dom'\nimport {\n  buildBackdropUrl,\n  buildCoverUrl,\n  buildJobTitle,\n  isInProgress,\n  splitHoursAndMinutes,\n} from '../../util'\nimport { Backdrop } from '../../components/Backdrop'\nimport { Cover } from '../../components/Cover'\nimport { FileList } from '../../components/FileList'\nimport { NotFound } from '../NotFound'\nimport { PersonList } from '../../components/PersonList'\nimport { RootState } from '../../store'\nimport classNames from 'classnames'\nimport { movieSelector } from '../../store/movies/selectors'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\ninterface MovieParams {\n  id: string\n}\n\ntype MovieProps = RouteComponentProps<MovieParams>\n\nexport const Movie = ({ match }: MovieProps) => {\n  const { t } = useTranslation()\n  const history = useHistory()\n\n  const movie = useSelector((state: RootState) =>\n    movieSelector(match.params.id)(state.movies),\n  )\n\n  const handleContinue = useCallback(() => {\n    if (movie === undefined) return\n    history.push(\n      `/player?id=${movie.id}&type=${movie.kind}&s=${movie.usage.progress}`,\n    )\n  }, [history, movie])\n\n  const handleWatch = useCallback(() => {\n    if (movie === undefined) return\n    history.push(`/player?id=${movie.id}&type=${movie.kind}`)\n  }, [history, movie])\n\n  return movie !== undefined ? (\n    <div className=\"Movie\">\n      <Backdrop url={buildBackdropUrl(movie.backdropPath)} />\n      <div className=\"Movie__details\">\n        <Cover url={buildCoverUrl(movie.posterPath)} alt=\"poster\" />\n        <h1>{movie.title}</h1>\n        <div className=\"Movie__information\">\n          <p className=\"small\">{new Date(movie.releaseDate).getFullYear()}</p>\n          {movie.duration && (\n            <p className=\"small\">{splitHoursAndMinutes(t, movie.duration)}</p>\n          )}\n        </div>\n        <div className=\"Movie__actions\">\n          {isInProgress(movie) && (\n            <button\n              className=\"primary\"\n              onClick={handleContinue}\n              disabled={movie.sources.length === 0}\n            >\n              {t('Continue')}\n            </button>\n          )}\n          <button\n            className={classNames({ primary: !isInProgress(movie) })}\n            onClick={handleWatch}\n            disabled={movie.sources.length === 0}\n          >\n            {t('Watch')}\n          </button>\n          <a\n            className=\"button\"\n            href={movie.trailerUrl}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {t('Play trailer')}\n          </a>\n        </div>\n        <p className=\"Movie__overview\">{movie.summary}</p>\n        <div className=\"Movie__people\">\n          <div className=\"Movie__people__cast\">\n            <h4>{t('Starring')}</h4>\n            <PersonList\n              people={movie.cast}\n              details={(person) => person.character}\n            />\n          </div>\n          <div className=\"Movie__people__crew\">\n            <h4>{t('Crew')}</h4>\n            <PersonList\n              people={movie.crew}\n              details={(person) => buildJobTitle(t, person.job, person.gender)}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"Movie__sources\">\n        <div>\n          <h4>{t('Sources')}</h4>\n          <div>\n            <div className=\"Movie__sources__versions\">\n              <h5>{t('Versions')}</h5>\n              <FileList files={movie.sources} />\n            </div>\n            <div className=\"Movie__sources__captions\">\n              <h5>{t('Subtitles')}</h5>\n              <FileList files={movie.captions} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <NotFound />\n  )\n}\n","import './ItemGrid.scss'\nimport { buildCoverUrl, buildItemUrl } from '../util'\nimport { Cover } from './Cover'\nimport { Link } from 'react-router-dom'\nimport { Movie } from '../types/items/Movie'\nimport React from 'react'\nimport { Season } from '../types/items/Season'\nimport { Show } from '../types/items/Show'\nimport { useTranslation } from 'react-i18next'\n\ntype ItemGridProps = {\n  items: (Movie | Season | Show)[]\n}\n\nexport const ItemGrid = ({ items }: ItemGridProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"ItemGrid\">\n      {items.length > 0 ? (\n        items.map((item, index) => (\n          <div className=\"ItemGrid__item\" key={index}>\n            <Link to={buildItemUrl(item)}>\n              <Cover url={buildCoverUrl(item.posterPath)} alt={item.title} />\n            </Link>\n          </div>\n        ))\n      ) : (\n        <div className=\"ItemGrid__item\">\n          <h3>{t('Nothing found.')}</h3>\n        </div>\n      )}\n    </div>\n  )\n}\n","import './VerticalSlide.scss'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport SwiperCore, { EffectCoverflow } from 'swiper'\nimport { buildCoverUrl, buildItemUrl } from '../util'\nimport { Cover } from './Cover'\nimport { Link } from 'react-router-dom'\nimport { Movie } from '../types/items/Movie'\nimport React from 'react'\nimport { Season } from '../types/items/Season'\nimport { Show } from '../types/items/Show'\nimport { useTranslation } from 'react-i18next'\n\nSwiperCore.use([EffectCoverflow])\n\ntype VerticalSlideProps = {\n  id: string\n  items: (Movie | Season | Show)[]\n  path: string\n}\n\nexport const VerticalSlide = ({ id, items, path }: VerticalSlideProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"VerticalSlide\" id={id}>\n      <Swiper\n        direction=\"vertical\"\n        slidesPerView=\"auto\"\n        grabCursor\n        effect=\"coverflow\"\n        coverflowEffect={{\n          rotate: 0,\n          stretch: 425,\n          depth: 150,\n          modifier: 1,\n          slideShadows: false,\n        }}\n        history={{\n          replaceState: true,\n          key: path,\n        }}\n      >\n        {items.length > 0 ? (\n          items.map((item, index) => (\n            <SwiperSlide data-history={item.id} key={index}>\n              <Link to={buildItemUrl(item)}>\n                <Cover url={buildCoverUrl(item.posterPath)} alt={item.title} />\n              </Link>\n            </SwiperSlide>\n          ))\n        ) : (\n          <SwiperSlide>\n            <h3>{t('Nothing found.')}</h3>\n          </SwiperSlide>\n        )}\n      </Swiper>\n    </div>\n  )\n}\n","import './AddProviderModal.scss'\nimport { AuthResponse, AuthSetup } from '../../services/auth/types'\nimport { Provider, ProviderKind } from '../../types/providers/Provider'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { ChooseProvider } from './ChooseProvider'\nimport { EnterDetailsProvider } from './EnterDetailsProvider'\nimport { Modal } from '../Modal'\nimport { SetupProvider } from './SetupProvider'\nimport { useModal } from '../../hooks/modal'\nimport { useSetupAuthRedirect } from '../../hooks/auth'\n\nenum State {\n  Choose,\n  EnterDetails,\n  Setup,\n}\n\ntype AddProviderModalProps = {\n  isActive: boolean\n\n  onClose: () => void\n  onSetupAuth: (config: AuthSetup) => Promise<AuthResponse | undefined>\n  onAddProvider: (provider: Provider) => void\n}\n\nexport const AddProviderModal = ({\n  isActive,\n  onClose,\n  onSetupAuth,\n  onAddProvider,\n}: AddProviderModalProps) => {\n  const [show, handleOpen] = useModal()\n\n  const initialState = useMemo(() => State.Choose, [])\n  const [state, setState] = useState(initialState)\n  const [kind, setKind] = useState<ProviderKind | undefined>()\n  const [authResponse, setAuthResponse] = useState<AuthResponse | undefined>()\n  useSetupAuthRedirect((response) => {\n    setAuthResponse(response)\n    handleOpen()\n  })\n\n  const handleClose = useCallback(() => {\n    onClose()\n    setTimeout(() => {\n      setState(initialState)\n      setKind(undefined)\n      setAuthResponse(undefined)\n    }, 500)\n  }, [initialState, onClose, setAuthResponse, setKind, setState])\n\n  const handleChoose = useCallback(\n    async (kind: ProviderKind) => {\n      setKind(kind)\n      switch (kind) {\n        case ProviderKind.FTP:\n          setState(State.EnterDetails)\n          return\n        case ProviderKind.OneDrive:\n          const authResponse = await onSetupAuth({ kind })\n          setAuthResponse(authResponse)\n          setState(State.Setup)\n          return\n      }\n    },\n    [setAuthResponse, setKind, onSetupAuth, setState],\n  )\n\n  const handleEnteredDetails = useCallback(\n    async (config: AuthSetup) => {\n      const authResponse = await onSetupAuth(config)\n      setAuthResponse(authResponse)\n      setState(State.Setup)\n    },\n    [setAuthResponse, onSetupAuth],\n  )\n\n  const handleSetup = useCallback(\n    (moviesPath: string | undefined, showsPath: string | undefined) => {\n      if (authResponse === undefined) return\n\n      const provider = { ...authResponse, moviesPath, showsPath }\n      onAddProvider(provider)\n      handleClose()\n    },\n    [authResponse, onAddProvider, handleClose],\n  )\n\n  return (\n    <div className=\"AddProviderModal\">\n      <Modal isActive={isActive || show} onClose={handleClose}>\n        {state === State.Choose ? (\n          <ChooseProvider onChoose={handleChoose} />\n        ) : state === State.EnterDetails ? (\n          <EnterDetailsProvider\n            kind={kind!}\n            onEnteredDetails={handleEnteredDetails}\n          />\n        ) : state === State.Setup ? (\n          <SetupProvider onSetup={handleSetup} />\n        ) : null}\n      </Modal>\n    </div>\n  )\n}\n","import './Movies.scss'\nimport { ItemGrid } from '../../components/ItemGrid'\nimport React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { RootState } from '../../store'\nimport { VerticalSlide } from '../../components/VerticalSlide'\nimport { moviesSelector } from '../../store/movies/selectors'\nimport { sortAlphabetically } from '../../util'\nimport { useSelector } from 'react-redux'\n\nexport const Movies = () => {\n  const movies = useSelector((state: RootState) =>\n    sortAlphabetically(moviesSelector(state.movies), (movie) => movie.title),\n  )\n\n  return movies.length > 0 ? (\n    <div className=\"Movies\">\n      <VerticalSlide items={movies} path=\"movies\" id=\"movies\" />\n      <ItemGrid items={movies} />\n    </div>\n  ) : (\n    <Redirect to=\"/app\" />\n  )\n}\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const FindIcon = () => (\n  <Icon className=\"zoom\" width={24} height={24}>\n    <title>Find</title>\n    <g fill=\"#ffffff\">\n      <line\n        fill=\"none\"\n        stroke=\"#ffffff\"\n        x1=\"22\"\n        x2=\"15.656\"\n        y1=\"22\"\n        y2=\"15.656\"\n      />\n      <circle cx=\"10\" cy=\"10\" fill=\"none\" r=\"8\" stroke=\"#ffffff\" />\n    </g>\n  </Icon>\n)\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const ForYouIcon = () => (\n  <Icon className=\"popcorn\" width={24} height={24}>\n    <title>For You</title>\n    <g fill=\"#ffffff\">\n      <polygon fill=\"none\" points=\"21 7 3 7 5 23 19 23 21 7\" stroke=\"#ffffff\" />\n      <path\n        d=\"M19,5a3,3,0,0,0-3-3,2.97,2.97,0,0,0-1.47.4,2.986,2.986,0,0,0-5.06,0A2.97,2.97,0,0,0,8,2,3,3,0,0,0,5,5\"\n        fill=\"none\"\n        stroke=\"#ffffff\"\n      />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"9\" x2=\"8\" y1=\"23\" y2=\"7\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"15\" x2=\"16\" y1=\"23\" y2=\"7\" />\n    </g>\n  </Icon>\n)\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const MovieIcon = () => (\n  <Icon className=\"movie-61\" width={24} height={24}>\n    <title>Movie</title>\n    <g fill=\"#ffffff\">\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"1\" x2=\"1\" y1=\"1\" y2=\"23\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"23\" x2=\"23\" y1=\"1\" y2=\"23\" />\n      <rect height=\"22\" width=\"14\" fill=\"none\" stroke=\"#ffffff\" x=\"5\" y=\"1\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"1\" x2=\"23\" y1=\"12\" y2=\"12\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"1\" x2=\"5\" y1=\"8\" y2=\"8\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"1\" x2=\"5\" y1=\"4\" y2=\"4\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"19\" x2=\"23\" y1=\"8\" y2=\"8\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"19\" x2=\"23\" y1=\"4\" y2=\"4\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"19\" x2=\"23\" y1=\"20\" y2=\"20\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"19\" x2=\"23\" y1=\"16\" y2=\"16\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"1\" x2=\"5\" y1=\"20\" y2=\"20\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"1\" x2=\"5\" y1=\"16\" y2=\"16\" />\n    </g>\n  </Icon>\n)\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const SettingsIcon = () => (\n  <Icon className=\"settings-gear\" width={24} height={24}>\n    <title>Settings</title>\n    <g fill=\"#ffffff\" stroke=\"#ffffff\">\n      <circle cx=\"12\" cy=\"12\" fill=\"none\" r=\"3\" />\n      <path\n        d=\"M20,12a8.049,8.049,0,0,0-.188-1.713l2.714-2.055-2-3.464L17.383,6.094a7.987,7.987,0,0,0-2.961-1.719L14,1H10L9.578,4.375A7.987,7.987,0,0,0,6.617,6.094L3.474,4.768l-2,3.464,2.714,2.055a7.9,7.9,0,0,0,0,3.426L1.474,15.768l2,3.464,3.143-1.326a7.987,7.987,0,0,0,2.961,1.719L10,23h4l.422-3.375a7.987,7.987,0,0,0,2.961-1.719l3.143,1.326,2-3.464-2.714-2.055A8.049,8.049,0,0,0,20,12Z\"\n        fill=\"none\"\n        stroke=\"#ffffff\"\n      />\n    </g>\n  </Icon>\n)\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const ShowIcon = () => (\n  <Icon className=\"desktop-screen\" width={24} height={24}>\n    <title>Show</title>\n    <g fill=\"#ffffff\">\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"12\" x2=\"12\" y1=\"22\" y2=\"18\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"6\" x2=\"18\" y1=\"22\" y2=\"22\" />\n      <rect height=\"16\" width=\"22\" fill=\"none\" stroke=\"#ffffff\" x=\"1\" y=\"2\" />\n    </g>\n  </Icon>\n)\n","import './Tab.scss'\nimport React, { FunctionComponent } from 'react'\nimport { matchPath, useLocation } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport classNames from 'classnames'\n\ntype TabProps = {\n  to: string\n  exact?: boolean\n  disabled?: boolean\n}\n\nexport const Tab: FunctionComponent<TabProps> = ({\n  children,\n  to,\n  exact,\n  disabled,\n}) => {\n  const location = useLocation()\n  const isActive = !!matchPath(location.pathname, { path: to, exact })\n\n  return (\n    <Link className={classNames('Tab', { active: isActive, disabled })} to={to}>\n      {children}\n    </Link>\n  )\n}\n","import './Nav.scss'\nimport { FindIcon } from './icons/Nucleo/FindIcon'\nimport { ForYouIcon } from './icons/Nucleo/ForYouIcon'\nimport { MovieIcon } from './icons/Nucleo/MovieIcon'\nimport React from 'react'\nimport { SettingsIcon } from './icons/Nucleo/SettingsIcon'\nimport { ShowIcon } from './icons/Nucleo/ShowIcon'\nimport { Tab } from './Tab'\nimport { useTranslation } from 'react-i18next'\n\ntype NavProps = {\n  moviesDisabled?: boolean\n  showsDisabled?: boolean\n}\n\nexport const Nav = ({ moviesDisabled, showsDisabled }: NavProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"Nav\">\n      <div className=\"Nav__wrapper\">\n        <Tab to=\"/app\" exact>\n          <ForYouIcon />\n          <p>{t('For you')}</p>\n        </Tab>\n        <Tab disabled={moviesDisabled} to=\"/app/movies\">\n          <MovieIcon />\n          <p>{t('Movies')}</p>\n        </Tab>\n        <Tab disabled={showsDisabled} to=\"/app/shows\">\n          <ShowIcon />\n          <p>{t('Shows')}</p>\n        </Tab>\n        <Tab disabled={moviesDisabled && showsDisabled} to=\"/app/find\">\n          <FindIcon />\n          <p>{t('Find')}</p>\n        </Tab>\n        <Tab to=\"/app/settings\">\n          <SettingsIcon />\n          <p>{t('Settings')}</p>\n        </Tab>\n      </div>\n    </div>\n  )\n}\n","import './Person.scss'\nimport React, { useMemo } from 'react'\nimport { buildBackdropUrl, buildCoverUrl, buildJobTitle } from '../../util'\nimport { Backdrop } from '../../components/Backdrop'\nimport { Cover } from '../../components/Cover'\nimport { HorizontalSlide } from '../../components/HorizontalSlide'\nimport { NotFound } from '../NotFound'\nimport { RootState } from '../../store'\nimport { RouteComponentProps } from 'react-router'\nimport { moviesByPersonSelector } from '../../store/movies/selectors'\nimport { personSelector } from '../../store/selectors'\nimport { seasonsByPersonSelector } from '../../store/seasons/selectors'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\ninterface PersonParams {\n  id: string\n}\n\ntype PersonProps = RouteComponentProps<PersonParams>\n\nexport const Person = ({ match }: PersonProps) => {\n  const { t } = useTranslation()\n\n  const person = useSelector((state: RootState) =>\n    personSelector(match.params.id)(state),\n  )\n  const { movies, seasons } = useSelector((state: RootState) => ({\n    movies: person && moviesByPersonSelector(person.id)(state.movies),\n    seasons: person && seasonsByPersonSelector(person.id)(state.seasons),\n  }))\n\n  const backdropPath = useMemo(() => {\n    if (movies !== undefined && movies.length > 0) return movies[0].backdropPath\n    else if (seasons !== undefined && seasons.length > 0)\n      return seasons[0].showBackdropPath\n  }, [movies, seasons])\n\n  return person !== undefined &&\n    movies !== undefined &&\n    seasons !== undefined ? (\n    <div className=\"Person\">\n      <Backdrop url={buildBackdropUrl(backdropPath)} />\n      <div className=\"Person__details\">\n        <Cover url={buildCoverUrl(person.profilePath)} alt=\"profile\" />\n        <h1>{person.name}</h1>\n        {person.jobs && (\n          <p>\n            {person.jobs\n              .map((job) => buildJobTitle(t, job, person.gender))\n              .join(', ')}\n          </p>\n        )}\n      </div>\n\n      {movies.length > 0 && (\n        <div className=\"Person__movies\">\n          <h2>{t('Movies')}</h2>\n          <HorizontalSlide items={movies} id=\"movies\" />\n        </div>\n      )}\n\n      {seasons.length > 0 && (\n        <div className=\"Person__seasons\">\n          <h2>{t('TV seasons')}</h2>\n          <HorizontalSlide items={seasons} id=\"seasons\" />\n        </div>\n      )}\n    </div>\n  ) : (\n    <NotFound />\n  )\n}\n","import './EpisodeEntry.scss'\nimport { Episode } from '../types/items/Episode'\nimport React from 'react'\nimport classNames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\ntype EpisodeEntryProps = {\n  episode: Episode\n\n  onClick: () => void\n}\n\nexport const EpisodeEntry = ({ episode, onClick }: EpisodeEntryProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div\n      className={classNames('EpisodeEntry', {\n        disabled: episode.sources.length === 0,\n      })}\n      onClick={onClick}\n    >\n      <div className=\"EpisodeEntry__number\">{episode.number}</div>\n      <div className=\"EpisodeEntry__details\">\n        <h2>{episode.title}</h2>\n        <p className=\"small\">\n          {t('Aired')} {new Date(episode.airDate).toDateString()}\n        </p>\n        <p>{episode.summary}</p>\n      </div>\n    </div>\n  )\n}\n","import './Season.scss'\nimport React, { useCallback, useMemo } from 'react'\nimport { RouteComponentProps, useHistory } from 'react-router-dom'\nimport {\n  buildBackdropUrl,\n  buildCoverUrl,\n  buildJobTitle,\n  sortByNumber,\n} from '../../util'\nimport { Backdrop } from '../../components/Backdrop'\nimport { Cover } from '../../components/Cover'\nimport { Episode } from '../../types/items/Episode'\nimport { EpisodeEntry } from '../../components/EpisodeEntry'\nimport { NotFound } from '../NotFound'\nimport { PersonList } from '../../components/PersonList'\nimport { RootState } from '../../store'\nimport classNames from 'classnames'\nimport { episodesBySeasonSelector } from '../../store/episodes/selectors'\nimport { seasonSelector } from '../../store/seasons/selectors'\nimport { showSelector } from '../../store/shows/selectors'\nimport { useSelector } from 'react-redux'\nimport { useToggle } from '../../hooks/toggle'\nimport { useTranslation } from 'react-i18next'\n\ninterface SeasonParams {\n  id: string\n}\n\ntype SeasonProps = RouteComponentProps<SeasonParams>\n\nexport const Season = ({ match }: SeasonProps) => {\n  const { t } = useTranslation()\n  const history = useHistory()\n\n  const season = useSelector((state: RootState) =>\n    seasonSelector(match.params.id)(state.seasons),\n  )\n  const { show, episodes } = useSelector((state: RootState) => ({\n    show: season && showSelector(season.showId)(state.shows),\n    episodes:\n      season &&\n      sortByNumber(\n        episodesBySeasonSelector(season.id)(state.episodes),\n        (episode) => episode.number,\n      ),\n  }))\n  const currentEpisode = useMemo(() => {\n    if (season !== undefined && episodes !== undefined)\n      return episodes.find(\n        (episode) => episode.number === season.usage.progress,\n      )\n  }, [season, episodes])\n\n  const [showEpisodes, toggleEpisodes] = useToggle(false)\n\n  const handleContinue = useCallback(\n    (episode: Episode) => () => {\n      history.push(\n        `/player?id=${episode.id}&type=${episode.kind}&s=${episode.usage.progress}`,\n      )\n    },\n    [history],\n  )\n\n  const handleWatch = useCallback(\n    (episodeNumber: number) => () => {\n      if (episodes === undefined) return\n\n      const episode = episodes.find(\n        (episode) => episode.number === episodeNumber,\n      )!\n\n      history.push(`/player?id=${episode.id}&type=${episode.kind}`)\n    },\n    [episodes, history],\n  )\n\n  return show !== undefined &&\n    season !== undefined &&\n    episodes !== undefined ? (\n    <div className=\"Season\">\n      <Backdrop url={buildBackdropUrl(season.showBackdropPath)} />\n      <div className=\"Season__details\">\n        <Cover url={buildCoverUrl(season.posterPath)} alt=\"poster\" />\n        <h1>\n          {t('Season')} {season.number}\n        </h1>\n        <div className=\"Season__information\">\n          <p className=\"small\">{show.title}</p>\n          <p className=\"small\">{new Date(season.airDate).getFullYear()}</p>\n        </div>\n        <div className=\"Season__actions\">\n          {currentEpisode !== undefined && (\n            <button\n              className=\"primary\"\n              onClick={handleContinue(currentEpisode)}\n              disabled={currentEpisode.sources.length === 0}\n            >\n              {t('Continue episode')} {currentEpisode.number}\n            </button>\n          )}\n          {episodes.length > 0 && (\n            <button\n              className={classNames({ primary: currentEpisode === undefined })}\n              onClick={handleWatch(0)}\n              disabled={episodes[0].sources.length === 0}\n            >\n              {t('Watch')}\n            </button>\n          )}\n          <a\n            className=\"button\"\n            id=\"trailer\"\n            href={season.trailerUrl}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {t('Play trailer')}\n          </a>\n        </div>\n        <div className=\"Season__episodes\">\n          <div\n            className={classNames('Season__episodes__list', {\n              shown: showEpisodes,\n            })}\n          >\n            {episodes\n              .slice(0, showEpisodes ? episodes.length : 0)\n              .map((episode, index) => (\n                <EpisodeEntry\n                  episode={episode}\n                  onClick={handleWatch(episode.number)}\n                  key={index}\n                />\n              ))}\n          </div>\n          {episodes.length > 0 && (\n            <div className=\"Season__episodes__toggle\" onClick={toggleEpisodes}>\n              {showEpisodes ? t('Hide episodes') : t('Show all episodes')}\n            </div>\n          )}\n        </div>\n        <p className=\"Season__overview\">{season.summary}</p>\n        <div className=\"Season__people\">\n          <div className=\"Season__people__cast\">\n            <h4>{t('Starring')}</h4>\n            <PersonList\n              people={season.cast}\n              details={(person) => person.character}\n            />\n          </div>\n          <div className=\"Season__people__crew\">\n            <h4>{t('Crew')}</h4>\n            <PersonList\n              people={season.crew}\n              details={(person) => buildJobTitle(t, person.job, person.gender)}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <NotFound />\n  )\n}\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const AddIcon = () => (\n  <Icon className=\"e-add\" width={32} height={32}>\n    <title>Add</title>\n    <g fill=\"#ffffff\" stroke=\"#ffffff\">\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"16\" x2=\"16\" y1=\"2\" y2=\"30\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"30\" x2=\"2\" y1=\"16\" y2=\"16\" />\n    </g>\n  </Icon>\n)\n","import './ProviderButton.scss'\nimport React from 'react'\nimport classNames from 'classnames'\n\ntype ProviderButtonProps = {\n  className?: string\n  icon: JSX.Element\n  title?: string\n\n  onClick: (event: React.MouseEvent) => void\n}\n\nexport const ProviderButton = ({\n  className,\n  icon,\n  title,\n  onClick,\n}: ProviderButtonProps) => (\n  <div className={classNames('ProviderButton', { large: title !== undefined })}>\n    <button className={className} onClick={onClick}>\n      {icon}\n      {title && <h3>{title}</h3>}\n    </button>\n  </div>\n)\n","import './ChooseProvider.scss'\nimport { PROVIDER_KINDS, ProviderKind } from '../../types/providers/Provider'\nimport React, { useCallback } from 'react'\nimport { buildProviderIcon, buildProviderKindName } from '../../util'\nimport { ProviderButton } from '../ProviderButton'\nimport { useTranslation } from 'react-i18next'\n\ntype ChooseProviderProps = {\n  onChoose: (kind: ProviderKind) => Promise<void>\n}\n\nexport const ChooseProvider = ({ onChoose }: ChooseProviderProps) => {\n  const { t } = useTranslation()\n\n  const handleChoose = useCallback(\n    (kind: ProviderKind) => () => onChoose(kind),\n    [onChoose],\n  )\n\n  return (\n    <div className=\"ChooseProvider\">\n      <h2>{t('Add a provider')}</h2>\n      <p>\n        {t(\n          'Select which service you want to use to stream your movies & shows.',\n        )}\n      </p>\n      <div className=\"ChooseProvider__providers\">\n        {PROVIDER_KINDS.map((kind, index) => (\n          <ProviderButton\n            icon={buildProviderIcon(kind)}\n            title={buildProviderKindName(t, kind)}\n            onClick={handleChoose(kind)}\n            key={index}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const CheckIcon = () => (\n  <Icon className=\"c-check\" width={24} height={24}>\n    <title>Check</title>\n    <g fill=\"#ffffff\">\n      <path\n        d=\"M12,0A12,12,0,1,0,24,12,12.035,12.035,0,0,0,12,0ZM10,17.414,4.586,12,6,10.586l4,4,8-8L19.414,8Z\"\n        fill=\"#ffffff\"\n      />\n    </g>\n  </Icon>\n)\n","import './FTPProviderForm.scss'\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { CheckIcon } from '../icons/Nucleo/CheckIcon'\nimport { FTP } from '../../types/providers/FTP'\nimport { FTPAuthSetup } from '../../services/auth/types'\nimport { ProviderKind } from '../../types/providers/Provider'\nimport classNames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\ntype FTPProviderFormProps = {\n  submitCaption: string\n  provider?: FTP\n\n  onSubmit: (config: FTPAuthSetup) => void\n}\n\ntype FTPProviderFormState = {\n  name?: string\n  host?: string\n  port?: number\n  username?: string\n  password?: string\n  secure: boolean\n}\n\nexport const FTPProviderForm = ({\n  submitCaption,\n  provider,\n  onSubmit,\n}: FTPProviderFormProps) => {\n  const { t } = useTranslation()\n\n  const initalState = useMemo<FTPProviderFormState>(\n    () => ({\n      name: provider?.name,\n      host: provider?.host,\n      port: provider?.port || 21,\n      username: provider?.username,\n      password: provider?.password,\n      secure: provider?.secure || true,\n    }),\n    [provider],\n  )\n  const [state, setState] = useState<FTPProviderFormState>(initalState)\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>): void => {\n      const target = event.currentTarget\n      setState((state) => ({\n        ...state,\n        [target.name]:\n          target.type === 'checkbox'\n            ? target.checked\n            : target.value === ''\n            ? undefined\n            : target.value,\n      }))\n    },\n    [setState],\n  )\n\n  const handleSubmit = useCallback(\n    (event: React.FormEvent<HTMLFormElement>): void => {\n      event.preventDefault()\n      onSubmit({\n        kind: ProviderKind.FTP,\n        name: state.name!,\n        host: state.host!,\n        port: state.port!,\n        username: state.username!,\n        password: state.password!,\n        secure: state.secure,\n      })\n    },\n    [onSubmit, state],\n  )\n\n  const isSetupInput = useCallback(\n    (value: unknown | undefined) => value !== undefined && value !== '',\n    [],\n  )\n\n  const isValid = useMemo(\n    () =>\n      isSetupInput(state.name) &&\n      isSetupInput(state.host) &&\n      isSetupInput(state.port) &&\n      isSetupInput(state.username) &&\n      isSetupInput(state.password),\n    [isSetupInput, state],\n  )\n\n  useEffect(() => {\n    setState(initalState)\n  }, [initalState, setState])\n\n  return (\n    <form className=\"FTPProviderForm\" onSubmit={handleSubmit}>\n      <label>\n        {t('Name')}\n        <p className=\"small\">\n          {t('Friendly name to identify server, not used for connecting.')}\n        </p>\n        <div\n          className={classNames('FTPProviderForm__input', 'warn', {\n            valid: isSetupInput(state.name),\n          })}\n        >\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={state.name || ''}\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <label>\n        {t('Host')}\n        <div\n          className={classNames('FTPProviderForm__input', 'warn', {\n            valid: isSetupInput(state.host),\n          })}\n        >\n          <input\n            type=\"text\"\n            name=\"host\"\n            value={state.host || ''}\n            placeholder=\"example.com\"\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <label>\n        {t('Port')}\n        <div\n          className={classNames('FTPProviderForm__input', 'warn', {\n            valid: isSetupInput(state.port),\n          })}\n        >\n          <input\n            type=\"number\"\n            min={0}\n            step={1}\n            name=\"port\"\n            value={state.port || ''}\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <label>\n        {t('Username')}\n        <div\n          className={classNames('FTPProviderForm__input', 'warn', {\n            valid: isSetupInput(state.username),\n          })}\n        >\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={state.username || ''}\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <label>\n        {t('Password')}\n        <div\n          className={classNames('FTPProviderForm__input', 'warn', {\n            valid: isSetupInput(state.password),\n          })}\n        >\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={state.password || ''}\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <div className=\"FTPProviderForm__checkbox\">\n        <input\n          type=\"checkbox\"\n          name=\"secure\"\n          checked={state.secure}\n          onChange={handleChange}\n        />\n        <label>\n          {t('Secure')}\n          <p className=\"small\">{t('Explicit FTPS over TLS.')}</p>\n        </label>\n      </div>\n\n      <div className=\"FTPProviderForm__actions\">\n        <button type=\"submit\" disabled={!isValid}>\n          {submitCaption}\n        </button>\n      </div>\n    </form>\n  )\n}\n","import './EnterDetailsProvider.scss'\nimport { AuthSetup } from '../../services/auth/types'\nimport { FTPProviderForm } from './FTPProviderForm'\nimport { ProviderKind } from '../../types/providers/Provider'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\ntype EnterDetailsProviderProps = {\n  kind: ProviderKind\n  onEnteredDetails: (config: AuthSetup) => void\n}\n\nexport const EnterDetailsProvider = ({\n  kind,\n  onEnteredDetails,\n}: EnterDetailsProviderProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"EnterDetailsProvider\">\n      <h2>{t('Configure your provider')}</h2>\n      <p>{t('Plaain needs some more details to connect to your provider.')}</p>\n      {kind === ProviderKind.FTP ? (\n        <FTPProviderForm\n          submitCaption={t('Continue')}\n          onSubmit={onEnteredDetails}\n        />\n      ) : null}\n    </div>\n  )\n}\n","import './Modal.scss'\nimport React, { FunctionComponent, useRef } from 'react'\nimport classNames from 'classnames'\nimport useOnClickOutside from 'use-onclickoutside'\n\ntype ModalProps = {\n  isActive: boolean\n\n  onClose: () => void\n}\n\nexport const Modal: FunctionComponent<ModalProps> = ({\n  isActive,\n  onClose,\n  children,\n}) => {\n  const modalRef = useRef(null)\n  useOnClickOutside(modalRef, onClose)\n\n  return (\n    <div className={classNames('Modal', { active: isActive })}>\n      <div className=\"Modal__wrapper\" ref={modalRef}>\n        {children}\n      </div>\n    </div>\n  )\n}\n","import './ProviderForm.scss'\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { CheckIcon } from '../icons/Nucleo/CheckIcon'\nimport { Provider } from '../../types/providers/Provider'\nimport classNames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\ntype ProviderFormProps = {\n  submitCaption: string\n  provider?: Provider\n\n  onSubmit: (\n    moviesPath: string | undefined,\n    showsPath: string | undefined,\n  ) => void\n}\n\ntype ProviderFormState = {\n  moviesPath?: string\n  showsPath?: string\n}\n\nexport const ProviderForm = ({\n  submitCaption,\n  provider,\n  onSubmit,\n}: ProviderFormProps) => {\n  const { t } = useTranslation()\n\n  const initalState = useMemo<ProviderFormState>(\n    () => ({\n      moviesPath: provider?.moviesPath,\n      showsPath: provider?.showsPath,\n    }),\n    [provider],\n  )\n  const [state, setState] = useState<ProviderFormState>(initalState)\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>): void => {\n      const target = event.currentTarget\n      setState((state) => ({\n        ...state,\n        [target.name]: target.value === '' ? undefined : target.value,\n      }))\n    },\n    [setState],\n  )\n\n  const handleSubmit = useCallback(\n    (event: React.FormEvent<HTMLFormElement>): void => {\n      event.preventDefault()\n      onSubmit(state.moviesPath, state.showsPath)\n    },\n    [onSubmit, state],\n  )\n\n  const isSetupInput = useCallback(\n    (value: string | undefined) => value !== undefined && value !== '',\n    [],\n  )\n\n  const isValidPath = useCallback(\n    (value: string | undefined) => value !== undefined && value.startsWith('/'),\n    [],\n  )\n\n  const isValid = useMemo(\n    () =>\n      (!isSetupInput(state.moviesPath) || isValidPath(state.moviesPath)) &&\n      (!isSetupInput(state.showsPath) || isValidPath(state.showsPath)),\n    [isSetupInput, isValidPath, state],\n  )\n\n  useEffect(() => {\n    setState(initalState)\n  }, [initalState, setState])\n\n  return (\n    <form className=\"ProviderForm\" onSubmit={handleSubmit}>\n      <label>\n        {t('Movies path')}\n        <p className=\"small\">\n          {t(\n            'The path from your home directory to where you keep your movies.',\n          )}\n        </p>\n        <div\n          className={classNames('ProviderForm__input', {\n            warn: isSetupInput(state.moviesPath),\n            valid: isValidPath(state.moviesPath),\n          })}\n        >\n          <input\n            type=\"text\"\n            name=\"moviesPath\"\n            value={state.moviesPath || ''}\n            placeholder=\"/Plaain/movies\"\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <label>\n        {t('Shows path')}\n        <p className=\"small\">\n          {t('The path from your home directory to where you keep your shows.')}\n        </p>\n        <div\n          className={classNames('ProviderForm__input', {\n            warn: isSetupInput(state.showsPath),\n            valid: isValidPath(state.showsPath),\n          })}\n        >\n          <input\n            type=\"text\"\n            name=\"showsPath\"\n            value={state.showsPath || ''}\n            placeholder=\"/Plaain/shows\"\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <div className=\"ProviderForm__actions\">\n        <button type=\"submit\" disabled={!isValid}>\n          {submitCaption}\n        </button>\n      </div>\n    </form>\n  )\n}\n","import './SetupProvider.scss'\nimport { ProviderForm } from './ProviderForm'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\ntype SetupProviderProps = {\n  onSetup: (\n    moviesPath: string | undefined,\n    showsPath: string | undefined,\n  ) => void\n}\n\nexport const SetupProvider = ({ onSetup }: SetupProviderProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"SetupProvider\">\n      <h2>{t('Setup your provider')}</h2>\n      <p>\n        {t(\n          \"All that's left is to tell Plaain where to look for your movies and shows. You can always skip this step and come back later.\",\n        )}\n      </p>\n      <ProviderForm submitCaption={t('Complete')} onSubmit={onSetup} />\n    </div>\n  )\n}\n","import { useCallback, useState } from 'react'\n\nexport const useModal = (): [\n  show: boolean,\n  handleOpen: () => void,\n  handleClose: () => void,\n] => {\n  const [show, setShow] = useState(false)\n  const handleOpen = useCallback(() => setShow(true), [setShow])\n  const handleClose = useCallback(() => setShow(false), [setShow])\n\n  return [show, handleOpen, handleClose]\n}\n","import './UpdateProviderModal.scss'\nimport { AuthResponse, AuthSetup } from '../../services/auth/types'\nimport { Provider, ProviderKind } from '../../types/providers/Provider'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { FTPProviderForm } from './FTPProviderForm'\nimport { Modal } from '../Modal'\nimport { ProviderForm } from './ProviderForm'\nimport { buildProviderKindName } from '../../util'\nimport { useTranslation } from 'react-i18next'\n\nenum State {\n  Specific,\n  General,\n}\n\ntype UpdateProviderModalProps = {\n  isActive: boolean\n  provider: Provider\n\n  onClose: () => void\n  onSetupAuth: (config: AuthSetup) => Promise<AuthResponse | undefined>\n  onUpdateProvider: (provider: Provider) => void\n  onRemoveProvider: () => void\n}\n\nexport const UpdateProviderModal = ({\n  isActive,\n  provider,\n  onClose,\n  onSetupAuth,\n  onUpdateProvider,\n  onRemoveProvider,\n}: UpdateProviderModalProps) => {\n  const { t } = useTranslation()\n\n  const initialState = useMemo(\n    () => (provider.kind === ProviderKind.FTP ? State.Specific : State.General),\n    [provider],\n  )\n  const [state, setState] = useState(initialState)\n  const [details, setDetails] = useState<AuthResponse | undefined>()\n\n  const handleClose = useCallback(() => {\n    onClose()\n    setTimeout(() => {\n      setState(initialState)\n      setDetails(undefined)\n    }, 500)\n  }, [initialState, onClose, setDetails, setState])\n\n  const handleDetails = useCallback(\n    async (config: AuthSetup) => {\n      const authResponse = await onSetupAuth(config)\n      setDetails(authResponse)\n      setState(State.General)\n    },\n    [setDetails, setState],\n  )\n\n  const handleUpdate = useCallback(\n    (moviesPath: string | undefined, showsPath: string | undefined) => {\n      const newProvider: Provider =\n        details !== undefined\n          ? { ...details, moviesPath, showsPath }\n          : { ...provider, moviesPath, showsPath }\n      onUpdateProvider(newProvider)\n      handleClose()\n    },\n    [details, handleClose, onUpdateProvider, provider],\n  )\n\n  const handleRemoveProvider = useCallback(() => {\n    if (!window.confirm(t('Are you sure?'))) return\n\n    onRemoveProvider()\n    handleClose()\n  }, [handleClose, onRemoveProvider, t])\n\n  return (\n    <div className=\"UpdateProviderModal\">\n      <Modal isActive={isActive} onClose={handleClose}>\n        <h2>{buildProviderKindName(t, provider.kind)}</h2>\n        <p>{provider.name}</p>\n        {state === State.Specific ? (\n          <>\n            {provider.kind === ProviderKind.FTP ? (\n              <FTPProviderForm\n                submitCaption={t('Continue')}\n                provider={provider}\n                onSubmit={handleDetails}\n              />\n            ) : null}\n          </>\n        ) : state === State.General ? (\n          <ProviderForm\n            submitCaption={t('Update')}\n            provider={provider}\n            onSubmit={handleUpdate}\n          />\n        ) : null}\n        <button className=\"secondary\" onClick={handleRemoveProvider}>\n          {t('Remove')}\n        </button>\n      </Modal>\n    </div>\n  )\n}\n","import React, { useCallback } from 'react'\nimport { LANGUAGES } from '../i18n'\nimport i18next from 'i18next'\nimport { useTranslation } from 'react-i18next'\n\ntype LanguageSelectorProps = {\n  onChange?: (lng: string | undefined) => void\n}\n\nexport const LanguageSelector = ({ onChange }: LanguageSelectorProps) => {\n  const { t } = useTranslation()\n\n  const handleChange = useCallback(\n    (event) => {\n      i18next.changeLanguage(event.target.value)\n      if (onChange) onChange(event.target.value)\n    },\n    [onChange],\n  )\n\n  return (\n    <div className=\"LanguageSelector\">\n      <select defaultValue={i18next.language} onChange={handleChange}>\n        {LANGUAGES.map((language) => (\n          <option value={language} key={language}>\n            {t(language)}\n          </option>\n        ))}\n      </select>\n    </div>\n  )\n}\n","import './Settings.scss'\nimport { AppDispatch, RootState } from '../../store'\nimport React, { useCallback, useState } from 'react'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { buildCommitId, buildProviderIcon } from '../../util'\nimport { fetchAllMetadata, index } from '../../store/thunks'\nimport { removeProvider, updateProvider } from '../../store/auth/actions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AddIcon } from '../../components/icons/Nucleo/AddIcon'\nimport { AddProviderModal } from '../../components/authentication/AddProviderModal'\nimport { AuthSetup } from '../../services/auth/types'\nimport { LanguageSelector } from '../../components/LanguageSelector'\nimport { Provider } from '../../types/providers/Provider'\nimport { ProviderButton } from '../../components/ProviderButton'\nimport { UpdateProviderModal } from '../../components/authentication/UpdateProviderModal'\nimport { VERSION } from '../../constants'\nimport classNames from 'classnames'\nimport { load } from '../../store/ui/thunks'\nimport { providersSelector } from '../../store/auth/selectors'\nimport { setupAuth } from '../../store/auth/thunks'\nimport { useModal } from '../../hooks/modal'\n\nexport const Settings = () => {\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n\n  const providers = useSelector((state: RootState) =>\n    providersSelector(state.auth),\n  )\n\n  const handleSetupAuth = useCallback(\n    (config: AuthSetup) => dispatch(load(setupAuth(config))),\n    [dispatch],\n  )\n\n  const handleUpdateProvider = useCallback(\n    (provider: Provider) => {\n      dispatch(updateProvider(provider))\n      dispatch(load(index([provider])))\n    },\n    [dispatch],\n  )\n\n  const handleIndex = useCallback(\n    () => dispatch(load(index(providers))),\n    [dispatch, providers],\n  )\n\n  const handleFetchMetadataAll = useCallback(\n    () => dispatch(load(fetchAllMetadata())),\n    [dispatch],\n  )\n\n  const handleRemoveProvider = useCallback(\n    (id: string) => () => dispatch(removeProvider(id)),\n    [dispatch],\n  )\n\n  const [\n    showAddProviderModal,\n    handleShowAddProviderModal,\n    handleCloseAddProviderModal,\n  ] = useModal()\n\n  const [showUpdateProviderModals, setShowUpdateProviderModals] = useState<{\n    [index: number]: boolean\n  }>(providers.reduce((acc, _, index) => ({ ...acc, [index]: false }), {}))\n  const handleShowUpdateProviderModal = useCallback(\n    (index: number) => () =>\n      setShowUpdateProviderModals((state) => ({ ...state, [index]: true })),\n    [setShowUpdateProviderModals],\n  )\n  const handleCloseUpdateProviderModal = useCallback(\n    (index: number) => () =>\n      setShowUpdateProviderModals((state) => ({ ...state, [index]: false })),\n    [setShowUpdateProviderModals],\n  )\n\n  return (\n    <div className=\"Settings\">\n      <section className=\"Settings__auth\">\n        <h2>{t('Authentication')}</h2>\n        <p>\n          {t(\n            'Sign into your cloud to add your movies and TV shows to your library.',\n          )}\n        </p>\n        <div className=\"Settings__auth__scroll\">\n          <div className=\"Settings__auth__providers\">\n            {providers.map((provider, index) => (\n              <div className=\"Settings__auth__provider\" key={index}>\n                <ProviderButton\n                  className={classNames('primary', {\n                    warn:\n                      provider.moviesPath === undefined &&\n                      provider.showsPath === undefined,\n                  })}\n                  icon={buildProviderIcon(provider.kind)}\n                  onClick={handleShowUpdateProviderModal(index)}\n                />\n                <UpdateProviderModal\n                  isActive={showUpdateProviderModals[index]}\n                  provider={provider}\n                  onClose={handleCloseUpdateProviderModal(index)}\n                  onSetupAuth={handleSetupAuth}\n                  onUpdateProvider={handleUpdateProvider}\n                  onRemoveProvider={handleRemoveProvider(provider.id)}\n                  key={7}\n                />\n              </div>\n            ))}\n            <div className=\"Settings__auth__provider\" key={providers.length}>\n              <ProviderButton\n                icon={<AddIcon />}\n                onClick={handleShowAddProviderModal}\n                key={5}\n              />\n              <AddProviderModal\n                isActive={showAddProviderModal}\n                onClose={handleCloseAddProviderModal}\n                onSetupAuth={handleSetupAuth}\n                onAddProvider={handleUpdateProvider}\n                key={7}\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"Settings__indexing\">\n        <h2>{t('Indexing')}</h2>\n        <p>\n          {t(\n            'Index to look for new media on your linked services or fetch the latest metadata.',\n          )}\n        </p>\n        <div className=\"Settings__indexing__actions\">\n          <button disabled={providers.length === 0} onClick={handleIndex}>\n            {t('Index')}\n          </button>\n          <button\n            disabled={providers.length === 0}\n            onClick={handleFetchMetadataAll}\n          >\n            {t('Update metadata')}\n          </button>\n        </div>\n      </section>\n\n      <section className=\"Settings__language\">\n        <h2>{t('Language')}</h2>\n        <p>{t('Change the display language.')}</p>\n        <LanguageSelector onChange={handleFetchMetadataAll} />\n      </section>\n\n      <section className=\"Settings__version\">\n        <h2>{t('Version')}</h2>\n        <p>{t('Plaain {{version}}.', { version: VERSION })}</p>\n        <p className=\"small\">\n          <Trans>\n            Plaain is{' '}\n            <a\n              href=\"https://github.com/jonhue/plaain\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              open-source\n            </a>\n            . See the{' '}\n            <a\n              href=\"https://github.com/jonhue/plaain/releases\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              changelog\n            </a>\n            .\n          </Trans>\n        </p>\n        <p className=\"small\">\n          <Trans>\n            You are running commit{' '}\n            <a\n              href={`https://github.com/jonhue/plaain/commit/${process.env.REACT_APP_GIT_SHA}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {process.env.REACT_APP_GIT_SHA\n                ? buildCommitId(process.env.REACT_APP_GIT_SHA)\n                : t('Unknown')}\n            </a>\n            .\n          </Trans>\n        </p>\n        <p className=\"small\">\n          <Trans>\n            Note that Plaain may <span className=\"bold\">not</span> be used to\n            stream pirated content or publicly share your private media library.\n            You may only connect to your private cloud storage.\n          </Trans>\n        </p>\n      </section>\n    </div>\n  )\n}\n","import './Show.scss'\nimport { buildBackdropUrl, buildCoverUrl } from '../../util'\nimport { Backdrop } from '../../components/Backdrop'\nimport { Cover } from '../../components/Cover'\nimport { HorizontalSlide } from '../../components/HorizontalSlide'\nimport { NotFound } from '../NotFound'\nimport React from 'react'\nimport { RootState } from '../../store'\nimport { RouteComponentProps } from 'react-router'\nimport { seasonsByShowSelector } from '../../store/seasons/selectors'\nimport { showSelector } from '../../store/shows/selectors'\nimport { sortByNumber } from '../../util'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\ninterface ShowParams {\n  id: string\n}\n\ntype ShowProps = RouteComponentProps<ShowParams>\n\nexport const Show = ({ match }: ShowProps) => {\n  const { t } = useTranslation()\n\n  const show = useSelector((state: RootState) =>\n    showSelector(match.params.id)(state.shows),\n  )\n\n  const seasons = useSelector(\n    (state: RootState) =>\n      show &&\n      sortByNumber(\n        seasonsByShowSelector(show.id)(state.seasons),\n        (season) => season.number,\n      ),\n  )\n\n  return show !== undefined && seasons !== undefined ? (\n    <div className=\"Show\">\n      <Backdrop url={buildBackdropUrl(show.backdropPath)} />\n      <div className=\"Show__details\">\n        <Cover url={buildCoverUrl(show.posterPath)} alt=\"poster\" />\n        <h1>{show.title}</h1>\n        <div className=\"Show__information\">\n          <p className=\"small\">\n            {new Date(show.firstAirDate).getFullYear()} -{' '}\n            {new Date(show.lastAirDate).getFullYear()}\n          </p>\n        </div>\n        <p className=\"Show__overview\">{show.summary}</p>\n      </div>\n      {seasons.length > 0 && (\n        <div className=\"Show__seasons\">\n          <h2>{t('Seasons')}</h2>\n          <HorizontalSlide items={seasons} id=\"seasons\" />\n        </div>\n      )}\n    </div>\n  ) : (\n    <NotFound />\n  )\n}\n","import './Shows.scss'\nimport { ItemGrid } from '../../components/ItemGrid'\nimport React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { RootState } from '../../store'\nimport { VerticalSlide } from '../../components/VerticalSlide'\nimport { showsSelector } from '../../store/shows/selectors'\nimport { sortAlphabetically } from '../../util'\nimport { useSelector } from 'react-redux'\n\nexport const Shows = () => {\n  const shows = useSelector((state: RootState) =>\n    sortAlphabetically(showsSelector(state.shows), (show) => show.title),\n  )\n\n  return shows.length > 0 ? (\n    <div className=\"Shows\">\n      <VerticalSlide items={shows} path=\"shows\" id=\"shows\" />\n      <ItemGrid items={shows} />\n    </div>\n  ) : (\n    <Redirect to=\"/app\" />\n  )\n}\n","import './index.scss'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\nimport { Find } from './Find'\nimport { Home } from './Home'\nimport { Movie } from './Movie'\nimport { Movies } from './Movies'\nimport { Nav } from '../../components/Nav'\nimport { NotFound } from '../NotFound'\nimport { Person } from './Person'\nimport React from 'react'\nimport { RootState } from '../../store'\nimport { Season } from './Season'\nimport { Settings } from './Settings'\nimport { Show } from './Show'\nimport { Shows } from './Shows'\nimport { useSelector } from 'react-redux'\n\ntype AppProps = RouteComponentProps\n\nconst App = ({ match }: AppProps) => {\n  const { moviesCount, showsCount } = useSelector((state: RootState) => ({\n    moviesCount: Object.keys(state.movies).length,\n    showsCount: Object.keys(state.shows).length,\n  }))\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path={`${match.path}/`} exact component={Home} />\n        <Route path={`${match.path}/movies/:id`} exact component={Movie} />\n        <Route path={`${match.path}/movies`} component={Movies} />\n        <Route path={`${match.path}/shows/:id`} exact component={Show} />\n        <Route path={`${match.path}/shows`} component={Shows} />\n        <Route path={`${match.path}/seasons/:id`} exact component={Season} />\n        <Route path={`${match.path}/people/:id`} exact component={Person} />\n        <Route path={`${match.path}/settings`} exact component={Settings} />\n        <Route path={`${match.path}/find`} exact component={Find} />\n        <Route component={NotFound} />\n      </Switch>\n\n      <Nav\n        moviesDisabled={moviesCount === 0}\n        showsDisabled={showsCount === 0}\n      />\n    </div>\n  )\n}\n\nexport default App\n"],"sourceRoot":""}