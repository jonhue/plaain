{"version":3,"sources":["store/auth/types.ts","types/providers/Provider.ts","types/items/Item.ts","components/icons/Nucleo/OneDriveIcon.tsx","util.tsx","store/ui/types.ts","types/items/Person.ts","components/icons/Icon.tsx","store/auth/actions.ts","types/Notification.ts","constants.ts","components/icons/SoundWaveIcon.tsx","views/Loading.tsx","services/auth/OneDrive.ts","services/auth/util.ts","store/auth/thunks.ts","types/files/videos/Video.ts","errors/AuthenticationFailure.ts","store/episodes/types.ts","store/movies/types.ts","store/seasons/types.ts","store/shows/types.ts","services/databases/util.ts","services/databases/TMDb/util.ts","views/NotFound.tsx","store/auth/selectors.ts","store/ui/actions.ts","hooks/auth.ts","errors/ProviderAlreadyExists.ts","i18n.ts","serviceWorkerRegistration.ts","components/icons/Nucleo/CloseIcon.tsx","components/Toast.tsx","components/notifications/APIErrorToast.tsx","components/notifications/AuthenticationFailureToast.tsx","components/notifications/CannotFindFileToast.tsx","components/notifications/GenericErrorToast.tsx","components/notifications/ProviderAlreadyExistsToast.tsx","components/notifications/NotificationsViewer.tsx","components/ScrollToTop.tsx","views/Welcome.tsx","views/index.tsx","reportWebVitals.ts","store/auth/reducers.ts","store/episodes/reducers.ts","store/movies/reducers.ts","store/seasons/reducers.ts","store/shows/reducers.ts","store/ui/reducers.ts","store/index.ts","index.tsx"],"names":["RedirectCacheOrigin","EXPECT_LOGIN_REDIRECT","EXPECT_SETUP_REDIRECT","HANDLED_REDIRECT","UPDATE_PROVIDER","UPDATE_VERSION","REMOVE_PROVIDER","ProviderKind","PROVIDER_KINDS","OneDrive","ItemKind","OneDriveIcon","Icon","className","x","y","width","height","fill","d","notUndefined","undefined","isInProgress","item","usage","progress","wasRecentlyWatched","thresh","lastWatched","Date","sortByNumber","items","getAttr","sort","a","b","sortByLastWatched","getTime","sortAlphabetically","splitHoursAndMinutes","t","duration","hours","Math","floor","minutes","buildBackdropUrl","backdropPath","buildTMDbImageUrl","FALLBACK_BACKDROP_URL","buildCoverUrl","posterPath","FALLBACK_COVER_URL","buildItemUrl","kind","Episode","seasonId","Movie","id","Person","Season","Show","buildFileDownloadUrl","file","downloadUrl","buildVideoType","type","M4V_EXTENSION","MP4_EXTENSION","buildVideoSize","buildCaptionSrcLang","caption","ISO6391","getCode","name","buildProviderKindName","buildProviderIcon","buildJobTitle","job","gender","Gender","Male","buildCommitId","sha","substring","ASYNC_BEGIN","ASYNC_END","ADD_NOTIFICATION","REMOVE_NOTIFICATION","Job","children","classNames","viewBox","xmlns","expectLoginRedirect","provider","payload","expectSetupRedirect","handledRedirect","updateProvider","removeProvider","NotificationKind","VERSION","RECENTLY_WATCHED_THRESHOLD","SoundWaveIcon","data-name","data-made-with","Loading","CLIENT_ID","process","SCOPES","buildAuthResponse","accessToken","expiresOn","token","validUntil","toISOString","silentLogIn","userAgentApplication","acquireTokenSilent","scopes","account","userName","popupLogIn","loginPopup","prompt","redirectLogIn","loginRedirect","performAuth","isMobile","auth","UserAgentApplication","clientId","AuthenticationFailure","authHandleRedirect","Promise","resolve","handleRedirectCallback","_","response","authHandleProvider","oneDriveAuthCall","setupAuthHandleProvider","authHandleRedirectHandleProvider","oneDriveAuthHandleRedirectCall","authHandleResponse","dispatch","updatedProvider","moviesPath","showsPath","setupAuthHandleResponse","getState","providersSelector","find","ProviderAlreadyExists","setupAuth","cache","setupAuthHandleRedirect","MKV_EXTENSION","WEBM_EXTENSION","Error","captureStackTrace","UPDATE_EPISODE","REMOVE_EPISODE","UPDATE_MOVIE","REMOVE_MOVIE","UPDATE_SEASON","REMOVE_SEASON","UPDATE_SHOW","REMOVE_SHOW","buildItemId","tmdbId","buildTrailerUrl","title","toLowerCase","replace","path","size","buildEpisode","showId","seasonNumber","showTmdbId","sources","captions","airDate","air_date","crew","number","episode_number","guestStars","guest_stars","summary","overview","stillPath","still_path","map","buildCastMember","buildCrewMember","filter","buildMovie","isAdult","adult","backdrop_path","budget","homepage","poster_path","releaseDate","release_date","revenue","runtime","cast","trailerUrl","buildGender","Unknown","Female","buildJob","Acting","Object","values","includes","character","rawGender","profilePath","profile_path","department","rawJob","buildSeason","showTitle","showBackdropPath","season_number","buildShow","episodeRunTime","episode_run_time","firstAirDate","first_air_date","lastAirDate","last_air_date","numberOfEpisodes","number_of_episodes","numberOfSeasons","number_of_seasons","NotFound","useTranslation","href","target","rel","to","providerSelector","state","providers","keys","asyncBegin","asyncEnd","addNotification","notification","removeNotification","useAuthRedirect","useDispatch","redirectCache","useSelector","useEffect","origin","Login","useSetupAuthRedirect","callback","useAsyncEffect","Setup","EN","LANGUAGES","resources","translation","de","en","i18next","use","initReactI18next","HttpApi","LanguageDetector","init","fallbackLng","supportedLngs","keySeparator","nsSeparator","interpolation","escapeValue","debug","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","CloseIcon","stroke","x1","y1","x2","y2","Toast","text","action","onClose","onClick","url","APIErrorToast","status","message","AuthenticationFailureToast","CannotFindFileToast","GenericErrorToast","ProviderAlreadyExistsToast","NotificationsViewer","notifications","ui","handleClose","useCallback","renderNotification","index","APIError","CannotFindFile","GenericError","length","ScrollToTop","pathname","useLocation","scrollTo","Welcome","App","lazy","Player","Base","isLoading","basename","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","version","rootReducer","combineReducers","episodes","episode","movies","movie","seasons","season","shows","show","persistedReducer","persistReducer","key","storage","whitelist","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","loading","persistor","persistStore","fallback","document","getElementById","URL","addEventListener","fetch","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.39ade09b.chunk.js","sourcesContent":["import {\n  Provider,\n  ProviderKindWithRedirect,\n} from '../../types/providers/Provider'\n\nexport const EXPECT_LOGIN_REDIRECT = 'EXPECT_LOGIN_REDIRECT'\nexport const EXPECT_SETUP_REDIRECT = 'EXPECT_SETUP_REDIRECT'\nexport const HANDLED_REDIRECT = 'HANDLED_REDIRECT'\nexport const UPDATE_PROVIDER = 'UPDATE_PROVIDER'\nexport const UPDATE_VERSION = 'UPDATE_VERSION'\nexport const REMOVE_PROVIDER = 'REMOVE_PROVIDER'\n\nexport enum RedirectCacheOrigin {\n  Login,\n  Setup,\n}\n\nexport type LoginRedirectCache = {\n  origin: typeof RedirectCacheOrigin.Login\n  provider: Provider\n}\n\nexport type SetupRedirectCache = {\n  origin: typeof RedirectCacheOrigin.Setup\n  kind: ProviderKindWithRedirect\n}\n\nexport type RedirectCache = LoginRedirectCache | SetupRedirectCache\n\nexport interface AuthState {\n  providers: {\n    [id: string]: Provider | undefined\n  }\n  redirectCache: RedirectCache | undefined\n  version: string\n}\n\ninterface ExpectLoginRedirectAction {\n  type: typeof EXPECT_LOGIN_REDIRECT\n  payload: {\n    provider: Provider\n  }\n}\n\ninterface ExpectSetupRedirectAction {\n  type: typeof EXPECT_SETUP_REDIRECT\n  payload: {\n    kind: ProviderKindWithRedirect\n  }\n}\n\ninterface HandledRedirectAction {\n  type: typeof HANDLED_REDIRECT\n}\n\ninterface UpdateProviderAction {\n  type: typeof UPDATE_PROVIDER\n  payload: {\n    provider: Provider\n  }\n}\n\ninterface UpdateVersionAction {\n  type: typeof UPDATE_VERSION\n  payload: {\n    version: string\n  }\n}\n\ninterface RemoveProviderAction {\n  type: typeof REMOVE_PROVIDER\n  payload: {\n    id: string\n  }\n}\n\nexport type AuthActionTypes =\n  | ExpectLoginRedirectAction\n  | ExpectSetupRedirectAction\n  | HandledRedirectAction\n  | UpdateProviderAction\n  | UpdateVersionAction\n  | RemoveProviderAction\n","import { OneDrive } from './OneDrive'\n\nexport enum ProviderKind {\n  OneDrive,\n}\n\nexport type ProviderKindWithRedirect = ProviderKind.OneDrive\n\nexport const PROVIDER_KINDS = [ProviderKind.OneDrive]\n\nexport interface IProvider {\n  kind: ProviderKind\n  id: string\n  name: string\n  moviesPath: string | undefined\n  showsPath: string | undefined\n}\n\nexport type Provider = OneDrive\n","import { Episode, EpisodeLike } from './Episode'\nimport { Movie, MovieLike } from './Movie'\nimport { Season, SeasonLike } from './Season'\nimport { Show, ShowLike } from './Show'\nimport { Caption } from '../files/captions/Caption'\nimport { Person } from './Person'\nimport { Video } from '../files/videos/Video'\n\nexport enum ItemKind {\n  Episode,\n  Movie,\n  Person,\n  Season,\n  Show,\n}\n\nexport interface Usage {\n  lastWatched: string | undefined\n  progress: number | undefined\n}\n\nexport interface IItem {\n  kind: ItemKind\n  id: string\n  tmdbId: number\n}\n\nexport interface IMediaItem extends IItem {\n  usage: Usage\n}\n\nexport interface IWatchableMediaItem extends IMediaItem {\n  sources: Video[]\n  captions: Caption[]\n}\n\nexport type Item = Episode | Movie | Person | Season | Show\n\nexport type ItemLike = Item | EpisodeLike | MovieLike | SeasonLike | ShowLike\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const OneDriveIcon = () => (\n  <Icon className=\"onedrive\" x={46} y={55} width={420} height={420}>\n    <title>OneDrive</title>\n    <path\n      fill=\"#ffffff\"\n      d=\"M187.086,257.178C195.2,215.782,232.1,184.2,275.5,184.2a90.068,90.068,0,0,1,67.023,29.858,75.786,75.786,0,0,1,21.951-3.221h.121A89.982,89.982,0,0,0,194.871,180.31a64.544,64.544,0,0,0-94.64,71.96,56.825,56.825,0,0,0,2.629,113.591h33.975a69.824,69.824,0,0,1,50.251-108.683ZM466,336.292a44.781,44.781,0,0,1-44.783,44.783h-226.6a54.43,54.43,0,1,1,0-108.859,55.073,55.073,0,0,1,6.266.379A74.656,74.656,0,0,1,337.454,232.6a61.279,61.279,0,0,1,88.4,55.053c0,1.375-.114,2.719-.205,4.078A44.787,44.787,0,0,1,466,336.292Z\"\n    />\n  </Icon>\n)\n","import { FALLBACK_BACKDROP_URL, FALLBACK_COVER_URL } from './constants'\nimport { FileProvider, VideoProvider } from './types/files/FileProvider'\nimport { Gender, Job } from './types/items/Person'\nimport { IMediaItem, Item, ItemKind } from './types/items/Item'\nimport { M4V_EXTENSION, MP4_EXTENSION, Video } from './types/files/videos/Video'\nimport { Caption } from './types/files/captions/Caption'\nimport ISO6391 from 'iso-639-1'\nimport { OneDriveIcon } from './components/icons/Nucleo/OneDriveIcon'\nimport { ProviderKind } from './types/providers/Provider'\nimport React from 'react'\nimport { TFunction } from 'i18next'\nimport { buildTMDbImageUrl } from './services/databases/TMDb/util'\n\nexport const notUndefined = <T extends unknown>(x: T | undefined): x is T =>\n  x !== undefined\n\nexport const isInProgress = (item: IMediaItem) =>\n  item.usage.progress !== undefined\n\nexport const wasRecentlyWatched = (item: IMediaItem, thresh: Date) =>\n  !isInProgress(item) &&\n  item.usage.lastWatched !== undefined &&\n  new Date(item.usage.lastWatched) > thresh\n\nexport const sortByNumber = <T extends unknown>(\n  items: T[],\n  getAttr: (item: T) => number,\n) => items.sort((a, b) => getAttr(a) - getAttr(b))\n\nexport const sortByLastWatched = <T extends IMediaItem>(items: T[]) =>\n  sortByNumber(items, (item) =>\n    item.usage.lastWatched !== undefined\n      ? -new Date(item.usage.lastWatched).getTime()\n      : 0,\n  )\n\nexport const sortAlphabetically = <T extends unknown>(\n  items: T[],\n  getAttr: (item: T) => string,\n) => items.sort((a, b) => (getAttr(a) < getAttr(b) ? -1 : 1))\n\nexport const splitHoursAndMinutes = (t: TFunction, duration: number) => {\n  const hours = Math.floor(duration / 60)\n  const minutes = duration % 60\n\n  return (\n    <>\n      {hours > 0 && hours + t('h')}\n      {hours !== 0 && minutes !== 0 ? ' ' : ''}\n      {minutes > 0 && minutes + t('m')}\n    </>\n  )\n}\n\nexport const buildBackdropUrl = (backdropPath: string | undefined) =>\n  backdropPath ? buildTMDbImageUrl(backdropPath) : FALLBACK_BACKDROP_URL\n\nexport const buildCoverUrl = (posterPath: string | undefined) =>\n  posterPath ? buildTMDbImageUrl(posterPath) : FALLBACK_COVER_URL\n\nexport const buildItemUrl = (item: Item): string => {\n  switch (item.kind) {\n    case ItemKind.Episode:\n      return `/app/seasons/${item.seasonId}`\n    case ItemKind.Movie:\n      return `/app/movies/${item.id}`\n    case ItemKind.Person:\n      return `/app/people/${item.id}`\n    case ItemKind.Season:\n      return `/app/seasons/${item.id}`\n    case ItemKind.Show:\n      return `/app/shows/${item.id}`\n  }\n}\n\nexport const buildFileDownloadUrl = (file: FileProvider): string => {\n  switch (file.kind) {\n    case ProviderKind.OneDrive:\n      return file.downloadUrl\n  }\n}\n\nexport const buildVideoType = (file: Video): string => {\n  switch (file.type) {\n    case M4V_EXTENSION:\n      return MP4_EXTENSION\n    default:\n      return file.type\n  }\n}\n\nexport const buildVideoSize = (file: VideoProvider): number => {\n  switch (file.kind) {\n    case ProviderKind.OneDrive:\n      return file.height\n  }\n}\n\nexport const buildCaptionSrcLang = (caption: Caption): string =>\n  ISO6391.getCode(caption.name)\n\nexport const buildProviderKindName = (kind: ProviderKind): string => {\n  switch (kind) {\n    case ProviderKind.OneDrive:\n      return 'OneDrive'\n  }\n}\n\nexport const buildProviderIcon = (kind: ProviderKind): JSX.Element => {\n  switch (kind) {\n    case ProviderKind.OneDrive:\n      return <OneDriveIcon />\n  }\n}\n\nexport const buildJobTitle = (\n  t: TFunction,\n  job: Job | undefined,\n  gender: Gender,\n): string => {\n  if (job === undefined) return t('Unknown')\n  if (gender === Gender.Male) return t(`JOB [M] ${job}`)\n  return t(`JOB [F] ${job}`)\n}\n\nexport const buildCommitId = (sha: string) => sha.substring(0, 7)\n","import { Notification } from '../../types/Notification'\n\nexport const ASYNC_BEGIN = 'ASYNC_BEGIN'\nexport const ASYNC_END = 'ASYNC_END'\nexport const ADD_NOTIFICATION = 'ADD_NOTIFICATION'\nexport const REMOVE_NOTIFICATION = 'REMOVE_NOTIFICATION'\n\nexport interface UIState {\n  isLoading: boolean\n  notifications: Notification[]\n}\n\ninterface AsyncBeginAction {\n  type: typeof ASYNC_BEGIN\n}\n\ninterface AsyncEndAction {\n  type: typeof ASYNC_END\n}\n\ninterface AddNotificationAction {\n  type: typeof ADD_NOTIFICATION\n  payload: {\n    notification: Notification\n  }\n}\n\ninterface RemoveNotificationAction {\n  type: typeof REMOVE_NOTIFICATION\n  payload: {\n    notification: Notification\n  }\n}\n\nexport type UIActionTypes =\n  | AsyncBeginAction\n  | AsyncEndAction\n  | AddNotificationAction\n  | RemoveNotificationAction\n","import { IItem, ItemKind } from './Item'\n\nexport enum Gender {\n  Female,\n  Male,\n  Unknown,\n}\n\nexport enum Job {\n  Acting = 'Acting',\n  Casting = 'Casting',\n  CostumeDesign = 'Costume Design',\n  Director = 'Director',\n  DirectorOfPhotography = 'Director of Photography',\n  ExecutiveProducer = 'Executive Producer',\n  Editor = 'Editor',\n  OriginalMusicComposer = 'Original Music Composer',\n  Producer = 'Producer',\n  Screenplay = 'Screenplay',\n  SoundDesigner = 'Sound Designer',\n  UnitProductionManager = 'Unit Production Manager',\n  Writer = 'Writer',\n}\n\ninterface IPerson extends IItem {\n  kind: typeof ItemKind.Person\n  name: string\n  gender: Gender\n  profilePath: string | undefined\n}\n\nexport interface AccPerson extends IPerson {\n  jobs: Job[] | undefined\n}\n\nexport interface Person extends IPerson {\n  job: Job | undefined\n}\n\nexport interface CastMember extends Person {\n  character: string\n}\n\nexport interface CrewMember extends Person {\n  department: string\n}\n","import './Icon.scss'\nimport React, { FunctionComponent } from 'react'\nimport classNames from 'classnames'\n\ntype IconProps = {\n  className: string\n  height: number\n  width: number\n  x?: number\n  y?: number\n}\n\nexport const Icon: FunctionComponent<IconProps> = ({\n  children,\n  className,\n  height,\n  width,\n  x,\n  y,\n}) => (\n  <svg\n    className={classNames('Icon', className)}\n    viewBox={`${x || 0} ${y || 0} ${width} ${height}`}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    {children}\n  </svg>\n)\n","import {\n  AuthActionTypes,\n  EXPECT_LOGIN_REDIRECT,\n  EXPECT_SETUP_REDIRECT,\n  HANDLED_REDIRECT,\n  REMOVE_PROVIDER,\n  UPDATE_PROVIDER,\n  UPDATE_VERSION,\n} from './types'\nimport {\n  Provider,\n  ProviderKindWithRedirect,\n} from '../../types/providers/Provider'\n\nexport const expectLoginRedirect = (provider: Provider): AuthActionTypes => ({\n  type: EXPECT_LOGIN_REDIRECT,\n  payload: {\n    provider,\n  },\n})\n\nexport const expectSetupRedirect = (\n  kind: ProviderKindWithRedirect,\n): AuthActionTypes => ({\n  type: EXPECT_SETUP_REDIRECT,\n  payload: {\n    kind,\n  },\n})\n\nexport const handledRedirect = (): AuthActionTypes => ({\n  type: HANDLED_REDIRECT,\n})\n\nexport const updateProvider = (provider: Provider): AuthActionTypes => ({\n  type: UPDATE_PROVIDER,\n  payload: {\n    provider,\n  },\n})\n\nexport const updateVersion = (version: string): AuthActionTypes => ({\n  type: UPDATE_VERSION,\n  payload: { version },\n})\n\nexport const removeProvider = (id: string): AuthActionTypes => ({\n  type: REMOVE_PROVIDER,\n  payload: { id },\n})\n","import { Provider, ProviderKind } from './providers/Provider'\nimport { File } from './files/File'\n\nexport enum NotificationKind {\n  APIError,\n  AuthenticationFailure,\n  CannotFindFile,\n  GenericError,\n  ProviderAlreadyExists,\n}\n\nexport interface APIError {\n  kind: NotificationKind.APIError\n  status: number\n  message: string | undefined\n}\n\nexport interface AuthenticationFailure {\n  kind: NotificationKind.AuthenticationFailure\n  provider: ProviderKind\n}\n\nexport interface CannotFindFile {\n  kind: NotificationKind.CannotFindFile\n  file: File\n}\n\nexport interface GenericError {\n  kind: NotificationKind.GenericError\n  error: Error\n}\n\nexport interface ProviderAlreadyExists {\n  kind: NotificationKind.ProviderAlreadyExists\n  provider: Provider\n}\n\nexport type Notification =\n  | APIError\n  | AuthenticationFailure\n  | CannotFindFile\n  | GenericError\n  | ProviderAlreadyExists\n","export const VERSION = '0.1.0'\n\nexport const RECENTLY_WATCHED_THRESHOLD = new Date(0)\n\nexport const FALLBACK_BACKDROP_URL = '/fallback_backdrop.png'\nexport const FALLBACK_COVER_URL = '/fallback_cover.png'\n","import './SoundWaveIcon.scss'\nimport { Icon } from './Icon'\nimport React from 'react'\n\nexport const SoundWaveIcon = () => (\n  <Icon className=\"SoundWave\" width={1704.01} height={1653.92}>\n    <defs>\n      <style>{`.cls-1,.cls-2{fill:none;stroke:#ff2fc1;stroke-miterlimit:10;}.cls-1{stroke-width:200px;}.cls-2{stroke-width:250px;}`}</style>\n    </defs>\n    <title>Plaain</title>\n    <g id=\"Layer_2\" data-name=\"Layer 2\">\n      <g id=\"Layer_1-2\" data-name=\"Layer 1\">\n        <path className=\"cls-1 USOQBrWX_0\" d=\"M1782.69,418\"></path>\n        <path\n          className=\"cls-2 USOQBrWX_1\"\n          d=\"M104.1,1202.51c184.48,277.54,285.43,342.7,342.94,323.23,171.43-58,12.92-887.15,146.05-917C628,601,693.91,681.44,825.78,842.41c120.88,147.54,205.58,274.72,275.7,258.17,23.24-5.49,47.24-38,19-470.06-17.29-265-42.4-499,1.49-505.44l.5-.06a5.54,5.54,0,0,1,.84,0c32.94,2.1,216.4,317,216.4,317,48.91,83.57,136.81,186.52,307.88,272.95\"\n        ></path>\n      </g>\n    </g>\n    <style data-made-with=\"vivus-instant\">{`.USOQBrWX_0{stroke-dasharray:0 2;stroke-dashoffset:1;animation:USOQBrWX_draw_0 950ms ease-in-out 0ms infinite,USOQBrWX_fade 950ms linear 0ms infinite;}.USOQBrWX_1{stroke-dasharray:3975 3977;stroke-dashoffset:3976;animation:USOQBrWX_draw_1 950ms ease-in-out 0ms infinite,USOQBrWX_fade 950ms linear 0ms infinite;}@keyframes USOQBrWX_draw{100%{stroke-dashoffset:0;}}@keyframes USOQBrWX_fade{0%{stroke-opacity:1;}78.94736842105263%{stroke-opacity:1;}100%{stroke-opacity:0;}}@keyframes USOQBrWX_draw_0{0%{stroke-dashoffset: 1}52.63157894736842%{ stroke-dashoffset: 0;}100%{ stroke-dashoffset: 0;}}@keyframes USOQBrWX_draw_1{26.31578947368421%{stroke-dashoffset: 3976}78.94736842105263%{ stroke-dashoffset: 0;}100%{ stroke-dashoffset: 0;}}`}</style>\n  </Icon>\n)\n","import './Loading.scss'\nimport React from 'react'\nimport { SoundWaveIcon } from '../components/icons/SoundWaveIcon'\n\nexport const Loading = () => (\n  <div className=\"Loading\">\n    <div className=\"Loading__wrapper\">\n      <SoundWaveIcon />\n    </div>\n  </div>\n)\n","import { AuthenticationFailure } from '../../errors/AuthenticationFailure'\nimport { OneDrive } from '../../types/providers/OneDrive'\nimport { OneDriveAuthResponse } from './types'\nimport { ProviderKind } from '../../types/providers/Provider'\nimport { UserAgentApplication } from 'msal'\nimport { buildAuthId } from './util'\nimport { isMobile } from 'react-device-detect'\n\nconst CLIENT_ID = process.env.REACT_APP_MICROSOFT_CLIENT_ID!\nconst SCOPES = ['user.read', 'files.read.all']\n\nconst buildAuthResponse = (\n  accessToken: string,\n  name: string,\n  expiresOn: Date,\n): OneDriveAuthResponse => ({\n  kind: ProviderKind.OneDrive,\n  accessToken: { token: accessToken, validUntil: expiresOn.toISOString() },\n  id: buildAuthId(ProviderKind.OneDrive, name),\n  name,\n})\n\nconst silentLogIn = async (\n  userAgentApplication: UserAgentApplication,\n): Promise<OneDriveAuthResponse> => {\n  const {\n    accessToken,\n    account,\n    expiresOn,\n  } = await userAgentApplication.acquireTokenSilent({\n    scopes: SCOPES,\n  })\n  return buildAuthResponse(accessToken, account.userName, expiresOn)\n}\n\nconst popupLogIn = async (\n  userAgentApplication: UserAgentApplication,\n): Promise<OneDriveAuthResponse> => {\n  await userAgentApplication.loginPopup({\n    scopes: SCOPES,\n    prompt: 'select_account',\n  })\n  return silentLogIn(userAgentApplication)\n}\n\nconst redirectLogIn = (userAgentApplication: UserAgentApplication) =>\n  userAgentApplication.loginRedirect({\n    scopes: SCOPES,\n    prompt: 'select_account',\n  })\n\nconst performAuth = async (\n  userAgentApplication: UserAgentApplication,\n): Promise<OneDriveAuthResponse | void> => {\n  try {\n    return await silentLogIn(userAgentApplication)\n  } catch (error: unknown) {\n    return isMobile\n      ? redirectLogIn(userAgentApplication)\n      : await popupLogIn(userAgentApplication)\n  }\n}\n\nexport const auth = async (\n  provider: OneDrive | undefined,\n): Promise<OneDriveAuthResponse | void> => {\n  if (\n    provider !== undefined &&\n    new Date(provider.accessToken.validUntil) > new Date()\n  )\n    return provider\n\n  const userAgentApplication = new UserAgentApplication({\n    auth: {\n      clientId: CLIENT_ID,\n    },\n  })\n\n  try {\n    return await performAuth(userAgentApplication)\n  } catch (error: unknown) {\n    throw new AuthenticationFailure(ProviderKind.OneDrive)\n  }\n}\n\nexport const authHandleRedirect = async (): Promise<OneDriveAuthResponse> => {\n  const userAgentApplication = new UserAgentApplication({\n    auth: {\n      clientId: CLIENT_ID,\n    },\n  })\n\n  return new Promise<OneDriveAuthResponse>((resolve) => {\n    userAgentApplication.handleRedirectCallback((_, response) => {\n      if (response === undefined)\n        throw new AuthenticationFailure(ProviderKind.OneDrive)\n      resolve(\n        buildAuthResponse(\n          response.accessToken,\n          response.account.userName,\n          response.expiresOn,\n        ),\n      )\n    })\n  })\n}\n","import { ProviderKind } from '../../types/providers/Provider'\n\nexport const buildAuthId = (kind: ProviderKind, id: string) => `${kind}@${id}`\n","import { LoginRedirectCache, SetupRedirectCache } from './types'\nimport {\n  Provider,\n  ProviderKind,\n  ProviderKindWithRedirect,\n} from '../../types/providers/Provider'\nimport {\n  expectLoginRedirect,\n  expectSetupRedirect,\n  handledRedirect,\n  updateProvider,\n} from './actions'\nimport {\n  auth as oneDriveAuthCall,\n  authHandleRedirect as oneDriveAuthHandleRedirectCall,\n} from '../../services/auth/OneDrive'\nimport { AppThunk } from '../index'\nimport { AuthResponse } from '../../services/auth/types'\nimport { ProviderAlreadyExists } from '../../errors/ProviderAlreadyExists'\nimport { providersSelector } from './selectors'\n\nconst authHandleProvider = (\n  provider: Provider,\n): Promise<AuthResponse | void> => {\n  switch (provider.kind) {\n    case ProviderKind.OneDrive:\n      return oneDriveAuthCall(provider)\n  }\n}\n\nconst setupAuthHandleProvider = (\n  kind: ProviderKind,\n): Promise<AuthResponse | void> => {\n  switch (kind) {\n    case ProviderKind.OneDrive:\n      return oneDriveAuthCall(undefined)\n  }\n}\n\nconst authHandleRedirectHandleProvider = (\n  kind: ProviderKindWithRedirect,\n): Promise<AuthResponse> => {\n  switch (kind) {\n    case ProviderKind.OneDrive:\n      return oneDriveAuthHandleRedirectCall()\n  }\n}\n\nconst authHandleResponse = (\n  provider: Provider,\n  response: AuthResponse,\n): AppThunk<Promise<Provider>> => async (dispatch) => {\n  const updatedProvider = {\n    ...response,\n    moviesPath: provider.moviesPath,\n    showsPath: provider.showsPath,\n  }\n  dispatch(updateProvider(updatedProvider))\n  return updatedProvider\n}\n\nexport const auth = (\n  provider: Provider,\n): AppThunk<Promise<Provider | undefined>> => async (dispatch) => {\n  const response = await authHandleProvider(provider)\n  if (response === undefined) {\n    dispatch(expectLoginRedirect(provider))\n    return\n  }\n  return dispatch(authHandleResponse(provider, response))\n}\n\nconst setupAuthHandleResponse = (\n  kind: ProviderKind,\n  response: AuthResponse,\n): AppThunk<Promise<AuthResponse>> => async (_, getState) => {\n  const { auth } = getState()\n  const provider = providersSelector(auth).find(\n    (provider) => provider.kind === kind && provider.name === response.name,\n  )\n  if (provider !== undefined) throw new ProviderAlreadyExists(provider)\n  return response\n}\n\nexport const setupAuth = (\n  kind: ProviderKind,\n): AppThunk<Promise<AuthResponse | undefined>> => async (dispatch) => {\n  const response = await setupAuthHandleProvider(kind)\n  if (response === undefined) {\n    dispatch(expectSetupRedirect(kind))\n    return\n  }\n  return dispatch(setupAuthHandleResponse(kind, response))\n}\n\nexport const authHandleRedirect = (\n  cache: LoginRedirectCache,\n): AppThunk<Promise<Provider>> => async (dispatch) => {\n  const response = await authHandleRedirectHandleProvider(cache.provider.kind)\n  dispatch(handledRedirect())\n  return dispatch(authHandleResponse(cache.provider, response))\n}\n\nexport const setupAuthHandleRedirect = (\n  cache: SetupRedirectCache,\n): AppThunk<Promise<AuthResponse>> => async (dispatch) => {\n  const response = await authHandleRedirectHandleProvider(cache.kind)\n  dispatch(handledRedirect())\n  return dispatch(setupAuthHandleResponse(cache.kind, response))\n}\n","import { FileKind, IFile } from '../File'\nimport { VideoProvider } from '../FileProvider'\n\nexport const MP4_EXTENSION = 'mp4'\nexport const M4V_EXTENSION = 'm4v'\nexport const MKV_EXTENSION = 'mkv'\nexport const WEBM_EXTENSION = 'webm'\n\nexport type VideoType =\n  | typeof MP4_EXTENSION\n  | typeof M4V_EXTENSION\n  | typeof MKV_EXTENSION\n  | typeof WEBM_EXTENSION\n\nexport interface Video extends IFile<VideoProvider> {\n  kind: typeof FileKind.Video\n  type: VideoType\n}\n","import { ProviderKind } from '../types/providers/Provider'\n\nexport class AuthenticationFailure extends Error {\n  provider: ProviderKind\n\n  constructor(provider: ProviderKind) {\n    super()\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, AuthenticationFailure)\n    }\n\n    this.name = 'AuthenticationFailure'\n    this.provider = provider\n  }\n}\n","import { Episode } from '../../types/items/Episode'\n\nexport const UPDATE_EPISODE = 'UPDATE_EPISODE'\nexport const REMOVE_EPISODE = 'REMOVE_EPISODE'\n\nexport interface EpisodesState {\n  [id: string]: Episode | undefined\n}\n\ninterface UpdateEpisodeAction {\n  type: typeof UPDATE_EPISODE\n  payload: {\n    episode: Episode\n  }\n}\n\ninterface RemoveEpisodeAction {\n  type: typeof REMOVE_EPISODE\n  payload: {\n    id: string\n  }\n}\n\nexport type EpisodesActionTypes = UpdateEpisodeAction | RemoveEpisodeAction\n","import { Movie } from '../../types/items/Movie'\n\nexport const UPDATE_MOVIE = 'UPDATE_MOVIE'\nexport const REMOVE_MOVIE = 'REMOVE_MOVIE'\n\nexport interface MoviesState {\n  [id: string]: Movie | undefined\n}\n\ninterface UpdateMovieAction {\n  type: typeof UPDATE_MOVIE\n  payload: {\n    movie: Movie\n  }\n}\n\ninterface RemoveMovieAction {\n  type: typeof REMOVE_MOVIE\n  payload: {\n    id: string\n  }\n}\n\nexport type MoviesActionTypes = UpdateMovieAction | RemoveMovieAction\n","import { Season } from '../../types/items/Season'\n\nexport const UPDATE_SEASON = 'UPDATE_SEASON'\nexport const REMOVE_SEASON = 'REMOVE_SEASON'\n\nexport interface SeasonsState {\n  [id: string]: Season | undefined\n}\n\ninterface UpdateSeasonAction {\n  type: typeof UPDATE_SEASON\n  payload: {\n    season: Season\n  }\n}\n\ninterface RemoveSeasonAction {\n  type: typeof REMOVE_SEASON\n  payload: {\n    id: string\n  }\n}\n\nexport type SeasonsActionTypes = UpdateSeasonAction | RemoveSeasonAction\n","import { Show } from '../../types/items/Show'\n\nexport const UPDATE_SHOW = 'UPDATE_SHOW'\nexport const REMOVE_SHOW = 'REMOVE_SHOW'\n\nexport interface ShowsState {\n  [id: string]: Show | undefined\n}\n\ninterface UpdateShowAction {\n  type: typeof UPDATE_SHOW\n  payload: {\n    show: Show\n  }\n}\n\ninterface RemoveShowAction {\n  type: typeof REMOVE_SHOW\n  payload: {\n    id: string\n  }\n}\n\nexport type ShowsActionTypes = UpdateShowAction | RemoveShowAction\n","export const buildItemId = (tmdbId: number) => `TMDb@${tmdbId}`\n\nconst parametrize = (str: string) => str.toLowerCase().replace(/\\s/g, '+')\n\nexport const buildTrailerUrl = (title: string) =>\n  'https://www.youtube.com/results?search_query=' +\n  `${parametrize(title)}+official+trailer`\n","import {\n  CastMember,\n  CrewMember,\n  Gender,\n  Job,\n} from '../../../types/items/Person'\nimport {\n  CastResponse,\n  CrewResponse,\n  MovieCreditsResponse,\n  MovieDetailsResponse,\n  TVEpisodeResponse,\n  TVSeasonCreditsResponse,\n  TVSeasonDetailsResponse,\n  TVShowDetailsResponse,\n} from './types'\nimport { Episode, EpisodeLike } from '../../../types/items/Episode'\nimport { Movie, MovieLike } from '../../../types/items/Movie'\nimport { Season, SeasonLike } from '../../../types/items/Season'\nimport { Show, ShowLike } from '../../../types/items/Show'\nimport { buildItemId, buildTrailerUrl } from '../util'\nimport { ItemKind } from '../../../types/items/Item'\nimport { notUndefined } from '../../../util'\n\n// https://developers.themoviedb.org/3/getting-started/images\nexport const buildTMDbImageUrl = (path: string, size = 'original') =>\n  `https://image.tmdb.org/t/p/${size}${path}`\n\nexport const buildEpisode = (\n  showId: string,\n  seasonId: string,\n  { seasonNumber, showTmdbId, sources, captions, usage }: EpisodeLike,\n  {\n    air_date: airDate,\n    crew,\n    episode_number: number,\n    guest_stars: guestStars,\n    name: title,\n    overview: summary,\n    id: tmdbId,\n    still_path: stillPath,\n  }: TVEpisodeResponse,\n): Episode => ({\n  kind: ItemKind.Episode,\n  id: buildItemId(tmdbId),\n  tmdbId,\n  number,\n  title,\n  seasonId,\n  seasonNumber,\n  showId,\n  showTmdbId,\n  summary,\n  airDate: new Date(airDate).toISOString(),\n  stillPath,\n  guestStars: guestStars.map(buildCastMember),\n  crew: crew.map(buildCrewMember).filter(notUndefined),\n  sources,\n  captions,\n  usage,\n})\n\nexport const buildMovie = (\n  { sources, captions, usage }: MovieLike,\n  {\n    adult: isAdult,\n    backdrop_path: backdropPath,\n    budget,\n    homepage,\n    id: tmdbId,\n    overview: summary,\n    poster_path: posterPath,\n    release_date: releaseDate,\n    revenue,\n    runtime: duration,\n    title,\n  }: MovieDetailsResponse,\n  { cast, crew }: MovieCreditsResponse,\n): Movie => ({\n  kind: ItemKind.Movie,\n  id: buildItemId(tmdbId),\n  tmdbId,\n  title,\n  summary,\n  duration,\n  releaseDate: new Date(releaseDate).toISOString(),\n  isAdult,\n  budget,\n  revenue,\n  homepage,\n  posterPath,\n  backdropPath,\n  trailerUrl: buildTrailerUrl(title),\n  cast: cast.map(buildCastMember),\n  crew: crew.map(buildCrewMember).filter(notUndefined),\n  sources,\n  captions,\n  usage,\n})\n\nconst buildGender = (gender: number | undefined): Gender => {\n  switch (gender) {\n    case 0:\n      return Gender.Unknown\n    case 1:\n      return Gender.Female\n    case 2:\n      return Gender.Male\n    default:\n      return Gender.Unknown\n  }\n}\n\nconst buildJob = (job?: string): Job | undefined => {\n  if (job === undefined) return Job.Acting\n\n  if (Object.values(Job).includes(job as Job)) return job as Job\n}\n\nexport const buildCastMember = ({\n  character,\n  gender: rawGender,\n  id: tmdbId,\n  name,\n  profile_path: profilePath,\n}: CastResponse): CastMember => {\n  const gender = buildGender(rawGender)\n  const job = buildJob()\n\n  return {\n    kind: ItemKind.Person,\n    id: buildItemId(tmdbId),\n    tmdbId,\n    name,\n    gender,\n    profilePath,\n    job,\n    character,\n  }\n}\n\nexport const buildCrewMember = ({\n  department,\n  gender: rawGender,\n  id: tmdbId,\n  job: rawJob,\n  name,\n  profile_path: profilePath,\n}: CrewResponse): CrewMember | undefined => {\n  const gender = buildGender(rawGender)\n  const job = buildJob(rawJob)\n  if (job === undefined) return\n\n  return {\n    kind: ItemKind.Person,\n    id: buildItemId(tmdbId),\n    tmdbId,\n    name,\n    gender,\n    profilePath,\n    job,\n    department,\n  }\n}\n\nexport const buildSeason = (\n  { id: showId, title: showTitle, backdropPath: showBackdropPath }: Show,\n  { showTmdbId, usage }: SeasonLike,\n  {\n    air_date: airDate,\n    id: tmdbId,\n    name: title,\n    overview: summary,\n    poster_path: posterPath,\n    season_number: number,\n  }: TVSeasonDetailsResponse,\n  { cast, crew }: TVSeasonCreditsResponse,\n): Season => ({\n  kind: ItemKind.Season,\n  id: buildItemId(tmdbId),\n  tmdbId,\n  number,\n  title,\n  showId,\n  showTmdbId,\n  showTitle,\n  showBackdropPath,\n  summary,\n  airDate: new Date(airDate).toISOString(),\n  posterPath,\n  trailerUrl: buildTrailerUrl(`${showTitle} season ${number}`),\n  cast: cast.map(buildCastMember),\n  crew: crew.map(buildCrewMember).filter(notUndefined),\n  usage,\n})\n\nexport const buildShow = (\n  { usage }: ShowLike,\n  {\n    backdrop_path: backdropPath,\n    episode_run_time: episodeRunTime,\n    first_air_date: firstAirDate,\n    homepage,\n    id: tmdbId,\n    last_air_date: lastAirDate,\n    name: title,\n    number_of_episodes: numberOfEpisodes,\n    number_of_seasons: numberOfSeasons,\n    overview: summary,\n    poster_path: posterPath,\n  }: TVShowDetailsResponse,\n): Show => ({\n  kind: ItemKind.Show,\n  id: buildItemId(tmdbId),\n  tmdbId,\n  title,\n  summary,\n  episodeRunTime,\n  firstAirDate: new Date(firstAirDate).toISOString(),\n  lastAirDate: new Date(lastAirDate).toISOString(),\n  homepage,\n  numberOfEpisodes,\n  numberOfSeasons,\n  posterPath,\n  backdropPath,\n  usage,\n})\n","import './NotFound.scss'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\n\nexport const NotFound = () => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"NotFound\">\n      <h2>{t('You want to get lost?')}</h2>\n      <p>\n        <Trans>\n          This path went astray... If you do want to get lost, we recommend{' '}\n          <a\n            href=\"https://www.imdb.com/title/tt6969502/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Get Lost!\n          </a>{' '}\n          by Mirjam de With.\n        </Trans>\n      </p>\n      <p>\n        <Trans>\n          If all you&apos;re looking for is to get back on track: you can{' '}\n          <Link to=\"/app\">find home this way</Link>.\n        </Trans>\n      </p>\n    </div>\n  )\n}\n","import { AuthState } from './types'\n\nexport const providerSelector = (id: string) => (state: AuthState) =>\n  state.providers[id]\n\nexport const providersSelector = (state: AuthState) =>\n  Object.keys(state.providers).map((id) => state.providers[id]!)\n","import {\n  ADD_NOTIFICATION,\n  ASYNC_BEGIN,\n  ASYNC_END,\n  REMOVE_NOTIFICATION,\n  UIActionTypes,\n} from './types'\nimport { Notification } from '../../types/Notification'\n\nexport const asyncBegin = (): UIActionTypes => ({\n  type: ASYNC_BEGIN,\n})\n\nexport const asyncEnd = (): UIActionTypes => ({\n  type: ASYNC_END,\n})\n\nexport const addNotification = (notification: Notification): UIActionTypes => ({\n  type: ADD_NOTIFICATION,\n  payload: { notification },\n})\n\nexport const removeNotification = (\n  notification: Notification,\n): UIActionTypes => ({\n  type: REMOVE_NOTIFICATION,\n  payload: { notification },\n})\n","import { AppDispatch, RootState } from '../store'\nimport {\n  authHandleRedirect,\n  setupAuthHandleRedirect,\n} from '../store/auth/thunks'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AuthResponse } from '../services/auth/types'\nimport { RedirectCacheOrigin } from '../store/auth/types'\nimport useAsyncEffect from 'use-async-effect'\nimport { useEffect } from 'react'\n\nexport const useAuthRedirect = () => {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const redirectCache = useSelector(\n    (state: RootState) => state.auth.redirectCache,\n  )\n\n  useEffect(() => {\n    if (\n      redirectCache === undefined ||\n      redirectCache.origin !== RedirectCacheOrigin.Login\n    )\n      return\n    dispatch(authHandleRedirect(redirectCache))\n  }, [])\n}\n\nexport const useSetupAuthRedirect = (\n  callback: (response: AuthResponse) => void,\n) => {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const redirectCache = useSelector(\n    (state: RootState) => state.auth.redirectCache,\n  )\n\n  useAsyncEffect(async () => {\n    if (\n      redirectCache === undefined ||\n      redirectCache.origin !== RedirectCacheOrigin.Setup\n    )\n      return\n    const response = await dispatch(setupAuthHandleRedirect(redirectCache))\n    callback(response)\n  }, [])\n}\n","import { Provider } from '../types/providers/Provider'\n\nexport class ProviderAlreadyExists extends Error {\n  provider: Provider\n\n  constructor(provider: Provider) {\n    super()\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ProviderAlreadyExists)\n    }\n\n    this.name = 'ProviderAlreadyExists'\n    this.provider = provider\n  }\n}\n","import HttpApi from 'i18next-http-backend'\nimport LanguageDetector from 'i18next-browser-languagedetector'\nimport de from './locales/de/translation.json'\nimport en from './locales/en/translation.json'\nimport i18next from 'i18next'\nimport { initReactI18next } from 'react-i18next'\n\nconst DE = 'de'\nconst EN = 'en'\nexport const LANGUAGES = [DE, EN]\n\nconst resources = {\n  [DE]: {\n    translation: de,\n  },\n  [EN]: {\n    translation: en,\n  },\n}\n\ni18next\n  .use(initReactI18next)\n  .use(HttpApi)\n  .use(LanguageDetector)\n  .init({\n    resources,\n    fallbackLng: EN,\n    supportedLngs: LANGUAGES,\n    keySeparator: false,\n    nsSeparator: false,\n    interpolation: {\n      escapeValue: false,\n    },\n    debug: process.env.NODE_ENV === 'development',\n  })\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const CloseIcon = () => (\n  <Icon className=\"e-remove\" width={24} height={24}>\n    <title>Remove</title>\n    <g fill=\"#ffffff\" stroke=\"#ffffff\">\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"19\" y1=\"5\" x2=\"5\" y2=\"19\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"19\" y1=\"19\" x2=\"5\" y2=\"5\" />\n    </g>\n  </Icon>\n)\n","import './Toast.scss'\nimport { CloseIcon } from './icons/Nucleo/CloseIcon'\nimport React from 'react'\n\ntype ToastProps = {\n  title: string\n  text: string\n  action?: {\n    text: string\n    url: string\n  }\n\n  onClose: () => void\n}\n\nexport const Toast = ({ title, text, action, onClose }: ToastProps) => (\n  <div className=\"Toast\">\n    <div className=\"Toast__header\">\n      <h2>{title}</h2>\n      <div className=\"Toast__header__close\" onClick={onClose}>\n        <CloseIcon />\n      </div>\n    </div>\n    <p>{text}</p>\n    {action && (\n      <a href={action.url} target=\"_blank\" rel=\"noopener noreferrer\">\n        {action.text}\n      </a>\n    )}\n  </div>\n)\n","import { APIError } from '../../types/Notification'\nimport React from 'react'\nimport { Toast } from '../Toast'\nimport { useTranslation } from 'react-i18next'\n\ntype APIErrorToastProps = {\n  notification: APIError\n\n  onClose: () => void\n}\n\nexport const APIErrorToast = ({\n  notification,\n  onClose,\n}: APIErrorToastProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <Toast\n      title={t('Error connecting to service')}\n      text={t(\n        \"Plaain wasn't able to connect to one of your services. Please report this incident. Status code: {{status}}. Message: {{message}}.\",\n        {\n          status: notification.status,\n          message: notification.message || t('None'),\n        },\n      )}\n      action={{\n        text: t('Report'),\n        url: 'https://github.com/jonhue/plaain/issues/new/choose',\n      }}\n      onClose={onClose}\n    />\n  )\n}\n","import { AuthenticationFailure } from '../../types/Notification'\nimport React from 'react'\nimport { Toast } from '../Toast'\nimport { buildProviderKindName } from '../../util'\nimport { useTranslation } from 'react-i18next'\n\ntype AuthenticationFailureToastProps = {\n  notification: AuthenticationFailure\n\n  onClose: () => void\n}\n\nexport const AuthenticationFailureToast = ({\n  notification,\n  onClose,\n}: AuthenticationFailureToastProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <Toast\n      title={t('Authentication unsuccessful')}\n      text={t(\n        \"Plaain wasn't able to authenticate with {{provider}}. Please report this error if it persists.\",\n        { provider: buildProviderKindName(notification.provider) },\n      )}\n      action={{\n        text: t('Report'),\n        url: 'https://github.com/jonhue/plaain/issues/new/choose',\n      }}\n      onClose={onClose}\n    />\n  )\n}\n","import { CannotFindFile } from '../../types/Notification'\nimport React from 'react'\nimport { Toast } from '../Toast'\nimport { buildProviderKindName } from '../../util'\nimport { useTranslation } from 'react-i18next'\n\ntype CannotFindFileToastProps = {\n  notification: CannotFindFile\n\n  onClose: () => void\n}\n\nexport const CannotFindFileToast = ({\n  notification,\n  onClose,\n}: CannotFindFileToastProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <Toast\n      title={t('Unable to locate file')}\n      text={t(\n        \"We weren't able to locate the file named {{name}} located in your {{provider}} provider.\",\n        {\n          name: notification.file.name,\n          provider: buildProviderKindName(notification.file.provider.kind),\n        },\n      )}\n      onClose={onClose}\n    />\n  )\n}\n","import { GenericError } from '../../types/Notification'\nimport React from 'react'\nimport { Toast } from '../Toast'\nimport { useTranslation } from 'react-i18next'\n\ntype GenericErrorToastProps = {\n  notification: GenericError\n\n  onClose: () => void\n}\n\nexport const GenericErrorToast = ({\n  notification,\n  onClose,\n}: GenericErrorToastProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <Toast\n      title={t('An error occurred')}\n      text={notification.error.message}\n      onClose={onClose}\n    />\n  )\n}\n","import { ProviderAlreadyExists } from '../../types/Notification'\nimport React from 'react'\nimport { Toast } from '../Toast'\nimport { buildProviderKindName } from '../../util'\nimport { useTranslation } from 'react-i18next'\n\ntype ProviderAlreadyExistsToastProps = {\n  notification: ProviderAlreadyExists\n\n  onClose: () => void\n}\n\nexport const ProviderAlreadyExistsToast = ({\n  notification,\n  onClose,\n}: ProviderAlreadyExistsToastProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <Toast\n      title={t('Provider already exists')}\n      text={t(\n        'You already linked your {{provider}} account {{name}} with Plaain. You can change your settings by clicking on the service in the authentication list on the settings page.',\n        {\n          name: notification.provider.name,\n          provider: buildProviderKindName(notification.provider.kind),\n        },\n      )}\n      onClose={onClose}\n    />\n  )\n}\n","import { Notification, NotificationKind } from '../../types/Notification'\nimport React, { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { APIErrorToast } from './APIErrorToast'\nimport { AuthenticationFailureToast } from './AuthenticationFailureToast'\nimport { CannotFindFileToast } from './CannotFindFileToast'\nimport { GenericErrorToast } from './GenericErrorToast'\nimport { ProviderAlreadyExistsToast } from './ProviderAlreadyExistsToast'\nimport { RootState } from '../../store'\nimport { removeNotification } from '../../store/ui/actions'\n\nexport const NotificationsViewer = () => {\n  const dispatch = useDispatch()\n\n  const notifications = useSelector(\n    (state: RootState) => state.ui.notifications,\n  )\n\n  const handleClose = useCallback(\n    (notification: Notification) => () =>\n      dispatch(removeNotification(notification)),\n    [dispatch],\n  )\n\n  const renderNotification = useCallback(\n    (notification: Notification, index: number): JSX.Element => {\n      switch (notification.kind) {\n        case NotificationKind.APIError:\n          return (\n            <APIErrorToast\n              notification={notification}\n              onClose={handleClose(notification)}\n              key={index}\n            />\n          )\n        case NotificationKind.AuthenticationFailure:\n          return (\n            <AuthenticationFailureToast\n              notification={notification}\n              onClose={handleClose(notification)}\n              key={index}\n            />\n          )\n        case NotificationKind.CannotFindFile:\n          return (\n            <CannotFindFileToast\n              notification={notification}\n              onClose={handleClose(notification)}\n              key={index}\n            />\n          )\n        case NotificationKind.GenericError:\n          return (\n            <GenericErrorToast\n              notification={notification}\n              onClose={handleClose(notification)}\n              key={index}\n            />\n          )\n        case NotificationKind.ProviderAlreadyExists:\n          return (\n            <ProviderAlreadyExistsToast\n              notification={notification}\n              onClose={handleClose(notification)}\n              key={index}\n            />\n          )\n      }\n    },\n    [handleClose],\n  )\n\n  return notifications.length > 0 ? (\n    <div className=\"NotificationsViewer\">\n      {notifications.map(renderNotification)}\n    </div>\n  ) : null\n}\n","import { useEffect } from 'react'\nimport { useLocation } from 'react-router'\n\nexport const ScrollToTop = () => {\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [pathname])\n\n  return null\n}\n","import './Welcome.scss'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nexport const Welcome = () => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"Welcome\">\n      <h1>{t('Your movies & TV shows. Anywhere.')}</h1>\n      <div className=\"Welcome__details\">\n        <h3>\n          {t(\n            'Plaain lets you stream and maintain your media library from anywhere. No server needed, no fee required.',\n          )}\n        </h3>\n        <Link to=\"/app\" className=\"button primary\">\n          {t('Launch')}\n        </Link>\n        <a\n          href=\"https://github.com/jonhue/plaain#getting-started\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"button\"\n        >\n          {t('How it works')}\n        </a>\n      </div>\n    </div>\n  )\n}\n","import React, { lazy } from 'react'\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom'\nimport { Loading } from './Loading'\nimport { NotFound } from './NotFound'\nimport { NotificationsViewer } from '../components/notifications/NotificationsViewer'\nimport { RootState } from '../store'\nimport { ScrollToTop } from '../components/ScrollToTop'\nimport { Welcome } from './Welcome'\nimport { useAuthRedirect } from '../hooks/auth'\nimport { useSelector } from 'react-redux'\n\nconst App = lazy(() => import('./app'))\nconst Player = lazy(() => import('./Player'))\n\nconst Base = () => {\n  useAuthRedirect()\n  const isLoading = useSelector((state: RootState) => state.ui.isLoading)\n\n  return (\n    <div className=\"Base\">\n      {isLoading && <Loading />}\n      <Router basename=\"/plaain\">\n        <ScrollToTop />\n        <Switch>\n          <Route path=\"/\" exact component={Welcome} />\n          <Route path=\"/app\" component={App} />\n          <Route path=\"/player\" exact component={Player} />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n\n      <NotificationsViewer />\n    </div>\n  )\n}\n\nexport default Base\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import {\n  AuthActionTypes,\n  AuthState,\n  EXPECT_LOGIN_REDIRECT,\n  EXPECT_SETUP_REDIRECT,\n  HANDLED_REDIRECT,\n  REMOVE_PROVIDER,\n  RedirectCacheOrigin,\n  UPDATE_PROVIDER,\n  UPDATE_VERSION,\n} from './types'\nimport { VERSION } from '../../constants'\n\nconst initialState: AuthState = {\n  providers: {},\n  redirectCache: undefined,\n  version: VERSION,\n}\n\nexport default (state = initialState, action: AuthActionTypes): AuthState => {\n  switch (action.type) {\n    case EXPECT_LOGIN_REDIRECT:\n      return {\n        ...state,\n        redirectCache: {\n          origin: RedirectCacheOrigin.Login,\n          provider: action.payload.provider,\n        },\n      }\n    case EXPECT_SETUP_REDIRECT:\n      return {\n        ...state,\n        redirectCache: {\n          origin: RedirectCacheOrigin.Setup,\n          kind: action.payload.kind,\n        },\n      }\n    case HANDLED_REDIRECT:\n      return {\n        ...state,\n        redirectCache: undefined,\n      }\n    case UPDATE_PROVIDER:\n      return {\n        ...state,\n        providers: {\n          ...state.providers,\n          [action.payload.provider.id]: action.payload.provider,\n        },\n      }\n    case UPDATE_VERSION:\n      return {\n        ...state,\n        version: action.payload.version,\n      }\n    case REMOVE_PROVIDER:\n      const { [action.payload.id]: provider, ...providers } = state.providers\n\n      return {\n        ...state,\n        providers,\n      }\n    default:\n      return state\n  }\n}\n","import {\n  EpisodesActionTypes,\n  EpisodesState,\n  REMOVE_EPISODE,\n  UPDATE_EPISODE,\n} from './types'\n\nconst initialState: EpisodesState = {}\n\nexport default (\n  state = initialState,\n  action: EpisodesActionTypes,\n): EpisodesState => {\n  switch (action.type) {\n    case UPDATE_EPISODE:\n      return { ...state, [action.payload.episode.id]: action.payload.episode }\n    case REMOVE_EPISODE:\n      const { [action.payload.id]: episode, ...episodes } = state\n\n      return episodes\n    default:\n      return state\n  }\n}\n","import {\n  MoviesActionTypes,\n  MoviesState,\n  REMOVE_MOVIE,\n  UPDATE_MOVIE,\n} from './types'\n\nconst initialState: MoviesState = {}\n\nexport default (\n  state = initialState,\n  action: MoviesActionTypes,\n): MoviesState => {\n  switch (action.type) {\n    case UPDATE_MOVIE:\n      return { ...state, [action.payload.movie.id]: action.payload.movie }\n    case REMOVE_MOVIE:\n      const { [action.payload.id]: movie, ...movies } = state\n\n      return movies\n    default:\n      return state\n  }\n}\n","import {\n  REMOVE_SEASON,\n  SeasonsActionTypes,\n  SeasonsState,\n  UPDATE_SEASON,\n} from './types'\n\nconst initialState: SeasonsState = {}\n\nexport default (\n  state = initialState,\n  action: SeasonsActionTypes,\n): SeasonsState => {\n  switch (action.type) {\n    case UPDATE_SEASON:\n      return { ...state, [action.payload.season.id]: action.payload.season }\n    case REMOVE_SEASON:\n      const { [action.payload.id]: season, ...seasons } = state\n\n      return seasons\n    default:\n      return state\n  }\n}\n","import { REMOVE_SHOW, ShowsActionTypes, ShowsState, UPDATE_SHOW } from './types'\n\nconst initialState: ShowsState = {}\n\nexport default (state = initialState, action: ShowsActionTypes): ShowsState => {\n  switch (action.type) {\n    case UPDATE_SHOW:\n      return { ...state, [action.payload.show.id]: action.payload.show }\n    case REMOVE_SHOW:\n      const { [action.payload.id]: show, ...shows } = state\n\n      return shows\n    default:\n      return state\n  }\n}\n","import {\n  ADD_NOTIFICATION,\n  ASYNC_BEGIN,\n  ASYNC_END,\n  REMOVE_NOTIFICATION,\n  UIActionTypes,\n  UIState,\n} from './types'\n\nconst initialState: UIState = {\n  isLoading: false,\n  notifications: [],\n}\n\nexport default (state = initialState, action: UIActionTypes): UIState => {\n  switch (action.type) {\n    case ASYNC_BEGIN:\n      return {\n        ...state,\n        isLoading: true,\n      }\n    case ASYNC_END:\n      return {\n        ...state,\n        isLoading: false,\n      }\n    case ADD_NOTIFICATION:\n      return {\n        ...state,\n        notifications: [...state.notifications, action.payload.notification],\n      }\n    case REMOVE_NOTIFICATION:\n      return {\n        ...state,\n        notifications: state.notifications.filter(\n          (notification) => notification !== action.payload.notification,\n        ),\n      }\n    default:\n      return state\n  }\n}\n","import { Action, applyMiddleware, createStore } from 'redux'\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk'\nimport auth from './auth/reducers'\nimport { combineReducers } from 'redux'\nimport episodes from './episodes/reducers'\nimport movies from './movies/reducers'\nimport { persistReducer } from 'redux-persist'\nimport seasons from './seasons/reducers'\nimport shows from './shows/reducers'\nimport storage from 'redux-persist/lib/storage'\nimport thunk from 'redux-thunk'\nimport ui from './ui/reducers'\n\nconst rootReducer = combineReducers({\n  auth,\n  episodes,\n  movies,\n  seasons,\n  shows,\n  ui,\n})\n\nconst persistedReducer = persistReducer(\n  {\n    key: 'root',\n    storage: storage,\n    whitelist: ['auth', 'episodes', 'movies', 'seasons', 'shows'],\n    debug: process.env.NODE_ENV === 'development',\n  },\n  rootReducer,\n)\n\nexport default createStore(persistedReducer, applyMiddleware(thunk))\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport type AppThunk<ReturnType> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action\n>\n\nexport type AppDispatch = ThunkDispatch<RootState, unknown, Action>\n","import './i18n.ts'\nimport './index.scss'\nimport 'whatwg-fetch'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\nimport React, { Suspense } from 'react'\nimport Base from './views'\nimport { Loading } from './views/Loading'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { Provider } from 'react-redux'\nimport ReactDOM from 'react-dom'\nimport { persistStore } from 'redux-persist'\nimport reportWebVitals from './reportWebVitals'\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<Loading />} persistor={persistStore(store)}>\n        <Suspense fallback={<Loading />}>\n          <Base />\n        </Suspense>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log) // eslint-disable-line no-console\n"],"sourceRoot":""}