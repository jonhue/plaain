{"version":3,"sources":["types/providers/Provider.ts","views/NotFound.tsx","store/auth/selectors.ts","errors/CannotFindFileError.ts","hooks/auth.ts","services/drives/FTP/api.ts","errors/APIError.ts","store/auth/types.ts","i18n.ts","types/items/Item.ts","types/Notification.ts","components/icons/Nucleo/FTPIcon.tsx","components/icons/Nucleo/OneDriveIcon.tsx","util.tsx","serviceWorkerRegistration.ts","components/icons/Nucleo/CloseIcon.tsx","components/Toast.tsx","components/notifications/APIErrorToast.tsx","components/notifications/AuthenticationFailureToast.tsx","components/notifications/CannotFindFileToast.tsx","components/notifications/GenericErrorToast.tsx","components/notifications/ProviderAlreadyExistsToast.tsx","components/notifications/NotificationsViewer.tsx","components/ScrollToTop.tsx","views/Welcome.tsx","views/index.tsx","reportWebVitals.ts","store/auth/reducers.ts","store/episodes/reducers.ts","store/movies/reducers.ts","store/seasons/reducers.ts","store/shows/reducers.ts","store/ui/reducers.ts","store/index.ts","index.tsx","store/ui/types.ts","errors/AuthenticationFailure.ts","types/items/Person.ts","components/icons/Icon.tsx","store/auth/actions.ts","store/ui/actions.ts","constants.ts","components/icons/SoundWaveIcon.tsx","views/Loading.tsx","errors/ProviderAlreadyExists.ts","store/ui/thunks.ts","errors/index.ts","services/auth/util.ts","services/auth/OneDrive.ts","services/auth/FTP.ts","store/auth/thunks.ts","types/files/Video.ts","store/episodes/types.ts","store/movies/types.ts","store/seasons/types.ts","store/shows/types.ts","services/databases/util.ts","services/databases/TMDb/util.ts"],"names":["ProviderKind","PROVIDER_KINDS","OneDrive","FTP","NotFound","t","useTranslation","className","href","target","rel","to","providerSelector","id","state","providers","providersSelector","Object","keys","map","CannotFindFileError","file","Error","captureStackTrace","name","useAuthRedirect","dispatch","useDispatch","redirectCache","useSelector","auth","useEffect","undefined","origin","RedirectCacheOrigin","Login","load","authHandleRedirect","handledRedirect","useSetupAuthRedirect","callback","useAsyncEffect","a","Setup","setupAuthHandleRedirect","response","getClient","host","port","user","password","secure","client","Client","access","fetchItems","path","list","fetchItem","dirPath","split","filename","pop","join","files","find","APIError","status","message","EXPECT_LOGIN_REDIRECT","EXPECT_SETUP_REDIRECT","HANDLED_REDIRECT","UPDATE_PROVIDER","UPDATE_VERSION","REMOVE_PROVIDER","EN","LANGUAGES","resources","translation","de","en","i18next","use","initReactI18next","HttpApi","LanguageDetector","init","fallbackLng","supportedLngs","keySeparator","nsSeparator","interpolation","escapeValue","debug","process","ItemKind","NotificationKind","FTPIcon","Icon","x","y","width","height","d","fill","OneDriveIcon","notUndefined","isInProgress","item","usage","progress","wasRecentlyWatched","thresh","lastWatched","Date","sortByNumber","items","getAttr","sort","b","sortByLastWatched","getTime","sortAlphabetically","splitHoursAndMinutes","duration","hours","Math","floor","minutes","buildBackdropUrl","backdropPath","buildTMDbImageUrl","FALLBACK_BACKDROP_URL","buildCoverUrl","posterPath","FALLBACK_COVER_URL","buildItemUrl","kind","Episode","seasonId","Movie","Person","Season","Show","buildFileDownloadUrl","provider","username","fileName","downloadUrl","buildVideoType","type","M4V_EXTENSION","MP4_EXTENSION","buildVideoSize","buildCaptionSrcLang","caption","ISO6391","getCode","buildProviderKindName","buildProviderIcon","buildJobTitle","job","gender","Gender","Male","buildCommitId","sha","substring","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","CloseIcon","stroke","x1","y1","x2","y2","Toast","title","text","action","onClose","onClick","url","APIErrorToast","notification","AuthenticationFailureToast","CannotFindFileToast","GenericErrorToast","ProviderAlreadyExistsToast","NotificationsViewer","notifications","ui","handleClose","useCallback","removeNotification","renderNotification","index","AuthenticationFailure","CannotFindFile","GenericError","ProviderAlreadyExists","length","ScrollToTop","pathname","useLocation","scrollTo","Welcome","App","lazy","Player","Base","isLoading","Loading","basename","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","version","VERSION","rootReducer","combineReducers","payload","episodes","UPDATE_EPISODE","episode","REMOVE_EPISODE","movies","UPDATE_MOVIE","movie","REMOVE_MOVIE","seasons","UPDATE_SEASON","season","REMOVE_SEASON","shows","UPDATE_SHOW","show","REMOVE_SHOW","ASYNC_BEGIN","ASYNC_END","ADD_NOTIFICATION","REMOVE_NOTIFICATION","filter","persistedReducer","persistReducer","key","storage","whitelist","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","loading","persistor","persistStore","fallback","document","getElementById","URL","addEventListener","fetch","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","Job","children","classNames","viewBox","xmlns","expectLoginRedirect","expectSetupRedirect","updateProvider","removeProvider","asyncBegin","asyncEnd","addNotification","RECENTLY_WATCHED_THRESHOLD","SoundWaveIcon","fn","result","buildAuthId","CLIENT_ID","SCOPES","buildAuthResponse","accessToken","account","expiresOn","token","validUntil","toISOString","silentLogIn","app","acquireTokenSilent","scopes","newAccount","popupLogIn","loginPopup","redirectLogIn","loginRedirect","interactiveLogIn","onRedirect","isMobile","performAuth","InteractionRequiredAuthError","PublicClientApplication","clientId","handleRedirectPromise","authHandleProvider","ftpAuthCall","oneDriveAuthCall","setupAuthHandleProvider","authHandleRedirectHandleProvider","oneDriveAuthHandleRedirectCall","authHandleResponse","updatedProvider","moviesPath","showsPath","setupAuthHandleResponse","_","getState","setupAuth","cache","MKV_EXTENSION","WEBM_EXTENSION","buildItemId","tmdbId","buildTrailerUrl","toLowerCase","replace","size","buildEpisode","showId","seasonNumber","showTmdbId","sources","captions","airDate","air_date","crew","number","episode_number","guestStars","guest_stars","summary","overview","stillPath","still_path","buildCastMember","buildCrewMember","buildMovie","isAdult","adult","backdrop_path","budget","homepage","poster_path","releaseDate","release_date","revenue","runtime","cast","trailerUrl","buildGender","Unknown","Female","buildJob","Acting","values","includes","character","rawGender","profilePath","profile_path","department","rawJob","buildSeason","showTitle","showBackdropPath","season_number","buildShow","episodeRunTime","episode_run_time","firstAirDate","first_air_date","lastAirDate","last_air_date","numberOfEpisodes","number_of_episodes","numberOfSeasons","number_of_seasons"],"mappings":"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","file":"static/js/main.d4fc21c2.chunk.js","sourcesContent":["import { FTP } from './FTP'\nimport { OneDrive } from './OneDrive'\n\nexport enum ProviderKind {\n  FTP,\n  OneDrive,\n}\n\nexport type ProviderKindWithRedirect = ProviderKind.OneDrive\n\nexport const PROVIDER_KINDS = [ProviderKind.OneDrive, ProviderKind.FTP]\n\nexport interface IProvider {\n  kind: ProviderKind\n  id: string\n  name: string\n  moviesPath: string | undefined\n  showsPath: string | undefined\n}\n\nexport type Provider = FTP | OneDrive\n\nexport type ProviderWithRedirect = Provider & { kind: ProviderKindWithRedirect }\n","import './NotFound.scss'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\n\nexport const NotFound = () => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"NotFound\">\n      <h2>{t('You want to get lost?')}</h2>\n      <p>\n        <Trans>\n          This path went astray... If you do want to get lost, we recommend{' '}\n          <a\n            href=\"https://www.imdb.com/title/tt6969502/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Get Lost!\n          </a>{' '}\n          by Mirjam de With.\n        </Trans>\n      </p>\n      <p>\n        <Trans>\n          If all you&apos;re looking for is to get back on track: you can{' '}\n          <Link to=\"/app\">find home this way</Link>.\n        </Trans>\n      </p>\n    </div>\n  )\n}\n","import { AuthState } from './types'\n\nexport const providerSelector = (id: string) => (state: AuthState) =>\n  state.providers[id]\n\nexport const providersSelector = (state: AuthState) =>\n  Object.keys(state.providers).map((id) => state.providers[id]!)\n","import { File } from '../types/files/File'\n\nexport class CannotFindFileError extends Error {\n  file: File\n\n  constructor(file: File) {\n    super()\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CannotFindFileError)\n    }\n\n    this.name = 'CannotFindFileError'\n    this.file = file\n  }\n}\n","import { AppDispatch, RootState } from '../store'\nimport {\n  authHandleRedirect,\n  setupAuthHandleRedirect,\n} from '../store/auth/thunks'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AuthResponse } from '../services/auth/types'\nimport { RedirectCacheOrigin } from '../store/auth/types'\nimport { handledRedirect } from '../store/auth/actions'\nimport { load } from '../store/ui/thunks'\nimport useAsyncEffect from 'use-async-effect'\nimport { useEffect } from 'react'\n\nexport const useAuthRedirect = () => {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const redirectCache = useSelector(\n    (state: RootState) => state.auth.redirectCache,\n  )\n\n  useEffect(() => {\n    if (\n      redirectCache === undefined ||\n      redirectCache.origin !== RedirectCacheOrigin.Login\n    )\n      return\n    dispatch(load(authHandleRedirect(redirectCache)))\n    dispatch(handledRedirect())\n  }, [])\n}\n\nexport const useSetupAuthRedirect = (\n  callback: (response: AuthResponse | undefined) => void,\n) => {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const redirectCache = useSelector(\n    (state: RootState) => state.auth.redirectCache,\n  )\n\n  useAsyncEffect(async () => {\n    if (\n      redirectCache === undefined ||\n      redirectCache.origin !== RedirectCacheOrigin.Setup\n    )\n      return\n    const response = await dispatch(\n      load(setupAuthHandleRedirect(redirectCache)),\n    )\n    dispatch(handledRedirect())\n    callback(response)\n  }, [])\n}\n","import { Client } from 'basic-ftp'\n\nexport const getClient = async (\n  host: string,\n  port: number,\n  user: string,\n  password: string,\n  secure: boolean,\n) => {\n  const client = new Client()\n  if (process.env.NODE_ENV === 'development') client.ftp.verbose = true\n  await client.access({ host, port, user, password, secure })\n  return client\n}\n\nexport const fetchItems = (client: Client, path: string) => client.list(path)\n\nexport const fetchItem = async (client: Client, path: string) => {\n  const dirPath = path.split('/')\n  const filename = dirPath.pop()\n  if (filename === undefined)\n    throw new Error('Cannot fetch item with an empty path.')\n  const files = await fetchItems(client, dirPath.join('/'))\n  return files.find(({ name }) => name === filename)\n}\n","export class APIError extends Error {\n  status: number\n\n  constructor(status: number, message: string) {\n    super(message)\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, APIError)\n    }\n\n    this.name = 'APIError'\n    this.status = status\n  }\n}\n","import {\n  Provider,\n  ProviderKindWithRedirect,\n  ProviderWithRedirect,\n} from '../../types/providers/Provider'\n\nexport const EXPECT_LOGIN_REDIRECT = 'EXPECT_LOGIN_REDIRECT'\nexport const EXPECT_SETUP_REDIRECT = 'EXPECT_SETUP_REDIRECT'\nexport const HANDLED_REDIRECT = 'HANDLED_REDIRECT'\nexport const UPDATE_PROVIDER = 'UPDATE_PROVIDER'\nexport const UPDATE_VERSION = 'UPDATE_VERSION'\nexport const REMOVE_PROVIDER = 'REMOVE_PROVIDER'\n\nexport enum RedirectCacheOrigin {\n  Login,\n  Setup,\n}\n\nexport type LoginRedirectCache = {\n  origin: typeof RedirectCacheOrigin.Login\n  provider: ProviderWithRedirect\n}\n\nexport type SetupRedirectCache = {\n  origin: typeof RedirectCacheOrigin.Setup\n  kind: ProviderKindWithRedirect\n}\n\nexport type RedirectCache = LoginRedirectCache | SetupRedirectCache\n\nexport interface AuthState {\n  providers: {\n    [id: string]: Provider | undefined\n  }\n  redirectCache: RedirectCache | undefined\n  version: string\n}\n\ninterface ExpectLoginRedirectAction {\n  type: typeof EXPECT_LOGIN_REDIRECT\n  payload: {\n    provider: ProviderWithRedirect\n  }\n}\n\ninterface ExpectSetupRedirectAction {\n  type: typeof EXPECT_SETUP_REDIRECT\n  payload: {\n    kind: ProviderKindWithRedirect\n  }\n}\n\ninterface HandledRedirectAction {\n  type: typeof HANDLED_REDIRECT\n}\n\ninterface UpdateProviderAction {\n  type: typeof UPDATE_PROVIDER\n  payload: {\n    provider: Provider\n  }\n}\n\ninterface UpdateVersionAction {\n  type: typeof UPDATE_VERSION\n  payload: {\n    version: string\n  }\n}\n\ninterface RemoveProviderAction {\n  type: typeof REMOVE_PROVIDER\n  payload: {\n    id: string\n  }\n}\n\nexport type AuthActionTypes =\n  | ExpectLoginRedirectAction\n  | ExpectSetupRedirectAction\n  | HandledRedirectAction\n  | UpdateProviderAction\n  | UpdateVersionAction\n  | RemoveProviderAction\n","import HttpApi from 'i18next-http-backend'\nimport LanguageDetector from 'i18next-browser-languagedetector'\nimport de from './locales/de/translation.json'\nimport en from './locales/en/translation.json'\nimport i18next from 'i18next'\nimport { initReactI18next } from 'react-i18next'\n\nconst DE = 'de'\nconst EN = 'en'\nexport const LANGUAGES = [DE, EN]\n\nconst resources = {\n  [DE]: {\n    translation: de,\n  },\n  [EN]: {\n    translation: en,\n  },\n}\n\ni18next\n  .use(initReactI18next)\n  .use(HttpApi)\n  .use(LanguageDetector)\n  .init({\n    resources,\n    fallbackLng: EN,\n    supportedLngs: LANGUAGES,\n    keySeparator: false,\n    nsSeparator: false,\n    interpolation: {\n      escapeValue: false,\n    },\n    debug: process.env.NODE_ENV === 'development',\n  })\n","import { Episode, EpisodeLike } from './Episode'\nimport { Movie, MovieLike } from './Movie'\nimport { Season, SeasonLike } from './Season'\nimport { Show, ShowLike } from './Show'\nimport { Caption } from '../files/Caption'\nimport { Person } from './Person'\nimport { Video } from '../files/Video'\n\nexport enum ItemKind {\n  Episode,\n  Movie,\n  Person,\n  Season,\n  Show,\n}\n\nexport interface Usage {\n  lastWatched: string | undefined\n  progress: number | undefined\n}\n\nexport interface IItem {\n  kind: ItemKind\n  id: string\n  tmdbId: number\n}\n\nexport interface IMediaItem extends IItem {\n  usage: Usage\n}\n\nexport interface IWatchableMediaItem extends IMediaItem {\n  sources: Video[]\n  captions: Caption[]\n}\n\nexport type Item = Episode | Movie | Person | Season | Show\n\nexport type ItemLike = Item | EpisodeLike | MovieLike | SeasonLike | ShowLike\n","import { Provider, ProviderKind } from './providers/Provider'\nimport { File } from './files/File'\n\nexport enum NotificationKind {\n  APIError,\n  AuthenticationFailure,\n  CannotFindFile,\n  GenericError,\n  ProviderAlreadyExists,\n}\n\nexport interface APIError {\n  kind: NotificationKind.APIError\n  status: number\n  message: string | undefined\n}\n\nexport interface AuthenticationFailure {\n  kind: NotificationKind.AuthenticationFailure\n  provider: ProviderKind\n}\n\nexport interface CannotFindFile {\n  kind: NotificationKind.CannotFindFile\n  file: File\n}\n\nexport interface GenericError {\n  kind: NotificationKind.GenericError\n  error: Error\n}\n\nexport interface ProviderAlreadyExists {\n  kind: NotificationKind.ProviderAlreadyExists\n  provider: Provider\n}\n\nexport type Notification =\n  | APIError\n  | AuthenticationFailure\n  | CannotFindFile\n  | GenericError\n  | ProviderAlreadyExists\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const FTPIcon = () => (\n  <Icon className=\"ftp\" x={-3} y={-3} width={38} height={38}>\n    <title>FTP</title>\n    <path\n      d=\"M31,18H1a1,1,0,0,0-1,1V29a1,1,0,0,0,1,1H31a1,1,0,0,0,1-1V19A1,1,0,0,0,31,18ZM12,25H5V23h7Zm14,0a1,1,0,1,1,1-1A1,1,0,0,1,26,25Z\"\n      fill=\"#ffffff\"\n    ></path>\n    <path\n      d=\"M31,2H1A1,1,0,0,0,0,3V13a1,1,0,0,0,1,1H4v3H6V14H26v3h2V14h3a1,1,0,0,0,1-1V3A1,1,0,0,0,31,2ZM12,9H5V7h7ZM25,8a1,1,0,1,1,1,1A1,1,0,0,1,25,8Z\"\n      fill=\"#ffffff\"\n    ></path>\n  </Icon>\n)\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const OneDriveIcon = () => (\n  <Icon className=\"onedrive\" x={46} y={55} width={420} height={420}>\n    <title>OneDrive</title>\n    <path\n      fill=\"#ffffff\"\n      d=\"M187.086,257.178C195.2,215.782,232.1,184.2,275.5,184.2a90.068,90.068,0,0,1,67.023,29.858,75.786,75.786,0,0,1,21.951-3.221h.121A89.982,89.982,0,0,0,194.871,180.31a64.544,64.544,0,0,0-94.64,71.96,56.825,56.825,0,0,0,2.629,113.591h33.975a69.824,69.824,0,0,1,50.251-108.683ZM466,336.292a44.781,44.781,0,0,1-44.783,44.783h-226.6a54.43,54.43,0,1,1,0-108.859,55.073,55.073,0,0,1,6.266.379A74.656,74.656,0,0,1,337.454,232.6a61.279,61.279,0,0,1,88.4,55.053c0,1.375-.114,2.719-.205,4.078A44.787,44.787,0,0,1,466,336.292Z\"\n    />\n  </Icon>\n)\n","import { FALLBACK_BACKDROP_URL, FALLBACK_COVER_URL } from './constants'\nimport { FileProvider, VideoProvider } from './types/files/FileProvider'\nimport { Gender, Job } from './types/items/Person'\nimport { IMediaItem, Item, ItemKind } from './types/items/Item'\nimport { M4V_EXTENSION, MP4_EXTENSION, Video } from './types/files/Video'\nimport { Provider, ProviderKind } from './types/providers/Provider'\nimport { Caption } from './types/files/Caption'\nimport { FTPIcon } from './components/icons/Nucleo/FTPIcon'\nimport ISO6391 from 'iso-639-1'\nimport { OneDriveIcon } from './components/icons/Nucleo/OneDriveIcon'\nimport React from 'react'\nimport { TFunction } from 'i18next'\nimport { buildTMDbImageUrl } from './services/databases/TMDb/util'\n\nexport const notUndefined = <T extends unknown>(x: T | undefined): x is T =>\n  x !== undefined\n\nexport const isInProgress = (item: IMediaItem) =>\n  item.usage.progress !== undefined\n\nexport const wasRecentlyWatched = (item: IMediaItem, thresh: Date) =>\n  !isInProgress(item) &&\n  item.usage.lastWatched !== undefined &&\n  new Date(item.usage.lastWatched) > thresh\n\nexport const sortByNumber = <T extends unknown>(\n  items: T[],\n  getAttr: (item: T) => number,\n) => items.sort((a, b) => getAttr(a) - getAttr(b))\n\nexport const sortByLastWatched = <T extends IMediaItem>(items: T[]) =>\n  sortByNumber(items, (item) =>\n    item.usage.lastWatched !== undefined\n      ? -new Date(item.usage.lastWatched).getTime()\n      : 0,\n  )\n\nexport const sortAlphabetically = <T extends unknown>(\n  items: T[],\n  getAttr: (item: T) => string,\n) => items.sort((a, b) => (getAttr(a) < getAttr(b) ? -1 : 1))\n\nexport const splitHoursAndMinutes = (t: TFunction, duration: number) => {\n  const hours = Math.floor(duration / 60)\n  const minutes = duration % 60\n\n  return (\n    <>\n      {hours > 0 && hours + t('h')}\n      {hours !== 0 && minutes !== 0 ? ' ' : ''}\n      {minutes > 0 && minutes + t('m')}\n    </>\n  )\n}\n\nexport const buildBackdropUrl = (backdropPath: string | undefined) =>\n  backdropPath ? buildTMDbImageUrl(backdropPath) : FALLBACK_BACKDROP_URL\n\nexport const buildCoverUrl = (posterPath: string | undefined) =>\n  posterPath ? buildTMDbImageUrl(posterPath) : FALLBACK_COVER_URL\n\nexport const buildItemUrl = (item: Item): string => {\n  switch (item.kind) {\n    case ItemKind.Episode:\n      return `/app/seasons/${item.seasonId}`\n    case ItemKind.Movie:\n      return `/app/movies/${item.id}`\n    case ItemKind.Person:\n      return `/app/people/${item.id}`\n    case ItemKind.Season:\n      return `/app/seasons/${item.id}`\n    case ItemKind.Show:\n      return `/app/shows/${item.id}`\n  }\n}\n\nexport const buildFileDownloadUrl = (\n  provider: Provider,\n  file: FileProvider,\n): string => {\n  switch (file.kind) {\n    case ProviderKind.FTP:\n      if (provider.kind !== ProviderKind.FTP)\n        throw new Error(\n          'Internal error: attempted to determine download URL with the wrong provider.',\n        )\n      return `ftp://${provider.username}:${provider.password}@${provider.host}:${provider.port}/${file.path}/${file.fileName}`\n    case ProviderKind.OneDrive:\n      return file.downloadUrl\n  }\n}\n\nexport const buildVideoType = (file: Video): string => {\n  switch (file.type) {\n    case M4V_EXTENSION:\n      return MP4_EXTENSION\n    default:\n      return file.type\n  }\n}\n\nexport const buildVideoSize = (file: VideoProvider): number | undefined => {\n  switch (file.kind) {\n    case ProviderKind.FTP:\n      return undefined\n    case ProviderKind.OneDrive:\n      return file.height\n  }\n}\n\nexport const buildCaptionSrcLang = (caption: Caption): string =>\n  ISO6391.getCode(caption.name)\n\nexport const buildProviderKindName = (\n  t: TFunction,\n  kind: ProviderKind,\n): string => {\n  switch (kind) {\n    case ProviderKind.FTP:\n      return t('FTP Server')\n    case ProviderKind.OneDrive:\n      return t('OneDrive')\n  }\n}\n\nexport const buildProviderIcon = (kind: ProviderKind): JSX.Element => {\n  switch (kind) {\n    case ProviderKind.FTP:\n      return <FTPIcon />\n    case ProviderKind.OneDrive:\n      return <OneDriveIcon />\n  }\n}\n\nexport const buildJobTitle = (\n  t: TFunction,\n  job: Job | undefined,\n  gender: Gender,\n): string => {\n  if (job === undefined) return t('Unknown')\n  if (gender === Gender.Male) return t(`JOB [M] ${job}`)\n  return t(`JOB [F] ${job}`)\n}\n\nexport const buildCommitId = (sha: string) => sha.substring(0, 7)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const CloseIcon = () => (\n  <Icon className=\"e-remove\" width={24} height={24}>\n    <title>Remove</title>\n    <g fill=\"#ffffff\" stroke=\"#ffffff\">\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"19\" y1=\"5\" x2=\"5\" y2=\"19\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"19\" y1=\"19\" x2=\"5\" y2=\"5\" />\n    </g>\n  </Icon>\n)\n","import './Toast.scss'\nimport { CloseIcon } from './icons/Nucleo/CloseIcon'\nimport React from 'react'\n\ntype ToastProps = {\n  title: string\n  text: string\n  action?: {\n    text: string\n    url: string\n  }\n\n  onClose: () => void\n}\n\nexport const Toast = ({ title, text, action, onClose }: ToastProps) => (\n  <div className=\"Toast\">\n    <div className=\"Toast__header\">\n      <h2>{title}</h2>\n      <div className=\"Toast__header__close\" onClick={onClose}>\n        <CloseIcon />\n      </div>\n    </div>\n    <p>{text}</p>\n    {action && (\n      <a href={action.url} target=\"_blank\" rel=\"noopener noreferrer\">\n        {action.text}\n      </a>\n    )}\n  </div>\n)\n","import { APIError } from '../../types/Notification'\nimport React from 'react'\nimport { Toast } from '../Toast'\nimport { useTranslation } from 'react-i18next'\n\ntype APIErrorToastProps = {\n  notification: APIError\n\n  onClose: () => void\n}\n\nexport const APIErrorToast = ({\n  notification,\n  onClose,\n}: APIErrorToastProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <Toast\n      title={t('Error connecting to service')}\n      text={t(\n        \"Plaain wasn't able to connect to one of your services. Please report this incident. Status code: {{status}}. Message: {{message}}.\",\n        {\n          status: notification.status,\n          message: notification.message || t('None'),\n        },\n      )}\n      action={{\n        text: t('Report'),\n        url: 'https://github.com/jonhue/plaain/issues/new/choose',\n      }}\n      onClose={onClose}\n    />\n  )\n}\n","import { AuthenticationFailure } from '../../types/Notification'\nimport React from 'react'\nimport { Toast } from '../Toast'\nimport { buildProviderKindName } from '../../util'\nimport { useTranslation } from 'react-i18next'\n\ntype AuthenticationFailureToastProps = {\n  notification: AuthenticationFailure\n\n  onClose: () => void\n}\n\nexport const AuthenticationFailureToast = ({\n  notification,\n  onClose,\n}: AuthenticationFailureToastProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <Toast\n      title={t('Authentication unsuccessful')}\n      text={t(\n        \"Plaain wasn't able to authenticate with {{provider}}. Please report this error if it persists.\",\n        { provider: buildProviderKindName(t, notification.provider) },\n      )}\n      action={{\n        text: t('Report'),\n        url: 'https://github.com/jonhue/plaain/issues/new/choose',\n      }}\n      onClose={onClose}\n    />\n  )\n}\n","import { CannotFindFile } from '../../types/Notification'\nimport React from 'react'\nimport { Toast } from '../Toast'\nimport { buildProviderKindName } from '../../util'\nimport { useTranslation } from 'react-i18next'\n\ntype CannotFindFileToastProps = {\n  notification: CannotFindFile\n\n  onClose: () => void\n}\n\nexport const CannotFindFileToast = ({\n  notification,\n  onClose,\n}: CannotFindFileToastProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <Toast\n      title={t('Unable to locate file')}\n      text={t(\n        \"We weren't able to locate the file named {{name}} located in your {{provider}} provider.\",\n        {\n          name: notification.file.name,\n          provider: buildProviderKindName(t, notification.file.provider.kind),\n        },\n      )}\n      onClose={onClose}\n    />\n  )\n}\n","import { GenericError } from '../../types/Notification'\nimport React from 'react'\nimport { Toast } from '../Toast'\nimport { useTranslation } from 'react-i18next'\n\ntype GenericErrorToastProps = {\n  notification: GenericError\n\n  onClose: () => void\n}\n\nexport const GenericErrorToast = ({\n  notification,\n  onClose,\n}: GenericErrorToastProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <Toast\n      title={t('An error occurred')}\n      text={notification.error.message}\n      onClose={onClose}\n    />\n  )\n}\n","import { ProviderAlreadyExists } from '../../types/Notification'\nimport React from 'react'\nimport { Toast } from '../Toast'\nimport { buildProviderKindName } from '../../util'\nimport { useTranslation } from 'react-i18next'\n\ntype ProviderAlreadyExistsToastProps = {\n  notification: ProviderAlreadyExists\n\n  onClose: () => void\n}\n\nexport const ProviderAlreadyExistsToast = ({\n  notification,\n  onClose,\n}: ProviderAlreadyExistsToastProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <Toast\n      title={t('Provider already exists')}\n      text={t(\n        'You already linked your {{provider}} account {{name}} with Plaain. You can change your settings by clicking on the service in the authentication list on the settings page.',\n        {\n          name: notification.provider.name,\n          provider: buildProviderKindName(t, notification.provider.kind),\n        },\n      )}\n      onClose={onClose}\n    />\n  )\n}\n","import { Notification, NotificationKind } from '../../types/Notification'\nimport React, { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { APIErrorToast } from './APIErrorToast'\nimport { AuthenticationFailureToast } from './AuthenticationFailureToast'\nimport { CannotFindFileToast } from './CannotFindFileToast'\nimport { GenericErrorToast } from './GenericErrorToast'\nimport { ProviderAlreadyExistsToast } from './ProviderAlreadyExistsToast'\nimport { RootState } from '../../store'\nimport { removeNotification } from '../../store/ui/actions'\n\nexport const NotificationsViewer = () => {\n  const dispatch = useDispatch()\n\n  const notifications = useSelector(\n    (state: RootState) => state.ui.notifications,\n  )\n\n  const handleClose = useCallback(\n    (notification: Notification) => () =>\n      dispatch(removeNotification(notification)),\n    [dispatch],\n  )\n\n  const renderNotification = useCallback(\n    (notification: Notification, index: number): JSX.Element => {\n      switch (notification.kind) {\n        case NotificationKind.APIError:\n          return (\n            <APIErrorToast\n              notification={notification}\n              onClose={handleClose(notification)}\n              key={index}\n            />\n          )\n        case NotificationKind.AuthenticationFailure:\n          return (\n            <AuthenticationFailureToast\n              notification={notification}\n              onClose={handleClose(notification)}\n              key={index}\n            />\n          )\n        case NotificationKind.CannotFindFile:\n          return (\n            <CannotFindFileToast\n              notification={notification}\n              onClose={handleClose(notification)}\n              key={index}\n            />\n          )\n        case NotificationKind.GenericError:\n          return (\n            <GenericErrorToast\n              notification={notification}\n              onClose={handleClose(notification)}\n              key={index}\n            />\n          )\n        case NotificationKind.ProviderAlreadyExists:\n          return (\n            <ProviderAlreadyExistsToast\n              notification={notification}\n              onClose={handleClose(notification)}\n              key={index}\n            />\n          )\n      }\n    },\n    [handleClose],\n  )\n\n  return notifications.length > 0 ? (\n    <div className=\"NotificationsViewer\">\n      {notifications.map(renderNotification)}\n    </div>\n  ) : null\n}\n","import { useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport const ScrollToTop = () => {\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [pathname])\n\n  return null\n}\n","import './Welcome.scss'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nexport const Welcome = () => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"Welcome\">\n      <h1>{t('Your movies & TV shows. Anywhere.')}</h1>\n      <div className=\"Welcome__details\">\n        <h3>\n          {t(\n            'Plaain lets you stream and maintain your media library from anywhere. No server needed, no fee required.',\n          )}\n        </h3>\n        <Link to=\"/app\" className=\"button primary\">\n          {t('Launch')}\n        </Link>\n        <a\n          href=\"https://github.com/jonhue/plaain#getting-started\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"button\"\n        >\n          {t('How it works')}\n        </a>\n      </div>\n    </div>\n  )\n}\n","import React, { lazy } from 'react'\nimport { Route, BrowserRouter as Router, Routes } from 'react-router-dom'\nimport { Loading } from './Loading'\nimport { NotFound } from './NotFound'\nimport { NotificationsViewer } from '../components/notifications/NotificationsViewer'\nimport { RootState } from '../store'\nimport { ScrollToTop } from '../components/ScrollToTop'\nimport { Welcome } from './Welcome'\nimport { useAuthRedirect } from '../hooks/auth'\nimport { useSelector } from 'react-redux'\n\nconst App = lazy(() => import('./app'))\nconst Player = lazy(() => import('./Player'))\n\nconst Base = () => {\n  const isLoading = useSelector((state: RootState) => state.ui.isLoading)\n\n  useAuthRedirect()\n\n  return (\n    <div className=\"Base\">\n      {isLoading && <Loading />}\n      <Router basename=\"/plaain\">\n        <ScrollToTop />\n        <Routes>\n          <Route path=\"/\" element={<Welcome />} />\n          <Route path=\"app/*\" element={<App />} />\n          <Route path=\"player\" element={<Player />} />\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n      </Router>\n\n      <NotificationsViewer />\n    </div>\n  )\n}\n\nexport default Base\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import {\n  AuthActionTypes,\n  AuthState,\n  EXPECT_LOGIN_REDIRECT,\n  EXPECT_SETUP_REDIRECT,\n  HANDLED_REDIRECT,\n  REMOVE_PROVIDER,\n  RedirectCacheOrigin,\n  UPDATE_PROVIDER,\n  UPDATE_VERSION,\n} from './types'\nimport { VERSION } from '../../constants'\n\nconst initialState: AuthState = {\n  providers: {},\n  redirectCache: undefined,\n  version: VERSION,\n}\n\nexport default (state = initialState, action: AuthActionTypes): AuthState => {\n  switch (action.type) {\n    case EXPECT_LOGIN_REDIRECT:\n      return {\n        ...state,\n        redirectCache: {\n          origin: RedirectCacheOrigin.Login,\n          provider: action.payload.provider,\n        },\n      }\n    case EXPECT_SETUP_REDIRECT:\n      return {\n        ...state,\n        redirectCache: {\n          origin: RedirectCacheOrigin.Setup,\n          kind: action.payload.kind,\n        },\n      }\n    case HANDLED_REDIRECT:\n      return {\n        ...state,\n        redirectCache: undefined,\n      }\n    case UPDATE_PROVIDER:\n      return {\n        ...state,\n        providers: {\n          ...state.providers,\n          [action.payload.provider.id]: action.payload.provider,\n        },\n      }\n    case UPDATE_VERSION:\n      return {\n        ...state,\n        version: action.payload.version,\n      }\n    case REMOVE_PROVIDER:\n      const { [action.payload.id]: provider, ...providers } = state.providers\n\n      return {\n        ...state,\n        providers,\n      }\n    default:\n      return state\n  }\n}\n","import {\n  EpisodesActionTypes,\n  EpisodesState,\n  REMOVE_EPISODE,\n  UPDATE_EPISODE,\n} from './types'\n\nconst initialState: EpisodesState = {}\n\nexport default (\n  state = initialState,\n  action: EpisodesActionTypes,\n): EpisodesState => {\n  switch (action.type) {\n    case UPDATE_EPISODE:\n      return { ...state, [action.payload.episode.id]: action.payload.episode }\n    case REMOVE_EPISODE:\n      const { [action.payload.id]: episode, ...episodes } = state\n\n      return episodes\n    default:\n      return state\n  }\n}\n","import {\n  MoviesActionTypes,\n  MoviesState,\n  REMOVE_MOVIE,\n  UPDATE_MOVIE,\n} from './types'\n\nconst initialState: MoviesState = {}\n\nexport default (\n  state = initialState,\n  action: MoviesActionTypes,\n): MoviesState => {\n  switch (action.type) {\n    case UPDATE_MOVIE:\n      return { ...state, [action.payload.movie.id]: action.payload.movie }\n    case REMOVE_MOVIE:\n      const { [action.payload.id]: movie, ...movies } = state\n\n      return movies\n    default:\n      return state\n  }\n}\n","import {\n  REMOVE_SEASON,\n  SeasonsActionTypes,\n  SeasonsState,\n  UPDATE_SEASON,\n} from './types'\n\nconst initialState: SeasonsState = {}\n\nexport default (\n  state = initialState,\n  action: SeasonsActionTypes,\n): SeasonsState => {\n  switch (action.type) {\n    case UPDATE_SEASON:\n      return { ...state, [action.payload.season.id]: action.payload.season }\n    case REMOVE_SEASON:\n      const { [action.payload.id]: season, ...seasons } = state\n\n      return seasons\n    default:\n      return state\n  }\n}\n","import { REMOVE_SHOW, ShowsActionTypes, ShowsState, UPDATE_SHOW } from './types'\n\nconst initialState: ShowsState = {}\n\nexport default (state = initialState, action: ShowsActionTypes): ShowsState => {\n  switch (action.type) {\n    case UPDATE_SHOW:\n      return { ...state, [action.payload.show.id]: action.payload.show }\n    case REMOVE_SHOW:\n      const { [action.payload.id]: show, ...shows } = state\n\n      return shows\n    default:\n      return state\n  }\n}\n","import {\n  ADD_NOTIFICATION,\n  ASYNC_BEGIN,\n  ASYNC_END,\n  REMOVE_NOTIFICATION,\n  UIActionTypes,\n  UIState,\n} from './types'\n\nconst initialState: UIState = {\n  isLoading: false,\n  notifications: [],\n}\n\nexport default (state = initialState, action: UIActionTypes): UIState => {\n  switch (action.type) {\n    case ASYNC_BEGIN:\n      return {\n        ...state,\n        isLoading: true,\n      }\n    case ASYNC_END:\n      return {\n        ...state,\n        isLoading: false,\n      }\n    case ADD_NOTIFICATION:\n      return {\n        ...state,\n        notifications: [...state.notifications, action.payload.notification],\n      }\n    case REMOVE_NOTIFICATION:\n      return {\n        ...state,\n        notifications: state.notifications.filter(\n          (notification) => notification !== action.payload.notification,\n        ),\n      }\n    default:\n      return state\n  }\n}\n","import { Action, applyMiddleware, createStore } from 'redux'\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk'\nimport auth from './auth/reducers'\nimport { combineReducers } from 'redux'\nimport episodes from './episodes/reducers'\nimport movies from './movies/reducers'\nimport { persistReducer } from 'redux-persist'\nimport seasons from './seasons/reducers'\nimport shows from './shows/reducers'\nimport storage from 'redux-persist/lib/storage'\nimport thunk from 'redux-thunk'\nimport ui from './ui/reducers'\n\nconst rootReducer = combineReducers({\n  auth,\n  episodes,\n  movies,\n  seasons,\n  shows,\n  ui,\n})\n\nconst persistedReducer = persistReducer(\n  {\n    key: 'root',\n    storage: storage,\n    whitelist: ['auth', 'episodes', 'movies', 'seasons', 'shows'],\n    debug: process.env.NODE_ENV === 'development',\n  },\n  rootReducer,\n)\n\nexport default createStore(persistedReducer, applyMiddleware(thunk))\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport type AppThunk<ReturnType> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action\n>\n\nexport type AppDispatch = ThunkDispatch<RootState, unknown, Action>\n","import './i18n.ts'\nimport './index.scss'\nimport 'whatwg-fetch'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\nimport React, { Suspense } from 'react'\nimport Base from './views'\nimport { Loading } from './views/Loading'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { Provider } from 'react-redux'\nimport ReactDOM from 'react-dom'\nimport { persistStore } from 'redux-persist'\nimport reportWebVitals from './reportWebVitals'\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<Loading />} persistor={persistStore(store)}>\n        <Suspense fallback={<Loading />}>\n          <Base />\n        </Suspense>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log) // eslint-disable-line no-console\n","import { Notification } from '../../types/Notification'\n\nexport const ASYNC_BEGIN = 'ASYNC_BEGIN'\nexport const ASYNC_END = 'ASYNC_END'\nexport const ADD_NOTIFICATION = 'ADD_NOTIFICATION'\nexport const REMOVE_NOTIFICATION = 'REMOVE_NOTIFICATION'\n\nexport interface UIState {\n  isLoading: boolean\n  notifications: Notification[]\n}\n\ninterface AsyncBeginAction {\n  type: typeof ASYNC_BEGIN\n}\n\ninterface AsyncEndAction {\n  type: typeof ASYNC_END\n}\n\ninterface AddNotificationAction {\n  type: typeof ADD_NOTIFICATION\n  payload: {\n    notification: Notification\n  }\n}\n\ninterface RemoveNotificationAction {\n  type: typeof REMOVE_NOTIFICATION\n  payload: {\n    notification: Notification\n  }\n}\n\nexport type UIActionTypes =\n  | AsyncBeginAction\n  | AsyncEndAction\n  | AddNotificationAction\n  | RemoveNotificationAction\n","import { ProviderKind } from '../types/providers/Provider'\n\nexport class AuthenticationFailure extends Error {\n  provider: ProviderKind\n\n  constructor(provider: ProviderKind) {\n    super()\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, AuthenticationFailure)\n    }\n\n    this.name = 'AuthenticationFailure'\n    this.provider = provider\n  }\n}\n","import { IItem, ItemKind } from './Item'\n\nexport enum Gender {\n  Female,\n  Male,\n  Unknown,\n}\n\nexport enum Job {\n  Acting = 'Acting',\n  Casting = 'Casting',\n  CostumeDesign = 'Costume Design',\n  Director = 'Director',\n  DirectorOfPhotography = 'Director of Photography',\n  ExecutiveProducer = 'Executive Producer',\n  Editor = 'Editor',\n  OriginalMusicComposer = 'Original Music Composer',\n  Producer = 'Producer',\n  Screenplay = 'Screenplay',\n  SoundDesigner = 'Sound Designer',\n  UnitProductionManager = 'Unit Production Manager',\n  Writer = 'Writer',\n}\n\ninterface IPerson extends IItem {\n  kind: typeof ItemKind.Person\n  name: string\n  gender: Gender\n  profilePath: string | undefined\n}\n\nexport interface AccPerson extends IPerson {\n  jobs: Job[] | undefined\n}\n\nexport interface Person extends IPerson {\n  job: Job | undefined\n}\n\nexport interface CastMember extends Person {\n  character: string\n}\n\nexport interface CrewMember extends Person {\n  department: string\n}\n","import './Icon.scss'\nimport React, { FunctionComponent } from 'react'\nimport classNames from 'classnames'\n\ntype IconProps = {\n  className: string\n  height: number\n  width: number\n  x?: number\n  y?: number\n}\n\nexport const Icon: FunctionComponent<IconProps> = ({\n  children,\n  className,\n  height,\n  width,\n  x,\n  y,\n}) => (\n  <svg\n    className={classNames('Icon', className)}\n    viewBox={`${x || 0} ${y || 0} ${width} ${height}`}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    {children}\n  </svg>\n)\n","import {\n  AuthActionTypes,\n  EXPECT_LOGIN_REDIRECT,\n  EXPECT_SETUP_REDIRECT,\n  HANDLED_REDIRECT,\n  REMOVE_PROVIDER,\n  UPDATE_PROVIDER,\n  UPDATE_VERSION,\n} from './types'\nimport {\n  Provider,\n  ProviderKindWithRedirect,\n  ProviderWithRedirect,\n} from '../../types/providers/Provider'\n\nexport const expectLoginRedirect = (\n  provider: ProviderWithRedirect,\n): AuthActionTypes => ({\n  type: EXPECT_LOGIN_REDIRECT,\n  payload: {\n    provider,\n  },\n})\n\nexport const expectSetupRedirect = (\n  kind: ProviderKindWithRedirect,\n): AuthActionTypes => ({\n  type: EXPECT_SETUP_REDIRECT,\n  payload: {\n    kind,\n  },\n})\n\nexport const handledRedirect = (): AuthActionTypes => ({\n  type: HANDLED_REDIRECT,\n})\n\nexport const updateProvider = (provider: Provider): AuthActionTypes => ({\n  type: UPDATE_PROVIDER,\n  payload: {\n    provider,\n  },\n})\n\nexport const updateVersion = (version: string): AuthActionTypes => ({\n  type: UPDATE_VERSION,\n  payload: { version },\n})\n\nexport const removeProvider = (id: string): AuthActionTypes => ({\n  type: REMOVE_PROVIDER,\n  payload: { id },\n})\n","import {\n  ADD_NOTIFICATION,\n  ASYNC_BEGIN,\n  ASYNC_END,\n  REMOVE_NOTIFICATION,\n  UIActionTypes,\n} from './types'\nimport { Notification } from '../../types/Notification'\n\nexport const asyncBegin = (): UIActionTypes => ({\n  type: ASYNC_BEGIN,\n})\n\nexport const asyncEnd = (): UIActionTypes => ({\n  type: ASYNC_END,\n})\n\nexport const addNotification = (notification: Notification): UIActionTypes => ({\n  type: ADD_NOTIFICATION,\n  payload: { notification },\n})\n\nexport const removeNotification = (\n  notification: Notification,\n): UIActionTypes => ({\n  type: REMOVE_NOTIFICATION,\n  payload: { notification },\n})\n","export const VERSION = '0.1.0'\n\nexport const RECENTLY_WATCHED_THRESHOLD = new Date(0)\n\nexport const FALLBACK_BACKDROP_URL = '/fallback_backdrop.png'\nexport const FALLBACK_COVER_URL = '/fallback_cover.png'\n","import './SoundWaveIcon.scss'\nimport { Icon } from './Icon'\nimport React from 'react'\n\nexport const SoundWaveIcon = () => (\n  <Icon className=\"SoundWave\" width={1704.01} height={1653.92}>\n    <defs>\n      <style>{`.cls-1,.cls-2{fill:none;stroke:#ff2fc1;stroke-miterlimit:10;}.cls-1{stroke-width:200px;}.cls-2{stroke-width:250px;}`}</style>\n    </defs>\n    <title>Plaain</title>\n    <g id=\"Layer_2\" data-name=\"Layer 2\">\n      <g id=\"Layer_1-2\" data-name=\"Layer 1\">\n        <path className=\"cls-1 USOQBrWX_0\" d=\"M1782.69,418\"></path>\n        <path\n          className=\"cls-2 USOQBrWX_1\"\n          d=\"M104.1,1202.51c184.48,277.54,285.43,342.7,342.94,323.23,171.43-58,12.92-887.15,146.05-917C628,601,693.91,681.44,825.78,842.41c120.88,147.54,205.58,274.72,275.7,258.17,23.24-5.49,47.24-38,19-470.06-17.29-265-42.4-499,1.49-505.44l.5-.06a5.54,5.54,0,0,1,.84,0c32.94,2.1,216.4,317,216.4,317,48.91,83.57,136.81,186.52,307.88,272.95\"\n        ></path>\n      </g>\n    </g>\n    <style data-made-with=\"vivus-instant\">{`.USOQBrWX_0{stroke-dasharray:0 2;stroke-dashoffset:1;animation:USOQBrWX_draw_0 950ms ease-in-out 0ms infinite,USOQBrWX_fade 950ms linear 0ms infinite;}.USOQBrWX_1{stroke-dasharray:3975 3977;stroke-dashoffset:3976;animation:USOQBrWX_draw_1 950ms ease-in-out 0ms infinite,USOQBrWX_fade 950ms linear 0ms infinite;}@keyframes USOQBrWX_draw{100%{stroke-dashoffset:0;}}@keyframes USOQBrWX_fade{0%{stroke-opacity:1;}78.94736842105263%{stroke-opacity:1;}100%{stroke-opacity:0;}}@keyframes USOQBrWX_draw_0{0%{stroke-dashoffset: 1}52.63157894736842%{ stroke-dashoffset: 0;}100%{ stroke-dashoffset: 0;}}@keyframes USOQBrWX_draw_1{26.31578947368421%{stroke-dashoffset: 3976}78.94736842105263%{ stroke-dashoffset: 0;}100%{ stroke-dashoffset: 0;}}`}</style>\n  </Icon>\n)\n","import './Loading.scss'\nimport React from 'react'\nimport { SoundWaveIcon } from '../components/icons/SoundWaveIcon'\n\nexport const Loading = () => (\n  <div className=\"Loading\">\n    <div className=\"Loading__wrapper\">\n      <SoundWaveIcon />\n    </div>\n  </div>\n)\n","import { Provider } from '../types/providers/Provider'\n\nexport class ProviderAlreadyExists extends Error {\n  provider: Provider\n\n  constructor(provider: Provider) {\n    super()\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ProviderAlreadyExists)\n    }\n\n    this.name = 'ProviderAlreadyExists'\n    this.provider = provider\n  }\n}\n","import { addNotification, asyncBegin, asyncEnd } from './actions'\nimport { AppThunk } from '../index'\nimport { handleError } from '../../errors'\n\nexport const load =\n  <ReturnType>(\n    fn: AppThunk<Promise<ReturnType>>,\n  ): AppThunk<Promise<ReturnType | undefined>> =>\n  async (dispatch) => {\n    dispatch(asyncBegin())\n\n    let result: ReturnType | undefined\n    try {\n      result = await dispatch(fn)\n    } catch (error: unknown) {\n      console.error(error) // eslint-disable-line no-console\n      if (error instanceof Error) {\n        dispatch(addNotification(handleError(error)))\n      }\n    }\n\n    dispatch(asyncEnd())\n\n    return result\n  }\n","import { Notification, NotificationKind } from '../types/Notification'\nimport { APIError } from './APIError'\nimport { AuthenticationFailure } from './AuthenticationFailure'\nimport { CannotFindFileError } from './CannotFindFileError'\nimport { ProviderAlreadyExists } from './ProviderAlreadyExists'\n\nexport const handleError = (error: Error): Notification => {\n  if (error instanceof APIError) {\n    return {\n      kind: NotificationKind.APIError,\n      status: error.status,\n      message: error.message,\n    }\n  } else if (error instanceof AuthenticationFailure) {\n    return {\n      kind: NotificationKind.AuthenticationFailure,\n      provider: error.provider,\n    }\n  } else if (error instanceof CannotFindFileError) {\n    return { kind: NotificationKind.CannotFindFile, file: error.file }\n  } else if (error instanceof ProviderAlreadyExists) {\n    return {\n      kind: NotificationKind.ProviderAlreadyExists,\n      provider: error.provider,\n    }\n  } else {\n    return { kind: NotificationKind.GenericError, error }\n  }\n}\n","import { ProviderKind } from '../../types/providers/Provider'\n\nexport const buildAuthId = (kind: ProviderKind, id: string) => `${kind}@${id}`\n","import {\n  AccountInfo,\n  InteractionRequiredAuthError,\n  PublicClientApplication,\n} from '@azure/msal-browser'\nimport { AuthenticationFailure } from '../../errors/AuthenticationFailure'\nimport { OneDrive } from '../../types/providers/OneDrive'\nimport { OneDriveAuthResponse } from './types'\nimport { ProviderKind } from '../../types/providers/Provider'\nimport { buildAuthId } from './util'\nimport { isMobile } from 'react-device-detect'\n\nconst CLIENT_ID = process.env.REACT_APP_MICROSOFT_CLIENT_ID!\nconst SCOPES = ['user.read', 'files.read.all']\n\nconst buildAuthResponse = (\n  accessToken: string,\n  account: AccountInfo,\n  expiresOn: Date,\n): OneDriveAuthResponse => ({\n  kind: ProviderKind.OneDrive,\n  accessToken: { token: accessToken, validUntil: expiresOn.toISOString() },\n  id: buildAuthId(ProviderKind.OneDrive, account.username),\n  name: account.username,\n  account,\n})\n\nconst silentLogIn = async (\n  app: PublicClientApplication,\n  account: AccountInfo,\n): Promise<OneDriveAuthResponse> => {\n  const {\n    accessToken,\n    account: newAccount,\n    expiresOn,\n  } = await app.acquireTokenSilent({\n    scopes: SCOPES,\n    account,\n  })\n  if (!newAccount || !expiresOn)\n    throw new AuthenticationFailure(ProviderKind.OneDrive)\n  return buildAuthResponse(accessToken, newAccount, expiresOn)\n}\n\nconst popupLogIn = async (\n  app: PublicClientApplication,\n): Promise<OneDriveAuthResponse> => {\n  const { account } = await app.loginPopup({\n    scopes: SCOPES,\n  })\n  if (!account) throw new AuthenticationFailure(ProviderKind.OneDrive)\n  return silentLogIn(app, account)\n}\n\nconst redirectLogIn = (app: PublicClientApplication) =>\n  app.loginRedirect({\n    scopes: SCOPES,\n  })\n\nconst interactiveLogIn = async (\n  app: PublicClientApplication,\n  onRedirect: () => void,\n) => {\n  if (isMobile) {\n    onRedirect()\n    return redirectLogIn(app)\n  }\n  return await popupLogIn(app)\n}\n\nconst performAuth = async (\n  app: PublicClientApplication,\n  account: AccountInfo | undefined,\n  onRedirect: () => void,\n): Promise<OneDriveAuthResponse | void> => {\n  if (account === undefined) return await interactiveLogIn(app, onRedirect)\n\n  try {\n    return await silentLogIn(app, account)\n  } catch (error: unknown) {\n    if (error instanceof InteractionRequiredAuthError)\n      return await interactiveLogIn(app, onRedirect)\n    else throw error\n  }\n}\n\nexport const auth = async (\n  provider: OneDrive | undefined,\n  onRedirect: () => void,\n): Promise<OneDriveAuthResponse | void> => {\n  if (\n    provider !== undefined &&\n    new Date(provider.accessToken.validUntil) > new Date()\n  )\n    return provider\n\n  const app = new PublicClientApplication({\n    auth: {\n      clientId: CLIENT_ID,\n    },\n  })\n\n  try {\n    return await performAuth(app, provider?.account, onRedirect)\n  } catch (error: unknown) {\n    throw new AuthenticationFailure(ProviderKind.OneDrive)\n  }\n}\n\nexport const authHandleRedirect = async (): Promise<OneDriveAuthResponse> => {\n  const app = new PublicClientApplication({\n    auth: {\n      clientId: CLIENT_ID,\n    },\n  })\n  const response = await app.handleRedirectPromise()\n  if (!response?.account) throw new AuthenticationFailure(ProviderKind.OneDrive)\n  return silentLogIn(app, response.account)\n}\n","import { FTPAuthResponse, FTPAuthSetup } from './types'\nimport { AuthenticationFailure } from '../../errors/AuthenticationFailure'\nimport { ProviderKind } from '../../types/providers/Provider'\nimport { buildAuthId } from './util'\nimport { getClient } from '../drives/FTP/api'\n\nexport const auth = async (\n  provider: FTPAuthSetup,\n): Promise<FTPAuthResponse> => {\n  try {\n    await getClient(\n      provider.host,\n      provider.port,\n      provider.username,\n      provider.password,\n      provider.secure,\n    )\n    return {\n      ...provider,\n      id: buildAuthId(ProviderKind.FTP, `${provider.host}:${provider.port}`),\n    }\n  } catch (error: unknown) {\n    throw new AuthenticationFailure(ProviderKind.FTP)\n  }\n}\n","import { AuthResponse, AuthSetup } from '../../services/auth/types'\nimport { LoginRedirectCache, SetupRedirectCache } from './types'\nimport {\n  Provider,\n  ProviderKind,\n  ProviderKindWithRedirect,\n  ProviderWithRedirect,\n} from '../../types/providers/Provider'\nimport {\n  expectLoginRedirect,\n  expectSetupRedirect,\n  updateProvider,\n} from './actions'\nimport {\n  auth as oneDriveAuthCall,\n  authHandleRedirect as oneDriveAuthHandleRedirectCall,\n} from '../../services/auth/OneDrive'\nimport { AppThunk } from '../index'\nimport { ProviderAlreadyExists } from '../../errors/ProviderAlreadyExists'\nimport { auth as ftpAuthCall } from '../../services/auth/FTP'\nimport { providersSelector } from './selectors'\n\nconst authHandleProvider = (\n  provider: Provider,\n  onRedirect: (provider: ProviderWithRedirect) => () => void,\n): Promise<AuthResponse | void> => {\n  switch (provider.kind) {\n    case ProviderKind.FTP:\n      return ftpAuthCall(provider)\n    case ProviderKind.OneDrive:\n      return oneDriveAuthCall(provider, onRedirect(provider))\n  }\n}\n\nconst setupAuthHandleProvider = (\n  config: AuthSetup,\n  onRedirect: (kind: ProviderKindWithRedirect) => () => void,\n): Promise<AuthResponse | void> => {\n  switch (config.kind) {\n    case ProviderKind.FTP:\n      return ftpAuthCall(config)\n    case ProviderKind.OneDrive:\n      return oneDriveAuthCall(undefined, onRedirect(ProviderKind.OneDrive))\n  }\n}\n\nconst authHandleRedirectHandleProvider = (\n  kind: ProviderKindWithRedirect,\n): Promise<AuthResponse> => {\n  switch (kind) {\n    case ProviderKind.OneDrive:\n      return oneDriveAuthHandleRedirectCall()\n  }\n}\n\nconst authHandleResponse =\n  (provider: Provider, response: AuthResponse): AppThunk<Promise<Provider>> =>\n  async (dispatch) => {\n    const updatedProvider = {\n      ...response,\n      moviesPath: provider.moviesPath,\n      showsPath: provider.showsPath,\n    }\n    dispatch(updateProvider(updatedProvider))\n    return updatedProvider\n  }\n\nexport const auth =\n  (provider: Provider): AppThunk<Promise<Provider | undefined>> =>\n  async (dispatch) => {\n    const response = await authHandleProvider(\n      provider,\n      (provider) => () => dispatch(expectLoginRedirect(provider)),\n    )\n    if (response === undefined) return\n    return dispatch(authHandleResponse(provider, response))\n  }\n\nconst setupAuthHandleResponse =\n  (\n    kind: ProviderKind,\n    response: AuthResponse,\n  ): AppThunk<Promise<AuthResponse>> =>\n  async (_, getState) => {\n    const { auth } = getState()\n    const provider = providersSelector(auth).find(\n      (provider) => provider.kind === kind && provider.name === response.name,\n    )\n    if (provider !== undefined) throw new ProviderAlreadyExists(provider)\n    return response\n  }\n\nexport const setupAuth =\n  (config: AuthSetup): AppThunk<Promise<AuthResponse | undefined>> =>\n  async (dispatch) => {\n    const response = await setupAuthHandleProvider(\n      config,\n      (kind) => () => dispatch(expectSetupRedirect(kind)),\n    )\n    if (response === undefined) return\n    return dispatch(setupAuthHandleResponse(config.kind, response))\n  }\n\nexport const authHandleRedirect =\n  (cache: LoginRedirectCache): AppThunk<Promise<Provider>> =>\n  async (dispatch) => {\n    const response = await authHandleRedirectHandleProvider(cache.provider.kind)\n    return dispatch(authHandleResponse(cache.provider, response))\n  }\n\nexport const setupAuthHandleRedirect =\n  (cache: SetupRedirectCache): AppThunk<Promise<AuthResponse>> =>\n  async (dispatch) => {\n    const response = await authHandleRedirectHandleProvider(cache.kind)\n    return dispatch(setupAuthHandleResponse(cache.kind, response))\n  }\n","import { FileKind, IFile } from './File'\nimport {\n  IFTPFileProvider,\n  IOneDriveFileProvider,\n  VideoProvider,\n} from './FileProvider'\n\nexport const MP4_EXTENSION = 'mp4'\nexport const M4V_EXTENSION = 'm4v'\nexport const MKV_EXTENSION = 'mkv'\nexport const WEBM_EXTENSION = 'webm'\n\nexport type VideoType =\n  | typeof MP4_EXTENSION\n  | typeof M4V_EXTENSION\n  | typeof MKV_EXTENSION\n  | typeof WEBM_EXTENSION\n\nexport interface Video extends IFile<VideoProvider> {\n  kind: typeof FileKind.Video\n  type: VideoType\n}\n\nexport type FTPVideo = IFTPFileProvider\n\nexport interface OneDriveVideo extends IOneDriveFileProvider {\n  bitrate: number\n  duration: number\n  height: number\n  width: number\n  audioChannels: number\n  audioFormat: string\n  fourCC: string\n  frameRate: number\n}\n","import { Episode } from '../../types/items/Episode'\n\nexport const UPDATE_EPISODE = 'UPDATE_EPISODE'\nexport const REMOVE_EPISODE = 'REMOVE_EPISODE'\n\nexport interface EpisodesState {\n  [id: string]: Episode | undefined\n}\n\ninterface UpdateEpisodeAction {\n  type: typeof UPDATE_EPISODE\n  payload: {\n    episode: Episode\n  }\n}\n\ninterface RemoveEpisodeAction {\n  type: typeof REMOVE_EPISODE\n  payload: {\n    id: string\n  }\n}\n\nexport type EpisodesActionTypes = UpdateEpisodeAction | RemoveEpisodeAction\n","import { Movie } from '../../types/items/Movie'\n\nexport const UPDATE_MOVIE = 'UPDATE_MOVIE'\nexport const REMOVE_MOVIE = 'REMOVE_MOVIE'\n\nexport interface MoviesState {\n  [id: string]: Movie | undefined\n}\n\ninterface UpdateMovieAction {\n  type: typeof UPDATE_MOVIE\n  payload: {\n    movie: Movie\n  }\n}\n\ninterface RemoveMovieAction {\n  type: typeof REMOVE_MOVIE\n  payload: {\n    id: string\n  }\n}\n\nexport type MoviesActionTypes = UpdateMovieAction | RemoveMovieAction\n","import { Season } from '../../types/items/Season'\n\nexport const UPDATE_SEASON = 'UPDATE_SEASON'\nexport const REMOVE_SEASON = 'REMOVE_SEASON'\n\nexport interface SeasonsState {\n  [id: string]: Season | undefined\n}\n\ninterface UpdateSeasonAction {\n  type: typeof UPDATE_SEASON\n  payload: {\n    season: Season\n  }\n}\n\ninterface RemoveSeasonAction {\n  type: typeof REMOVE_SEASON\n  payload: {\n    id: string\n  }\n}\n\nexport type SeasonsActionTypes = UpdateSeasonAction | RemoveSeasonAction\n","import { Show } from '../../types/items/Show'\n\nexport const UPDATE_SHOW = 'UPDATE_SHOW'\nexport const REMOVE_SHOW = 'REMOVE_SHOW'\n\nexport interface ShowsState {\n  [id: string]: Show | undefined\n}\n\ninterface UpdateShowAction {\n  type: typeof UPDATE_SHOW\n  payload: {\n    show: Show\n  }\n}\n\ninterface RemoveShowAction {\n  type: typeof REMOVE_SHOW\n  payload: {\n    id: string\n  }\n}\n\nexport type ShowsActionTypes = UpdateShowAction | RemoveShowAction\n","export const buildItemId = (tmdbId: number) => `TMDb@${tmdbId}`\n\nconst parametrize = (str: string) => str.toLowerCase().replace(/\\s/g, '+')\n\nexport const buildTrailerUrl = (title: string) =>\n  'https://www.youtube.com/results?search_query=' +\n  `${parametrize(title)}+official+trailer`\n","import {\n  CastMember,\n  CrewMember,\n  Gender,\n  Job,\n} from '../../../types/items/Person'\nimport {\n  CastResponse,\n  CrewResponse,\n  MovieCreditsResponse,\n  MovieDetailsResponse,\n  TVEpisodeResponse,\n  TVSeasonCreditsResponse,\n  TVSeasonDetailsResponse,\n  TVShowDetailsResponse,\n} from './types'\nimport { Episode, EpisodeLike } from '../../../types/items/Episode'\nimport { Movie, MovieLike } from '../../../types/items/Movie'\nimport { Season, SeasonLike } from '../../../types/items/Season'\nimport { Show, ShowLike } from '../../../types/items/Show'\nimport { buildItemId, buildTrailerUrl } from '../util'\nimport { ItemKind } from '../../../types/items/Item'\nimport { notUndefined } from '../../../util'\n\n// https://developers.themoviedb.org/3/getting-started/images\nexport const buildTMDbImageUrl = (path: string, size = 'original') =>\n  `https://image.tmdb.org/t/p/${size}${path}`\n\nexport const buildEpisode = (\n  showId: string,\n  seasonId: string,\n  { seasonNumber, showTmdbId, sources, captions, usage }: EpisodeLike,\n  {\n    air_date: airDate,\n    crew,\n    episode_number: number,\n    guest_stars: guestStars,\n    name: title,\n    overview: summary,\n    id: tmdbId,\n    still_path: stillPath,\n  }: TVEpisodeResponse,\n): Episode => ({\n  kind: ItemKind.Episode,\n  id: buildItemId(tmdbId),\n  tmdbId,\n  number,\n  title,\n  seasonId,\n  seasonNumber,\n  showId,\n  showTmdbId,\n  summary,\n  airDate: new Date(airDate).toISOString(),\n  stillPath,\n  guestStars: guestStars.map(buildCastMember),\n  crew: crew.map(buildCrewMember).filter(notUndefined),\n  sources,\n  captions,\n  usage,\n})\n\nexport const buildMovie = (\n  { sources, captions, usage }: MovieLike,\n  {\n    adult: isAdult,\n    backdrop_path: backdropPath,\n    budget,\n    homepage,\n    id: tmdbId,\n    overview: summary,\n    poster_path: posterPath,\n    release_date: releaseDate,\n    revenue,\n    runtime: duration,\n    title,\n  }: MovieDetailsResponse,\n  { cast, crew }: MovieCreditsResponse,\n): Movie => ({\n  kind: ItemKind.Movie,\n  id: buildItemId(tmdbId),\n  tmdbId,\n  title,\n  summary,\n  duration,\n  releaseDate: new Date(releaseDate).toISOString(),\n  isAdult,\n  budget,\n  revenue,\n  homepage,\n  posterPath,\n  backdropPath,\n  trailerUrl: buildTrailerUrl(title),\n  cast: cast.map(buildCastMember),\n  crew: crew.map(buildCrewMember).filter(notUndefined),\n  sources,\n  captions,\n  usage,\n})\n\nconst buildGender = (gender: number | undefined): Gender => {\n  switch (gender) {\n    case 0:\n      return Gender.Unknown\n    case 1:\n      return Gender.Female\n    case 2:\n      return Gender.Male\n    default:\n      return Gender.Unknown\n  }\n}\n\nconst buildJob = (job?: string): Job | undefined => {\n  if (job === undefined) return Job.Acting\n\n  if (Object.values(Job).includes(job as Job)) return job as Job\n}\n\nexport const buildCastMember = ({\n  character,\n  gender: rawGender,\n  id: tmdbId,\n  name,\n  profile_path: profilePath,\n}: CastResponse): CastMember => {\n  const gender = buildGender(rawGender)\n  const job = buildJob()\n\n  return {\n    kind: ItemKind.Person,\n    id: buildItemId(tmdbId),\n    tmdbId,\n    name,\n    gender,\n    profilePath,\n    job,\n    character,\n  }\n}\n\nexport const buildCrewMember = ({\n  department,\n  gender: rawGender,\n  id: tmdbId,\n  job: rawJob,\n  name,\n  profile_path: profilePath,\n}: CrewResponse): CrewMember | undefined => {\n  const gender = buildGender(rawGender)\n  const job = buildJob(rawJob)\n  if (job === undefined) return\n\n  return {\n    kind: ItemKind.Person,\n    id: buildItemId(tmdbId),\n    tmdbId,\n    name,\n    gender,\n    profilePath,\n    job,\n    department,\n  }\n}\n\nexport const buildSeason = (\n  { id: showId, title: showTitle, backdropPath: showBackdropPath }: Show,\n  { showTmdbId, usage }: SeasonLike,\n  {\n    air_date: airDate,\n    id: tmdbId,\n    name: title,\n    overview: summary,\n    poster_path: posterPath,\n    season_number: number,\n  }: TVSeasonDetailsResponse,\n  { cast, crew }: TVSeasonCreditsResponse,\n): Season => ({\n  kind: ItemKind.Season,\n  id: buildItemId(tmdbId),\n  tmdbId,\n  number,\n  title,\n  showId,\n  showTmdbId,\n  showTitle,\n  showBackdropPath,\n  summary,\n  airDate: new Date(airDate).toISOString(),\n  posterPath,\n  trailerUrl: buildTrailerUrl(`${showTitle} season ${number}`),\n  cast: cast.map(buildCastMember),\n  crew: crew.map(buildCrewMember).filter(notUndefined),\n  usage,\n})\n\nexport const buildShow = (\n  { usage }: ShowLike,\n  {\n    backdrop_path: backdropPath,\n    episode_run_time: episodeRunTime,\n    first_air_date: firstAirDate,\n    homepage,\n    id: tmdbId,\n    last_air_date: lastAirDate,\n    name: title,\n    number_of_episodes: numberOfEpisodes,\n    number_of_seasons: numberOfSeasons,\n    overview: summary,\n    poster_path: posterPath,\n  }: TVShowDetailsResponse,\n): Show => ({\n  kind: ItemKind.Show,\n  id: buildItemId(tmdbId),\n  tmdbId,\n  title,\n  summary,\n  episodeRunTime,\n  firstAirDate: new Date(firstAirDate).toISOString(),\n  lastAirDate: new Date(lastAirDate).toISOString(),\n  homepage,\n  numberOfEpisodes,\n  numberOfSeasons,\n  posterPath,\n  backdropPath,\n  usage,\n})\n"],"sourceRoot":""}