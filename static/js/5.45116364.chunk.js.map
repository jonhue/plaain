{"version":3,"sources":["components/Cover.tsx","components/HorizontalSlide.tsx","components/Find.tsx","views/app/Find.tsx","store/selectors.ts","components/get_started/Authenticated.tsx","components/ForYou.tsx","components/get_started/Setup.tsx","components/get_started/Unauthenticated.tsx","views/app/Home.tsx","components/Backdrop.tsx","components/FileList.tsx","components/PersonList.tsx","components/Movie.tsx","views/app/Movie.tsx","components/ItemGrid.tsx","components/VerticalSlide.tsx","components/icons/Nucleo/zoom.tsx","components/Movies.tsx","views/app/Movies.tsx","components/icons/Nucleo/settings-gear.tsx","components/icons/Nucleo/movie-61.tsx","components/icons/Nucleo/popcorn.tsx","components/icons/Nucleo/desktop-screen.tsx","components/Tab.tsx","components/Nav.tsx","components/Person.tsx","views/app/Person.tsx","components/EpisodeEntry.tsx","components/Season.tsx","views/app/Season.tsx","components/icons/Nucleo/e-add.tsx","components/ProviderButton.tsx","components/authentication/ChooseProvider.tsx","components/Modal.tsx","components/icons/Nucleo/c-check.tsx","components/authentication/ProviderForm.tsx","components/authentication/SetupProvider.tsx","components/authentication/AddProviderModal.tsx","components/authentication/UpdateProviderModal.tsx","components/Settings.tsx","views/app/Settings.tsx","components/Show.tsx","views/app/Show.tsx","components/Shows.tsx","views/app/Shows.tsx","views/app/index.tsx"],"names":["Cover","url","alt","className","src","HorizontalSlide","id","items","t","useTranslation","useEffect","Swiper","spaceBetween","slidesPerView","slidesOffsetBefore","slidesOffsetAfter","grabCursor","length","map","item","index","to","buildItemUrl","buildCoverUrl","posterPath","title","buildIndex","itemToText","FlexSearch","create","forEach","key","add","FindView","initalQuery","query","history","useHistory","useSelector","state","movies","shows","useState","setQuery","moviesIndex","useMemo","moviesSelector","movie","summary","showsIndex","showsSelector","show","foundMovies","useAsyncMemo","a","search","result","movieSelector","filter","notUndefined","foundShows","showSelector","handleInputChange","useCallback","event","replace","target","value","autoFocus","placeholder","onChange","Object","keys","location","useLocation","URLSearchParams","get","inProgressSelector","createSelector","inProgressMoviesSelector","inProgressSeasonsSelector","seasons","recentlyWatchedSelector","recentlyWatchedMoviesSelector","recentlyWatchedSeasonsSelector","AuthenticatedView","onIndex","href","rel","onClick","ForYouView","inProgress","recentlyWatched","SetupView","UnauthenticatedView","Trans","dispatch","useDispatch","sortByLastWatched","providers","providersSelector","auth","handleIndex","load","Backdrop","FileList","files","file","name","PersonList","people","details","isWrapped","setIsWrapped","toggleIsWrapped","displayedPeople","slice","person","MovieView","handleContinue","push","kind","usage","progress","handleWatch","buildBackdropUrl","backdropPath","Date","releaseDate","getFullYear","duration","splitHoursAndMinutes","isInProgress","disabled","sources","classNames","primary","trailerUrl","cast","character","crew","job","captions","match","params","undefined","NotFound","ItemGrid","VerticalSlide","path","direction","effect","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","replaceState","data-history","color","Icon","width","height","fill","stroke","x1","x2","y1","y2","cx","cy","r","MoviesView","styles","white","window","innerWidth","Number","parseInt","brPhone","sortAlphabetically","d","x","y","points","Tab","children","exact","isActive","matchPath","pathname","active","Nav","moviesDisabled","showsDisabled","PersonView","showBackdropPath","profilePath","jobs","join","moviesPersonSelector","seasonsPersonSelector","season","moviesCast","moviesCrew","seasonsCast","seasonsCrew","reduce","acc","ItemKind","Person","tmdbId","gender","Set","involvedMovies","moviesByPersonSelector","involvedSeasons","seasonsByPersonSelector","EpisodeEntry","episode","number","airDate","toDateString","SeasonView","episodes","currentEpisode","showEpisodes","setShowEpisodes","toggleEpisodes","episodeNumber","find","shown","seasonSelector","showId","seasonEpisodes","sortByNumber","episodesBySeasonSelector","ProviderButton","icon","ChooseProvider","onChoose","handleChoose","PROVIDER_KINDS","buildProviderIcon","Modal","onClose","modalRef","useRef","useOnClickOutside","ref","ProviderForm","submitCaption","provider","onSubmit","initalState","moviesPath","showsPath","setState","handleChange","currentTarget","handleSubmit","preventDefault","isSetupInput","isValidInput","startsWith","isValid","setup","valid","type","SetupProvider","onSetup","AddProviderModal","onSetupAuth","onAddProvider","authResponse","setAuthResponse","handleSetup","UpdateProviderModal","onUpdateProvider","onRemoveProvider","handleUpdate","handleRemoveProvider","confirm","buildProviderKindName","SettingsView","onFetchMetadataAll","showAddProviderModal","setShowAddProviderModal","_","showUpdateProviderModals","setShowUpdateProviderModals","handleShowUpdateProviderModal","handleCloseUpdateProviderModal","handleShowAddProviderModal","handleCloseAddProviderModal","warn","version","VERSION","handleSetupAuth","setupAuth","handleUpdateProvider","updateProvider","handleFetchMetadataAll","fetchAllMetadata","removeProvider","ShowView","firstAirDate","lastAirDate","showSeasons","seasonsByShowSelector","ShowsView","App","moviesCount","showsCount","component","Home","Movie","Movies","Show","Shows","Season","Settings","Find"],"mappings":"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","file":"static/js/5.45116364.chunk.js","sourcesContent":["import './Cover.scss'\nimport React from 'react'\n\ntype CoverProps = {\n  url: string\n  alt: string\n}\n\nconst Cover = ({ url, alt }: CoverProps) => (\n  <img className=\"Cover\" src={url} alt={alt} />\n)\n\nexport default Cover\n","import './HorizontalSlide.scss'\nimport 'swiper/swiper.scss'\nimport React, { useEffect } from 'react'\nimport { buildCoverUrl, buildItemUrl } from '../util'\nimport Cover from './Cover'\nimport { Link } from 'react-router-dom'\nimport { Movie } from '../types/items/Movie'\nimport { Season } from '../types/items/Season'\nimport { Show } from '../types/items/Show'\nimport Swiper from 'swiper'\nimport { useTranslation } from 'react-i18next'\n\ntype HorizontalSlideProps = {\n  id: string\n  items: (Movie | Season | Show)[]\n}\n\nconst HorizontalSlide = ({ id, items }: HorizontalSlideProps) => {\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    new Swiper(`.HorizontalSlide#${id} .swiper-container`, {\n      spaceBetween: 15,\n      slidesPerView: 'auto',\n      slidesOffsetBefore: 20,\n      slidesOffsetAfter: 20,\n      grabCursor: true,\n    })\n  }, [id])\n\n  return (\n    <div className=\"HorizontalSlide\" id={id}>\n      <div className=\"swiper-container\">\n        <div className=\"swiper-wrapper\">\n          {items.length > 0 ? (\n            items.map((item, index) => (\n              <div className=\"swiper-slide\" key={index}>\n                <Link to={buildItemUrl(item)}>\n                  <Cover\n                    url={buildCoverUrl(item.posterPath)}\n                    alt={item.title}\n                  />\n                </Link>\n              </div>\n            ))\n          ) : (\n            <div className=\"swiper-slide\">\n              <h3>{t('Nothing found.')}</h3>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default HorizontalSlide\n","import './Find.scss'\nimport FlexSearch, { Index } from 'flexsearch'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { movieSelector, moviesSelector } from '../store/movies/selectors'\nimport { showSelector, showsSelector } from '../store/shows/selectors'\nimport HorizontalSlide from '../components/HorizontalSlide'\nimport { Item } from '../types/items/Item'\nimport { RootState } from '../store'\nimport { notUndefined } from '../util'\nimport { useAsyncMemo } from 'use-async-memo'\nimport { useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\nconst QUERY_PARAMETER = 'q'\n\nconst buildIndex = <T extends Item>(\n  items: T[],\n  itemToText: (item: T) => string,\n) => {\n  const index: Index<string> = FlexSearch.create()\n  items.forEach((item) => {\n    // a workaround to use strings as keys\n    const key = (item.id as unknown) as number\n\n    index.add(key, itemToText(item))\n  })\n  return index\n}\n\ntype FindViewProps = {\n  query: string | null\n}\n\nconst FindView = ({ query: initalQuery }: FindViewProps) => {\n  const { t } = useTranslation()\n  const history = useHistory()\n\n  const { movies, shows } = useSelector((state: RootState) => ({\n    movies: state.movies,\n    shows: state.shows,\n  }))\n\n  const [query, setQuery] = useState(initalQuery || '')\n\n  const moviesIndex = useMemo(\n    () =>\n      buildIndex(\n        moviesSelector(movies),\n        (movie) => `${movie.title};${movie.summary}`,\n      ),\n    [movies],\n  )\n  const showsIndex = useMemo(\n    () =>\n      buildIndex(\n        showsSelector(shows),\n        (show) => `${show.title};${show.summary}`,\n      ),\n    [shows],\n  )\n\n  const foundMovies = useAsyncMemo(async () => {\n    const result = await moviesIndex.search(query)\n    return result.map((id) => movieSelector(id)(movies)).filter(notUndefined)\n  }, [moviesIndex, query])\n  const foundShows = useAsyncMemo(async () => {\n    const result = await showsIndex.search(query)\n    return result.map((id) => showSelector(id)(shows)).filter(notUndefined)\n  }, [showsIndex, query])\n\n  const handleInputChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      history.replace(`/app/find?${QUERY_PARAMETER}=${event.target.value}`)\n      setQuery(event.target.value)\n    },\n    [history, setQuery],\n  )\n\n  return (\n    <div className=\"Find\">\n      <form>\n        <input\n          autoFocus\n          value={query}\n          placeholder={t('Search your library')}\n          onChange={handleInputChange}\n        />\n      </form>\n\n      {foundMovies && Object.keys(foundMovies).length > 0 && (\n        <section>\n          <h2>{t('Movies')}</h2>\n          <HorizontalSlide items={foundMovies} id=\"movies\" />\n        </section>\n      )}\n\n      {foundShows && Object.keys(foundShows).length > 0 && (\n        <section>\n          <h2>{t('TV shows')}</h2>\n          <HorizontalSlide items={foundShows} id=\"shows\" />\n        </section>\n      )}\n    </div>\n  )\n}\n\nexport default FindView\n","import React, { useMemo } from 'react'\nimport Find from '../../components/Find'\nimport { useLocation } from 'react-router-dom'\n\nconst QUERY_PARAMETER = 'q'\n\nconst FindView = () => {\n  const location = useLocation()\n  const query = useMemo(\n    () => new URLSearchParams(location.search).get(QUERY_PARAMETER),\n    [location],\n  )\n\n  return <Find query={query} />\n}\n\nexport default FindView\n","import { AccPerson, Person } from '../types/items/Person'\nimport {\n  inProgressSelector as inProgressMoviesSelector,\n  moviesPersonSelector,\n  recentlyWatchedSelector as recentlyWatchedMoviesSelector,\n} from './movies/selectors'\nimport {\n  inProgressSelector as inProgressSeasonsSelector,\n  recentlyWatchedSelector as recentlyWatchedSeasonsSelector,\n  seasonsPersonSelector,\n} from './seasons/selectors'\nimport { ItemKind } from '../types/items/Item'\nimport { MoviesState } from './movies/types'\nimport { RootState } from '.'\nimport { SeasonsState } from './seasons/types'\nimport { createSelector } from 'reselect'\n\nexport const inProgressSelector = createSelector(\n  [\n    (state: RootState) => inProgressMoviesSelector(state.movies),\n    (state: RootState) => inProgressSeasonsSelector(state.seasons),\n  ],\n  (movies, seasons) => [...movies, ...seasons],\n)\n\nexport const recentlyWatchedSelector = createSelector(\n  [\n    (state: RootState) => recentlyWatchedMoviesSelector(state.movies),\n    (state: RootState) => recentlyWatchedSeasonsSelector(state.seasons),\n  ],\n  (movies, seasons) => [...movies, ...seasons],\n)\n\nexport const personSelector = (id: string) =>\n  createSelector<\n    { movies: MoviesState; seasons: SeasonsState },\n    Person[],\n    AccPerson | undefined\n  >(\n    [\n      ({ movies }) => moviesPersonSelector(id, (movie) => movie.cast)(movies),\n      ({ movies }) => moviesPersonSelector(id, (movie) => movie.crew)(movies),\n      ({ seasons }) =>\n        seasonsPersonSelector(id, (season) => season.cast)(seasons),\n      ({ seasons }) =>\n        seasonsPersonSelector(id, (season) => season.crew)(seasons),\n    ],\n    (moviesCast, moviesCrew, seasonsCast, seasonsCrew) => {\n      const roles = [\n        ...moviesCast,\n        ...moviesCrew,\n        ...seasonsCast,\n        ...seasonsCrew,\n      ]\n\n      return roles.reduce<AccPerson | undefined>(\n        (acc, person) => ({\n          kind: ItemKind.Person,\n          id,\n          tmdbId: person.tmdbId,\n          name: person.name,\n          gender: person.gender,\n          profilePath: person.profilePath,\n          jobs:\n            acc !== undefined\n              ? [...new Set([...acc.jobs, person.job])]\n              : [person.job],\n        }),\n        undefined,\n      )\n    },\n  )\n","import './Authenticated.scss'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\ntype AuthenticatedViewProps = {\n  onIndex: () => void\n}\n\nconst AuthenticatedView = ({ onIndex }: AuthenticatedViewProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"Authenticated\">\n      <h2>{t('Get started')}</h2>\n      <p>\n        {t(\n          \"You signed into a cloud service, but we didn't find any movies or TV shows.\",\n        )}\n      </p>\n      <p>\n        {t(\n          \"It's likely that you just have to move some of your files around and create some folders to make it work.\",\n        )}\n      </p>\n      <p>\n        {t(\n          \"Reference the getting started guide to learn how to organize your files so that Plaain finds them. After you're done, just re-index.\",\n        )}\n      </p>\n      <div className=\"Authenticated__buttons\">\n        <a\n          className=\"button primary\"\n          href=\"https://github.com/jonhue/plaain#getting-started\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {t('Getting started')}\n        </a>\n        <button onClick={onIndex}>{t('Index')}</button>\n      </div>\n    </div>\n  )\n}\n\nexport default AuthenticatedView\n","import './ForYou.scss'\nimport HorizontalSlide from './HorizontalSlide'\nimport { Movie } from '../types/items/Movie'\nimport React from 'react'\nimport { Season } from '../types/items/Season'\nimport { useTranslation } from 'react-i18next'\n\ntype ForYouViewProps = {\n  inProgress: (Movie | Season)[]\n  recentlyWatched: (Movie | Season)[]\n}\n\nconst ForYouView = ({ inProgress, recentlyWatched }: ForYouViewProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"ForYou\">\n      {inProgress.length > 0 && (\n        <section>\n          <h2>{t('Continue watching')}</h2>\n          <HorizontalSlide items={inProgress} id=\"inProgress\" />\n        </section>\n      )}\n\n      {recentlyWatched.length > 0 && (\n        <section>\n          <h2>{t('Recently watched')}</h2>\n          <HorizontalSlide items={recentlyWatched} id=\"recentlyWatched\" />\n        </section>\n      )}\n    </div>\n  )\n}\n\nexport default ForYouView\n","import './Setup.scss'\nimport { Link } from 'react-router-dom'\nimport { Movie } from '../../types/items/Movie'\nimport React from 'react'\nimport { Show } from '../../types/items/Show'\nimport { useTranslation } from 'react-i18next'\n\ntype SetupViewProps = {\n  movies: Movie[]\n  shows: Show[]\n}\n\nconst SetupView = ({ movies, shows }: SetupViewProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"Setup\">\n      <h2>{t('Get started')}</h2>\n      <p>\n        {t(\n          \"Here, you'll be able to find your recently watched movie or the show you didn't finish yet.\",\n        )}\n      </p>\n      <div className=\"Setup__buttons\">\n        {movies.length > 0 && (\n          <Link to=\"/app/movies\" className=\"button\">\n            {t('Discover your movies')}\n          </Link>\n        )}\n        {shows.length > 0 && (\n          <Link to=\"/app/shows\" className=\"button\">\n            {t('Discover your shows')}\n          </Link>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default SetupView\n","import './Unauthenticated.scss'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\n\nconst UnauthenticatedView = () => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"Unauthenticated\">\n      <h2>{t('Get started')}</h2>\n      <p>\n        {t(\n          'To watch your movies and TV shows, you first have to sign in with the cloud service that hosts your media.',\n        )}\n      </p>\n      <Link to=\"/app/settings\" className=\"button\">\n        {t('Authenticate')}\n      </Link>\n      <p className=\"small\">\n        <Trans>\n          Note that Plaain may <span className=\"bold\">not</span> be used to\n          stream pirated content or publicly share your private media library.\n          You may only connect to your private cloud storage.\n        </Trans>\n      </p>\n    </div>\n  )\n}\n\nexport default UnauthenticatedView\n","import React, { useCallback } from 'react'\nimport {\n  inProgressSelector,\n  recentlyWatchedSelector,\n} from '../../store/selectors'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Authenticated from '../../components/get_started/Authenticated'\nimport ForYou from '../../components/ForYou'\nimport { RootState } from '../../store'\nimport Setup from '../../components/get_started/Setup'\nimport Unauthenticated from '../../components/get_started/Unauthenticated'\nimport { index } from '../../store/thunks'\nimport { load } from '../../store/ui/thunks'\nimport { moviesSelector } from '../../store/movies/selectors'\nimport { providersSelector } from '../../store/auth/selectors'\nimport { showsSelector } from '../../store/shows/selectors'\nimport { sortByLastWatched } from '../../util'\n\nconst ForYouView = () => {\n  const dispatch = useDispatch()\n\n  const { inProgress, movies, providers, recentlyWatched, shows } = useSelector(\n    (state: RootState) => ({\n      inProgress: sortByLastWatched(inProgressSelector(state)),\n      movies: moviesSelector(state.movies),\n      providers: providersSelector(state.auth),\n      recentlyWatched: sortByLastWatched(recentlyWatchedSelector(state)),\n      shows: showsSelector(state.shows),\n    }),\n  )\n\n  const handleIndex = useCallback(() => {\n    dispatch(load(index(providers)))\n  }, [dispatch, providers])\n\n  return inProgress.length > 0 || recentlyWatched.length > 0 ? (\n    <ForYou inProgress={inProgress} recentlyWatched={recentlyWatched} />\n  ) : providers.length === 0 ? (\n    <Unauthenticated />\n  ) : movies.length === 0 && shows.length === 0 ? (\n    <Authenticated onIndex={handleIndex} />\n  ) : (\n    <Setup movies={movies} shows={shows} />\n  )\n}\n\nexport default ForYouView\n","import './Backdrop.scss'\nimport React from 'react'\n\ntype BackdropProps = {\n  url: string\n}\n\nconst Backdrop = ({ url }: BackdropProps) => (\n  <picture className=\"Backdrop\">\n    <img src={url} alt=\"backdrop\" />\n  </picture>\n)\n\nexport default Backdrop\n","import { File } from '../types/files/File'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\ntype FileListProps = {\n  files: File[]\n}\n\nconst FileList = ({ files }: FileListProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"FileList\">\n      {files.map((file, index) => {\n        return (\n          <p className=\"small\" key={index}>\n            {file.name}\n          </p>\n        )\n      })}\n      {files.length === 0 && <p className=\"small\">{t('None')}</p>}\n    </div>\n  )\n}\n\nexport default FileList\n","import './PersonList.scss'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Person } from '../types/items/Person'\nimport { buildItemUrl } from '../util'\nimport { useTranslation } from 'react-i18next'\n\nconst WRAPPED_SIZE = 10\n\ntype PersonListProps<T extends Person> = {\n  people: T[]\n\n  details: (person: T) => string\n}\n\nconst PersonList = <T extends Person>({\n  people,\n  details,\n}: PersonListProps<T>) => {\n  const { t } = useTranslation()\n\n  const [isWrapped, setIsWrapped] = useState(true)\n  const toggleIsWrapped = useCallback(() => setIsWrapped((state) => !state), [\n    setIsWrapped,\n  ])\n\n  const displayedPeople = useMemo(\n    () => people.slice(0, isWrapped ? WRAPPED_SIZE : people.length),\n    [isWrapped, people],\n  )\n\n  return (\n    <div className=\"PersonList\">\n      {people.length > 0 ? (\n        displayedPeople.map((person, index) => {\n          return (\n            <p key={index}>\n              <Link to={buildItemUrl(person)}>{person.name}</Link> ·{' '}\n              <span>{details(person)}</span>\n            </p>\n          )\n        })\n      ) : (\n        <p>{t('None')}</p>\n      )}\n      {people.length > WRAPPED_SIZE && (\n        <span onClick={toggleIsWrapped}>\n          {isWrapped ? t('Show more') : t('Show less')}\n        </span>\n      )}\n    </div>\n  )\n}\n\nexport default PersonList\n","import './Movie.scss'\nimport React, { useCallback } from 'react'\nimport {\n  buildBackdropUrl,\n  buildCoverUrl,\n  isInProgress,\n  splitHoursAndMinutes,\n} from '../util'\nimport Backdrop from './Backdrop'\nimport Cover from './Cover'\nimport FileList from './FileList'\nimport { Movie } from '../types/items/Movie'\nimport PersonList from './PersonList'\nimport classNames from 'classnames'\nimport { useHistory } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\n\ntype MovieViewProps = {\n  movie: Movie\n}\n\nconst MovieView = ({ movie }: MovieViewProps) => {\n  const { t } = useTranslation()\n  const history = useHistory()\n\n  const handleContinue = useCallback(() => {\n    history.push(\n      `/player?id=${movie.id}&type=${movie.kind}&s=${movie.usage.progress}`,\n    )\n  }, [history, movie])\n\n  const handleWatch = useCallback(() => {\n    history.push(`/player?id=${movie.id}&type=${movie.kind}`)\n  }, [history, movie])\n\n  return (\n    <div className=\"Movie\">\n      <Backdrop url={buildBackdropUrl(movie.backdropPath)} />\n      <div className=\"Movie__details\">\n        <Cover url={buildCoverUrl(movie.posterPath)} alt=\"poster\" />\n        <h1>{movie.title}</h1>\n        <div className=\"Movie__information\">\n          <p className=\"small\">{new Date(movie.releaseDate).getFullYear()}</p>\n          {movie.duration && (\n            <p className=\"small\">{splitHoursAndMinutes(t, movie.duration)}</p>\n          )}\n        </div>\n        <div className=\"Movie__actions\">\n          {isInProgress(movie) && (\n            <button\n              className=\"primary\"\n              onClick={handleContinue}\n              disabled={movie.sources.length === 0}\n            >\n              {t('Continue')}\n            </button>\n          )}\n          <button\n            className={classNames({ primary: !isInProgress(movie) })}\n            onClick={handleWatch}\n            disabled={movie.sources.length === 0}\n          >\n            {t('Watch')}\n          </button>\n          <a\n            className=\"button\"\n            href={movie.trailerUrl}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {t('Play trailer')}\n          </a>\n        </div>\n        <p className=\"Movie__overview\">{movie.summary}</p>\n        <div className=\"Movie__people\">\n          <div className=\"Movie__people__cast\">\n            <h4>{t('Starring')}</h4>\n            <PersonList\n              people={movie.cast}\n              details={(person) => person.character}\n            />\n          </div>\n          <div className=\"Movie__people__crew\">\n            <h4>{t('Crew')}</h4>\n            <PersonList people={movie.crew} details={(person) => person.job} />\n          </div>\n        </div>\n      </div>\n      <div className=\"Movie__sources\">\n        <div>\n          <h4>{t('Sources')}</h4>\n          <div>\n            <div className=\"Movie__sources__versions\">\n              <h5>{t('Versions')}</h5>\n              <FileList files={movie.sources} />\n            </div>\n            <div className=\"Movie__sources__captions\">\n              <h5>{t('Subtitles')}</h5>\n              <FileList files={movie.captions} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MovieView\n","import Movie from '../../components/Movie'\nimport NotFound from '../NotFound'\nimport React from 'react'\nimport { RootState } from '../../store'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { movieSelector } from '../../store/movies/selectors'\nimport { useSelector } from 'react-redux'\n\ninterface MovieViewParams {\n  id: string\n}\n\ntype MovieViewProps = RouteComponentProps<MovieViewParams>\n\nconst MovieView = ({ match }: MovieViewProps) => {\n  const movie = useSelector((state: RootState) =>\n    movieSelector(match.params.id)(state.movies),\n  )\n\n  return movie !== undefined ? <Movie movie={movie} /> : <NotFound />\n}\n\nexport default MovieView\n","import './ItemGrid.scss'\nimport { buildCoverUrl, buildItemUrl } from '../util'\nimport Cover from './Cover'\nimport { Link } from 'react-router-dom'\nimport { Movie } from '../types/items/Movie'\nimport React from 'react'\nimport { Season } from '../types/items/Season'\nimport { Show } from '../types/items/Show'\nimport { useTranslation } from 'react-i18next'\n\ntype ItemGridProps = {\n  items: (Movie | Season | Show)[]\n}\n\nconst ItemGrid = ({ items }: ItemGridProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"ItemGrid\">\n      {items.length > 0 ? (\n        items.map((item, index) => (\n          <div className=\"ItemGrid__item\" key={index}>\n            <Link to={buildItemUrl(item)}>\n              <Cover url={buildCoverUrl(item.posterPath)} alt={item.title} />\n            </Link>\n          </div>\n        ))\n      ) : (\n        <div className=\"ItemGrid__item\">\n          <h3>{t('Nothing found.')}</h3>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ItemGrid\n","import './VerticalSlide.scss'\nimport 'swiper/swiper.scss'\nimport React, { useEffect } from 'react'\nimport { buildCoverUrl, buildItemUrl } from '../util'\nimport Cover from './Cover'\nimport { Link } from 'react-router-dom'\nimport { Movie } from '../types/items/Movie'\nimport { Season } from '../types/items/Season'\nimport { Show } from '../types/items/Show'\nimport Swiper from 'swiper'\nimport { useTranslation } from 'react-i18next'\n\ntype VerticalSlideProps = {\n  id: string\n  items: (Movie | Season | Show)[]\n  path: string\n}\n\nconst VerticalSlide = ({ id, items, path }: VerticalSlideProps) => {\n  const { t } = useTranslation()\n\n  useEffect(() => {\n    new Swiper(`.VerticalSlide#${id} .swiper-container`, {\n      direction: 'vertical',\n      slidesPerView: 'auto',\n      grabCursor: true,\n      effect: 'coverflow',\n      coverflowEffect: {\n        rotate: 0,\n        stretch: 425,\n        depth: 150,\n        modifier: 1,\n        slideShadows: false,\n      },\n      history: {\n        replaceState: true,\n        key: path,\n      },\n    })\n  }, [id, path])\n\n  return (\n    <div className=\"VerticalSlide\" id={id}>\n      <div className=\"swiper-container\">\n        <div className=\"swiper-wrapper\">\n          {items.length > 0 ? (\n            items.map((item, index) => (\n              <div className=\"swiper-slide\" data-history={item.id} key={index}>\n                <Link to={buildItemUrl(item)}>\n                  <Cover\n                    url={buildCoverUrl(item.posterPath)}\n                    alt={item.title}\n                  />\n                </Link>\n              </div>\n            ))\n          ) : (\n            <div className=\"swiper-slide\">\n              <h3>{t('Nothing found.')}</h3>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default VerticalSlide\n","import Icon from '../Icon'\nimport React from 'react'\n\ntype Props = {\n  color: string\n}\n\nexport default ({ color }: Props) => (\n  <Icon className=\"zoom\" width={24} height={24}>\n    <title>zoom</title>\n    <g fill={color}>\n      <line\n        fill=\"none\"\n        stroke={color}\n        x1=\"22\"\n        x2=\"15.656\"\n        y1=\"22\"\n        y2=\"15.656\"\n      />\n      <circle cx=\"10\" cy=\"10\" fill=\"none\" r=\"8\" stroke={color} />\n    </g>\n  </Icon>\n)\n","import './Movies.scss'\nimport ItemGrid from './ItemGrid'\nimport { Link } from 'react-router-dom'\nimport { Movie } from '../types/items/Movie'\nimport React from 'react'\nimport VerticalSlide from './VerticalSlide'\nimport ZoomIcon from './icons/Nucleo/zoom'\nimport styles from '../_variables.scss'\n\ntype MoviesViewProps = {\n  movies: Movie[]\n}\n\nconst MoviesView = ({ movies }: MoviesViewProps) => (\n  <div className=\"Movies\">\n    <div className=\"Movies__find\">\n      <Link to=\"/app/find\">\n        <ZoomIcon color={styles.white} />\n      </Link>\n    </div>\n    {window.innerWidth < Number.parseInt(styles.brPhone) ? (\n      <VerticalSlide items={movies} path=\"movies\" id=\"movies\" />\n    ) : (\n      <ItemGrid items={movies} />\n    )}\n  </div>\n)\n\nexport default MoviesView\n","import Movies from '../../components/Movies'\nimport React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { RootState } from '../../store'\nimport { moviesSelector } from '../../store/movies/selectors'\nimport { sortAlphabetically } from '../../util'\nimport { useSelector } from 'react-redux'\n\nconst MoviesView = () => {\n  const movies = useSelector((state: RootState) =>\n    sortAlphabetically(moviesSelector(state.movies), (movie) => movie.title),\n  )\n\n  return movies.length > 0 ? <Movies movies={movies} /> : <Redirect to=\"/app\" />\n}\n\nexport default MoviesView\n","import Icon from '../Icon'\nimport React from 'react'\n\ntype Props = {\n  color: string\n}\n\nexport default ({ color }: Props) => (\n  <Icon className=\"settings-gear\" width={24} height={24}>\n    <title>settings gear</title>\n    <g fill={color} stroke={color}>\n      <circle cx=\"12\" cy=\"12\" fill=\"none\" r=\"3\" />\n      <path\n        d=\"M20,12a8.049,8.049,0,0,0-.188-1.713l2.714-2.055-2-3.464L17.383,6.094a7.987,7.987,0,0,0-2.961-1.719L14,1H10L9.578,4.375A7.987,7.987,0,0,0,6.617,6.094L3.474,4.768l-2,3.464,2.714,2.055a7.9,7.9,0,0,0,0,3.426L1.474,15.768l2,3.464,3.143-1.326a7.987,7.987,0,0,0,2.961,1.719L10,23h4l.422-3.375a7.987,7.987,0,0,0,2.961-1.719l3.143,1.326,2-3.464-2.714-2.055A8.049,8.049,0,0,0,20,12Z\"\n        fill=\"none\"\n        stroke={color}\n      />\n    </g>\n  </Icon>\n)\n","import Icon from '../Icon'\nimport React from 'react'\n\ntype Props = {\n  color: string\n}\n\nexport default ({ color }: Props) => (\n  <Icon className=\"movie-61\" width={24} height={24}>\n    <title>movie 61</title>\n    <g fill={color}>\n      <line fill=\"none\" stroke={color} x1=\"1\" x2=\"1\" y1=\"1\" y2=\"23\" />\n      <line fill=\"none\" stroke={color} x1=\"23\" x2=\"23\" y1=\"1\" y2=\"23\" />\n      <rect height=\"22\" width=\"14\" fill=\"none\" stroke={color} x=\"5\" y=\"1\" />\n      <line fill=\"none\" stroke={color} x1=\"1\" x2=\"23\" y1=\"12\" y2=\"12\" />\n      <line fill=\"none\" stroke={color} x1=\"1\" x2=\"5\" y1=\"8\" y2=\"8\" />\n      <line fill=\"none\" stroke={color} x1=\"1\" x2=\"5\" y1=\"4\" y2=\"4\" />\n      <line fill=\"none\" stroke={color} x1=\"19\" x2=\"23\" y1=\"8\" y2=\"8\" />\n      <line fill=\"none\" stroke={color} x1=\"19\" x2=\"23\" y1=\"4\" y2=\"4\" />\n      <line fill=\"none\" stroke={color} x1=\"19\" x2=\"23\" y1=\"20\" y2=\"20\" />\n      <line fill=\"none\" stroke={color} x1=\"19\" x2=\"23\" y1=\"16\" y2=\"16\" />\n      <line fill=\"none\" stroke={color} x1=\"1\" x2=\"5\" y1=\"20\" y2=\"20\" />\n      <line fill=\"none\" stroke={color} x1=\"1\" x2=\"5\" y1=\"16\" y2=\"16\" />\n    </g>\n  </Icon>\n)\n","import Icon from '../Icon'\nimport React from 'react'\n\ntype Props = {\n  color: string\n}\n\nexport default ({ color }: Props) => (\n  <Icon className=\"popcorn\" width={24} height={24}>\n    <title>popcorn</title>\n    <g fill={color}>\n      <polygon fill=\"none\" points=\"21 7 3 7 5 23 19 23 21 7\" stroke={color} />\n      <path\n        d=\"M19,5a3,3,0,0,0-3-3,2.97,2.97,0,0,0-1.47.4,2.986,2.986,0,0,0-5.06,0A2.97,2.97,0,0,0,8,2,3,3,0,0,0,5,5\"\n        fill=\"none\"\n        stroke={color}\n      />\n      <line fill=\"none\" stroke={color} x1=\"9\" x2=\"8\" y1=\"23\" y2=\"7\" />\n      <line fill=\"none\" stroke={color} x1=\"15\" x2=\"16\" y1=\"23\" y2=\"7\" />\n    </g>\n  </Icon>\n)\n","import Icon from '../Icon'\nimport React from 'react'\n\ntype Props = {\n  color: string\n}\n\nexport default ({ color }: Props) => (\n  <Icon className=\"desktop-screen\" width={24} height={24}>\n    <title>desktop screen</title>\n    <g fill={color}>\n      <line fill=\"none\" stroke={color} x1=\"12\" x2=\"12\" y1=\"22\" y2=\"18\" />\n      <line fill=\"none\" stroke={color} x1=\"6\" x2=\"18\" y1=\"22\" y2=\"22\" />\n      <rect height=\"16\" width=\"22\" fill=\"none\" stroke={color} x=\"1\" y=\"2\" />\n    </g>\n  </Icon>\n)\n","import './Tab.scss'\nimport React, { FunctionComponent } from 'react'\nimport { matchPath, useLocation } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport classNames from 'classnames'\n\ntype TabProps = {\n  to: string\n  exact?: boolean\n  disabled?: boolean\n}\n\nconst Tab: FunctionComponent<TabProps> = ({\n  children,\n  to,\n  exact,\n  disabled,\n}) => {\n  const location = useLocation()\n  const isActive = !!matchPath(location.pathname, { path: to, exact })\n\n  return (\n    <Link className={classNames('Tab', { active: isActive, disabled })} to={to}>\n      {children}\n    </Link>\n  )\n}\n\nexport default Tab\n","import './Nav.scss'\nimport GearIcon from './icons/Nucleo/settings-gear'\nimport MovieIcon from './icons/Nucleo/movie-61'\nimport PopcornIcon from './icons/Nucleo/popcorn'\nimport React from 'react'\nimport ShowIcon from './icons/Nucleo/desktop-screen'\nimport Tab from './Tab'\nimport styles from '../_variables.scss'\n\ntype NavProps = {\n  moviesDisabled?: boolean\n  showsDisabled?: boolean\n}\n\nconst Nav = ({ moviesDisabled, showsDisabled }: NavProps) => (\n  <div className=\"Nav\">\n    <Tab to=\"/app\" exact>\n      <PopcornIcon color={styles.white} />\n      <p>For you</p>\n    </Tab>\n    <Tab disabled={moviesDisabled} to=\"/app/movies\">\n      <MovieIcon color={styles.white} />\n      <p>Movies</p>\n    </Tab>\n    <Tab disabled={showsDisabled} to=\"/app/shows\">\n      <ShowIcon color={styles.white} />\n      <p>Shows</p>\n    </Tab>\n    <Tab to=\"/app/settings\">\n      <GearIcon color={styles.white} />\n      <p>Settings</p>\n    </Tab>\n  </div>\n)\n\nexport default Nav\n","import './Person.scss'\nimport React, { useMemo } from 'react'\nimport { buildBackdropUrl, buildCoverUrl } from '../util'\nimport { AccPerson } from '../types/items/Person'\nimport Backdrop from './Backdrop'\nimport Cover from './Cover'\nimport HorizontalSlide from './HorizontalSlide'\nimport { Movie } from '../types/items/Movie'\nimport { Season } from '../types/items/Season'\nimport { useTranslation } from 'react-i18next'\n\ntype PersonViewProps = {\n  person: AccPerson\n  movies: Movie[]\n  seasons: Season[]\n}\n\nconst PersonView = ({ person, movies, seasons }: PersonViewProps) => {\n  const { t } = useTranslation()\n\n  const backdropPath = useMemo(() => {\n    if (movies.length > 0) return movies[0].backdropPath\n    else if (seasons.length > 0) return seasons[0].showBackdropPath\n  }, [movies, seasons])\n\n  return (\n    <div className=\"Person\">\n      <Backdrop url={buildBackdropUrl(backdropPath)} />\n      <div className=\"Person__details\">\n        <Cover url={buildCoverUrl(person.profilePath)} alt=\"profile\" />\n        <h1>{person.name}</h1>\n        <h5>{t('Known as')}</h5>\n        <p>{person.jobs.join(', ')}</p>\n      </div>\n\n      {movies.length > 0 && (\n        <div className=\"Person__movies\">\n          <h2>{t('Movies')}</h2>\n          <HorizontalSlide items={movies} id=\"movies\" />\n        </div>\n      )}\n\n      {seasons.length > 0 && (\n        <div className=\"Person__seasons\">\n          <h2>{t('TV seasons')}</h2>\n          <HorizontalSlide items={seasons} id=\"seasons\" />\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default PersonView\n","import NotFound from '../NotFound'\nimport Person from '../../components/Person'\nimport React from 'react'\nimport { RootState } from '../../store'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { moviesByPersonSelector } from '../../store/movies/selectors'\nimport { personSelector } from '../../store/selectors'\nimport { seasonsByPersonSelector } from '../../store/seasons/selectors'\nimport { useSelector } from 'react-redux'\n\ninterface PersonViewParams {\n  id: string\n}\n\ntype PersonViewProps = RouteComponentProps<PersonViewParams>\n\nconst PersonView = ({ match }: PersonViewProps) => {\n  const person = useSelector((state: RootState) =>\n    personSelector(match.params.id)(state),\n  )\n  const { involvedMovies, involvedSeasons } = useSelector(\n    (state: RootState) => ({\n      involvedMovies: person && moviesByPersonSelector(person.id)(state.movies),\n      involvedSeasons:\n        person && seasonsByPersonSelector(person.id)(state.seasons),\n    }),\n  )\n\n  return person !== undefined &&\n    involvedMovies !== undefined &&\n    involvedSeasons !== undefined ? (\n    <Person person={person} movies={involvedMovies} seasons={involvedSeasons} />\n  ) : (\n    <NotFound />\n  )\n}\n\nexport default PersonView\n","import './EpisodeEntry.scss'\nimport { Episode } from '../types/items/Episode'\nimport React from 'react'\nimport classNames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\ntype EpisodeEntryProps = {\n  episode: Episode\n\n  onClick: () => void\n}\n\nconst EpisodeEntry = ({ episode, onClick }: EpisodeEntryProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div\n      className={classNames('EpisodeEntry', {\n        disabled: episode.sources.length === 0,\n      })}\n      onClick={onClick}\n    >\n      <div className=\"EpisodeEntry__number\">{episode.number}</div>\n      <div className=\"EpisodeEntry__details\">\n        <h2>{episode.title}</h2>\n        <p className=\"small\">\n          {t('Aired')} {new Date(episode.airDate).toDateString()}\n        </p>\n        <p>{episode.summary}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default EpisodeEntry\n","import './Season.scss'\nimport React, { useCallback, useState } from 'react'\nimport { buildBackdropUrl, buildCoverUrl } from '../util'\nimport Backdrop from './Backdrop'\nimport Cover from './Cover'\nimport { Episode } from '../types/items/Episode'\nimport EpisodeEntry from './EpisodeEntry'\nimport PersonList from './PersonList'\nimport { Season } from '../types/items/Season'\nimport { Show } from '../types/items/Show'\nimport classNames from 'classnames'\nimport { useHistory } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\n\ntype SeasonViewProps = {\n  show: Show\n  season: Season\n  episodes: Episode[]\n  currentEpisode: Episode | undefined\n}\n\nconst SeasonView = ({\n  show,\n  season,\n  episodes,\n  currentEpisode,\n}: SeasonViewProps) => {\n  const { t } = useTranslation()\n  const history = useHistory()\n\n  const [showEpisodes, setShowEpisodes] = useState(false)\n  const toggleEpisodes = useCallback(() => setShowEpisodes((state) => !state), [\n    setShowEpisodes,\n  ])\n\n  const handleContinue = useCallback(\n    (episode: Episode) => () => {\n      history.push(\n        `/player?id=${episode.id}&type=${episode.kind}&s=${episode.usage.progress}`,\n      )\n    },\n    [history],\n  )\n\n  const handleWatch = useCallback(\n    (episodeNumber: number) => () => {\n      const episode = episodes.find(\n        (episode) => episode.number === episodeNumber,\n      )!\n\n      history.push(`/player?id=${episode.id}&type=${episode.kind}`)\n    },\n    [episodes, history],\n  )\n\n  return (\n    <div className=\"Season\">\n      <Backdrop url={buildBackdropUrl(season.showBackdropPath)} />\n      <div className=\"Season__details\">\n        <Cover url={buildCoverUrl(season.posterPath)} alt=\"poster\" />\n        <h1>\n          {t('Season')} {season.number}\n        </h1>\n        <div className=\"Season__information\">\n          <p className=\"small\">{show.title}</p>\n          <p className=\"small\">{new Date(season.airDate).getFullYear()}</p>\n        </div>\n        <div className=\"Season__actions\">\n          {currentEpisode !== undefined && (\n            <button\n              className=\"primary\"\n              onClick={handleContinue(currentEpisode)}\n              disabled={currentEpisode.sources.length === 0}\n            >\n              {t('Continue episode')} {currentEpisode.number}\n            </button>\n          )}\n          {episodes.length > 0 && (\n            <button\n              className={classNames({ primary: currentEpisode === undefined })}\n              onClick={handleWatch(0)}\n              disabled={episodes[0].sources.length === 0}\n            >\n              {t('Watch')}\n            </button>\n          )}\n          <a\n            className=\"button\"\n            id=\"trailer\"\n            href={season.trailerUrl}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {t('Play trailer')}\n          </a>\n        </div>\n        <div className=\"Season__episodes\">\n          <div\n            className={classNames('Season__episodes__list', {\n              shown: showEpisodes,\n            })}\n          >\n            {episodes\n              .slice(0, showEpisodes ? episodes.length : 0)\n              .map((episode, index) => (\n                <EpisodeEntry\n                  episode={episode}\n                  onClick={handleWatch(episode.number)}\n                  key={index}\n                />\n              ))}\n          </div>\n          {episodes.length > 0 && (\n            <div className=\"Season__episodes__toggle\" onClick={toggleEpisodes}>\n              {showEpisodes ? t('Hide episodes') : t('Show all episodes')}\n            </div>\n          )}\n        </div>\n        <p className=\"Season__overview\">{season.summary}</p>\n        <div className=\"Season__people\">\n          <div className=\"Season__people__cast\">\n            <h4>{t('Starring')}</h4>\n            <PersonList\n              people={season.cast}\n              details={(person) => person.character}\n            />\n          </div>\n          <div className=\"Season__people__crew\">\n            <h4>{t('Crew')}</h4>\n            <PersonList people={season.crew} details={(person) => person.job} />\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default SeasonView\n","import React, { useMemo } from 'react'\nimport NotFound from '../NotFound'\nimport { RootState } from '../../store'\nimport { RouteComponentProps } from 'react-router-dom'\nimport Season from '../../components/Season'\nimport { episodesBySeasonSelector } from '../../store/episodes/selectors'\nimport { seasonSelector } from '../../store/seasons/selectors'\nimport { showSelector } from '../../store/shows/selectors'\nimport { sortByNumber } from '../../util'\nimport { useSelector } from 'react-redux'\n\ninterface SeasonViewParams {\n  id: string\n}\n\ntype SeasonViewProps = RouteComponentProps<SeasonViewParams>\n\nconst SeasonView = ({ match }: SeasonViewProps) => {\n  const season = useSelector((state: RootState) =>\n    seasonSelector(match.params.id)(state.seasons),\n  )\n  const { show, seasonEpisodes } = useSelector((state: RootState) => ({\n    show: season && showSelector(season.showId)(state.shows),\n    seasonEpisodes:\n      season &&\n      sortByNumber(\n        episodesBySeasonSelector(season.id)(state.episodes),\n        (episode) => episode.number,\n      ),\n  }))\n  const currentEpisode = useMemo(() => {\n    if (season !== undefined && seasonEpisodes !== undefined)\n      return seasonEpisodes.find(\n        (episode) => episode.number === season.usage.progress,\n      )\n  }, [season, seasonEpisodes])\n\n  return show !== undefined &&\n    season !== undefined &&\n    seasonEpisodes !== undefined ? (\n    <Season\n      show={show}\n      season={season}\n      episodes={seasonEpisodes}\n      currentEpisode={currentEpisode}\n    />\n  ) : (\n    <NotFound />\n  )\n}\n\nexport default SeasonView\n","import Icon from '../Icon'\nimport React from 'react'\n\ntype Props = {\n  color: string\n}\n\nexport default ({ color }: Props) => (\n  <Icon className=\"e-add\" width={32} height={32}>\n    <title>e add</title>\n    <g fill={color} stroke={color}>\n      <line fill=\"none\" stroke={color} x1=\"16\" x2=\"16\" y1=\"2\" y2=\"30\" />\n      <line fill=\"none\" stroke={color} x1=\"30\" x2=\"2\" y1=\"16\" y2=\"16\" />\n    </g>\n  </Icon>\n)\n","import './ProviderButton.scss'\nimport React from 'react'\n\ntype ProviderButtonProps = {\n  className?: string\n  icon: JSX.Element\n\n  onClick: (event: React.MouseEvent) => void\n}\n\nconst ProviderButton = ({ className, icon, onClick }: ProviderButtonProps) => (\n  <div className=\"ProviderButton\">\n    <button className={className} onClick={onClick}>\n      {icon}\n    </button>\n  </div>\n)\n\nexport default ProviderButton\n","import './ChooseProvider.scss'\nimport { PROVIDER_KINDS, ProviderKind } from '../../types/providers/Provider'\nimport React, { useCallback } from 'react'\nimport ProviderButton from '../ProviderButton'\nimport { buildProviderIcon } from '../../util'\nimport styles from '../../_variables.scss'\nimport { useTranslation } from 'react-i18next'\n\ntype ChooseProviderProps = {\n  onChoose: (kind: ProviderKind) => Promise<void>\n}\n\nconst ChooseProvider = ({ onChoose }: ChooseProviderProps) => {\n  const { t } = useTranslation()\n\n  const handleChoose = useCallback(\n    (kind: ProviderKind) => () => onChoose(kind),\n    [onChoose],\n  )\n\n  return (\n    <div className=\"ChooseProvider\">\n      <h2>{t('Add a provider')}</h2>\n      <p>\n        {t(\n          'Select which service you want to use to stream your movies & shows.',\n        )}\n      </p>\n      <div className=\"ChooseProvider__providers\">\n        {PROVIDER_KINDS.map((kind, index) => (\n          <ProviderButton\n            icon={buildProviderIcon(kind, styles.white)}\n            onClick={handleChoose(kind)}\n            key={index}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n\nexport default ChooseProvider\n","import './Modal.scss'\nimport React, { FunctionComponent, useRef } from 'react'\nimport classNames from 'classnames'\nimport useOnClickOutside from 'use-onclickoutside'\n\ntype ModalProps = {\n  isActive: boolean\n\n  onClose: () => void\n}\n\nexport const Modal: FunctionComponent<ModalProps> = ({\n  isActive,\n  onClose,\n  children,\n}) => {\n  const modalRef = useRef(null)\n  useOnClickOutside(modalRef, onClose)\n\n  return (\n    <div className={classNames('Modal', { active: isActive })}>\n      <div className=\"Modal__wrapper\" ref={modalRef}>\n        {children}\n      </div>\n    </div>\n  )\n}\n\nexport default Modal\n","import Icon from '../Icon'\nimport React from 'react'\n\ntype Props = {\n  color: string\n}\n\nexport default ({ color }: Props) => (\n  <Icon className=\"c-check\" width={24} height={24}>\n    <title>c check</title>\n    <g fill={color}>\n      <path\n        d=\"M12,0A12,12,0,1,0,24,12,12.035,12.035,0,0,0,12,0ZM10,17.414,4.586,12,6,10.586l4,4,8-8L19.414,8Z\"\n        fill={color}\n      />\n    </g>\n  </Icon>\n)\n","import './ProviderForm.scss'\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport CheckIcon from '../icons/Nucleo/c-check'\nimport { Provider } from '../../types/providers/Provider'\nimport classNames from 'classnames'\nimport styles from '../../_variables.scss'\nimport { useTranslation } from 'react-i18next'\n\ntype ProviderFormProps = {\n  submitCaption: string\n  provider?: Provider\n\n  onSubmit: (\n    moviesPath: string | undefined,\n    showsPath: string | undefined,\n  ) => void\n}\n\ntype ProviderFormState = {\n  moviesPath?: string\n  showsPath?: string\n}\n\nconst ProviderForm = ({\n  submitCaption,\n  provider,\n  onSubmit,\n}: ProviderFormProps) => {\n  const { t } = useTranslation()\n\n  const initalState = useMemo<ProviderFormState>(\n    () => ({\n      moviesPath: provider?.moviesPath,\n      showsPath: provider?.showsPath,\n    }),\n    [provider],\n  )\n  const [state, setState] = useState<ProviderFormState>(initalState)\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>): void => {\n      const target = event.currentTarget\n      setState((state) => ({\n        ...state,\n        [target.name]: target.value === '' ? undefined : target.value,\n      }))\n    },\n    [setState],\n  )\n\n  const handleSubmit = useCallback(\n    (event: React.FormEvent<HTMLFormElement>): void => {\n      event.preventDefault()\n      onSubmit(state.moviesPath, state.showsPath)\n    },\n    [onSubmit, state],\n  )\n\n  const isSetupInput = useCallback(\n    (value: string | undefined) => value !== undefined,\n    [],\n  )\n\n  const isValidInput = useCallback(\n    (value: string | undefined) => value !== undefined && value.startsWith('/'),\n    [],\n  )\n\n  const isValid = useMemo(\n    () =>\n      (!isSetupInput(state.moviesPath) || isValidInput(state.moviesPath)) &&\n      (!isSetupInput(state.showsPath) || isValidInput(state.showsPath)),\n    [isSetupInput, isValidInput, state],\n  )\n\n  useEffect(() => {\n    setState(initalState)\n  }, [initalState, setState])\n\n  return (\n    <form className=\"ProviderForm\" onSubmit={handleSubmit}>\n      <label>\n        {t('Movies path')}\n        <p className=\"small\">\n          {t(\n            'The path from your home directory to where you keep your movies.',\n          )}\n        </p>\n        <div\n          className={classNames('ProviderForm__input', {\n            setup: isSetupInput(state.moviesPath),\n            valid: isValidInput(state.moviesPath),\n          })}\n        >\n          <input\n            type=\"text\"\n            name=\"moviesPath\"\n            value={state.moviesPath || ''}\n            placeholder=\"/Plaain/movies\"\n            onChange={handleChange}\n          />\n          <CheckIcon color={styles.white} />\n        </div>\n      </label>\n\n      <label>\n        {t('Shows path')}\n        <p className=\"small\">\n          {t('The path from your home directory to where you keep your shows.')}\n        </p>\n        <div\n          className={classNames('ProviderForm__input', {\n            setup: isSetupInput(state.showsPath),\n            valid: isValidInput(state.showsPath),\n          })}\n        >\n          <input\n            type=\"text\"\n            name=\"showsPath\"\n            value={state.showsPath || ''}\n            placeholder=\"/Plaain/shows\"\n            onChange={handleChange}\n          />\n          <CheckIcon color={styles.white} />\n        </div>\n      </label>\n\n      <div className=\"ProviderForm__actions\">\n        <button type=\"submit\" disabled={!isValid}>\n          {submitCaption}\n        </button>\n      </div>\n    </form>\n  )\n}\n\nexport default ProviderForm\n","import './SetupProvider.scss'\nimport ProviderForm from './ProviderForm'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\ntype SetupProviderProps = {\n  onSetup: (\n    moviesPath: string | undefined,\n    showsPath: string | undefined,\n  ) => void\n}\n\nconst SetupProvider = ({ onSetup }: SetupProviderProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"SetupProvider\">\n      <h2>{t('Setup your provider')}</h2>\n      <p>\n        {t(\n          \"All that's left is to tell Plaain where to look for your movies and shows. You can always skip this step and come back later.\",\n        )}\n      </p>\n      <ProviderForm submitCaption={t('Complete')} onSubmit={onSetup} />\n    </div>\n  )\n}\n\nexport default SetupProvider\n","import './AddProviderModal.scss'\nimport { Provider, ProviderKind } from '../../types/providers/Provider'\nimport React, { useCallback, useState } from 'react'\nimport { AuthResponse } from '../../services/auth/types'\nimport ChooseProvider from './ChooseProvider'\nimport Modal from '../Modal'\nimport SetupProvider from './SetupProvider'\n\ntype AddProviderModalProps = {\n  isActive: boolean\n\n  onClose: () => void\n  onSetupAuth: (kind: ProviderKind) => Promise<AuthResponse | undefined>\n  onAddProvider: (provider: Provider) => void\n}\n\nconst AddProviderModal = ({\n  isActive,\n  onClose,\n  onSetupAuth,\n  onAddProvider,\n}: AddProviderModalProps) => {\n  const [authResponse, setAuthResponse] = useState<AuthResponse | undefined>()\n\n  const handleChoose = useCallback(\n    async (kind: ProviderKind) => {\n      const authResponse = await onSetupAuth(kind)\n      setAuthResponse(authResponse)\n    },\n    [setAuthResponse, onSetupAuth],\n  )\n\n  const handleSetup = useCallback(\n    (moviesPath: string | undefined, showsPath: string | undefined) => {\n      if (authResponse === undefined) return\n\n      const provider = { ...authResponse, moviesPath, showsPath }\n      onAddProvider(provider)\n      onClose()\n    },\n    [authResponse, onAddProvider, onClose],\n  )\n\n  return (\n    <div className=\"AddProviderModal\">\n      <Modal isActive={isActive} onClose={onClose}>\n        {authResponse === undefined ? (\n          <ChooseProvider onChoose={handleChoose} />\n        ) : (\n          <SetupProvider onSetup={handleSetup} />\n        )}\n      </Modal>\n    </div>\n  )\n}\n\nexport default AddProviderModal\n","import './UpdateProviderModal.scss'\nimport React, { useCallback } from 'react'\nimport Modal from '../Modal'\nimport { Provider } from '../../types/providers/Provider'\nimport ProviderForm from './ProviderForm'\nimport { buildProviderKindName } from '../../util'\nimport { useTranslation } from 'react-i18next'\n\ntype UpdateProviderModalProps = {\n  isActive: boolean\n  provider: Provider\n\n  onClose: () => void\n  onUpdateProvider: (provider: Provider) => void\n  onRemoveProvider: () => void\n}\n\nconst UpdateProviderModal = ({\n  isActive,\n  provider,\n  onClose,\n  onUpdateProvider,\n  onRemoveProvider,\n}: UpdateProviderModalProps) => {\n  const { t } = useTranslation()\n\n  const handleUpdate = useCallback(\n    (moviesPath: string | undefined, showsPath: string | undefined) => {\n      onUpdateProvider({ ...provider, moviesPath, showsPath })\n      onClose()\n    },\n    [onClose, onUpdateProvider, provider],\n  )\n\n  const handleRemoveProvider = useCallback(() => {\n    if (!window.confirm(t('Are you sure?'))) return\n\n    onRemoveProvider()\n    onClose()\n  }, [onClose, onRemoveProvider, t])\n\n  return (\n    <div className=\"UpdateProviderModal\">\n      <Modal isActive={isActive} onClose={onClose}>\n        <h2>{buildProviderKindName(provider.kind)}</h2>\n        <p>{provider.name}</p>\n        <ProviderForm\n          submitCaption={t('Update')}\n          provider={provider}\n          onSubmit={handleUpdate}\n        />\n        <button className=\"secondary\" onClick={handleRemoveProvider}>\n          {t('Remove')}\n        </button>\n      </Modal>\n    </div>\n  )\n}\n\nexport default UpdateProviderModal\n","import './Settings.scss'\nimport { Provider, ProviderKind } from '../types/providers/Provider'\nimport React, { useCallback, useState } from 'react'\nimport { Trans, useTranslation } from 'react-i18next'\nimport AddIcon from './icons/Nucleo/e-add'\nimport AddProviderModal from './authentication/AddProviderModal'\nimport { AuthResponse } from '../services/auth/types'\nimport ProviderButton from './ProviderButton'\nimport UpdateProviderModal from './authentication/UpdateProviderModal'\nimport { VERSION } from '../constants'\nimport { buildProviderIcon } from '../util'\nimport classNames from 'classnames'\nimport styles from '../_variables.scss'\n\ntype SettingsViewProps = {\n  providers: Provider[]\n\n  onSetupAuth: (kind: ProviderKind) => Promise<AuthResponse | undefined>\n  onAddProvider: (provider: Provider) => void\n  onUpdateProvider: (provider: Provider) => void\n  onRemoveProvider: (id: string) => void\n  onIndex: () => void\n  onFetchMetadataAll: () => void\n}\n\nconst SettingsView = ({\n  providers,\n  onSetupAuth,\n  onAddProvider,\n  onUpdateProvider,\n  onRemoveProvider,\n  onIndex,\n  onFetchMetadataAll,\n}: SettingsViewProps) => {\n  const { t } = useTranslation()\n\n  const [showAddProviderModal, setShowAddProviderModal] = useState(false)\n  const [showUpdateProviderModals, setShowUpdateProviderModals] = useState<{\n    [index: number]: boolean\n  }>(providers.reduce((acc, _, index) => ({ ...acc, [index]: false }), {}))\n\n  const handleShowUpdateProviderModal = useCallback(\n    (index: number) => () =>\n      setShowUpdateProviderModals((state) => ({ ...state, [index]: true })),\n    [setShowUpdateProviderModals],\n  )\n  const handleCloseUpdateProviderModal = useCallback(\n    (index: number) => () =>\n      setShowUpdateProviderModals((state) => ({ ...state, [index]: false })),\n    [setShowUpdateProviderModals],\n  )\n\n  const handleShowAddProviderModal = useCallback(\n    () => setShowAddProviderModal(true),\n    [setShowAddProviderModal],\n  )\n  const handleCloseAddProviderModal = useCallback(\n    () => setShowAddProviderModal(false),\n    [setShowAddProviderModal],\n  )\n\n  const handleRemoveProvider = useCallback(\n    (id: string) => () => onRemoveProvider(id),\n    [onRemoveProvider],\n  )\n\n  return (\n    <div className=\"Settings\">\n      <section className=\"Settings__auth\">\n        <h2>{t('Authentication')}</h2>\n        <p>\n          {t(\n            'Sign into your cloud to add your movies and TV shows to your library.',\n          )}\n        </p>\n        <div className=\"Settings__auth__scroll\">\n          <div className=\"Settings__auth__providers\">\n            {providers.map((provider, index) => (\n              <div className=\"Settings__auth__provider\" key={index}>\n                <ProviderButton\n                  className={classNames('primary', {\n                    warn:\n                      provider.moviesPath === undefined &&\n                      provider.showsPath === undefined,\n                  })}\n                  icon={buildProviderIcon(provider.kind, styles.white)}\n                  onClick={handleShowUpdateProviderModal(index)}\n                />\n                <UpdateProviderModal\n                  isActive={showUpdateProviderModals[index]}\n                  provider={provider}\n                  onClose={handleCloseUpdateProviderModal(index)}\n                  onUpdateProvider={onUpdateProvider}\n                  onRemoveProvider={handleRemoveProvider(provider.id)}\n                  key={7}\n                />\n              </div>\n            ))}\n            <div className=\"Settings__auth__provider\" key={providers.length}>\n              <ProviderButton\n                icon={<AddIcon color={styles.white} />}\n                onClick={handleShowAddProviderModal}\n                key={5}\n              />\n              <AddProviderModal\n                isActive={showAddProviderModal}\n                onClose={handleCloseAddProviderModal}\n                onSetupAuth={onSetupAuth}\n                onAddProvider={onAddProvider}\n                key={7}\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"Settings__indexing\">\n        <h2>{t('Indexing')}</h2>\n        <p>\n          {t(\n            'Index to look for new media on your linked services or fetch the latest metadata.',\n          )}\n        </p>\n        <div className=\"Settings__indexing__actions\">\n          <button onClick={onIndex}>{t('Index')}</button>\n          <button onClick={onFetchMetadataAll}>{t('Update metadata')}</button>\n        </div>\n      </section>\n\n      <section className=\"Settings__version\">\n        <h2>{t('Version')}</h2>\n        <p>{t('Plaain {{version}}.', { version: VERSION })}</p>\n        <p className=\"small\">\n          <Trans>\n            Plaain is{' '}\n            <a\n              href=\"https://github.com/jonhue/plaain\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              open-source\n            </a>\n            . See the{' '}\n            <a\n              href=\"https://github.com/jonhue/plaain/releases\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              changelog\n            </a>\n            .\n          </Trans>\n        </p>\n        <p className=\"small\">\n          <Trans>\n            Note that Plaain may <span className=\"bold\">not</span> be used to\n            stream pirated content or publicly share your private media library.\n            You may only connect to your private cloud storage.\n          </Trans>\n        </p>\n      </section>\n    </div>\n  )\n}\n\nexport default SettingsView\n","import { AppDispatch, RootState } from '../../store'\nimport { Provider, ProviderKind } from '../../types/providers/Provider'\nimport React, { useCallback } from 'react'\nimport { fetchAllMetadata, index, removeProvider } from '../../store/thunks'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Settings from '../../components/Settings'\nimport { load } from '../../store/ui/thunks'\nimport { providersSelector } from '../../store/auth/selectors'\nimport { setupAuth } from '../../store/auth/thunks'\nimport { updateProvider } from '../../store/auth/actions'\n\nconst SettingsView = () => {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const providers = useSelector((state: RootState) =>\n    providersSelector(state.auth),\n  )\n\n  const handleSetupAuth = useCallback(\n    (kind: ProviderKind) => dispatch(load(setupAuth(kind))),\n    [dispatch],\n  )\n\n  const handleUpdateProvider = useCallback(\n    (provider: Provider) => {\n      dispatch(updateProvider(provider))\n      dispatch(load(index([provider])))\n    },\n    [dispatch],\n  )\n\n  const handleIndex = useCallback(() => dispatch(load(index(providers))), [\n    dispatch,\n    providers,\n  ])\n\n  const handleFetchMetadataAll = useCallback(\n    () => dispatch(load(fetchAllMetadata())),\n    [dispatch],\n  )\n\n  return (\n    <Settings\n      providers={providers}\n      onSetupAuth={handleSetupAuth}\n      onAddProvider={handleUpdateProvider}\n      onUpdateProvider={handleUpdateProvider}\n      onRemoveProvider={removeProvider}\n      onIndex={handleIndex}\n      onFetchMetadataAll={handleFetchMetadataAll}\n    />\n  )\n}\n\nexport default SettingsView\n","import './Show.scss'\nimport { buildBackdropUrl, buildCoverUrl } from '../util'\nimport Backdrop from './Backdrop'\nimport Cover from './Cover'\nimport HorizontalSlide from './HorizontalSlide'\nimport React from 'react'\nimport { Season } from '../types/items/Season'\nimport { Show } from '../types/items/Show'\nimport { useTranslation } from 'react-i18next'\n\ntype ShowViewProps = {\n  show: Show\n  seasons: Season[]\n}\n\nconst ShowView = ({ show, seasons }: ShowViewProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"Show\">\n      <Backdrop url={buildBackdropUrl(show.backdropPath)} />\n      <div className=\"Show__details\">\n        <Cover url={buildCoverUrl(show.posterPath)} alt=\"poster\" />\n        <h1>{show.title}</h1>\n        <div className=\"Show__information\">\n          <p className=\"small\">\n            {new Date(show.firstAirDate).getFullYear()} -{' '}\n            {new Date(show.lastAirDate).getFullYear()}\n          </p>\n        </div>\n        <p className=\"Show__overview\">{show.summary}</p>\n      </div>\n      {seasons.length > 0 && (\n        <div className=\"Show__seasons\">\n          <h2>{t('Seasons')}</h2>\n          <HorizontalSlide items={seasons} id=\"seasons\" />\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default ShowView\n","import NotFound from '../NotFound'\nimport React from 'react'\nimport { RootState } from '../../store'\nimport { RouteComponentProps } from 'react-router-dom'\nimport Show from '../../components/Show'\nimport { seasonsByShowSelector } from '../../store/seasons/selectors'\nimport { showSelector } from '../../store/shows/selectors'\nimport { sortByNumber } from '../../util'\nimport { useSelector } from 'react-redux'\n\ninterface ShowViewParams {\n  id: string\n}\n\ntype ShowViewProps = RouteComponentProps<ShowViewParams>\n\nconst ShowView = ({ match }: ShowViewProps) => {\n  const show = useSelector((state: RootState) =>\n    showSelector(match.params.id)(state.shows),\n  )\n\n  const showSeasons = useSelector(\n    (state: RootState) =>\n      show &&\n      sortByNumber(\n        seasonsByShowSelector(show.id)(state.seasons),\n        (season) => season.number,\n      ),\n  )\n\n  return show !== undefined && showSeasons !== undefined ? (\n    <Show show={show} seasons={showSeasons} />\n  ) : (\n    <NotFound />\n  )\n}\n\nexport default ShowView\n","import './Shows.scss'\nimport ItemGrid from './ItemGrid'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\nimport { Show } from '../types/items/Show'\nimport VerticalSlide from './VerticalSlide'\nimport ZoomIcon from './icons/Nucleo/zoom'\nimport styles from '../_variables.scss'\n\ntype ShowsViewProps = {\n  shows: Show[]\n}\n\nconst ShowsView = ({ shows }: ShowsViewProps) => (\n  <div className=\"Shows\">\n    <div className=\"Shows__find\">\n      <Link to=\"/app/find\">\n        <ZoomIcon color={styles.white} />\n      </Link>\n    </div>\n    {window.innerWidth < Number.parseInt(styles.brPhone) ? (\n      <VerticalSlide items={shows} path=\"shows\" id=\"shows\" />\n    ) : (\n      <ItemGrid items={shows} />\n    )}\n  </div>\n)\n\nexport default ShowsView\n","import React from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { RootState } from '../../store'\nimport Shows from '../../components/Shows'\nimport { showsSelector } from '../../store/shows/selectors'\nimport { sortAlphabetically } from '../../util'\nimport { useSelector } from 'react-redux'\n\nconst ShowsView = () => {\n  const shows = useSelector((state: RootState) =>\n    sortAlphabetically(showsSelector(state.shows), (show) => show.title),\n  )\n\n  return shows.length > 0 ? <Shows shows={shows} /> : <Redirect to=\"/app\" />\n}\n\nexport default ShowsView\n","import './index.scss'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\nimport Find from './Find'\nimport Home from './Home'\nimport Movie from './Movie'\nimport Movies from './Movies'\nimport Nav from '../../components/Nav'\nimport NotFound from '../NotFound'\nimport Person from './Person'\nimport React from 'react'\nimport { RootState } from '../../store'\nimport Season from './Season'\nimport Settings from './Settings'\nimport Show from './Show'\nimport Shows from './Shows'\nimport { useSelector } from 'react-redux'\n\ntype AppProps = RouteComponentProps\n\nconst App = ({ match }: AppProps) => {\n  const { moviesCount, showsCount } = useSelector((state: RootState) => ({\n    moviesCount: Object.keys(state.movies).length,\n    showsCount: Object.keys(state.shows).length,\n  }))\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path={`${match.path}/`} exact component={Home} />\n        <Route path={`${match.path}/movies/:id`} exact component={Movie} />\n        <Route path={`${match.path}/movies`} component={Movies} />\n        <Route path={`${match.path}/shows/:id`} exact component={Show} />\n        <Route path={`${match.path}/shows`} component={Shows} />\n        <Route path={`${match.path}/seasons/:id`} exact component={Season} />\n        <Route path={`${match.path}/people/:id`} exact component={Person} />\n        <Route path={`${match.path}/settings`} exact component={Settings} />\n        <Route path={`${match.path}/find`} exact component={Find} />\n        <Route component={NotFound} />\n      </Switch>\n\n      <Nav\n        moviesDisabled={moviesCount === 0}\n        showsDisabled={showsCount === 0}\n      />\n    </div>\n  )\n}\n\nexport default App\n"],"sourceRoot":""}