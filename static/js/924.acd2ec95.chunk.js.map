{"version":3,"file":"static/js/924.acd2ec95.chunk.js","mappings":"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","sources":["components/authentication/AddProviderModal.tsx","components/Cover.tsx","components/HorizontalSlide.tsx","store/selectors.ts","views/app/Find.tsx","services/find.ts","store/people/selectors.ts","components/get_started/Authenticated.tsx","components/ForYou.tsx","components/get_started/Setup.tsx","components/get_started/Unauthenticated.tsx","views/app/Home.tsx","components/FileList.tsx","hooks/toggle.ts","components/PersonList.tsx","views/app/Movie.tsx","components/ItemGrid.tsx","components/VerticalSlide.tsx","views/app/Movies.tsx","components/icons/Nucleo/FindIcon.tsx","components/icons/Nucleo/ForYouIcon.tsx","components/icons/Nucleo/MovieIcon.tsx","components/icons/Nucleo/SettingsIcon.tsx","components/icons/Nucleo/ShowIcon.tsx","components/Tab.tsx","components/Nav.tsx","views/app/Person.tsx","components/EpisodeEntry.tsx","views/app/Season.tsx","components/icons/Nucleo/AddIcon.tsx","components/ProviderButton.tsx","components/authentication/ChooseProvider.tsx","components/icons/Nucleo/CheckIcon.tsx","components/authentication/FTPProviderForm.tsx","components/authentication/EnterDetailsProvider.tsx","components/authentication/ProviderForm.tsx","components/authentication/SetupProvider.tsx","components/authentication/UpdateProviderModal.tsx","components/LanguageSelector.tsx","views/app/Settings.tsx","views/app/Show.tsx","views/app/Shows.tsx","views/app/index.tsx"],"sourcesContent":["import './AddProviderModal.scss'\nimport { AuthResponse, AuthSetup } from '../../services/auth/types'\nimport { Provider, ProviderKind } from '../../types/providers/Provider'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { ChooseProvider } from './ChooseProvider'\nimport { EnterDetailsProvider } from './EnterDetailsProvider'\nimport { Modal } from '../Modal'\nimport { SetupProvider } from './SetupProvider'\nimport { useModal } from '../../hooks/modal'\nimport { useSetupAuthRedirect } from '../../hooks/auth'\n\nenum State {\n  Choose,\n  EnterDetails,\n  Setup,\n}\n\ntype AddProviderModalProps = {\n  isActive: boolean\n\n  onClose: () => void\n  onSetupAuth: (config: AuthSetup) => Promise<AuthResponse | undefined>\n  onAddProvider: (provider: Provider) => void\n}\n\nexport const AddProviderModal = ({\n  isActive,\n  onClose,\n  onSetupAuth,\n  onAddProvider,\n}: AddProviderModalProps) => {\n  const [show, handleOpen] = useModal()\n\n  const initialState = useMemo(() => State.Choose, [])\n  const [state, setState] = useState(initialState)\n  const [kind, setKind] = useState<ProviderKind | undefined>()\n  const [authResponse, setAuthResponse] = useState<AuthResponse | undefined>()\n  useSetupAuthRedirect((response) => {\n    setAuthResponse(response)\n    setState(State.Setup)\n    handleOpen()\n  })\n\n  const handleClose = useCallback(() => {\n    onClose()\n    setTimeout(() => {\n      setState(initialState)\n      setKind(undefined)\n      setAuthResponse(undefined)\n    }, 500)\n  }, [initialState, onClose, setAuthResponse, setKind, setState])\n\n  const handleChoose = useCallback(\n    async (kind: ProviderKind) => {\n      setKind(kind)\n      switch (kind) {\n        case ProviderKind.FTP:\n          setState(State.EnterDetails)\n          return\n        case ProviderKind.OneDrive:\n          const authResponse = await onSetupAuth({ kind })\n          setAuthResponse(authResponse)\n          setState(State.Setup)\n          return\n      }\n    },\n    [setAuthResponse, setKind, onSetupAuth, setState],\n  )\n\n  const handleEnteredDetails = useCallback(\n    async (config: AuthSetup) => {\n      const authResponse = await onSetupAuth(config)\n      setAuthResponse(authResponse)\n      setState(State.Setup)\n    },\n    [setAuthResponse, onSetupAuth],\n  )\n\n  const handleSetup = useCallback(\n    (moviesPath: string | undefined, showsPath: string | undefined) => {\n      if (authResponse === undefined) return\n\n      const provider = { ...authResponse, moviesPath, showsPath }\n      onAddProvider(provider)\n      handleClose()\n    },\n    [authResponse, onAddProvider, handleClose],\n  )\n\n  return (\n    <div className=\"AddProviderModal\">\n      <Modal isActive={isActive || show} onClose={handleClose}>\n        {state === State.Choose ? (\n          <ChooseProvider onChoose={handleChoose} />\n        ) : state === State.EnterDetails ? (\n          <EnterDetailsProvider\n            kind={kind!}\n            onEnteredDetails={handleEnteredDetails}\n          />\n        ) : state === State.Setup ? (\n          <SetupProvider onSetup={handleSetup} />\n        ) : null}\n      </Modal>\n    </div>\n  )\n}\n","import './Cover.scss'\nimport React from 'react'\n\ntype CoverProps = {\n  url: string\n  alt: string\n}\n\nexport const Cover = ({ url, alt }: CoverProps) => (\n  <img className=\"Cover\" src={url} alt={alt} />\n)\n","import './HorizontalSlide.scss'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport { buildCoverUrl, buildItemUrl } from '../util'\nimport { AccPerson } from '../types/items/Person'\nimport { Cover } from './Cover'\nimport { Link } from 'react-router-dom'\nimport { Movie } from '../types/items/Movie'\nimport React from 'react'\nimport { Season } from '../types/items/Season'\nimport { Show } from '../types/items/Show'\nimport classNames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\ntype HorizontalSlideProps = {\n  id: string\n  items: (Movie | Season | Show | AccPerson)[]\n  small?: boolean\n}\n\nexport const HorizontalSlide = ({ id, items, small }: HorizontalSlideProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className={classNames('HorizontalSlide', { small })} id={id}>\n      <Swiper\n        spaceBetween={15}\n        slidesPerView=\"auto\"\n        slidesOffsetBefore={20}\n        slidesOffsetAfter={20}\n        grabCursor\n      >\n        {items.length > 0 ? (\n          items.map((item, index) => (\n            <SwiperSlide key={index}>\n              <Link to={buildItemUrl(item)}>\n                <Cover url={buildCoverUrl(item.posterPath)} alt={item.title} />\n                {small && <h6>{item.title}</h6>}\n              </Link>\n            </SwiperSlide>\n          ))\n        ) : (\n          <SwiperSlide>\n            <h3>{t('Nothing found.')}</h3>\n          </SwiperSlide>\n        )}\n      </Swiper>\n    </div>\n  )\n}\n","import {\n  inProgressSelector as inProgressMoviesSelector,\n  moviesPersonSelector,\n  recentlyWatchedSelector as recentlyWatchedMoviesSelector,\n} from './movies/selectors'\nimport {\n  inProgressSelector as inProgressSeasonsSelector,\n  recentlyWatchedSelector as recentlyWatchedSeasonsSelector,\n  seasonsPersonSelector,\n} from './seasons/selectors'\nimport { AccPerson } from '../types/items/Person'\nimport { ItemKind } from '../types/items/Item'\nimport { RootState } from '.'\nimport { createSelector } from 'reselect'\n\nexport const inProgressSelector = createSelector(\n  [\n    (state: RootState) => inProgressMoviesSelector(state.movies),\n    (state: RootState) => inProgressSeasonsSelector(state.seasons),\n  ],\n  (movies, seasons) => [...movies, ...seasons],\n)\n\nexport const recentlyWatchedSelector = createSelector(\n  [\n    (state: RootState) => recentlyWatchedMoviesSelector(state.movies),\n    (state: RootState) => recentlyWatchedSeasonsSelector(state.seasons),\n  ],\n  (movies, seasons) => [...movies, ...seasons],\n)\n\nexport const personSelector = (id: string) =>\n  createSelector(\n    [\n      ({ movies }) => moviesPersonSelector(id, (movie) => movie.cast)(movies),\n      ({ movies }) => moviesPersonSelector(id, (movie) => movie.crew)(movies),\n      ({ seasons }) =>\n        seasonsPersonSelector(id, (season) => season.cast)(seasons),\n      ({ seasons }) =>\n        seasonsPersonSelector(id, (season) => season.crew)(seasons),\n    ],\n    (moviesCast, moviesCrew, seasonsCast, seasonsCrew) => {\n      const roles = [\n        ...moviesCast,\n        ...moviesCrew,\n        ...seasonsCast,\n        ...seasonsCrew,\n      ]\n\n      const characters = moviesCast\n        .concat(seasonsCast)\n        .map((person) => person.character)\n\n      return roles.reduce<AccPerson | undefined>(\n        (acc, person) => ({\n          kind: ItemKind.Person,\n          id,\n          tmdbId: person.tmdbId,\n          title: person.title,\n          gender: person.gender,\n          posterPath: person.posterPath,\n          characters,\n          jobs:\n            person.job === undefined\n              ? acc?.jobs\n              : acc !== undefined && acc.jobs !== undefined\n                ? [...new Set([...acc.jobs, person.job])]\n                : [person.job],\n        }),\n        undefined,\n      )\n    },\n  )\n","import './Find.scss'\nimport { Navigate, useLocation, useNavigate } from 'react-router-dom'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport {\n  buildMovieSearchKey,\n  buildPersonSearchKey,\n  buildShowSearchKey,\n} from '../../services/find'\nimport { movieSelector, moviesSelector } from '../../store/movies/selectors'\nimport { showSelector, showsSelector } from '../../store/shows/selectors'\nimport { HorizontalSlide } from '../../components/HorizontalSlide'\nimport { Index } from 'flexsearch'\nimport { RootState } from '../../store'\nimport { notUndefined } from '../../util'\nimport { peopleSelector } from '../../store/people/selectors'\nimport { personSelector } from '../../store/selectors'\nimport { seasonsByShowSelector } from '../../store/seasons/selectors'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\nconst QUERY_PARAMETER = 'q'\n\ntype SearchItem = {\n  id: string\n}\n\nconst buildIndex = <T extends SearchItem>(\n  items: T[],\n  itemToText: (item: T) => string,\n) => {\n  const index = new Index({\n    tokenize: 'forward',\n  })\n  items.forEach((item) => index.add(item.id, itemToText(item)))\n  return index\n}\n\nexport const Find = () => {\n  const { t } = useTranslation()\n  const navigate = useNavigate()\n  const location = useLocation()\n\n  const initialQuery = useMemo(\n    () => new URLSearchParams(location.search).get(QUERY_PARAMETER),\n    [location],\n  )\n\n  const { people, movies, seasons, shows, state } = useSelector(\n    (state: RootState) => ({\n      people: state.people,\n      movies: state.movies,\n      seasons: state.seasons,\n      shows: state.shows,\n      state,\n    }),\n  )\n\n  const [query, setQuery] = useState(initialQuery || '')\n\n  const moviesIndex = useMemo(\n    () =>\n      buildIndex(moviesSelector(movies), (movie) => buildMovieSearchKey(movie)),\n    [movies],\n  )\n  const showsIndex = useMemo(\n    () =>\n      buildIndex(showsSelector(shows), (show) =>\n        buildShowSearchKey(show, seasonsByShowSelector(show.id)(seasons)),\n      ),\n    [shows],\n  )\n  const peopleIndex: Index = useMemo(\n    () =>\n      buildIndex(\n        peopleSelector(people)\n          .map((id) => personSelector(id)(state))\n          .filter(notUndefined),\n        (person) => buildPersonSearchKey(person),\n      ),\n    [shows],\n  )\n\n  const foundMovies = useMemo(() => {\n    const result = moviesIndex.search(query)\n    return result\n      .map((id) => movieSelector(id as string)(movies))\n      .filter(notUndefined)\n  }, [moviesIndex, query])\n  const foundShows = useMemo(() => {\n    const result = showsIndex.search(query)\n    return result\n      .map((id) => showSelector(id as string)(shows))\n      .filter(notUndefined)\n  }, [showsIndex, query])\n  const foundPeople = useMemo(() => {\n    const result = peopleIndex.search(query)\n    return result\n      .map((id) => personSelector(id as string)(state))\n      .filter(notUndefined)\n  }, [peopleIndex, query])\n\n  const handleInputChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      navigate(`/app/find?${QUERY_PARAMETER}=${event.target.value}`, {\n        replace: true,\n      })\n      setQuery(event.target.value)\n    },\n    [navigate, setQuery],\n  )\n\n  return moviesSelector(movies).length > 0 ||\n    showsSelector(shows).length > 0 ? (\n    <div className=\"Find\">\n      <form>\n        <input\n          autoFocus\n          value={query}\n          placeholder={t('Search your library')}\n          onChange={handleInputChange}\n        />\n      </form>\n\n      {foundMovies.length === 0 &&\n        foundShows.length === 0 &&\n        foundPeople.length === 0 &&\n        (query ? (\n          <p>{t(\"We couldn't find anything matching your search.\")}</p>\n        ) : (\n          <p>\n            {t('Search for any movie, TV show, person or fictional character.')}\n          </p>\n        ))}\n\n      {foundMovies.length > 0 && (\n        <section>\n          <h2>{t('Movies')}</h2>\n          <HorizontalSlide items={foundMovies} id=\"movies\" />\n        </section>\n      )}\n\n      {foundShows.length > 0 && (\n        <section>\n          <h2>{t('TV shows')}</h2>\n          <HorizontalSlide items={foundShows} id=\"shows\" />\n        </section>\n      )}\n\n      {foundPeople.length > 0 && (\n        <section>\n          <h2>{t('People')}</h2>\n          <HorizontalSlide items={foundPeople} id=\"people\" small />\n        </section>\n      )}\n    </div>\n  ) : (\n    <Navigate to=\"/app\" />\n  )\n}\n","import { AccPerson } from '../types/items/Person'\nimport { Movie } from '../types/items/Movie'\nimport { Season } from '../types/items/Season'\nimport { Show } from '../types/items/Show'\n\nexport const buildMovieSearchKey = (movie: Movie) =>\n  [\n    movie.title,\n    movie.summary,\n    movie.crew.map((person) => person.title),\n    movie.cast.map((person) => [person.title, person.character]),\n  ].toString()\n\nexport const buildShowSearchKey = (show: Show, seasons: Season[]) =>\n  [\n    show.title,\n    show.summary,\n    seasons.map((season) => [\n      season.title,\n      season.summary,\n      season.crew.map((person) => person.title),\n      season.cast.map((person) => [person.title, person.character]),\n    ]),\n  ].toString()\n\nexport const buildPersonSearchKey = (person: AccPerson) =>\n  [person.title, person.characters].toString()\n","import { PeopleState } from './types'\n\nexport const peopleSelector = (state: PeopleState) => state.ids\n","import './Authenticated.scss'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\ntype AuthenticatedProps = {\n  onIndex: () => void\n}\n\nexport const Authenticated = ({ onIndex }: AuthenticatedProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"Authenticated\">\n      <h2>{t('Get started')}</h2>\n      <p>\n        {t(\n          \"You signed into a cloud service, but we didn't find any movies or TV shows.\",\n        )}\n      </p>\n      <p>\n        {t(\n          \"It's likely that you just have to move some of your files around and create some folders to make it work.\",\n        )}\n      </p>\n      <p>\n        {t(\n          \"Reference the getting started guide to learn how to organize your files so that Plaain finds them. After you're done, just re-index.\",\n        )}\n      </p>\n      <div className=\"Authenticated__buttons\">\n        <a\n          className=\"button primary\"\n          href=\"https://github.com/jonhue/plaain#getting-started\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {t('Getting started')}\n        </a>\n        <button onClick={onIndex}>{t('Index')}</button>\n      </div>\n    </div>\n  )\n}\n","import './ForYou.scss'\nimport { HorizontalSlide } from './HorizontalSlide'\nimport { Movie } from '../types/items/Movie'\nimport React from 'react'\nimport { Season } from '../types/items/Season'\nimport { useTranslation } from 'react-i18next'\n\ntype ForYouProps = {\n  inProgress: (Movie | Season)[]\n  recentlyWatched: (Movie | Season)[]\n}\n\nexport const ForYou = ({ inProgress, recentlyWatched }: ForYouProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"ForYou\">\n      {inProgress.length > 0 && (\n        <section>\n          <h2>{t('Continue watching')}</h2>\n          <HorizontalSlide items={inProgress} id=\"inProgress\" />\n        </section>\n      )}\n\n      {recentlyWatched.length > 0 && (\n        <section>\n          <h2>{t('Recently watched')}</h2>\n          <HorizontalSlide items={recentlyWatched} id=\"recentlyWatched\" />\n        </section>\n      )}\n    </div>\n  )\n}\n","import './Setup.scss'\nimport { Link } from 'react-router-dom'\nimport { Movie } from '../../types/items/Movie'\nimport React from 'react'\nimport { Show } from '../../types/items/Show'\nimport { useTranslation } from 'react-i18next'\n\ntype SetupProps = {\n  movies: Movie[]\n  shows: Show[]\n}\n\nexport const Setup = ({ movies, shows }: SetupProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"Setup\">\n      <h2>{t('Get started')}</h2>\n      <p>\n        {t(\n          \"Here, you'll be able to find your recently watched movie or the show you didn't finish yet.\",\n        )}\n      </p>\n      <div className=\"Setup__buttons\">\n        {movies.length > 0 && (\n          <Link to=\"/app/movies\" className=\"button\">\n            {t('Discover your movies')}\n          </Link>\n        )}\n        {shows.length > 0 && (\n          <Link to=\"/app/shows\" className=\"button\">\n            {t('Discover your shows')}\n          </Link>\n        )}\n      </div>\n    </div>\n  )\n}\n","import './Unauthenticated.scss'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\n\nexport const Unauthenticated = () => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"Unauthenticated\">\n      <h2>{t('Get started')}</h2>\n      <p>\n        {t(\n          'To watch your movies and TV shows, you first have to sign in with the cloud service that hosts your media.',\n        )}\n      </p>\n      <Link to=\"/app/settings\" className=\"button\">\n        {t('Authenticate')}\n      </Link>\n      <p className=\"small\">\n        <Trans>\n          Note that Plaain may <span className=\"bold\">not</span> be used to\n          stream pirated content or publicly share your private media library.\n          You may only connect to your private cloud storage.\n        </Trans>\n      </p>\n    </div>\n  )\n}\n","import { AppDispatch, RootState } from '../../store'\nimport React, { useCallback } from 'react'\nimport {\n  inProgressSelector,\n  recentlyWatchedSelector,\n} from '../../store/selectors'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Authenticated } from '../../components/get_started/Authenticated'\nimport { ForYou } from '../../components/ForYou'\nimport { Setup } from '../../components/get_started/Setup'\nimport { Unauthenticated } from '../../components/get_started/Unauthenticated'\nimport { index } from '../../store/thunks'\nimport { load } from '../../store/ui/thunks'\nimport { moviesSelector } from '../../store/movies/selectors'\nimport { providersSelector } from '../../store/auth/selectors'\nimport { showsSelector } from '../../store/shows/selectors'\nimport { sortByLastWatched } from '../../util'\n\nexport const Home = () => {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { inProgress, movies, providers, recentlyWatched, shows } = useSelector(\n    (state: RootState) => ({\n      inProgress: sortByLastWatched(inProgressSelector(state)),\n      movies: moviesSelector(state.movies),\n      providers: providersSelector(state.auth),\n      recentlyWatched: sortByLastWatched(recentlyWatchedSelector(state)),\n      shows: showsSelector(state.shows),\n    }),\n  )\n\n  const handleIndex = useCallback(() => {\n    dispatch(load(index(providers)))\n  }, [dispatch, providers])\n\n  return inProgress.length > 0 || recentlyWatched.length > 0 ? (\n    <ForYou inProgress={inProgress} recentlyWatched={recentlyWatched} />\n  ) : providers.length === 0 ? (\n    <Unauthenticated />\n  ) : movies.length === 0 && shows.length === 0 ? (\n    <Authenticated onIndex={handleIndex} />\n  ) : (\n    <Setup movies={movies} shows={shows} />\n  )\n}\n","import { File } from '../types/files/File'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\ntype FileListProps = {\n  files: File[]\n}\n\nexport const FileList = ({ files }: FileListProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"FileList\">\n      {files.map((file, index) => {\n        return (\n          <p className=\"small\" key={index}>\n            {file.name}\n          </p>\n        )\n      })}\n      {files.length === 0 && <p className=\"small\">{t('None')}</p>}\n    </div>\n  )\n}\n","import { useCallback, useState } from 'react'\n\nexport const useToggle = (\n  initialValue: boolean,\n): [value: boolean, handleToggle: () => void] => {\n  const [value, setValue] = useState(initialValue)\n  const handleToggle = useCallback(\n    () => setValue((state) => !state),\n    [setValue],\n  )\n\n  return [value, handleToggle]\n}\n","import './PersonList.scss'\nimport React, { useMemo } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Person } from '../types/items/Person'\nimport { buildItemUrl } from '../util'\nimport { useToggle } from '../hooks/toggle'\nimport { useTranslation } from 'react-i18next'\n\nconst WRAPPED_SIZE = 10\n\ntype PersonListProps<T extends Person> = {\n  people: T[]\n\n  details: (person: T) => string\n}\n\nexport const PersonList = <T extends Person>({\n  people,\n  details,\n}: PersonListProps<T>) => {\n  const { t } = useTranslation()\n\n  const [isWrapped, toggleIsWrapped] = useToggle(true)\n\n  const displayedPeople = useMemo(\n    () => people.slice(0, isWrapped ? WRAPPED_SIZE : people.length),\n    [isWrapped, people],\n  )\n\n  return (\n    <div className=\"PersonList\">\n      {people.length > 0 ? (\n        displayedPeople.map((person, index) => {\n          return (\n            <p key={index}>\n              <Link to={buildItemUrl(person)}>{person.title}</Link> ·{' '}\n              <span>{details(person)}</span>\n            </p>\n          )\n        })\n      ) : (\n        <p>{t('None')}</p>\n      )}\n      {people.length > WRAPPED_SIZE && (\n        <span onClick={toggleIsWrapped}>\n          {isWrapped ? t('Show more') : t('Show less')}\n        </span>\n      )}\n    </div>\n  )\n}\n","import './Movie.scss'\nimport React, { useCallback } from 'react'\nimport {\n  buildBackdropUrl,\n  buildCoverUrl,\n  buildJobTitle,\n  isInProgress,\n  splitHoursAndMinutes,\n} from '../../util'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { Backdrop } from '../../components/Backdrop'\nimport { Cover } from '../../components/Cover'\nimport { FileList } from '../../components/FileList'\nimport { NotFound } from '../NotFound'\nimport { PersonList } from '../../components/PersonList'\nimport { RootState } from '../../store'\nimport classNames from 'classnames'\nimport { movieSelector } from '../../store/movies/selectors'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\nexport const Movie = () => {\n  const { t } = useTranslation()\n  const navigate = useNavigate()\n  const { id } = useParams()\n\n  const movie = useSelector((state: RootState) =>\n    movieSelector(id!)(state.movies),\n  )\n\n  const handleContinue = useCallback(() => {\n    if (movie === undefined) return\n    navigate(\n      `/player?id=${movie.id}&type=${movie.kind}&s=${movie.usage.progress}`,\n    )\n  }, [movie, navigate])\n\n  const handleWatch = useCallback(() => {\n    if (movie === undefined) return\n    navigate(`/player?id=${movie.id}&type=${movie.kind}`)\n  }, [movie, navigate])\n\n  return movie !== undefined ? (\n    <div className=\"Movie\">\n      <Backdrop url={buildBackdropUrl(movie.backdropPath)} />\n      <div className=\"Movie__details\">\n        <Cover url={buildCoverUrl(movie.posterPath)} alt=\"poster\" />\n        <h1>{movie.title}</h1>\n        <div className=\"Movie__information\">\n          {movie.releaseDate && (\n            <p className=\"small\">{new Date(movie.releaseDate).getFullYear()}</p>\n          )}\n          {movie.duration && (\n            <p className=\"small\">{splitHoursAndMinutes(t, movie.duration)}</p>\n          )}\n        </div>\n        <div className=\"Movie__actions\">\n          {isInProgress(movie) && (\n            <button\n              className=\"primary\"\n              onClick={handleContinue}\n              disabled={movie.sources.length === 0}\n            >\n              {t('Continue')}\n            </button>\n          )}\n          <button\n            className={classNames({ primary: !isInProgress(movie) })}\n            onClick={handleWatch}\n            disabled={movie.sources.length === 0}\n          >\n            {t('Watch')}\n          </button>\n          <a\n            className=\"button\"\n            href={movie.trailerUrl}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {t('Play trailer')}\n          </a>\n        </div>\n        <p className=\"Movie__overview\">{movie.summary}</p>\n        <div className=\"Movie__people\">\n          <div className=\"Movie__people__cast\">\n            <h4>{t('Starring')}</h4>\n            <PersonList\n              people={movie.cast}\n              details={(person) => person.character}\n            />\n          </div>\n          <div className=\"Movie__people__crew\">\n            <h4>{t('Crew')}</h4>\n            <PersonList\n              people={movie.crew}\n              details={(person) => buildJobTitle(t, person.job, person.gender)}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"Movie__sources\">\n        <div>\n          <h4>{t('Sources')}</h4>\n          <div>\n            <div className=\"Movie__sources__versions\">\n              <h5>{t('Versions')}</h5>\n              <FileList files={movie.sources} />\n            </div>\n            <div className=\"Movie__sources__captions\">\n              <h5>{t('Subtitles')}</h5>\n              <FileList files={movie.captions} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <NotFound />\n  )\n}\n","import './ItemGrid.scss'\nimport { buildCoverUrl, buildItemUrl } from '../util'\nimport { Cover } from './Cover'\nimport { Link } from 'react-router-dom'\nimport { Movie } from '../types/items/Movie'\nimport React from 'react'\nimport { Season } from '../types/items/Season'\nimport { Show } from '../types/items/Show'\nimport { useTranslation } from 'react-i18next'\n\ntype ItemGridProps = {\n  items: (Movie | Season | Show)[]\n}\n\nexport const ItemGrid = ({ items }: ItemGridProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"ItemGrid\">\n      {items.length > 0 ? (\n        items.map((item, index) => (\n          <div className=\"ItemGrid__item\" key={index}>\n            <Link to={buildItemUrl(item)}>\n              <Cover url={buildCoverUrl(item.posterPath)} alt={item.title} />\n            </Link>\n          </div>\n        ))\n      ) : (\n        <div className=\"ItemGrid__item\">\n          <h3>{t('Nothing found.')}</h3>\n        </div>\n      )}\n    </div>\n  )\n}\n","import './VerticalSlide.scss'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport { buildCoverUrl, buildItemUrl } from '../util'\nimport { Cover } from './Cover'\nimport { EffectCards } from 'swiper/modules'\nimport { Link } from 'react-router-dom'\nimport { Movie } from '../types/items/Movie'\nimport React from 'react'\nimport { Season } from '../types/items/Season'\nimport { Show } from '../types/items/Show'\nimport { useTranslation } from 'react-i18next'\n\ntype VerticalSlideProps = {\n  id: string\n  items: (Movie | Season | Show)[]\n  path: string\n}\n\nexport const VerticalSlide = ({ id, items, path }: VerticalSlideProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"VerticalSlide\" id={id}>\n      <div className=\"VerticalSlide__wrapper\">\n        <Swiper\n          direction=\"horizontal\"\n          grabCursor\n          effect=\"cards\"\n          freeMode\n          history={{\n            replaceState: true,\n            key: path,\n          }}\n          modules={[EffectCards]}\n        >\n          {items.length > 0 ? (\n            items.map((item, index) => (\n              <SwiperSlide data-history={item.id} key={index}>\n                <Link to={buildItemUrl(item)}>\n                  <Cover\n                    url={buildCoverUrl(item.posterPath)}\n                    alt={item.title}\n                  />\n                </Link>\n              </SwiperSlide>\n            ))\n          ) : (\n            <SwiperSlide>\n              <h3>{t('Nothing found.')}</h3>\n            </SwiperSlide>\n          )}\n        </Swiper>\n      </div>\n    </div>\n  )\n}\n","import './Movies.scss'\nimport { ItemGrid } from '../../components/ItemGrid'\nimport { Navigate } from 'react-router-dom'\nimport React from 'react'\nimport { RootState } from '../../store'\nimport { VerticalSlide } from '../../components/VerticalSlide'\nimport { moviesSelector } from '../../store/movies/selectors'\nimport { sortAlphabetically } from '../../util'\nimport { useSelector } from 'react-redux'\n\nexport const Movies = () => {\n  const movies = useSelector((state: RootState) =>\n    sortAlphabetically(moviesSelector(state.movies), (movie) => movie.title),\n  )\n\n  return movies.length > 0 ? (\n    <div className=\"Movies\">\n      <VerticalSlide items={movies} path=\"movies\" id=\"movies\" />\n      <ItemGrid items={movies} />\n    </div>\n  ) : (\n    <Navigate to=\"/app\" />\n  )\n}\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const FindIcon = () => (\n  <Icon className=\"zoom\" width={24} height={24}>\n    <title>Find</title>\n    <g fill=\"#ffffff\">\n      <line\n        fill=\"none\"\n        stroke=\"#ffffff\"\n        x1=\"22\"\n        x2=\"15.656\"\n        y1=\"22\"\n        y2=\"15.656\"\n      />\n      <circle cx=\"10\" cy=\"10\" fill=\"none\" r=\"8\" stroke=\"#ffffff\" />\n    </g>\n  </Icon>\n)\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const ForYouIcon = () => (\n  <Icon className=\"popcorn\" width={24} height={24}>\n    <title>For You</title>\n    <g fill=\"#ffffff\">\n      <polygon fill=\"none\" points=\"21 7 3 7 5 23 19 23 21 7\" stroke=\"#ffffff\" />\n      <path\n        d=\"M19,5a3,3,0,0,0-3-3,2.97,2.97,0,0,0-1.47.4,2.986,2.986,0,0,0-5.06,0A2.97,2.97,0,0,0,8,2,3,3,0,0,0,5,5\"\n        fill=\"none\"\n        stroke=\"#ffffff\"\n      />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"9\" x2=\"8\" y1=\"23\" y2=\"7\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"15\" x2=\"16\" y1=\"23\" y2=\"7\" />\n    </g>\n  </Icon>\n)\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const MovieIcon = () => (\n  <Icon className=\"movie-61\" width={24} height={24}>\n    <title>Movie</title>\n    <g fill=\"#ffffff\">\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"1\" x2=\"1\" y1=\"1\" y2=\"23\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"23\" x2=\"23\" y1=\"1\" y2=\"23\" />\n      <rect height=\"22\" width=\"14\" fill=\"none\" stroke=\"#ffffff\" x=\"5\" y=\"1\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"1\" x2=\"23\" y1=\"12\" y2=\"12\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"1\" x2=\"5\" y1=\"8\" y2=\"8\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"1\" x2=\"5\" y1=\"4\" y2=\"4\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"19\" x2=\"23\" y1=\"8\" y2=\"8\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"19\" x2=\"23\" y1=\"4\" y2=\"4\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"19\" x2=\"23\" y1=\"20\" y2=\"20\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"19\" x2=\"23\" y1=\"16\" y2=\"16\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"1\" x2=\"5\" y1=\"20\" y2=\"20\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"1\" x2=\"5\" y1=\"16\" y2=\"16\" />\n    </g>\n  </Icon>\n)\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const SettingsIcon = () => (\n  <Icon className=\"settings-gear\" width={24} height={24}>\n    <title>Settings</title>\n    <g fill=\"#ffffff\" stroke=\"#ffffff\">\n      <circle cx=\"12\" cy=\"12\" fill=\"none\" r=\"3\" />\n      <path\n        d=\"M20,12a8.049,8.049,0,0,0-.188-1.713l2.714-2.055-2-3.464L17.383,6.094a7.987,7.987,0,0,0-2.961-1.719L14,1H10L9.578,4.375A7.987,7.987,0,0,0,6.617,6.094L3.474,4.768l-2,3.464,2.714,2.055a7.9,7.9,0,0,0,0,3.426L1.474,15.768l2,3.464,3.143-1.326a7.987,7.987,0,0,0,2.961,1.719L10,23h4l.422-3.375a7.987,7.987,0,0,0,2.961-1.719l3.143,1.326,2-3.464-2.714-2.055A8.049,8.049,0,0,0,20,12Z\"\n        fill=\"none\"\n        stroke=\"#ffffff\"\n      />\n    </g>\n  </Icon>\n)\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const ShowIcon = () => (\n  <Icon className=\"desktop-screen\" width={24} height={24}>\n    <title>Show</title>\n    <g fill=\"#ffffff\">\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"12\" x2=\"12\" y1=\"22\" y2=\"18\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"6\" x2=\"18\" y1=\"22\" y2=\"22\" />\n      <rect height=\"16\" width=\"22\" fill=\"none\" stroke=\"#ffffff\" x=\"1\" y=\"2\" />\n    </g>\n  </Icon>\n)\n","import './Tab.scss'\nimport { Link, useMatch } from 'react-router-dom'\nimport React, { FunctionComponent } from 'react'\nimport classNames from 'classnames'\n\ntype TabProps = {\n  to: string\n  inexact?: boolean\n  disabled?: boolean\n  forceActive?: boolean\n  children?: React.ReactNode\n}\n\nexport const Tab: FunctionComponent<TabProps> = ({\n  children,\n  to,\n  inexact,\n  disabled,\n  forceActive,\n}) => {\n  const isActive = !!useMatch(`${to}${inexact ? '/*' : ''}`)\n\n  return (\n    <Link\n      className={classNames('Tab', {\n        active: isActive || forceActive,\n        disabled,\n      })}\n      to={to}\n    >\n      {children}\n    </Link>\n  )\n}\n","import './Nav.scss'\nimport { FindIcon } from './icons/Nucleo/FindIcon'\nimport { ForYouIcon } from './icons/Nucleo/ForYouIcon'\nimport { MovieIcon } from './icons/Nucleo/MovieIcon'\nimport React from 'react'\nimport { SettingsIcon } from './icons/Nucleo/SettingsIcon'\nimport { ShowIcon } from './icons/Nucleo/ShowIcon'\nimport { Tab } from './Tab'\nimport { useMatch } from 'react-router-dom'\nimport { useTranslation } from 'react-i18next'\n\ntype NavProps = {\n  moviesDisabled?: boolean\n  showsDisabled?: boolean\n}\n\nexport const Nav = ({ moviesDisabled, showsDisabled }: NavProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"Nav\">\n      <div className=\"Nav__wrapper\">\n        <Tab to=\"/app\">\n          <ForYouIcon />\n          <p>{t('For you')}</p>\n        </Tab>\n        <Tab disabled={moviesDisabled} to=\"/app/movies\" inexact>\n          <MovieIcon />\n          <p>{t('Movies')}</p>\n        </Tab>\n        <Tab\n          disabled={showsDisabled}\n          to=\"/app/shows\"\n          inexact\n          forceActive={!!useMatch('/app/seasons/*')}\n        >\n          <ShowIcon />\n          <p>{t('Shows')}</p>\n        </Tab>\n        <Tab disabled={moviesDisabled && showsDisabled} to=\"/app/find\">\n          <FindIcon />\n          <p>{t('Find')}</p>\n        </Tab>\n        <Tab to=\"/app/settings\">\n          <SettingsIcon />\n          <p>{t('Settings')}</p>\n        </Tab>\n      </div>\n    </div>\n  )\n}\n","import './Person.scss'\nimport React, { useMemo } from 'react'\nimport { buildBackdropUrl, buildCoverUrl, buildJobTitle } from '../../util'\nimport { Backdrop } from '../../components/Backdrop'\nimport { Cover } from '../../components/Cover'\nimport { HorizontalSlide } from '../../components/HorizontalSlide'\nimport { NotFound } from '../NotFound'\nimport { RootState } from '../../store'\nimport { moviesByPersonSelector } from '../../store/movies/selectors'\nimport { personSelector } from '../../store/selectors'\nimport { seasonsByPersonSelector } from '../../store/seasons/selectors'\nimport { useParams } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\nexport const Person = () => {\n  const { t } = useTranslation()\n  const { id } = useParams()\n\n  const person = useSelector((state: RootState) => personSelector(id!)(state))\n  const { movies, seasons } = useSelector((state: RootState) => ({\n    movies: person && moviesByPersonSelector(person.id)(state.movies),\n    seasons: person && seasonsByPersonSelector(person.id)(state.seasons),\n  }))\n\n  const backdropPath = useMemo(() => {\n    if (movies !== undefined && movies.length > 0) return movies[0].backdropPath\n    else if (seasons !== undefined && seasons.length > 0)\n      return seasons[0].showBackdropPath\n  }, [movies, seasons])\n\n  return person !== undefined &&\n    movies !== undefined &&\n    seasons !== undefined ? (\n    <div className=\"Person\">\n      <Backdrop url={buildBackdropUrl(backdropPath)} />\n      <div className=\"Person__details\">\n        <Cover url={buildCoverUrl(person.posterPath)} alt=\"profile\" />\n        <div className=\"Person__details__wrapper\">\n          <h1>{person.title}</h1>\n          {person.jobs && (\n            <p>\n              {person.jobs\n                .map((job) => buildJobTitle(t, job, person.gender))\n                .join(', ')}\n            </p>\n          )}\n        </div>\n      </div>\n\n      {movies.length > 0 && (\n        <div className=\"Person__movies\">\n          <h2>{t('Movies')}</h2>\n          <HorizontalSlide items={movies} id=\"movies\" />\n        </div>\n      )}\n\n      {seasons.length > 0 && (\n        <div className=\"Person__seasons\">\n          <h2>{t('TV seasons')}</h2>\n          <HorizontalSlide items={seasons} id=\"seasons\" />\n        </div>\n      )}\n    </div>\n  ) : (\n    <NotFound />\n  )\n}\n","import './EpisodeEntry.scss'\nimport { Episode } from '../types/items/Episode'\nimport React from 'react'\nimport classNames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\ntype EpisodeEntryProps = {\n  episode: Episode\n\n  onClick: () => void\n}\n\nexport const EpisodeEntry = ({ episode, onClick }: EpisodeEntryProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div\n      className={classNames('EpisodeEntry', {\n        disabled: episode.sources.length === 0,\n      })}\n      onClick={onClick}\n    >\n      <div className=\"EpisodeEntry__number\">{episode.number}</div>\n      <div className=\"EpisodeEntry__details\">\n        <h2>{episode.title}</h2>\n        {episode.airDate && (\n          <p className=\"small\">\n            {t('Aired')} {new Date(episode.airDate).toDateString()}\n          </p>\n        )}\n        <p>{episode.summary}</p>\n      </div>\n    </div>\n  )\n}\n","import './Season.scss'\nimport React, { useCallback, useMemo } from 'react'\nimport {\n  buildBackdropUrl,\n  buildCoverUrl,\n  buildJobTitle,\n  sortByNumber,\n} from '../../util'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { Backdrop } from '../../components/Backdrop'\nimport { Cover } from '../../components/Cover'\nimport { Episode } from '../../types/items/Episode'\nimport { EpisodeEntry } from '../../components/EpisodeEntry'\nimport { NotFound } from '../NotFound'\nimport { PersonList } from '../../components/PersonList'\nimport { RootState } from '../../store'\nimport classNames from 'classnames'\nimport { episodesBySeasonSelector } from '../../store/episodes/selectors'\nimport { seasonSelector } from '../../store/seasons/selectors'\nimport { showSelector } from '../../store/shows/selectors'\nimport { useSelector } from 'react-redux'\nimport { useToggle } from '../../hooks/toggle'\nimport { useTranslation } from 'react-i18next'\n\nexport const Season = () => {\n  const { t } = useTranslation()\n  const navigate = useNavigate()\n  const { id } = useParams()\n\n  const season = useSelector((state: RootState) =>\n    seasonSelector(id!)(state.seasons),\n  )\n  const { show, episodes } = useSelector((state: RootState) => ({\n    show: season && showSelector(season.showId)(state.shows),\n    episodes:\n      season &&\n      sortByNumber(\n        episodesBySeasonSelector(season.id)(state.episodes),\n        (episode) => episode.number,\n      ),\n  }))\n  const currentEpisode = useMemo(() => {\n    if (season !== undefined && episodes !== undefined)\n      return episodes.find(\n        (episode) => episode.number === season.usage.progress,\n      )\n  }, [season, episodes])\n\n  const [showEpisodes, toggleEpisodes] = useToggle(false)\n\n  const handleContinue = useCallback(\n    (episode: Episode) => () => {\n      navigate(\n        `/player?id=${episode.id}&type=${episode.kind}&s=${episode.usage.progress}`,\n      )\n    },\n    [navigate],\n  )\n\n  const handleWatch = useCallback(\n    (episodeNumber: number) => () => {\n      if (episodes === undefined) return\n\n      const episode = episodes.find(\n        (episode) => episode.number === episodeNumber,\n      )!\n\n      navigate(`/player?id=${episode.id}&type=${episode.kind}`)\n    },\n    [episodes, navigate],\n  )\n\n  return show !== undefined &&\n    season !== undefined &&\n    episodes !== undefined ? (\n    <div className=\"Season\">\n      <Backdrop url={buildBackdropUrl(season.showBackdropPath)} />\n      <div className=\"Season__details\">\n        <Cover url={buildCoverUrl(season.posterPath)} alt=\"poster\" />\n        <h1>\n          {t('Season')} {season.number}\n        </h1>\n        <div className=\"Season__information\">\n          <p className=\"small\">{show.title}</p>\n          {season.airDate && (\n            <p className=\"small\">{new Date(season.airDate).getFullYear()}</p>\n          )}\n        </div>\n        <div className=\"Season__actions\">\n          {currentEpisode !== undefined && (\n            <button\n              className=\"primary\"\n              onClick={handleContinue(currentEpisode)}\n              disabled={currentEpisode.sources.length === 0}\n            >\n              {t('Continue episode')} {currentEpisode.number}\n            </button>\n          )}\n          {episodes.length > 0 && (\n            <button\n              className={classNames({ primary: currentEpisode === undefined })}\n              onClick={handleWatch(0)}\n              disabled={episodes[0].sources.length === 0}\n            >\n              {t('Watch')}\n            </button>\n          )}\n          <a\n            className=\"button\"\n            id=\"trailer\"\n            href={season.trailerUrl}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {t('Play trailer')}\n          </a>\n        </div>\n        <div className=\"Season__episodes\">\n          <div\n            className={classNames('Season__episodes__list', {\n              shown: showEpisodes,\n            })}\n          >\n            {episodes\n              .slice(0, showEpisodes ? episodes.length : 0)\n              .map((episode, index) => (\n                <EpisodeEntry\n                  episode={episode}\n                  onClick={handleWatch(episode.number)}\n                  key={index}\n                />\n              ))}\n          </div>\n          {episodes.length > 0 && (\n            <div className=\"Season__episodes__toggle\" onClick={toggleEpisodes}>\n              {showEpisodes ? t('Hide episodes') : t('Show all episodes')}\n            </div>\n          )}\n        </div>\n        <p className=\"Season__overview\">{season.summary}</p>\n        <div className=\"Season__people\">\n          <div className=\"Season__people__cast\">\n            <h4>{t('Starring')}</h4>\n            <PersonList\n              people={season.cast}\n              details={(person) => person.character}\n            />\n          </div>\n          <div className=\"Season__people__crew\">\n            <h4>{t('Crew')}</h4>\n            <PersonList\n              people={season.crew}\n              details={(person) => buildJobTitle(t, person.job, person.gender)}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <NotFound />\n  )\n}\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const AddIcon = () => (\n  <Icon className=\"e-add\" width={32} height={32}>\n    <title>Add</title>\n    <g fill=\"#ffffff\" stroke=\"#ffffff\">\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"16\" x2=\"16\" y1=\"2\" y2=\"30\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"30\" x2=\"2\" y1=\"16\" y2=\"16\" />\n    </g>\n  </Icon>\n)\n","import './ProviderButton.scss'\nimport React from 'react'\nimport classNames from 'classnames'\n\ntype ProviderButtonProps = {\n  className?: string\n  icon: JSX.Element\n  title?: string\n  disabled?: boolean\n\n  onClick: (event: React.MouseEvent) => void\n}\n\nexport const ProviderButton = ({\n  className,\n  icon,\n  title,\n  disabled,\n  onClick,\n}: ProviderButtonProps) => (\n  <div className={classNames('ProviderButton', { large: title !== undefined })}>\n    <button className={className} onClick={onClick} disabled={disabled}>\n      {icon}\n      {title && <h3>{title}</h3>}\n    </button>\n  </div>\n)\n","import './ChooseProvider.scss'\nimport {\n  DISABLED_PROVIDER_KINDS,\n  PROVIDER_KINDS,\n  ProviderKind,\n} from '../../types/providers/Provider'\nimport React, { useCallback } from 'react'\nimport { buildProviderIcon, buildProviderKindName } from '../../util'\nimport { ProviderButton } from '../ProviderButton'\nimport { useTranslation } from 'react-i18next'\n\ntype ChooseProviderProps = {\n  onChoose: (kind: ProviderKind) => Promise<void>\n}\n\nexport const ChooseProvider = ({ onChoose }: ChooseProviderProps) => {\n  const { t } = useTranslation()\n\n  const handleChoose = useCallback(\n    (kind: ProviderKind) => () => onChoose(kind),\n    [onChoose],\n  )\n\n  return (\n    <div className=\"ChooseProvider\">\n      <h2>{t('Add a provider')}</h2>\n      <p>\n        {t(\n          'Select which service you want to use to stream your movies & shows.',\n        )}\n      </p>\n      <div className=\"ChooseProvider__providers\">\n        {PROVIDER_KINDS.map((kind, index) => (\n          <ProviderButton\n            icon={buildProviderIcon(kind)}\n            title={buildProviderKindName(t, kind)}\n            disabled={DISABLED_PROVIDER_KINDS.includes(kind)}\n            onClick={handleChoose(kind)}\n            key={index}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const CheckIcon = () => (\n  <Icon className=\"c-check\" width={24} height={24}>\n    <title>Check</title>\n    <g fill=\"#ffffff\">\n      <path\n        d=\"M12,0A12,12,0,1,0,24,12,12.035,12.035,0,0,0,12,0ZM10,17.414,4.586,12,6,10.586l4,4,8-8L19.414,8Z\"\n        fill=\"#ffffff\"\n      />\n    </g>\n  </Icon>\n)\n","import './FTPProviderForm.scss'\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { CheckIcon } from '../icons/Nucleo/CheckIcon'\nimport { FTP } from '../../types/providers/FTP'\nimport { FTPAuthSetup } from '../../services/auth/types'\nimport { ProviderKind } from '../../types/providers/Provider'\nimport classNames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\ntype FTPProviderFormProps = {\n  submitCaption: string\n  provider?: FTP\n\n  onSubmit: (config: FTPAuthSetup) => void\n}\n\ntype FTPProviderFormState = {\n  name?: string\n  host?: string\n  port?: number\n  username?: string\n  password?: string\n  secure: boolean\n}\n\nexport const FTPProviderForm = ({\n  submitCaption,\n  provider,\n  onSubmit,\n}: FTPProviderFormProps) => {\n  const { t } = useTranslation()\n\n  const initalState = useMemo<FTPProviderFormState>(\n    () => ({\n      name: provider?.name,\n      host: provider?.host,\n      port: provider?.port || 21,\n      username: provider?.username,\n      password: provider?.password,\n      secure: provider?.secure || true,\n    }),\n    [provider],\n  )\n  const [state, setState] = useState<FTPProviderFormState>(initalState)\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>): void => {\n      const target = event.currentTarget\n      setState((state) => ({\n        ...state,\n        [target.name]:\n          target.type === 'checkbox'\n            ? target.checked\n            : target.value === ''\n              ? undefined\n              : target.value,\n      }))\n    },\n    [setState],\n  )\n\n  const handleSubmit = useCallback(\n    (event: React.FormEvent<HTMLFormElement>): void => {\n      event.preventDefault()\n      onSubmit({\n        kind: ProviderKind.FTP,\n        name: state.name!,\n        host: state.host!,\n        port: state.port!,\n        username: state.username!,\n        password: state.password!,\n        secure: state.secure,\n      })\n    },\n    [onSubmit, state],\n  )\n\n  const isSetupInput = useCallback(\n    (value: unknown | undefined) => value !== undefined && value !== '',\n    [],\n  )\n\n  const isValid = useMemo(\n    () =>\n      isSetupInput(state.name) &&\n      isSetupInput(state.host) &&\n      isSetupInput(state.port) &&\n      isSetupInput(state.username) &&\n      isSetupInput(state.password),\n    [isSetupInput, state],\n  )\n\n  useEffect(() => {\n    setState(initalState)\n  }, [initalState, setState])\n\n  return (\n    <form className=\"FTPProviderForm\" onSubmit={handleSubmit}>\n      <label>\n        {t('Name')}\n        <p className=\"small\">\n          {t('Friendly name to identify server, not used for connecting.')}\n        </p>\n        <div\n          className={classNames('FTPProviderForm__input', 'warn', {\n            valid: isSetupInput(state.name),\n          })}\n        >\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={state.name || ''}\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <label>\n        {t('Host')}\n        <div\n          className={classNames('FTPProviderForm__input', 'warn', {\n            valid: isSetupInput(state.host),\n          })}\n        >\n          <input\n            type=\"text\"\n            name=\"host\"\n            value={state.host || ''}\n            placeholder=\"example.com\"\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <label>\n        {t('Port')}\n        <div\n          className={classNames('FTPProviderForm__input', 'warn', {\n            valid: isSetupInput(state.port),\n          })}\n        >\n          <input\n            type=\"number\"\n            min={0}\n            step={1}\n            name=\"port\"\n            value={state.port || ''}\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <label>\n        {t('Username')}\n        <div\n          className={classNames('FTPProviderForm__input', 'warn', {\n            valid: isSetupInput(state.username),\n          })}\n        >\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={state.username || ''}\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <label>\n        {t('Password')}\n        <div\n          className={classNames('FTPProviderForm__input', 'warn', {\n            valid: isSetupInput(state.password),\n          })}\n        >\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={state.password || ''}\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <div className=\"FTPProviderForm__checkbox\">\n        <input\n          type=\"checkbox\"\n          name=\"secure\"\n          checked={state.secure}\n          onChange={handleChange}\n        />\n        <label>\n          {t('Secure')}\n          <p className=\"small\">{t('Explicit FTPS over TLS.')}</p>\n        </label>\n      </div>\n\n      <div className=\"FTPProviderForm__actions\">\n        <button type=\"submit\" disabled={!isValid}>\n          {submitCaption}\n        </button>\n      </div>\n    </form>\n  )\n}\n","import './EnterDetailsProvider.scss'\nimport { AuthSetup } from '../../services/auth/types'\nimport { FTPProviderForm } from './FTPProviderForm'\nimport { ProviderKind } from '../../types/providers/Provider'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\ntype EnterDetailsProviderProps = {\n  kind: ProviderKind\n  onEnteredDetails: (config: AuthSetup) => void\n}\n\nexport const EnterDetailsProvider = ({\n  kind,\n  onEnteredDetails,\n}: EnterDetailsProviderProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"EnterDetailsProvider\">\n      <h2>{t('Configure your provider')}</h2>\n      <p>{t('Plaain needs some more details to connect to your provider.')}</p>\n      {kind === ProviderKind.FTP ? (\n        <FTPProviderForm\n          submitCaption={t('Continue')}\n          onSubmit={onEnteredDetails}\n        />\n      ) : null}\n    </div>\n  )\n}\n","import './ProviderForm.scss'\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { CheckIcon } from '../icons/Nucleo/CheckIcon'\nimport { Provider } from '../../types/providers/Provider'\nimport classNames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\ntype ProviderFormProps = {\n  submitCaption: string\n  provider?: Provider\n\n  onSubmit: (\n    moviesPath: string | undefined,\n    showsPath: string | undefined,\n  ) => void\n}\n\ntype ProviderFormState = {\n  moviesPath?: string\n  showsPath?: string\n}\n\nexport const ProviderForm = ({\n  submitCaption,\n  provider,\n  onSubmit,\n}: ProviderFormProps) => {\n  const { t } = useTranslation()\n\n  const initalState = useMemo<ProviderFormState>(\n    () => ({\n      moviesPath: provider?.moviesPath,\n      showsPath: provider?.showsPath,\n    }),\n    [provider],\n  )\n  const [state, setState] = useState<ProviderFormState>(initalState)\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>): void => {\n      const target = event.currentTarget\n      setState((state) => ({\n        ...state,\n        [target.name]: target.value === '' ? undefined : target.value,\n      }))\n    },\n    [setState],\n  )\n\n  const handleSubmit = useCallback(\n    (event: React.FormEvent<HTMLFormElement>): void => {\n      event.preventDefault()\n      onSubmit(state.moviesPath, state.showsPath)\n    },\n    [onSubmit, state],\n  )\n\n  const isSetupInput = useCallback(\n    (value: string | undefined) => value !== undefined && value !== '',\n    [],\n  )\n\n  const isValidPath = useCallback(\n    (value: string | undefined) => value !== undefined && value.startsWith('/'),\n    [],\n  )\n\n  const isValid = useMemo(\n    () =>\n      (!isSetupInput(state.moviesPath) || isValidPath(state.moviesPath)) &&\n      (!isSetupInput(state.showsPath) || isValidPath(state.showsPath)),\n    [isSetupInput, isValidPath, state],\n  )\n\n  useEffect(() => {\n    setState(initalState)\n  }, [initalState, setState])\n\n  return (\n    <form className=\"ProviderForm\" onSubmit={handleSubmit}>\n      <label>\n        {t('Movies path')}\n        <p className=\"small\">\n          {t(\n            'The path from your home directory to where you keep your movies.',\n          )}\n        </p>\n        <div\n          className={classNames('ProviderForm__input', {\n            warn: isSetupInput(state.moviesPath),\n            valid: isValidPath(state.moviesPath),\n          })}\n        >\n          <input\n            type=\"text\"\n            name=\"moviesPath\"\n            value={state.moviesPath || ''}\n            placeholder=\"/Plaain/movies\"\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <label>\n        {t('Shows path')}\n        <p className=\"small\">\n          {t('The path from your home directory to where you keep your shows.')}\n        </p>\n        <div\n          className={classNames('ProviderForm__input', {\n            warn: isSetupInput(state.showsPath),\n            valid: isValidPath(state.showsPath),\n          })}\n        >\n          <input\n            type=\"text\"\n            name=\"showsPath\"\n            value={state.showsPath || ''}\n            placeholder=\"/Plaain/shows\"\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <div className=\"ProviderForm__actions\">\n        <button type=\"submit\" disabled={!isValid}>\n          {submitCaption}\n        </button>\n      </div>\n    </form>\n  )\n}\n","import './SetupProvider.scss'\nimport { ProviderForm } from './ProviderForm'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\ntype SetupProviderProps = {\n  onSetup: (\n    moviesPath: string | undefined,\n    showsPath: string | undefined,\n  ) => void\n}\n\nexport const SetupProvider = ({ onSetup }: SetupProviderProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"SetupProvider\">\n      <h2>{t('Setup your provider')}</h2>\n      <p>\n        {t(\n          \"All that's left is to tell Plaain where to look for your movies and shows. You can always skip this step and come back later.\",\n        )}\n      </p>\n      <ProviderForm submitCaption={t('Complete')} onSubmit={onSetup} />\n    </div>\n  )\n}\n","import './UpdateProviderModal.scss'\nimport { AuthResponse, AuthSetup } from '../../services/auth/types'\nimport { Provider, ProviderKind } from '../../types/providers/Provider'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { FTPProviderForm } from './FTPProviderForm'\nimport { Modal } from '../Modal'\nimport { ProviderForm } from './ProviderForm'\nimport { buildProviderKindName } from '../../util'\nimport { useTranslation } from 'react-i18next'\n\nenum State {\n  Specific,\n  General,\n}\n\ntype UpdateProviderModalProps = {\n  isActive: boolean\n  provider: Provider\n\n  onClose: () => void\n  onSetupAuth: (config: AuthSetup) => Promise<AuthResponse | undefined>\n  onUpdateProvider: (provider: Provider) => void\n  onRemoveProvider: () => void\n}\n\nexport const UpdateProviderModal = ({\n  isActive,\n  provider,\n  onClose,\n  onSetupAuth,\n  onUpdateProvider,\n  onRemoveProvider,\n}: UpdateProviderModalProps) => {\n  const { t } = useTranslation()\n\n  const initialState = useMemo(\n    () => (provider.kind === ProviderKind.FTP ? State.Specific : State.General),\n    [provider],\n  )\n  const [state, setState] = useState(initialState)\n  const [details, setDetails] = useState<AuthResponse | undefined>()\n\n  const handleClose = useCallback(() => {\n    onClose()\n    setTimeout(() => {\n      setState(initialState)\n      setDetails(undefined)\n    }, 500)\n  }, [initialState, onClose, setDetails, setState])\n\n  const handleDetails = useCallback(\n    async (config: AuthSetup) => {\n      const authResponse = await onSetupAuth(config)\n      setDetails(authResponse)\n      setState(State.General)\n    },\n    [setDetails, setState],\n  )\n\n  const handleUpdate = useCallback(\n    (moviesPath: string | undefined, showsPath: string | undefined) => {\n      const newProvider: Provider =\n        details !== undefined\n          ? { ...details, moviesPath, showsPath }\n          : { ...provider, moviesPath, showsPath }\n      onUpdateProvider(newProvider)\n      handleClose()\n    },\n    [details, handleClose, onUpdateProvider, provider],\n  )\n\n  const handleRemoveProvider = useCallback(() => {\n    if (!window.confirm(t('Are you sure?'))) return\n\n    onRemoveProvider()\n    handleClose()\n  }, [handleClose, onRemoveProvider, t])\n\n  return (\n    <div className=\"UpdateProviderModal\">\n      <Modal isActive={isActive} onClose={handleClose}>\n        <h2>{buildProviderKindName(t, provider.kind)}</h2>\n        <p>{provider.name}</p>\n        {state === State.Specific ? (\n          <>\n            {provider.kind === ProviderKind.FTP ? (\n              <FTPProviderForm\n                submitCaption={t('Continue')}\n                provider={provider}\n                onSubmit={handleDetails}\n              />\n            ) : null}\n          </>\n        ) : state === State.General ? (\n          <ProviderForm\n            submitCaption={t('Update')}\n            provider={provider}\n            onSubmit={handleUpdate}\n          />\n        ) : null}\n        <button className=\"secondary\" onClick={handleRemoveProvider}>\n          {t('Remove')}\n        </button>\n      </Modal>\n    </div>\n  )\n}\n","import React, { useCallback } from 'react'\nimport { LANGUAGES } from '../i18n'\nimport i18next from 'i18next'\nimport { useTranslation } from 'react-i18next'\n\ntype LanguageSelectorProps = {\n  onChange?: (lng: string | undefined) => void\n}\n\nexport const LanguageSelector = ({ onChange }: LanguageSelectorProps) => {\n  const { t } = useTranslation()\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLSelectElement>) => {\n      i18next.changeLanguage(event.target.value)\n      if (onChange) onChange(event.target.value)\n    },\n    [onChange],\n  )\n\n  return (\n    <div className=\"LanguageSelector\">\n      <select defaultValue={i18next.language} onChange={handleChange}>\n        {LANGUAGES.map((language) => (\n          <option value={language} key={language}>\n            {t(language)}\n          </option>\n        ))}\n      </select>\n    </div>\n  )\n}\n","import './Settings.scss'\nimport { AppDispatch, RootState } from '../../store'\nimport React, { useCallback, useState } from 'react'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { buildCommitId, buildProviderIcon } from '../../util'\nimport { fetchAllMetadata, index } from '../../store/thunks'\nimport { removeProvider, updateProvider } from '../../store/auth/actions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AddIcon } from '../../components/icons/Nucleo/AddIcon'\nimport { AddProviderModal } from '../../components/authentication/AddProviderModal'\nimport { AuthSetup } from '../../services/auth/types'\nimport { LanguageSelector } from '../../components/LanguageSelector'\nimport { Provider } from '../../types/providers/Provider'\nimport { ProviderButton } from '../../components/ProviderButton'\nimport { UpdateProviderModal } from '../../components/authentication/UpdateProviderModal'\nimport { VERSION } from '../../constants'\nimport classNames from 'classnames'\nimport { load } from '../../store/ui/thunks'\nimport { providersSelector } from '../../store/auth/selectors'\nimport { setupAuth } from '../../store/auth/thunks'\nimport { useModal } from '../../hooks/modal'\n\nexport const Settings = () => {\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n\n  const providers = useSelector((state: RootState) =>\n    providersSelector(state.auth),\n  )\n\n  const handleSetupAuth = useCallback(\n    (config: AuthSetup) => dispatch(load(setupAuth(config))),\n    [dispatch],\n  )\n\n  const handleUpdateProvider = useCallback(\n    (provider: Provider) => {\n      dispatch(updateProvider(provider))\n      dispatch(load(index([provider])))\n    },\n    [dispatch],\n  )\n\n  const handleIndex = useCallback(\n    () => dispatch(load(index(providers))),\n    [dispatch, providers],\n  )\n\n  const handleFetchMetadataAll = useCallback(\n    () => dispatch(load(fetchAllMetadata())),\n    [dispatch],\n  )\n\n  const handleRemoveProvider = useCallback(\n    (id: string) => () => dispatch(removeProvider(id)),\n    [dispatch],\n  )\n\n  const [\n    showAddProviderModal,\n    handleShowAddProviderModal,\n    handleCloseAddProviderModal,\n  ] = useModal()\n\n  const [showUpdateProviderModals, setShowUpdateProviderModals] = useState<{\n    [index: number]: boolean\n  }>(providers.reduce((acc, _, index) => ({ ...acc, [index]: false }), {}))\n  const handleShowUpdateProviderModal = useCallback(\n    (index: number) => () =>\n      setShowUpdateProviderModals((state) => ({ ...state, [index]: true })),\n    [setShowUpdateProviderModals],\n  )\n  const handleCloseUpdateProviderModal = useCallback(\n    (index: number) => () =>\n      setShowUpdateProviderModals((state) => ({ ...state, [index]: false })),\n    [setShowUpdateProviderModals],\n  )\n\n  return (\n    <div className=\"Settings\">\n      <section className=\"Settings__auth\">\n        <h2>{t('Authentication')}</h2>\n        <p>\n          {t(\n            'Sign into your cloud to add your movies and TV shows to your library.',\n          )}\n        </p>\n        <div className=\"Settings__auth__scroll\">\n          <div className=\"Settings__auth__providers\">\n            {providers.map((provider, index) => (\n              <div className=\"Settings__auth__provider\" key={index}>\n                <ProviderButton\n                  className={classNames('primary', {\n                    warn:\n                      provider.moviesPath === undefined &&\n                      provider.showsPath === undefined,\n                  })}\n                  icon={buildProviderIcon(provider.kind)}\n                  onClick={handleShowUpdateProviderModal(index)}\n                />\n                <UpdateProviderModal\n                  isActive={showUpdateProviderModals[index]}\n                  provider={provider}\n                  onClose={handleCloseUpdateProviderModal(index)}\n                  onSetupAuth={handleSetupAuth}\n                  onUpdateProvider={handleUpdateProvider}\n                  onRemoveProvider={handleRemoveProvider(provider.id)}\n                  key={7}\n                />\n              </div>\n            ))}\n            <div className=\"Settings__auth__provider\" key={providers.length}>\n              <ProviderButton\n                icon={<AddIcon />}\n                onClick={handleShowAddProviderModal}\n                key={5}\n              />\n              <AddProviderModal\n                isActive={showAddProviderModal}\n                onClose={handleCloseAddProviderModal}\n                onSetupAuth={handleSetupAuth}\n                onAddProvider={handleUpdateProvider}\n                key={7}\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"Settings__indexing\">\n        <h2>{t('Indexing')}</h2>\n        <p>\n          {t(\n            'Index to look for new media on your linked services or fetch the latest metadata.',\n          )}\n        </p>\n        <div className=\"Settings__indexing__actions\">\n          <button disabled={providers.length === 0} onClick={handleIndex}>\n            {t('Index')}\n          </button>\n          <button\n            disabled={providers.length === 0}\n            onClick={handleFetchMetadataAll}\n          >\n            {t('Update metadata')}\n          </button>\n        </div>\n      </section>\n\n      <section className=\"Settings__language\">\n        <h2>{t('Language')}</h2>\n        <p>{t('Change the display language.')}</p>\n        <LanguageSelector onChange={handleFetchMetadataAll} />\n      </section>\n\n      <section className=\"Settings__version\">\n        <h2>{t('Version')}</h2>\n        <p>{t('Plaain {{version}}.', { version: VERSION })}</p>\n        <p className=\"small\">\n          <Trans>\n            Plaain is{' '}\n            <a\n              href=\"https://github.com/jonhue/plaain\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              open-source\n            </a>\n            . See the{' '}\n            <a\n              href=\"https://github.com/jonhue/plaain/releases\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              changelog\n            </a>\n            .\n          </Trans>\n        </p>\n        <p className=\"small\">\n          <Trans>\n            You are running commit{' '}\n            <a\n              href={`https://github.com/jonhue/plaain/commit/${process.env.REACT_APP_GIT_SHA}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {process.env.REACT_APP_GIT_SHA\n                ? buildCommitId(process.env.REACT_APP_GIT_SHA)\n                : t('Unknown')}\n            </a>\n            .\n          </Trans>\n        </p>\n        <p className=\"small\">\n          <Trans>\n            Note that Plaain may <span className=\"bold\">not</span> be used to\n            stream pirated content or publicly share your private media library.\n            You may only connect to your private cloud storage.\n          </Trans>\n        </p>\n      </section>\n    </div>\n  )\n}\n","import './Show.scss'\nimport { buildBackdropUrl, buildCoverUrl } from '../../util'\nimport { Backdrop } from '../../components/Backdrop'\nimport { Cover } from '../../components/Cover'\nimport { HorizontalSlide } from '../../components/HorizontalSlide'\nimport { NotFound } from '../NotFound'\nimport React from 'react'\nimport { RootState } from '../../store'\nimport { seasonsByShowSelector } from '../../store/seasons/selectors'\nimport { showSelector } from '../../store/shows/selectors'\nimport { sortByNumber } from '../../util'\nimport { useParams } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\nexport const Show = () => {\n  const { t } = useTranslation()\n  const { id } = useParams()\n\n  const show = useSelector((state: RootState) => showSelector(id!)(state.shows))\n\n  const seasons = useSelector(\n    (state: RootState) =>\n      show &&\n      sortByNumber(\n        seasonsByShowSelector(show.id)(state.seasons),\n        (season) => season.number,\n      ),\n  )\n\n  return show !== undefined && seasons !== undefined ? (\n    <div className=\"Show\">\n      <Backdrop url={buildBackdropUrl(show.backdropPath)} />\n      <div className=\"Show__details\">\n        <Cover url={buildCoverUrl(show.posterPath)} alt=\"poster\" />\n        <h1>{show.title}</h1>\n        <div className=\"Show__information\">\n          {show.firstAirDate && show.lastAirDate && (\n            <p className=\"small\">\n              {new Date(show.firstAirDate).getFullYear()} -{' '}\n              {new Date(show.lastAirDate).getFullYear()}\n            </p>\n          )}\n        </div>\n        <p className=\"Show__overview\">{show.summary}</p>\n      </div>\n      {seasons.length > 0 && (\n        <div className=\"Show__seasons\">\n          <h2>{t('Seasons')}</h2>\n          <HorizontalSlide items={seasons} id=\"seasons\" />\n        </div>\n      )}\n    </div>\n  ) : (\n    <NotFound />\n  )\n}\n","import './Shows.scss'\nimport { ItemGrid } from '../../components/ItemGrid'\nimport { Navigate } from 'react-router-dom'\nimport React from 'react'\nimport { RootState } from '../../store'\nimport { VerticalSlide } from '../../components/VerticalSlide'\nimport { showsSelector } from '../../store/shows/selectors'\nimport { sortAlphabetically } from '../../util'\nimport { useSelector } from 'react-redux'\n\nexport const Shows = () => {\n  const shows = useSelector((state: RootState) =>\n    sortAlphabetically(showsSelector(state.shows), (show) => show.title),\n  )\n\n  return shows.length > 0 ? (\n    <div className=\"Shows\">\n      <VerticalSlide items={shows} path=\"shows\" id=\"shows\" />\n      <ItemGrid items={shows} />\n    </div>\n  ) : (\n    <Navigate to=\"/app\" />\n  )\n}\n","import './index.scss'\nimport { Route, Routes } from 'react-router-dom'\nimport { Find } from './Find'\nimport { Home } from './Home'\nimport { Movie } from './Movie'\nimport { Movies } from './Movies'\nimport { Nav } from '../../components/Nav'\nimport { NotFound } from '../NotFound'\nimport { Person } from './Person'\nimport React from 'react'\nimport { RootState } from '../../store'\nimport { Season } from './Season'\nimport { Settings } from './Settings'\nimport { Show } from './Show'\nimport { Shows } from './Shows'\nimport { useSelector } from 'react-redux'\n\nconst App = () => {\n  const { moviesCount, showsCount } = useSelector((state: RootState) => ({\n    moviesCount: Object.keys(state.movies).length,\n    showsCount: Object.keys(state.shows).length,\n  }))\n\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path={'/'} element={<Home />} />\n        <Route path={'movies/:id'} element={<Movie />} />\n        <Route path={'movies'} element={<Movies />} />\n        <Route path={'shows/:id'} element={<Show />} />\n        <Route path={'shows'} element={<Shows />} />\n        <Route path={'seasons/:id'} element={<Season />} />\n        <Route path={'people/:id'} element={<Person />} />\n        <Route path={'settings'} element={<Settings />} />\n        <Route path={'find'} element={<Find />} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n\n      <Nav\n        moviesDisabled={moviesCount === 0}\n        showsDisabled={showsCount === 0}\n      />\n    </div>\n  )\n}\n\nexport default App\n"],"names":["State","Cover","url","alt","className","src","HorizontalSlide","id","items","small","t","useTranslation","classNames","spaceBetween","slidesPerView","slidesOffsetBefore","slidesOffsetAfter","grabCursor","length","map","item","index","to","buildItemUrl","buildCoverUrl","posterPath","title","inProgressSelector","createSelector","state","inProgressMoviesSelector","movies","inProgressSeasonsSelector","seasons","recentlyWatchedSelector","recentlyWatchedMoviesSelector","recentlyWatchedSeasonsSelector","personSelector","moviesPersonSelector","movie","cast","crew","seasonsPersonSelector","season","moviesCast","moviesCrew","seasonsCast","seasonsCrew","roles","characters","concat","person","character","reduce","acc","kind","ItemKind","tmdbId","gender","jobs","undefined","job","Set","buildIndex","itemToText","Index","tokenize","forEach","add","Find","navigate","useNavigate","location","useLocation","initialQuery","useMemo","URLSearchParams","search","get","useSelector","people","shows","useState","query","setQuery","moviesIndex","moviesSelector","summary","toString","buildMovieSearchKey","showsIndex","showsSelector","show","buildShowSearchKey","seasonsByShowSelector","peopleIndex","ids","peopleSelector","filter","notUndefined","buildPersonSearchKey","foundMovies","movieSelector","foundShows","showSelector","foundPeople","handleInputChange","useCallback","event","target","value","replace","autoFocus","placeholder","onChange","Authenticated","onIndex","href","rel","onClick","ForYou","inProgress","recentlyWatched","Setup","Unauthenticated","Home","dispatch","useDispatch","sortByLastWatched","providers","providersSelector","auth","handleIndex","load","FileList","files","file","name","useToggle","initialValue","setValue","PersonList","details","isWrapped","toggleIsWrapped","displayedPeople","slice","Movie","useParams","handleContinue","usage","progress","handleWatch","Backdrop","buildBackdropUrl","backdropPath","releaseDate","Date","getFullYear","duration","splitHoursAndMinutes","isInProgress","disabled","sources","primary","trailerUrl","buildJobTitle","captions","NotFound","ItemGrid","VerticalSlide","path","direction","effect","freeMode","history","replaceState","key","modules","EffectCards","Movies","sortAlphabetically","FindIcon","Icon","width","height","fill","stroke","x1","x2","y1","y2","cx","cy","r","ForYouIcon","points","d","MovieIcon","x","y","SettingsIcon","ShowIcon","Tab","children","inexact","forceActive","isActive","useMatch","active","Nav","moviesDisabled","showsDisabled","Person","moviesByPersonSelector","seasonsByPersonSelector","showBackdropPath","join","EpisodeEntry","episode","number","airDate","toDateString","Season","seasonSelector","showId","episodes","sortByNumber","episodesBySeasonSelector","currentEpisode","find","showEpisodes","toggleEpisodes","episodeNumber","shown","AddIcon","ProviderButton","icon","large","ChooseProvider","onChoose","handleChoose","PROVIDER_KINDS","buildProviderIcon","buildProviderKindName","DISABLED_PROVIDER_KINDS","CheckIcon","FTPProviderForm","submitCaption","provider","onSubmit","initalState","host","port","username","password","secure","setState","handleChange","currentTarget","type","checked","handleSubmit","preventDefault","ProviderKind","isSetupInput","isValid","useEffect","valid","min","step","EnterDetailsProvider","onEnteredDetails","ProviderForm","moviesPath","showsPath","isValidPath","startsWith","warn","SetupProvider","onSetup","AddProviderModal","onClose","onSetupAuth","onAddProvider","useModal","handleOpen","initialState","Choose","setKind","authResponse","setAuthResponse","useSetupAuthRedirect","response","handleClose","setTimeout","EnterDetails","handleEnteredDetails","config","handleSetup","Modal","LanguageSelector","i18next","defaultValue","LANGUAGES","language","UpdateProviderModal","onUpdateProvider","onRemoveProvider","Specific","General","setDetails","handleDetails","handleUpdate","newProvider","handleRemoveProvider","window","confirm","Settings","handleSetupAuth","setupAuth","handleUpdateProvider","updateProvider","handleFetchMetadataAll","fetchAllMetadata","removeProvider","showAddProviderModal","handleShowAddProviderModal","handleCloseAddProviderModal","_","showUpdateProviderModals","setShowUpdateProviderModals","handleShowUpdateProviderModal","handleCloseUpdateProviderModal","version","VERSION","process","buildCommitId","Show","firstAirDate","lastAirDate","Shows","moviesCount","Object","keys","showsCount","element"],"sourceRoot":""}