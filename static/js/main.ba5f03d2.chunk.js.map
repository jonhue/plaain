{"version":3,"sources":["constants.js","reducers/version.js","services/auth/MicrosoftAuth.js","actions/loading.js","services/drives/OneDrive.js","services/indexing/IndexFiles.js","services/indexing/IndexMovies.js","services/indexing/IndexShows.js","services/indexing/IndexSeasons.js","services/indexing/IndexEpisodes.js","services/databases/TMDb.js","services/fetching/FetchAllSeasons.js","services/fetching/FetchAllEpisodes.js","services/Parametrize.js","services/fetching/FetchMovie.js","actions/movies.js","services/fetching/FetchShow.js","actions/shows.js","services/fetching/FetchSeason.js","selectors/shows.js","actions/seasons.js","services/fetching/FetchEpisode.js","selectors/seasons.js","actions/episodes.js","actions/indexing.js","actions/version.js","actions/auth.js","reducers/auth.js","actions/settings.js","reducers/settings.js","reducers/indexing.js","reducers/loading.js","reducers/index.js","reducers/movies.js","reducers/shows.js","reducers/seasons.js","reducers/episodes.js","store.js","serviceWorker.js","services/AutomaticIndexing.js","services/IndexAfterUpdate.js","components/Cover.js","components/HorizontalSlide.js","selectors/movies.js","scenes/ForYou.js","components/ItemGrid.js","components/VerticalSlide.js","components/Nucleo/icons/zoom.jsx","scenes/Movies.js","scenes/NotFound.js","components/Backdrop.js","components/PersonList.js","components/PlyrPlayer/PlyrCaption.js","components/PlyrPlayer/PlyrSource.js","components/PlyrPlayer.js","scenes/Movie.js","scenes/Shows.js","scenes/Show.js","selectors/episodes.js","scenes/Season.js","scenes/Person.js","selectors/people.js","components/Nucleo/icons/add.jsx","components/Nucleo/icons/dropbox.jsx","components/Nucleo/icons/google.jsx","components/Nucleo/icons/microsoft.jsx","components/Banner.js","selectors/auth.js","scenes/Settings.js","scenes/Find.js","components/Nucleo/icons/soundWave.jsx","scenes/Loading.js","components/Nucleo/icons/popcorn.jsx","components/Nucleo/icons/movie.jsx","components/Nucleo/icons/show.jsx","components/Nucleo/icons/gear.jsx","components/Nav.js","App.js","scenes/Welcome.js","components/ScrollToTop.js","index.js"],"names":["AUTOMATIC_INDEXING","PROVIDERS","MICROSOFT","STORAGE_PROVIDERS","ITEM_TYPES","FILE_TYPES","SOURCE_EXTENSIONS","CAPTION_EXTENSIONS","MicrosoftAuth","constructor","this","_userAgentApplication","UserAgentApplication","auth","clientId","config","clientID","perform","silentLogIn","userAgentApplication","acquireTokenSilent","scopes","then","response","accessToken","catch","error","console","log","popupLogIn","loginPopup","prompt","process","loadingBegin","caption","type","payload","OneDrive","_client","Client","init","authProvider","done","movies","client","api","get","shows","children","itemId","IndexFiles","oneDrive","folderId","_oneDrive","_folderId","value","map","item","index","filter","source","fileType","name","file","provider","id","extension","fileExtension","information","fileInformation","mimeType","url","fileName","includes","split","pop","shift","IndexMovies","Promise","all","movie","folder","files","providerId","IndexShows","show","IndexSeasons","seasons","_shows","_seasons","performForShow","reduce","arr","concat","season","showId","find","Number","parseInt","IndexEpisodes","episodes","_episodes","performForSeason","handleResponse","episode","seasonId","rp","require","TMDb","findMovie","query","rateLimiting","uri","base_uri","qs","results","length","findShow","movieCredits","seasonNumber","seasonCredits","episodeNumber","resolve","setTimeout","api_key","language","headers","json","FetchAllSeasons","_tmdb","a","tmdb","season_number","FetchAllEpisodes","episode_number","Parametrize","string","_string","toLowerCase","replace","FetchMovie","_movie","fetch","path","fetchDetails","fetchCredits","backdropUrl","backdrop_path","overview","posterUrl","poster_path","releaseDate","release_date","runtime","title","trailerLink","cast","castMember","character","gender","profileUrl","profile_path","crew","crewMember","job","fetchMovie","dispatch","fetchedMovie","updateMovie","removeMovie","FetchShow","_show","firstAirDate","first_air_date","lastAirDate","last_air_date","fetchShow","fetchedShow","updateShow","removeShow","FetchSeason","showName","_season","airDate","air_date","showsSelector","state","showSelector","createSelector","fetchSeason","getState","fetchedSeason","updateSeason","removeSeason","FetchEpisode","seasonName","_episode","seasonsSelector","seasonSelector","recentlyWatchedSeasonsSelector","date","Object","values","lastWatched","getTime","undefined","progress","sort","b","seasonsCastMemberSelector","flat","seasonsCrewMemberSelector","fetchEpisode","fetchedEpisode","updateEpisode","removeEpisode","indexBegin","token","cleanupOldItems","keys","awaitFetching","version","updateVersion","indexSuccess","indexFailure","statusCode","logInExpired","newIds","oldIds","removeAction","forEach","items","fetchAction","logInFailure","logInBegin","logInSuccess","initialState","o","automaticIndexing","lastIndexed","rootReducer","combineReducers","action","settings","indexing","Date","loading","persistReducer","key","storage","whitelist","debug","createStore","persistedReducer","applyMiddleware","thunk","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","newVersionAvailable","onUpdate","onSuccess","AutomaticIndexing","setting","indexAction","_setting","_lastIndexed","_indexAction","getFullYear","getMonth","getDate","IndexAfterUpdate","versionUsedForLastIndex","_versionUsedForLastIndex","Cover","Component","render","className","src","props","alt","width","HorizontalSlide","componentDidMount","Swiper","document","querySelector","spaceBetween","slidesPerView","slidesOffsetBefore","slidesOffsetAfter","grabCursor","to","moviesSelector","moviesCastMemberSelector","moviesCrewMemberSelector","ForYou","classList","add","componentWillUnmount","remove","oneMonthAgo","setMonth","inProgress","inProgressMoviesSelector","inProgressSeasonsSelector","recentlyWatched","entries","href","target","rel","onClick","connect","ItemGrid","VerticalSlide","direction","effect","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","history","replaceState","data-history","height","viewBox","xmlns","fill","stroke","strokeLinecap","strokeWidth","x1","x2","y1","y2","cx","cy","r","Movies","innerWidth","NotFound","Backdrop","PersonList","super","wrapped","toggle","setState","people","slice","person","attribute","bind","PlyrCaption","kind","label","srcLang","ISO6391","getCode","default","PlyrSource","size","PlyrPlayer","player","Plyr","on","event","detail","plyr","currentTime","updateItemAction","component","dataset","preventExit","stop","style","display","exitedAction","fullscreen","exit","endedAction","crossOrigin","playsInline","controls","download","Movie","params","continue","watch","enter","play","finishedMovie","Math","floor","Shows","Show","toString","episodesSelector","episodesBySeasonSelector","Season","watchableEpisodes","episodesWrapped","currentEpisodeNumber","toggleEpisodes","stoppedEpisode","finishedEpisode","disabled","toDateString","Person","moviesCast","moviesCrew","seasonsCast","seasonsCrew","personSelector","moviesByPersonSelector","seasonsByPersonSelector","roles","Set","role","personRolesSelector","join","points","d","x","y","Banner","text","linkUrl","linkText","authSelector","authTokenSelector","authProviderSelector","authError","some","Settings","handleAutomaticIndexingChange","updateSettings","notAuthenticated","authenticationExpired","noMediaFound","authenticateMicrosoft","onChange","Find","moviesIndex","FlexSearch","showsIndex","URLSearchParams","search","result","handleInputChange","autoFocus","placeholder","strokeMiterlimit","strokeLinejoin","data-made-with","Loading","Nav","App","exact","Welcome","ScrollToTop","componentDidUpdate","prevProps","scrollTo","withRouter","ReactDOM","store","persistor","persistStore","basename","getElementById","URL","origin","addEventListener","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ba5f03d2.chunk.js","sourcesContent":["export const VERSION = '0.0.1'\n\nexport const AUTOMATIC_INDEXING = {\n  NEVER: 'never',\n  MONTHLY: 'monthly',\n  DAILY: 'daily',\n  ALWAYS: 'always'\n}\n\nexport const PROVIDERS = {\n  MICROSOFT: 'microsoft'\n}\n\nexport const STORAGE_PROVIDERS = {\n  [PROVIDERS.MICROSOFT]: 'OneDrive'\n}\n\nexport const ITEM_TYPES = {\n  MOVIE: 'movie',\n  SHOW: 'show',\n  SEASON: 'season',\n  EPISODE: 'episode'\n}\n\nexport const FILE_TYPES = {\n  SOURCE: 'source',\n  CAPTION: 'caption'\n}\n\nexport const SOURCE_EXTENSIONS = ['mp4', 'm4v', 'mkv', 'webm']\nexport const CAPTION_EXTENSIONS = ['vtt']\n","import { VERSION } from '../constants'\n\nimport { UPDATE_VERSION } from '../actions/version'\n\nconst initialState = VERSION\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n  case UPDATE_VERSION:\n    return action.payload\n  default:\n    return state\n  }\n}\n","import { UserAgentApplication } from 'msal'\n\nclass MicrosoftAuth {\n  static config = {\n    clientID: process.env.REACT_APP_MICROSOFT_CLIENT_ID,\n    scopes: ['user.read', 'files.read.all']\n  }\n\n  constructor() {\n    this._userAgentApplication = new UserAgentApplication({\n      auth: {\n        clientId: MicrosoftAuth.config.clientID\n      }\n    })\n  }\n\n  perform() {\n    return this.silentLogIn()\n  }\n\n  silentLogIn() {\n    return this.userAgentApplication.acquireTokenSilent({\n      scopes: MicrosoftAuth.config.scopes\n    }).then(response => {\n      return response.accessToken\n    }).catch(error => {\n      console.log(error)\n      return this.popupLogIn()\n    })\n  }\n\n  popupLogIn() {\n    return this.userAgentApplication.loginPopup({\n      scopes: MicrosoftAuth.config.scopes,\n      prompt: 'select_account'\n    }).then(() => {\n      return this.userAgentApplication.acquireTokenSilent({\n        scopes: MicrosoftAuth.config.scopes\n      })\n    }).then(response => {\n      return response.accessToken\n    })\n  }\n\n  get userAgentApplication() {\n    return this._userAgentApplication\n  }\n}\n\nexport default MicrosoftAuth\n","export const LOADING_BEGIN = 'LOADING_BEGIN'\nexport const LOADING_STOP = 'LOADING_STOP'\n\nexport const loadingBegin = caption => ({\n  type: LOADING_BEGIN,\n  payload: caption\n})\n\nexport const loadingStop = () => ({\n  type: LOADING_STOP\n})\n","import { Client } from '@microsoft/microsoft-graph-client'\n\nclass OneDrive {\n  constructor(accessToken) {\n    this._client = Client.init({\n      authProvider: done => done(null, accessToken)\n    })\n  }\n\n  movies() {\n    return this.client.api('/me/drive/root:/Plaain/Movies:/children').get()\n  }\n\n  shows() {\n    return this.client.api('/me/drive/root:/Plaain/Shows:/children').get()\n  }\n\n  children(itemId) {\n    return this.client.api(`/me/drive/items/${itemId}/children`).get()\n  }\n\n  get client() {\n    return this._client\n  }\n}\n\nexport default OneDrive\n","import {\n  PROVIDERS,\n  FILE_TYPES,\n  SOURCE_EXTENSIONS,\n  CAPTION_EXTENSIONS\n} from '../../constants'\n\nclass IndexFiles {\n  constructor(oneDrive, folderId) {\n    this._oneDrive = oneDrive\n    this._folderId = folderId\n  }\n\n  perform() {\n    return this.oneDrive.children(this.folderId).then(response => {\n      return response.value.map(item => this.index(item))\n        .filter(source => source != null)\n    })\n  }\n\n  index(item) {\n    const type = IndexFiles.fileType(item.name)\n    if (item.file == null || type == null) {\n      return null\n    }\n\n    return {\n      provider: PROVIDERS.MICROSOFT,\n      id: item.id,\n      type: type,\n      name: item.name,\n      extension: IndexFiles.fileExtension(item.name),\n      information: IndexFiles.fileInformation(item.name),\n      mimeType: item.file.mimeType,\n      url: item['@microsoft.graph.downloadUrl']\n    }\n  }\n\n  static fileType(fileName) {\n    if (SOURCE_EXTENSIONS.includes(IndexFiles.fileExtension(fileName))) {\n      return FILE_TYPES.SOURCE\n    } else if (\n      CAPTION_EXTENSIONS.includes(IndexFiles.fileExtension(fileName))\n    ) {\n      return FILE_TYPES.CAPTION\n    } else {\n      return null\n    }\n  }\n\n  static fileExtension(fileName) {\n    return fileName.split('.').pop()\n  }\n\n  static fileInformation(fileName) {\n    return fileName.split('.').shift()\n  }\n\n  get oneDrive() {\n    return this._oneDrive\n  }\n\n  get folderId() {\n    return this._folderId\n  }\n}\n\nexport default IndexFiles\n","import { PROVIDERS, ITEM_TYPES } from '../../constants'\n\nimport OneDrive from '../drives/OneDrive'\n\nimport IndexFiles from './IndexFiles'\n\nclass IndexMovies {\n  constructor(accessToken) {\n    this._oneDrive = new OneDrive(accessToken)\n  }\n\n  async perform() {\n    return await Promise.all(await this.oneDrive.movies().then(response => {\n      return response.value.map(item => this.index(item))\n    })).then(movies => movies.filter(movie => movie !== null))\n  }\n\n  async index(item) {\n    if (item.folder == null) {\n      return null\n    }\n\n    const files = await new IndexFiles(this.oneDrive, item.id).perform()\n\n    return {\n      provider: PROVIDERS.MICROSOFT,\n      type: ITEM_TYPES.MOVIE,\n      providerId: item.id,\n      name: item.name,\n      files: files\n    }\n  }\n\n  get oneDrive() {\n    return this._oneDrive\n  }\n}\n\nexport default IndexMovies\n","import { PROVIDERS, ITEM_TYPES } from '../../constants'\n\nimport OneDrive from '../drives/OneDrive'\n\nclass IndexShows {\n  constructor(accessToken) {\n    this._oneDrive = new OneDrive(accessToken)\n  }\n\n  async perform() {\n    return await Promise.all(await this.oneDrive.shows().then(response => {\n      return response.value.map(item => this.index(item))\n    })).then(shows => shows.filter(show => show !== null))\n  }\n\n  async index(item) {\n    if (item.folder == null) {\n      return null\n    }\n\n    return {\n      provider: PROVIDERS.MICROSOFT,\n      type: ITEM_TYPES.SHOW,\n      providerId: item.id,\n      name: item.name\n    }\n  }\n\n  get oneDrive() {\n    return this._oneDrive\n  }\n}\n\nexport default IndexShows\n","import { PROVIDERS } from '../../constants'\n\nimport OneDrive from '../drives/OneDrive'\n\nclass IndexSeasons {\n  constructor(accessToken, shows, seasons) {\n    this._oneDrive = new OneDrive(accessToken)\n    this._shows = shows\n    this._seasons = seasons\n  }\n\n  async perform() {\n    const seasons = await Promise.all(\n      this.shows.map(show => this.performForShow(show, this.seasons))\n    )\n\n    return seasons.reduce((seasons, arr) => seasons.concat(arr), [])\n  }\n\n  async performForShow(show, seasons) {\n    return await this.oneDrive.children(show.providerId).then(response => {\n      return seasons.filter(season => season.showId === show.id).map(season => {\n        const item = response.value.find(item => {\n          return season.id === `${show.id}-${Number.parseInt(item.name)}`\n        })\n\n        if (item) {\n          return {\n            ...season,\n            provider: PROVIDERS.MICROSOFT,\n            providerId: item.id\n          }\n        } else {\n          return season\n        }\n      })\n    })\n  }\n\n  get oneDrive() {\n    return this._oneDrive\n  }\n\n  get shows() {\n    return this._shows\n  }\n\n  get seasons() {\n    return this._seasons\n  }\n}\n\nexport default IndexSeasons\n","import { PROVIDERS } from '../../constants'\n\nimport OneDrive from '../drives/OneDrive'\n\nimport IndexFiles from './IndexFiles'\n\nclass IndexEpisodes {\n  constructor(accessToken, seasons, episodes) {\n    this._oneDrive = new OneDrive(accessToken)\n    this._seasons = seasons\n    this._episodes = episodes\n  }\n\n  async perform() {\n    const episodes = await Promise.all(\n      this.seasons.map(season => this.performForSeason(season, this.episodes))\n    )\n\n    return episodes.reduce((episodes, arr) => episodes.concat(arr), [])\n  }\n\n  async performForSeason(season, episodes) {\n    if (season.providerId) {\n      return await this.oneDrive.children(season.providerId)\n        .then(response => this.handleResponse(response, season, episodes))\n    } else {\n      return episodes.filter(episode => episode.seasonId === season.id)\n    }\n  }\n\n  async handleResponse(response, season, episodes) {\n    return await Promise.all(\n      episodes.filter(episode => episode.seasonId === season.id)\n        .map(episode => {\n          return this.index(\n            episode,\n            response.value.find(item => {\n              return episode.id === `${season.id}-${Number.parseInt(item.name)}`\n            })\n          )\n        })\n    )\n  }\n\n  async index(episode, item) {\n    if (item) {\n      const files = await new IndexFiles(this.oneDrive, item.id).perform()\n      return {\n        ...episode,\n        provider: PROVIDERS.MICROSOFT,\n        providerId: item.id,\n        files: files\n      }\n    } else {\n      return episode\n    }\n  }\n\n  get oneDrive() {\n    return this._oneDrive\n  }\n\n  get seasons() {\n    return this._seasons\n  }\n\n  get episodes() {\n    return this._episodes\n  }\n}\n\nexport default IndexEpisodes\n","const rp = require('request-promise')\n\nclass TMDb {\n  static config = {\n    qs: {\n      api_key: process.env.REACT_APP_TMDB_API_KEY,\n      language: 'en-US'\n    },\n    headers: {\n      'User-Agent': 'Request-Promise'\n    },\n    json: true\n  }\n\n  static base_uri = 'https://api.themoviedb.org/3'\n\n  async findMovie(query) {\n    await TMDb.rateLimiting()\n    return rp({\n      ...TMDb.config,\n      uri: `${TMDb.base_uri}/search/movie`,\n      qs: {...TMDb.config.qs, query}\n    }).then(response => {\n      if (response.results.length < 1) {\n        return null\n      }\n\n      return response.results[0].id\n    })\n  }\n\n  async findShow(query) {\n    await TMDb.rateLimiting()\n    return rp({\n      ...TMDb.config,\n      uri: `${TMDb.base_uri}/search/tv`,\n      qs: {...TMDb.config.qs, query}\n    }).then(response => {\n      if (response.results.length < 1) {\n        return null\n      }\n\n      return response.results[0].id\n    })\n  }\n\n  async movie(id) {\n    await TMDb.rateLimiting()\n    return rp({...TMDb.config, uri: `${TMDb.base_uri}/movie/${id}`})\n  }\n\n  async movieCredits(id) {\n    await TMDb.rateLimiting()\n    return rp({...TMDb.config, uri: `${TMDb.base_uri}/movie/${id}/credits`})\n  }\n\n  async show(id) {\n    await TMDb.rateLimiting()\n    return rp({...TMDb.config, uri: `${TMDb.base_uri}/tv/${id}`})\n  }\n\n  async season(showId, seasonNumber) {\n    await TMDb.rateLimiting()\n    return rp({\n      ...TMDb.config,\n      uri: `${TMDb.base_uri}/tv/${showId}/season/${seasonNumber}`\n    })\n  }\n\n  async seasonCredits(showId, seasonNumber) {\n    await TMDb.rateLimiting()\n    return rp({\n      ...TMDb.config,\n      uri: `${TMDb.base_uri}/tv/${showId}/season/${seasonNumber}/credits`\n    })\n  }\n\n  async episode(showId, seasonNumber, episodeNumber) {\n    await TMDb.rateLimiting()\n    return rp({\n      ...TMDb.config,\n      uri: `${TMDb.base_uri}/tv/${showId}/season/${seasonNumber}/episode` +\n           `/${episodeNumber}`\n    })\n  }\n\n  // TMDb only allows for up to 4 requests per second:\n  // https://developers.themoviedb.org/3/getting-started/request-rate-limiting\n  static async rateLimiting() {\n    await new Promise(resolve => setTimeout(resolve, 250))\n  }\n}\n\nexport default TMDb\n","import { ITEM_TYPES } from '../../constants'\n\nimport TMDb from '../databases/TMDb'\n\nclass FetchAllSeasons {\n  constructor(shows) {\n    this._shows = shows\n    this._tmdb = new TMDb()\n  }\n\n  async perform() {\n    const seasons = await Promise.all(\n      this.shows.map(async show => {\n        const response = await this.tmdb.show(show.id)\n\n        return response.seasons.map(season => ({\n          id: `${show.id}-${season.season_number}`,\n          type: ITEM_TYPES.SEASON,\n          seasonNumber: season.season_number,\n          showId: show.id,\n          providerId: null\n        }))\n      })\n    )\n\n    return seasons.reduce((seasons, arr) => seasons.concat(arr), [])\n  }\n\n  get shows() {\n    return this._shows\n  }\n\n  get tmdb() {\n    return this._tmdb\n  }\n}\n\nexport default FetchAllSeasons\n","import { ITEM_TYPES } from '../../constants'\n\nimport TMDb from '../databases/TMDb'\n\nclass FetchAllEpisodes {\n  constructor(seasons) {\n    this._seasons = seasons\n    this._tmdb = new TMDb()\n  }\n\n  async perform() {\n    const episodes = await Promise.all(this.seasons.map(async (season) => {\n      const response =\n        await this.tmdb.season(season.showId, season.seasonNumber)\n\n      return response.episodes.map(episode => ({\n        id: `${season.id}-${episode.episode_number}`,\n        type: ITEM_TYPES.EPISODE,\n        episodeNumber: episode.episode_number,\n        seasonId: season.id,\n        providerId: null\n      }))\n    }))\n\n    return episodes.reduce((episodes, arr) => episodes.concat(arr), [])\n  }\n\n  get seasons() {\n    return this._seasons\n  }\n\n  get tmdb() {\n    return this._tmdb\n  }\n}\n\nexport default FetchAllEpisodes\n","class Parametrize {\n  constructor(string) {\n    this._string = string\n  }\n\n  perform() {\n    return this.string.toLowerCase().replace(/\\s/g, '+')\n  }\n\n  get string() {\n    return this._string\n  }\n}\n\nexport default Parametrize\n","import TMDb from '../databases/TMDb'\nimport Parametrize from '../Parametrize'\n\nclass FetchMovie {\n  constructor(movie) {\n    this._movie = movie\n    this._tmdb = new TMDb()\n  }\n\n  perform() {\n    return this.tmdb.findMovie(this.movie.name)\n      .then(id => this.fetch(id))\n  }\n\n  async fetch(id) {\n    this.movie.id = id\n    this.movie.path = `/app/movie/${this.movie.id}`\n\n    if (this.movie.id === null) {\n      return\n    }\n\n    await Promise.all([\n      this.fetchDetails(),\n      this.fetchCredits()\n    ])\n\n    return this.movie\n  }\n\n  fetchDetails() {\n    return this.tmdb.movie(this.movie.id)\n      .then(response => {\n        this.movie.backdropUrl =\n          `https://image.tmdb.org/t/p/original${response.backdrop_path}`\n        this.movie.overview = response.overview\n        this.movie.posterUrl =\n          `https://image.tmdb.org/t/p/original${response.poster_path}`\n        this.movie.releaseDate = response.release_date\n        this.movie.runtime = response.runtime\n        this.movie.name = response.title\n        this.movie.trailerLink =\n          'https://www.youtube.com/results?search_query=' +\n          `${new Parametrize(this.movie.name).perform()}+official+trailer`\n      })\n  }\n\n  fetchCredits() {\n    return this.tmdb.movieCredits(this.movie.id)\n      .then(response => {\n        this.movie.cast = response.cast.map(castMember => ({\n          id: castMember.id,\n          character: castMember.character,\n          name: castMember.name,\n          gender: castMember.gender,\n          profileUrl: `https://image.tmdb.org/t/p/original${castMember.profile_path}`\n        }))\n        this.movie.crew = response.crew.map(crewMember => ({\n          id: crewMember.id,\n          job: crewMember.job,\n          name: crewMember.name,\n          gender: crewMember.gender,\n          profileUrl: `https://image.tmdb.org/t/p/original${crewMember.profile_path}`\n        }))\n      })\n  }\n\n  get movie() {\n    return this._movie\n  }\n\n  get tmdb() {\n    return this._tmdb\n  }\n}\n\nexport default FetchMovie\n","import FetchMovie from '../services/fetching/FetchMovie'\n\nexport const REMOVE_MOVIE = 'REMOVE_MOVIE'\nexport const UPDATE_MOVIE = 'UPDATE_MOVIE'\n\nexport const fetchMovie = movie => {\n  return dispatch => {\n    return new FetchMovie(movie).perform().then(fetchedMovie => {\n      dispatch(updateMovie(fetchedMovie))\n    }).catch(() => dispatch(fetchMovie(movie)))\n  }\n}\n\nexport const removeMovie = id => ({\n  type: REMOVE_MOVIE,\n  payload: id\n})\n\nexport const updateMovie = movie => ({\n  type: UPDATE_MOVIE,\n  payload: movie\n})\n","import TMDb from '../databases/TMDb'\n\nclass FetchShow {\n  constructor(show) {\n    this._show = show\n    this._tmdb = new TMDb()\n  }\n\n  perform() {\n    return this.tmdb.findShow(this.show.name).then(id => this.fetch(id))\n  }\n\n  async fetch(id) {\n    this.show.id = id\n    this.show.path = `/app/show/${this.show.id}`\n\n    if (this.show.id === null) {\n      return\n    }\n\n    await Promise.all([\n      this.fetchDetails()\n    ])\n\n    return this.show\n  }\n\n  fetchDetails() {\n    return this.tmdb.show(this.show.id)\n      .then(response => {\n        this.show.backdropUrl =\n          `https://image.tmdb.org/t/p/original${response.backdrop_path}`\n        this.show.firstAirDate = response.first_air_date\n        this.show.lastAirDate = response.last_air_date\n        this.show.name = response.name\n        this.show.overview = response.overview\n        this.show.posterUrl =\n          `https://image.tmdb.org/t/p/original${response.poster_path}`\n      })\n  }\n\n  get show() {\n    return this._show\n  }\n\n  get tmdb() {\n    return this._tmdb\n  }\n}\n\nexport default FetchShow\n","import FetchShow from '../services/fetching/FetchShow'\n\nexport const REMOVE_SHOW = 'REMOVE_SHOW'\nexport const UPDATE_SHOW = 'UPDATE_SHOW'\n\nexport const fetchShow = show => {\n  return dispatch => {\n    return new FetchShow(show).perform().then(fetchedShow => {\n      dispatch(updateShow(fetchedShow))\n    }).catch(() => dispatch(fetchShow(show)))\n  }\n}\n\nexport const removeShow = id => ({\n  type: REMOVE_SHOW,\n  payload: id\n})\n\nexport const updateShow = show => ({\n  type: UPDATE_SHOW,\n  payload: show\n})\n","import TMDb from '../databases/TMDb'\nimport Parametrize from '../Parametrize'\n\nclass FetchSeason {\n  constructor(showId, showName, season) {\n    this._show = { id: showId, name: showName }\n    this._season = season\n    this._tmdb = new TMDb()\n  }\n\n  async perform() {\n    this.season.id = `${this.show.id}-${this.season.seasonNumber}`\n    this.season.path = `/app/season/${this.season.id}`\n\n    await Promise.all([\n      this.fetchDetails(),\n      this.fetchCredits()\n    ])\n\n    return this.season\n  }\n\n  fetchDetails() {\n    return this.tmdb.season(this.show.id, this.season.seasonNumber)\n      .then(response => {\n        this.season.airDate = response.air_date\n        this.season.name = response.name\n        this.season.overview = response.overview\n        this.season.posterUrl =\n          `https://image.tmdb.org/t/p/original${response.poster_path}`\n        this.season.trailerLink =\n          'https://www.youtube.com/results?search_query=' +\n          `${new Parametrize(this.show.name).perform()}+` +\n          `${new Parametrize(this.season.name).perform()}+` +\n          'official+trailer&i=movies-tv'\n      })\n  }\n\n  fetchCredits() {\n    return this.tmdb.seasonCredits(this.show.id, this.season.seasonNumber)\n      .then(response => {\n        this.season.cast = response.cast.map(castMember => ({\n          id: castMember.id,\n          character: castMember.character,\n          name: castMember.name,\n          gender: castMember.gender,\n          profileUrl: `https://image.tmdb.org/t/p/original${castMember.profile_path}`\n        }))\n        this.season.crew = response.crew.map(crewMember => ({\n          id: crewMember.id,\n          job: crewMember.job,\n          name: crewMember.name,\n          gender: crewMember.gender,\n          profileUrl: `https://image.tmdb.org/t/p/original${crewMember.profile_path}`\n        }))\n      })\n  }\n\n  get show() {\n    return this._show\n  }\n\n  get season() {\n    return this._season\n  }\n\n  get tmdb() {\n    return this._tmdb\n  }\n}\n\nexport default FetchSeason\n","import { createSelector } from 'reselect'\n\nconst showsSelector = state => state.shows\n\nexport const showSelector = id => {\n  return createSelector(\n    showsSelector,\n    shows => shows[id]\n  )\n}\n","import FetchSeason from '../services/fetching/FetchSeason'\n\nimport { showSelector } from '../selectors/shows'\n\nexport const REMOVE_SEASON = 'REMOVE_SEASON'\nexport const UPDATE_SEASON = 'UPDATE_SEASON'\n\nexport const fetchSeason = season => {\n  return (dispatch, getState) => {\n    const show = showSelector(season.showId)(getState())\n    return new FetchSeason(\n      show.id,\n      show.name,\n      season\n    ).perform().then(fetchedSeason => {\n      dispatch(updateSeason(fetchedSeason))\n    }).catch(() => dispatch(fetchSeason(season)))\n  }\n}\n\nexport const removeSeason = id => ({\n  type: REMOVE_SEASON,\n  payload: id\n})\n\nexport const updateSeason = season => ({\n  type: UPDATE_SEASON,\n  payload: season\n})\n","import TMDb from '../databases/TMDb'\n\nclass FetchEpisode {\n  constructor(\n    showId,\n    showName,\n    seasonNumber,\n    seasonName,\n    episode\n  ) {\n    this._show = { id: showId, name: showName }\n    this._season = { seasonNumber, name: seasonName }\n    this._episode = episode\n    this._tmdb = new TMDb()\n  }\n\n  async perform() {\n    this.episode.id =\n      `${this.show.id}-${this.season.seasonNumber}-` +\n      `${this.episode.episodeNumber}`\n\n    await Promise.all([\n      this.fetchDetails()\n    ])\n\n    return this.episode\n  }\n\n  fetchDetails() {\n    return this.tmdb.episode(\n      this.show.id, this.season.seasonNumber, this.episode.episodeNumber\n    ).then(response => {\n      this.episode.airDate = response.air_date\n      this.episode.name = response.name\n      this.episode.overview = response.overview\n    })\n  }\n\n  get show() {\n    return this._show\n  }\n\n  get season() {\n    return this._season\n  }\n\n  get episode() {\n    return this._episode\n  }\n\n  get tmdb() {\n    return this._tmdb\n  }\n}\n\nexport default FetchEpisode\n","import { createSelector } from 'reselect'\n\nconst seasonsSelector = state => state.seasons\n\nexport const seasonSelector = id => {\n  return createSelector(\n    seasonsSelector,\n    seasons => seasons[id]\n  )\n}\n\nexport const inProgressSeasonsSelector = () => {\n  return createSelector(\n    seasonsSelector,\n    seasons => {\n      return Object.values(seasons).filter(season => {\n        return season.progress !== undefined && season.progress !== 0\n      }).sort((a, b) => (a.lastWatched > b.lastWatched) ? -1 : 1)\n    }\n  )\n}\n\nexport const recentlyWatchedSeasonsSelector = date => {\n  return createSelector(\n    seasonsSelector,\n    seasons => {\n      return Object.values(seasons).filter(season => {\n        return season.lastWatched >= date.getTime() &&\n          (season.progress === undefined || season.progress === 0)\n      }).sort((a, b) => (a.lastWatched > b.lastWatched) ? -1 : 1)\n    }\n  )\n}\n\nexport const seasonsByShowSelector = showId => {\n  return createSelector(\n    seasonsSelector,\n    seasons => {\n      return Object.values(seasons)\n        .filter(season => season.showId.toString() === showId)\n    }\n  )\n}\n\nexport const seasonsByPersonSelector = id => {\n  return createSelector(\n    seasonsSelector,\n    seasons => {\n      return Object.values(seasons).filter(season => {\n        return season.cast.find(castMember => castMember.id === id) ||\n          season.crew.find(crewMember => crewMember.id === id)\n      })\n    }\n  )\n}\n\nexport const seasonsCastMemberSelector = id => {\n  return createSelector(\n    seasonsSelector,\n    seasons => {\n      return Object.values(seasons).map(season => season.cast).flat()\n        .filter(castMember => castMember.id === id)\n    }\n  )\n}\n\nexport const seasonsCrewMemberSelector = id => {\n  return createSelector(\n    seasonsSelector,\n    seasons => {\n      return Object.values(seasons).map(season => season.crew).flat()\n        .filter(crewMember => crewMember.id === id)\n    }\n  )\n}\n","import FetchEpisode from '../services/fetching/FetchEpisode'\n\nimport { seasonSelector } from '../selectors/seasons'\nimport { showSelector } from '../selectors/shows'\n\nexport const REMOVE_EPISODE = 'REMOVE_EPISODE'\nexport const UPDATE_EPISODE = 'UPDATE_EPISODE'\n\nexport const fetchEpisode = episode => {\n  return (dispatch, getState) => {\n    const season = seasonSelector(episode.seasonId)(getState())\n    const show = showSelector(season.showId)(getState())\n    return new FetchEpisode(\n      show.id,\n      show.name,\n      season.seasonNumber,\n      season.name,\n      episode\n    ).perform().then(fetchedEpisode => {\n      dispatch(updateEpisode(fetchedEpisode))\n    }).catch(() => dispatch(fetchEpisode(episode)))\n  }\n}\n\nexport const removeEpisode = id => ({\n  type: REMOVE_EPISODE,\n  payload: id\n})\n\nexport const updateEpisode = episode => ({\n  type: UPDATE_EPISODE,\n  payload: episode\n})\n","import { VERSION, PROVIDERS } from '../constants'\n\nimport IndexMovies from '../services/indexing/IndexMovies'\nimport IndexShows from '../services/indexing/IndexShows'\nimport IndexSeasons from '../services/indexing/IndexSeasons'\nimport IndexEpisodes from '../services/indexing/IndexEpisodes'\nimport FetchAllSeasons from '../services/fetching/FetchAllSeasons'\nimport FetchAllEpisodes from '../services/fetching/FetchAllEpisodes'\n\nimport { updateVersion } from './version'\nimport { logInExpired } from './auth'\nimport { loadingBegin, loadingStop } from './loading'\nimport { fetchMovie, removeMovie } from './movies'\nimport { fetchShow, removeShow } from './shows'\nimport { fetchSeason, removeSeason } from './seasons'\nimport { fetchEpisode, removeEpisode } from './episodes'\n\nexport const INDEX_BEGIN = 'INDEX_BEGIN'\nexport const INDEX_SUCCESS = 'INDEX_SUCCESS'\nexport const INDEX_FAILURE = 'INDEX_FAILURE'\n\nexport const index = () => {\n  return (dispatch, getState) => {\n    dispatch(loadingBegin('Indexing...'))\n    dispatch(indexBegin())\n\n    new IndexMovies(getState().auth[PROVIDERS.MICROSOFT].token).perform()\n      .then(movies => {\n        cleanupOldItems(\n          dispatch,\n          movies.map(movie => movie.id),\n          Object.keys(getState().movies),\n          removeMovie\n        )\n        return awaitFetching(dispatch, movies, fetchMovie)\n      }).then(() => {\n        return new IndexShows(\n          getState().auth[PROVIDERS.MICROSOFT].token\n        ).perform()\n      }).then(shows => {\n        cleanupOldItems(\n          dispatch,\n          shows.map(show => show.id),\n          Object.keys(getState().shows),\n          removeShow\n        )\n        return awaitFetching(dispatch, shows, fetchShow)\n      }).then(() => {\n        return new FetchAllSeasons(Object.values(getState().shows)).perform()\n      }).then(seasons => {\n        return new IndexSeasons(\n          getState().auth[PROVIDERS.MICROSOFT].token,\n          Object.values(getState().shows),\n          seasons\n        ).perform()\n      }).then(seasons => {\n        cleanupOldItems(\n          dispatch,\n          seasons.map(season => season.id),\n          Object.keys(getState().seasons),\n          removeSeason\n        )\n        return awaitFetching(dispatch, seasons, fetchSeason)\n      }).then(() => {\n        return new FetchAllEpisodes(Object.values(getState().seasons)).perform()\n      }).then(episodes => {\n        return new IndexEpisodes(\n          getState().auth[PROVIDERS.MICROSOFT].token,\n          Object.values(getState().seasons),\n          episodes\n        ).perform()\n      }).then(episodes => {\n        cleanupOldItems(\n          dispatch,\n          episodes.map(episode => episode.id),\n          Object.keys(getState().episodes),\n          removeEpisode\n        )\n        return awaitFetching(dispatch, episodes, fetchEpisode)\n      }).then(() => {\n        dispatch(updateVersion(VERSION))\n        dispatch(indexSuccess())\n        dispatch(loadingStop())\n      }).catch(error => {\n        console.log(error)\n        dispatch(indexFailure(error))\n        dispatch(loadingStop())\n\n        if (error.statusCode === 401) {\n          dispatch(logInExpired(PROVIDERS.MICROSOFT))\n        }\n      })\n  }\n}\n\nfunction cleanupOldItems(dispatch, newIds, oldIds, removeAction) {\n  oldIds.forEach(id => {\n    if (!newIds.includes(id)) {\n      dispatch(removeAction(id))\n    }\n  })\n}\n\nasync function awaitFetching(dispatch, items, fetchAction) {\n  await Promise.all(items.map(item => {\n    return dispatch(fetchAction(item))\n  }))\n  return items\n}\n\nconst indexBegin = () => ({\n  type: INDEX_BEGIN\n})\n\nconst indexSuccess = () => ({\n  type: INDEX_SUCCESS\n})\n\nconst indexFailure = error => ({\n  type: INDEX_FAILURE,\n  payload: error\n})\n","export const UPDATE_VERSION = 'UPDATE_VERSION'\n\nexport const updateVersion = version => ({\n  type: UPDATE_VERSION,\n  payload: version\n})\n","import { PROVIDERS } from '../constants'\n\nimport MicrosoftAuth from '../services/auth/MicrosoftAuth'\n\nimport { loadingBegin, loadingStop } from './loading'\nimport { index } from './indexing'\n\nexport const LOG_IN_BEGIN = 'LOG_IN_BEGIN'\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS'\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'\n\nexport const authenticateMicrosoft = () => {\n  return (dispatch, getState) => {\n    dispatch(loadingBegin('Authenticating...'))\n    dispatch(logInBegin(PROVIDERS.MICROSOFT))\n\n    new MicrosoftAuth().perform().then(token => {\n      dispatch(logInSuccess(PROVIDERS.MICROSOFT, token))\n      dispatch(loadingStop())\n\n      if (!getState().indexing.lastIndexed)\n        dispatch(index())\n    }).catch(error => {\n      console.log(error)\n      dispatch(logInFailure(PROVIDERS.MICROSOFT, error))\n      dispatch(loadingStop())\n    })\n  }\n}\n\nexport const logInExpired = provider => {\n  return dispatch => dispatch(logInFailure(provider, 'expired'))\n}\n\nconst logInBegin = provider => ({\n  type: LOG_IN_BEGIN,\n  payload: provider\n})\n\nconst logInSuccess = (provider, token) => ({\n  type: LOG_IN_SUCCESS,\n  payload: { provider, token }\n})\n\nconst logInFailure = (provider, error) => ({\n  type: LOG_IN_FAILURE,\n  payload: { provider, error }\n})\n","import { PROVIDERS } from '../constants'\n\nimport { LOG_IN_BEGIN, LOG_IN_SUCCESS, LOG_IN_FAILURE } from '../actions/auth'\n\nconst initialState = Object.values(PROVIDERS).reduce((o, provider) => ({\n  ...o,\n  [provider]: {\n    token: null,\n    error: null\n  }\n}), {})\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n  case LOG_IN_BEGIN:\n    return {\n      ...state,\n      [action.payload]: {\n        ...state[action.payload],\n        error: null\n      }\n    }\n  case LOG_IN_SUCCESS:\n    return {\n      ...state,\n      [action.payload.provider]: {\n        ...state[action.payload.provider],\n        token: action.payload.token,\n        error: null\n      }\n    }\n  case LOG_IN_FAILURE:\n    return {\n      ...state,\n      [action.payload.provider]: {\n        ...state[action.payload.provider],\n        error: action.payload.error\n      }\n    }\n  default:\n    return state\n  }\n}\n","export const SETTINGS_UPDATE = 'SETTINGS_UPDATE'\n\nexport const updateSettings = settings => ({\n  type: SETTINGS_UPDATE,\n  payload: settings\n})\n","import { AUTOMATIC_INDEXING } from '../constants'\n\nimport { SETTINGS_UPDATE } from '../actions/settings'\n\nconst initialState = {\n  automaticIndexing: AUTOMATIC_INDEXING.NEVER\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n  case SETTINGS_UPDATE:\n    return {\n      ...state,\n      ...action.payload\n    }\n  default:\n    return state\n  }\n}\n","import { INDEX_BEGIN, INDEX_SUCCESS, INDEX_FAILURE } from '../actions/indexing'\n\nconst initialState = {\n  lastIndexed: 0,\n  error: null\n}\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n  case INDEX_BEGIN:\n    return {\n      ...state,\n      error: null\n    }\n  case INDEX_SUCCESS:\n    return {\n      ...state,\n      lastIndexed: new Date().getTime()\n    }\n  case INDEX_FAILURE:\n    return {\n      ...state,\n      error: action.payload\n    }\n  default:\n    return state\n  }\n}\n","import { LOADING_BEGIN, LOADING_STOP } from '../actions/loading'\n\nconst initialState = false\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n  case LOADING_BEGIN:\n    return action.payload\n  case LOADING_STOP:\n    return false\n  default:\n    return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport { persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport version from './version'\nimport auth from './auth'\nimport settings from './settings'\nimport indexing from './indexing'\nimport loading from './loading'\nimport movies from './movies'\nimport shows from './shows'\nimport seasons from './seasons'\nimport episodes from './episodes'\n\nconst rootReducer = combineReducers({\n  version,\n  auth,\n  settings,\n  indexing,\n  loading,\n  movies,\n  shows,\n  seasons,\n  episodes\n})\n\nexport default persistReducer({\n  key: 'root',\n  storage: storage,\n  whitelist: [\n    'version',\n    'auth',\n    'settings',\n    'indexing',\n    'movies',\n    'shows',\n    'seasons',\n    'episodes'\n  ],\n  debug: process.env.NODE_ENV === 'development'\n}, rootReducer)\n","import { REMOVE_MOVIE, UPDATE_MOVIE } from '../actions/movies'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n  case REMOVE_MOVIE: {\n    /* eslint-disable no-unused-vars */\n    const { [action.payload]: movie, ...newState } = state\n    /* eslint-enable no-unused-vars */\n    return newState\n  }\n  case UPDATE_MOVIE:\n    return {\n      ...state,\n      [action.payload.id]: {\n        ...state[action.payload.id],\n        ...action.payload\n      }\n    }\n  default:\n    return state\n  }\n}\n","import { REMOVE_SHOW, UPDATE_SHOW } from '../actions/shows'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n  case REMOVE_SHOW: {\n    /* eslint-disable no-unused-vars */\n    const { [action.payload]: show, ...newState } = state\n    /* eslint-enable no-unused-vars */\n    return newState\n  }\n  case UPDATE_SHOW:\n    return {\n      ...state,\n      [action.payload.id]: {\n        ...state[action.payload.id],\n        ...action.payload\n      }\n    }\n  default:\n    return state\n  }\n}\n","import { REMOVE_SEASON, UPDATE_SEASON } from '../actions/seasons'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n  case REMOVE_SEASON: {\n    /* eslint-disable no-unused-vars */\n    const { [action.payload]: season, ...newState } = state\n    /* eslint-enable no-unused-vars */\n    return newState\n  }\n  case UPDATE_SEASON:\n    return {\n      ...state,\n      [action.payload.id]: {\n        ...state[action.payload.id],\n        ...action.payload\n      }\n    }\n  default:\n    return state\n  }\n}\n","import { REMOVE_EPISODE, UPDATE_EPISODE } from '../actions/episodes'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n  case REMOVE_EPISODE: {\n    /* eslint-disable no-unused-vars */\n    const { [action.payload]: episode, ...newState } = state\n    /* eslint-enable no-unused-vars */\n    return newState\n  }\n  case UPDATE_EPISODE:\n    return {\n      ...state,\n      [action.payload.id]: {\n        ...state[action.payload.id],\n        ...action.payload\n      }\n    }\n  default:\n    return state\n  }\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport persistedReducer from './reducers'\n\nexport default createStore(\n  persistedReducer,\n  applyMiddleware(thunk)\n)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets;\n      // see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still\n        // exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // This is used to notify users that a new version of the app will\n              // available after a reload.\n              window.newVersionAvailable = true\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import { AUTOMATIC_INDEXING } from '../constants'\n\nclass AutomaticIndexing {\n  constructor(setting, lastIndexed, indexAction) {\n    this._setting = setting\n    this._lastIndexed = lastIndexed\n    this._indexAction = indexAction\n  }\n\n  perform() {\n    if (this.setting === AUTOMATIC_INDEXING.NEVER) {\n      return false\n    }\n\n    if (\n      this.setting === AUTOMATIC_INDEXING.ALWAYS ||\n      new Date().getFullYear() !== new Date(this.lastIndexed).getFullYear() ||\n      new Date().getMonth() !== new Date(this.lastIndexed).getMonth() ||\n      (this.setting !== AUTOMATIC_INDEXING.MONTHLY &&\n        new Date().getDate() !== new Date(this.lastIndexed).getDate())\n    ) {\n      this.indexAction()\n      return true\n    } else {\n      return false\n    }\n  }\n\n  get setting() {\n    return this._setting\n  }\n\n  get lastIndexed() {\n    return this._lastIndexed\n  }\n\n  get indexAction() {\n    return this._indexAction\n  }\n}\n\nexport default AutomaticIndexing\n","import { VERSION } from '../constants'\n\nclass IndexAfterUpdate {\n  constructor(versionUsedForLastIndex, indexAction) {\n    this._versionUsedForLastIndex = versionUsedForLastIndex\n    this._indexAction = indexAction\n  }\n\n  perform() {\n    if (this.versionUsedForLastIndex !== VERSION) {\n      this.indexAction()\n      return true\n    } else {\n      return false\n    }\n  }\n\n  get versionUsedForLastIndex() {\n    return this._versionUsedForLastIndex\n  }\n\n  get indexAction() {\n    return this._indexAction\n  }\n}\n\nexport default IndexAfterUpdate\n","import React, { Component } from 'react'\nimport './Cover.scss'\n\nclass Cover extends Component {\n  render() {\n    return (\n      <img className='Cover' src={this.props.url} alt={this.props.alt} width={this.props.width} />\n    )\n  }\n}\n\nexport default Cover\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Swiper from 'swiper'\nimport 'swiper/swiper.scss'\nimport './HorizontalSlide.scss'\n\nimport Cover from './Cover'\n\nclass HorizontalSlide extends Component {\n  componentDidMount() {\n    new Swiper(\n      document.querySelector(\n        `.HorizontalSlide#${this.props.id} .swiper-container`\n      ), {\n        spaceBetween: 15,\n        slidesPerView: 'auto',\n        slidesOffsetBefore: 20,\n        slidesOffsetAfter: 20,\n        grabCursor: true\n      }\n    )\n  }\n\n  render() {\n    return (\n      <div className='HorizontalSlide' id={this.props.id}>\n        <div className='swiper-container'>\n          <div className='swiper-wrapper'>\n            {this.props.items.length ? (\n              this.props.items.map(item => {\n                return (\n                  <div className='swiper-slide' key={item.id}>\n                    <Link to={item.path}>\n                      <Cover url={item.posterUrl || '/cover.png'} alt={item.name} width='100%' />\n                    </Link>\n                  </div>\n                )\n              })\n            ) : (\n              <div className='swiper-slide'>\n                <h3>Nothing found.</h3>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default HorizontalSlide\n","import { createSelector } from 'reselect'\n\nconst moviesSelector = state => state.movies\n\nexport const movieSelector = id => {\n  return createSelector(\n    moviesSelector,\n    movies => movies[id]\n  )\n}\n\nexport const inProgressMoviesSelector = () => {\n  return createSelector(\n    moviesSelector,\n    movies => {\n      return Object.values(movies).filter(movie => {\n        return movie.progress !== undefined &&\n          movie.progress !== 0 &&\n          movie.progress / 60 < movie.runtime * 0.95\n      }).sort((a, b) => (a.lastWatched > b.lastWatched) ? -1 : 1)\n    }\n  )\n}\n\nexport const recentlyWatchedMoviesSelector = date => {\n  return createSelector(\n    moviesSelector,\n    movies => {\n      return Object.values(movies).filter(movie => {\n        return movie.lastWatched >= date.getTime() &&\n          (movie.progress === undefined ||\n            movie.progress === 0 ||\n            movie.progress / 60 >= movie.runtime * 0.95)\n      }).sort((a, b) => (a.lastWatched > b.lastWatched) ? -1 : 1)\n    }\n  )\n}\n\nexport const moviesByPersonSelector = id => {\n  return createSelector(\n    moviesSelector,\n    movies => {\n      return Object.values(movies).filter(movie => {\n        return movie.cast.find(castMember => castMember.id === id) ||\n          movie.crew.find(crewMember => crewMember.id === id)\n      })\n    }\n  )\n}\n\nexport const moviesCastMemberSelector = id => {\n  return createSelector(\n    moviesSelector,\n    movies => {\n      return Object.values(movies).map(movie => movie.cast).flat()\n        .filter(castMember => castMember.id === id)\n    }\n  )\n}\n\nexport const moviesCrewMemberSelector = id => {\n  return createSelector(\n    moviesSelector,\n    movies => {\n      return Object.values(movies).map(movie => movie.crew).flat()\n        .filter(crewMember => crewMember.id === id)\n    }\n  )\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport './ForYou.scss'\n\nimport { PROVIDERS } from '../constants'\n\nimport { index } from '../actions/indexing'\n\nimport HorizontalSlide from '../components/HorizontalSlide'\n\nimport {\n  inProgressMoviesSelector,\n  recentlyWatchedMoviesSelector\n} from '../selectors/movies'\nimport {\n  inProgressSeasonsSelector,\n  recentlyWatchedSeasonsSelector\n} from '../selectors/seasons'\n\nclass ForYou extends Component {\n  componentDidMount() {\n    document.querySelector('.Nav a:first-child').classList.add('active')\n  }\n\n  componentWillUnmount() {\n    document.querySelector('.Nav a:first-child').classList.remove('active')\n  }\n\n  render() {\n    const oneMonthAgo = new Date()\n    oneMonthAgo.setMonth(oneMonthAgo.getMonth() - 1)\n    const inProgress = [\n      ...inProgressMoviesSelector()({ movies: this.props.movies }),\n      ...inProgressSeasonsSelector()({ seasons: this.props.seasons })\n    ].sort((a, b) => (a.lastWatched > b.lastWatched) ? -1 : 1)\n    const recentlyWatched = [\n      ...recentlyWatchedMoviesSelector(oneMonthAgo)({\n        movies: this.props.movies\n      }),\n      ...recentlyWatchedSeasonsSelector(oneMonthAgo)({\n        seasons: this.props.seasons\n      })\n    ].sort((a, b) => (a.lastWatched > b.lastWatched) ? -1 : 1)\n\n    if (\n      inProgress.length > 0 ||\n        recentlyWatched.length > 0\n    ) {\n      return (\n        <div className='ForYou'>\n          {inProgress.length > 0 && <section>\n            <h2>Continue watching</h2>\n            <HorizontalSlide items={inProgress} id='inProgress' />\n          </section>}\n\n          {recentlyWatched.length > 0 && <section>\n            <h2>Recently watched</h2>\n            <HorizontalSlide items={recentlyWatched} id='recentlyWatched' />\n          </section>}\n        </div>\n      )\n    } else if (\n      Object.values(PROVIDERS).filter(provider => {\n        return this.props.auth[provider].token !== null\n      }).length === 0\n    ) {\n      return (\n        <div className='ForYou'>\n          <h2>Get started</h2>\n          <p>To watch your movies and TV shows, you first have to sign in with the cloud service that hosts your media.</p>\n          <Link to='/app/settings' className='button'>\n            Authenticate\n          </Link>\n          <p className='small'>Note that Plaain may <span className='bold'>not</span> be used to stream pirated content or publicly share your private media library. You may only connect to your private cloud storage.</p>\n        </div>\n      )\n    } else if (\n      Object.entries(this.props.movies).length === 0 &&\n        Object.entries(this.props.shows).length === 0\n    ) {\n      return (\n        <div className='ForYou'>\n          <h2>Get started</h2>\n          <p>You signed into a cloud service, but we didn&apos;t find any movies or TV shows.</p>\n          <p>It&apos;s likely that you just have to move some of your files around and create some folders to make it work.</p>\n          <p>Reference the getting started guide to learn how to organize your files so that Plaain finds them. After you&apos;re done, just re-index.</p>\n          <div className='ForYou__buttons'>\n            <a className='button primary' href='https://github.com/jonhue/plaain#getting-started' target='_blank' rel='noopener noreferrer'>Getting started</a>\n            <button onClick={this.props.index}>Index</button>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className='ForYou'>\n          <h2>Get started</h2>\n          <p>Here, you&apos;ll be able to find your recently watched movie or the show you didn&apos;t finish yet.</p>\n          <div className='ForYou__buttons'>\n            {Object.entries(this.props.movies).length > 0 && <Link to='/app/movies' className='button'>\n              Discover your movies\n            </Link>}\n            {Object.entries(this.props.shows).length > 0 && <Link to='/app/shows' className='button'>\n              Discover your shows\n            </Link>}\n          </div>\n        </div>\n      )\n    }\n  }\n}\n\nexport default connect(\n  state => ({\n    movies: state.movies,\n    shows: state.shows,\n    seasons: state.seasons,\n    auth: state.auth\n  }),\n  { index }\n)(ForYou)\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './ItemGrid.scss'\n\nimport Cover from './Cover'\n\nclass ItemGrid extends Component {\n  render() {\n    return (\n      <div className='ItemGrid' id={this.props.id}>\n        {this.props.items.length ? this.props.items.map(item => {\n          return (\n            <div className='ItemGrid__item' key={item.id}>\n              <Link to={item.path}>\n                <Cover url={item.posterUrl || '/cover.png'} alt={item.name} width='100%' />\n              </Link>\n            </div>\n          )\n        }) : (\n          <div className='ItemGrid__item'>\n            <h3>Nothing found.</h3>\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default ItemGrid\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport Swiper from 'swiper'\nimport 'swiper/swiper.scss'\nimport './VerticalSlide.scss'\n\nimport Cover from './Cover'\n\nclass VerticalSlide extends Component {\n  componentDidMount() {\n    new Swiper(\n      document.querySelector(\n        `.VerticalSlide#${this.props.id} .swiper-container`\n      ), {\n        direction: 'vertical',\n        slidesPerView: 'auto',\n        grabCursor: true,\n        effect: 'coverflow',\n        coverflowEffect: {\n          rotate: 0,\n          stretch: 425,\n          depth: 150,\n          modifier: 1,\n          slideShadows : false\n        },\n        history: {\n          replaceState: true,\n          key: this.props.path\n        }\n      }\n    )\n  }\n\n  render() {\n    return (\n      <div className='VerticalSlide' id={this.props.id}>\n        <div className='swiper-container'>\n          <div className='swiper-wrapper'>\n            {this.props.items.length ? this.props.items.map(item => {\n              return (\n                <div className='swiper-slide' data-history={item.id} key={item.id}>\n                  <Link to={item.path}>\n                    <Cover url={item.posterUrl || '/cover.png'} alt={item.name} width='100%' />\n                  </Link>\n                </div>\n              )\n            }) : (\n              <div className='swiper-slide'>\n                <h3>Nothing found.</h3>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default VerticalSlide\n","import React from 'react'\n\nexport default props => (\n  <svg height={props.height} width={props.width} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n  \t<title>zoom</title>\n  \t<g fill=\"#ffffff\">\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"22\" x2=\"15.656\" y1=\"22\" y2=\"15.656\"/>\n  \t\t<circle cx=\"10\" cy=\"10\" fill=\"none\" r=\"8\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\"/>\n  \t</g>\n  </svg>\n)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport './Movies.scss'\n\nimport ItemGrid from '../components/ItemGrid'\nimport VerticalSlide from '../components/VerticalSlide'\nimport ZoomIcon from '../components/Nucleo/icons/zoom.jsx'\n\nclass Movies extends Component {\n  componentDidMount() {\n    document.querySelector('.Nav a:nth-child(2)').classList.add('active')\n  }\n\n  componentWillUnmount() {\n    document.querySelector('.Nav a:nth-child(2)').classList.remove('active')\n  }\n\n  render() {\n    return (\n      <div className='Movies'>\n        {Object.entries(this.props.movies).length > 0 && (\n          <div className='Movies__wrapper'>\n            <div className='Movies__find'>\n              <Link to='/app/find'>\n                <ZoomIcon width={24} height={24} />\n              </Link>\n            </div>\n            {window.innerWidth < 600 ? <VerticalSlide items={Object.values(this.props.movies).sort((a, b) => (a.name < b.name) ? -1 : 1)} id='movies' path='movies' /> : <ItemGrid items={Object.values(this.props.movies).sort((a, b) => (a.name < b.name) ? -1 : 1)} id='movies' />}\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    movies: state.movies\n  })\n)(Movies)\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './NotFound.scss'\n\nclass NotFound extends Component {\n  render() {\n    return (\n      <div className='NotFound'>\n        <h2>You want to get lost?</h2>\n        <p>This path went astray... If you do want to get lost, we recommend <a href='https://www.imdb.com/title/tt6969502/' target='_blank' rel='noopener noreferrer'>Get Lost! ny Mirjam de With</a>.</p>\n        <p>If all you&apos;re looking for is to get back on track: you can <Link to='/app'>find home this way</Link>.</p>\n      </div>\n    )\n  }\n}\n\nexport default NotFound\n","import React, { Component } from 'react'\nimport './Backdrop.scss'\n\nclass Backdrop extends Component {\n  render() {\n    return (\n      <picture className='Backdrop'>\n        <img src={this.props.url} alt='backdrop' />\n      </picture>\n    )\n  }\n}\n\nexport default Backdrop\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './PersonList.scss'\n\nclass PersonList extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      wrapped: true\n    }\n  }\n\n  toggle() {\n    this.setState({\n      wrapped: !this.state.wrapped\n    })\n  }\n\n  render() {\n    return (\n      <div className='PersonList'>\n        {this.props.people\n          .slice(0, this.state.wrapped ? 10 : this.props.people.length)\n          .map((person, index) => {\n            return <p key={index}><Link to={`/app/person/${person.id}`}>{person.name}</Link> · <span>{person[this.props.attribute]}</span></p>\n          })}\n        <span onClick={this.toggle.bind(this)}>{this.state.wrapped ? 'Show more' : 'Show less'}</span>\n      </div>\n    )\n  }\n}\n\nexport default PersonList\n","import React, { Component } from 'react'\nimport ISO6391 from 'iso-639-1'\n\nclass PlyrCaption extends Component {\n  render() {\n    return (\n      <track\n        kind='captions'\n        label={this.props.caption.information}\n        src={this.props.caption.url}\n        srcLang={ISO6391.getCode(this.props.caption.information) || 'en'}\n        default={this.props.default} />\n    )\n  }\n}\n\nexport default PlyrCaption\n","import React, { Component } from 'react'\n\nclass PlyrSource extends Component {\n  render() {\n    return (\n      <source\n        src={this.props.source.url}\n        type={this.props.source.mimeType}\n        size={this.props.source.information} />\n    )\n  }\n}\n\nexport default PlyrSource\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport Plyr from 'plyr'\nimport './PlyrPlayer.scss'\n\nimport { FILE_TYPES } from '../constants'\n\nimport PlyrCaption from './PlyrPlayer/PlyrCaption'\nimport PlyrSource from './PlyrPlayer/PlyrSource'\n\nimport { logInExpired } from '../actions/auth'\n\nclass PlyrPlayer extends Component {\n  componentDidMount() {\n    this.player = new Plyr(document.querySelector('#player'), {\n      debug: process.env.NODE_ENV === 'development'\n    })\n\n    this.player.on('error', error => {\n      console.log(error)\n\n      this.props.logInExpired(this.props.item.provider)\n    })\n\n    this.player.on('timeupdate', event => {\n      if (event.detail.plyr.currentTime !== 0 ) {\n        this.props.updateItemAction({\n          id: this.props.item.id,\n          lastWatched: new Date().getTime(),\n          progress: event.detail.plyr.currentTime\n        })\n      }\n    })\n\n    this.player.on('exitfullscreen', () => {\n      const component = document.querySelector('.PlyrPlayer')\n\n      if (component && !component.dataset.preventExit) {\n        this.player.stop()\n        component.style.display = 'none'\n\n        if (this.props.exitedAction) {\n          this.props.exitedAction()\n        }\n      }\n    })\n\n    this.player.on('ended', () => {\n      this.player.fullscreen.exit()\n      document.querySelector('.PlyrPlayer').style.display = 'none'\n\n      if (this.props.endedAction) {\n        this.props.endedAction()\n      }\n    })\n  }\n\n  render() {\n    if (\n      this.props.item.files\n        .filter(file => file.type === FILE_TYPES.SOURCE).length === 0\n    ) {\n      return null\n    }\n\n    return (\n      <div className='PlyrPlayer'>\n        <video\n          src={this.props.item.files\n            .filter(file => file.type === FILE_TYPES.SOURCE)[0].url}\n          id='player' crossOrigin='true' playsInline controls>\n          {this.props.item.files.filter(file => file.type === FILE_TYPES.SOURCE)\n            .map((source, index) => {\n              return <PlyrSource source={source} key={index} />\n            })}\n          {this.props.item.files\n            .filter(file => file.type === FILE_TYPES.CAPTION)\n            .map((caption, index) => {\n              return (\n                <PlyrCaption\n                  caption={caption}\n                  default={index === 0}\n                  key={index} />\n              )\n            })}\n          <a href={this.props.item.files.filter(file => file.type === FILE_TYPES.SOURCE)[0].src} download>Download</a>\n        </video>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  null,\n  { logInExpired }\n)(PlyrPlayer)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './Movie.scss'\n\nimport { FILE_TYPES, STORAGE_PROVIDERS } from '../constants'\n\nimport NotFound from './NotFound'\n\nimport Backdrop from '../components/Backdrop'\nimport Cover from '../components/Cover'\nimport PersonList from '../components/PersonList'\nimport PlyrPlayer from '../components/PlyrPlayer'\n\nimport { updateMovie } from '../actions/movies'\n\nimport { movieSelector } from '../selectors/movies'\n\nclass Movie extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      movie: movieSelector(this.props.match.params.id)({\n        movies: this.props.movies\n      })\n    }\n  }\n\n  componentDidMount() {\n    document.querySelector('.Nav a:nth-child(2)').classList.add('active')\n  }\n\n  componentWillUnmount() {\n    document.querySelector('.Nav a:nth-child(2)').classList.remove('active')\n  }\n\n  continue() {\n    this.watch(this.state.movie.progress)\n  }\n\n  watch(progress = 0) {\n    const player = document.querySelector('.PlyrPlayer')\n    const plyr = player.querySelector('#player').plyr\n    player.dataset.preventExit = true\n    // Wait until Plyr is ready to start playing\n    setTimeout(() => {\n      player.style.display = 'block'\n      plyr.fullscreen.enter()\n      plyr.play()\n      plyr.currentTime = progress\n      setTimeout(() => { delete player.dataset.preventExit}, 100) // Fixing #232\n    }, 100)\n  }\n\n  finishedMovie() {\n    this.props.updateMovie({\n      id: this.state.movie.id,\n      progress: 0\n    })\n  }\n\n  render() {\n    if (this.state.movie) {\n      return (\n        <div className='Movie'>\n          {this.state.movie.files.filter(file => file.type === FILE_TYPES.SOURCE).length > 0 && <PlyrPlayer item={this.state.movie} updateItemAction={this.props.updateMovie} endedAction={this.finishedMovie.bind(this)} />}\n          <Backdrop url={this.state.movie.backdropUrl} />\n          <div className='Movie__details'>\n            <Cover url={this.state.movie.posterUrl} alt='poster' width='50%' />\n            <h1>{this.state.movie.name}</h1>\n            <div className='Movie__information'>\n              <p className='small'>{new Date(this.state.movie.releaseDate).getFullYear()}</p>\n              <p className='small'>{Math.floor(this.state.movie.runtime / 60) !== 0 && `${Math.floor(this.state.movie.runtime / 60)}h`} {this.state.movie.runtime % 60 !== 0 && `${this.state.movie.runtime % 60}m`}</p>\n            </div>\n            <div className='Movie__actions'>\n              {this.state.movie.files.filter(file => file.type === FILE_TYPES.SOURCE).length > 0 && this.state.movie.progress !== undefined && this.state.movie.progress !== 0 && this.state.movie.progress / 60 < this.state.movie.runtime && <button className='primary' id='continue' onClick={this.continue.bind(this)}>Continue</button>}\n              {this.state.movie.files.filter(file => file.type === FILE_TYPES.SOURCE).length > 0 && <button className={this.state.movie.progress === undefined || this.state.movie.progress === 0 || this.state.movie.progress / 60 >= this.state.movie.runtime ? 'primary' : ''} id='watch' onClick={() => this.watch()}>Watch</button>}\n              <a className='button' id='trailer' href={this.state.movie.trailerLink} target='_blank' rel='noopener noreferrer'>Play trailer</a>\n            </div>\n            <p className='Movie__overview'>{this.state.movie.overview}</p>\n            <div className='Movie__people'>\n              <div className='Movie__people__cast'>\n                <h4>Starring</h4>\n                <PersonList people={this.state.movie.cast} attribute='character' />\n              </div>\n              <div className='Movie__people__crew'>\n                <h4>Crew</h4>\n                <PersonList people={this.state.movie.crew} attribute='job' />\n              </div>\n            </div>\n          </div>\n          <div className='Movie__sources'>\n            <div>\n              <h4>Sources</h4>\n              <p className='small'>Hosted on {STORAGE_PROVIDERS[this.state.movie.provider]}</p>\n              <div>\n                <div className='Movie__sources__versions'>\n                  <h5>Versions</h5>\n                  {this.state.movie.files\n                    .filter(file => file.type === FILE_TYPES.SOURCE)\n                    .map((file, index) => {\n                      return <p className='small' key={index}>{file.information}</p>\n                    })}\n                  {this.state.movie.files\n                    .filter(file => file.type === FILE_TYPES.SOURCE)\n                    .length === 0 && <p className='small'>-</p>}\n                </div>\n                <div className='Movie__sources__captions'>\n                  <h5>Subtitles</h5>\n                  {this.state.movie.files\n                    .filter(file => file.type === FILE_TYPES.CAPTION)\n                    .map((file, index) => {\n                      return <p className='small' key={index}>{file.information}</p>\n                    })}\n                  {this.state.movie.files\n                    .filter(file => file.type === FILE_TYPES.CAPTION)\n                    .length === 0 && <p className='small'>-</p>}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    } else {\n      return <NotFound />\n    }\n  }\n}\n\nexport default connect(\n  state => ({\n    movies: state.movies\n  }),\n  { updateMovie }\n)(Movie)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport './Shows.scss'\n\nimport ItemGrid from '../components/ItemGrid'\nimport VerticalSlide from '../components/VerticalSlide'\nimport ZoomIcon from '../components/Nucleo/icons/zoom.jsx'\n\nclass Shows extends Component {\n  componentDidMount() {\n    document.querySelector('.Nav a:nth-child(3)').classList.add('active')\n  }\n\n  componentWillUnmount() {\n    document.querySelector('.Nav a:nth-child(3)').classList.remove('active')\n  }\n\n  render() {\n    return (\n      <div className='Shows'>\n        {Object.entries(this.props.shows).length > 0 && (\n          <div className='Shows__wrapper'>\n            <div className='Shows__find'>\n              <Link to='/app/find'>\n                <ZoomIcon width={24} height={24} />\n              </Link>\n            </div>\n            {window.innerWidth < 600 ? <VerticalSlide items={Object.values(this.props.shows).sort((a, b) => (a.name < b.name) ? -1 : 1)} id='shows' path='shows' /> : <ItemGrid items={Object.values(this.props.shows).sort((a, b) => (a.name < b.name) ? -1 : 1)} id='shows' />}\n          </div>\n        )}\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    shows: state.shows\n  })\n)(Shows)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './Show.scss'\n\nimport NotFound from './NotFound'\n\nimport Backdrop from '../components/Backdrop'\nimport Cover from '../components/Cover'\nimport HorizontalSlide from '../components/HorizontalSlide'\n\nimport { showSelector } from '../selectors/shows'\nimport { seasonsByShowSelector } from '../selectors/seasons'\n\nclass Show extends Component {\n  componentDidMount() {\n    document.querySelector('.Nav a:nth-child(3)').classList.add('active')\n  }\n\n  componentWillUnmount() {\n    document.querySelector('.Nav a:nth-child(3)').classList.remove('active')\n  }\n\n  render() {\n    const show = showSelector(this.props.match.params.id)({\n      shows: this.props.shows\n    })\n    const seasons = seasonsByShowSelector(this.props.match.params.id)({\n      seasons: this.props.seasons\n    })\n\n    if (show) {\n      return (\n        <div className='Show'>\n          <Backdrop url={show.backdropUrl} />\n          <div className='Show__details'>\n            <Cover url={show.posterUrl} alt='poster' width='50%' />\n            <h1>{show.name}</h1>\n            <div className='Show__information'>\n              <p className='small'>{new Date(show.firstAirDate).getFullYear()} - {new Date(show.lastAirDate).getFullYear()}</p>\n            </div>\n            <p className='Show__overview'>{show.overview}</p>\n          </div>\n          {seasons.length > 0 && <div className='Show__seasons'>\n            <h2>Seasons</h2>\n            <HorizontalSlide items={seasons.sort((a, b) => (a.seasonNumber < b.seasonNumber) ? -1 : 1)} id='seasons' />\n          </div>}\n        </div>\n      )\n    } else {\n      return <NotFound />\n    }\n  }\n}\n\nexport default connect(\n  state => ({\n    shows: state.shows,\n    seasons: state.seasons\n  })\n)(Show)\n","import { createSelector } from 'reselect'\n\nconst episodesSelector = state => state.episodes\n\nexport const episodeSelector = id => {\n  return createSelector(\n    episodesSelector,\n    episodes => episodes[id]\n  )\n}\n\nexport const episodesBySeasonSelector = seasonId => {\n  return createSelector(\n    episodesSelector,\n    episodes => {\n      return Object.values(episodes)\n        .filter(episode => episode.seasonId === seasonId)\n    }\n  )\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './Season.scss'\n\nimport { FILE_TYPES } from '../constants'\n\nimport NotFound from './NotFound'\n\nimport Backdrop from '../components/Backdrop'\nimport Cover from '../components/Cover'\nimport PersonList from '../components/PersonList'\nimport PlyrPlayer from '../components/PlyrPlayer'\n\nimport { updateSeason } from '../actions/seasons'\nimport { updateEpisode } from '../actions/episodes'\n\nimport { showSelector } from '../selectors/shows'\nimport { seasonSelector } from '../selectors/seasons'\nimport { episodesBySeasonSelector } from '../selectors/episodes'\n\nclass Season extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      season: seasonSelector(this.props.match.params.id)({\n        seasons: this.props.seasons\n      }),\n      episodes: episodesBySeasonSelector(this.props.match.params.id)({\n        episodes: this.props.episodes\n      }),\n      watchableEpisodes: episodesBySeasonSelector(this.props.match.params.id)({\n        episodes: this.props.episodes\n      }).filter(episode => {\n        return episode.provider !== undefined &&\n          episode.files.filter(file => file.type === FILE_TYPES.SOURCE)\n            .length !== 0\n      }),\n      episodesWrapped: true\n    }\n    this.state.currentEpisodeNumber =\n      this.state.watchableEpisodes.length > 0 &&\n      this.state.watchableEpisodes[0].episodeNumber\n  }\n\n  componentDidMount() {\n    document.querySelector('.Nav a:nth-child(3)').classList.add('active')\n  }\n\n  componentWillUnmount() {\n    document.querySelector('.Nav a:nth-child(3)').classList.remove('active')\n  }\n\n  toggleEpisodes() {\n    this.setState({\n      episodesWrapped: !this.state.episodesWrapped\n    })\n  }\n\n  continue() {\n    this.watch(\n      this.state.season.progress || 0,\n      this.state.episodes[this.state.season.progress - 1].progress || 0\n    )\n  }\n\n  watch(episodeNumber, progress = 0) {\n    this.setState({\n      currentEpisodeNumber: episodeNumber\n    })\n\n    this.props.updateSeason({\n      id: this.state.season.id,\n      lastWatched: new Date().getTime(),\n      progress: episodeNumber\n    })\n\n    const player = document.querySelector('.PlyrPlayer')\n    const plyr = player.querySelector('#player').plyr\n    player.dataset.preventExit = true\n    // Wait until Plyr is ready to start playing after the sources changed\n    setTimeout(() => {\n      player.style.display = 'block'\n      plyr.fullscreen.enter()\n      plyr.play()\n      plyr.currentTime = progress\n      setTimeout(() => { delete player.dataset.preventExit}, 100) // Fixing #232\n    }, 100)\n  }\n\n  stoppedEpisode() {\n    // this.forceUpdate()\n  }\n\n  finishedEpisode() {\n    this.props.updateEpisode({\n      id: this.state.episodes[this.state.currentEpisodeNumber - 1].id,\n      progress: 0\n    })\n\n    let episodeNumber = 0\n    if (\n      this.state.episodes[this.state.currentEpisodeNumber].files\n        .filter(file => file.type === FILE_TYPES.SOURCE).length > 0\n    ) {\n      episodeNumber = this.state.currentEpisodeNumber + 1\n    }\n\n    this.props.updateSeason({\n      id: this.state.season.id,\n      progress: episodeNumber\n    })\n\n    // this.forceUpdate()\n  }\n\n  render() {\n    if (this.state.season) {\n      return (\n        <div className='Season'>\n          {this.state.watchableEpisodes.length > 0 && <PlyrPlayer item={this.state.episodes[this.state.currentEpisodeNumber - 1]} updateItemAction={this.props.updateEpisode} exitedAction={this.stoppedEpisode.bind(this)} endedAction={this.finishedEpisode.bind(this)} />}\n          <Backdrop url={showSelector(this.state.season.showId)({ shows: this.props.shows }).backdropUrl} />\n          <div className='Season__details'>\n            <Cover url={this.state.season.posterUrl} alt='poster' width='50%' />\n            <h1>Season {this.state.season.seasonNumber}</h1>\n            <div className='Season__information'>\n              <p className='small'>{showSelector(this.state.season.showId)({ shows: this.props.shows }).name}</p>\n              <p className='small'>{new Date(this.state.season.airDate).getFullYear()}</p>\n            </div>\n            <div className='Season__actions'>\n              {this.state.watchableEpisodes.length > 0 && this.state.movie.progress !== undefined && this.state.season.progress !== 0 && <button className='primary' id='continue' onClick={this.continue.bind(this)}>Continue episode {this.state.season.progress}</button>}\n              {this.state.watchableEpisodes.length > 0 && this.state.season.progress !== 1 && <button className={this.state.movie.progress === undefined || this.state.season.progress === 0 ? 'primary' : ''} id='watch' onClick={() => this.watch(this.state.watchableEpisodes[0].episodeNumber)}>Watch episode {this.state.watchableEpisodes[0].episodeNumber}</button>}\n              <a className='button' id='trailer' href={this.state.season.trailerLink} target='_blank' rel='noopener noreferrer'>Play trailer</a>\n            </div>\n            <div className='Season__episodes'>\n              <div>\n                {this.state.episodes\n                  .sort((a, b) => (a.episodeNumber < b.episodeNumber) ? -1 : 1)\n                  .slice(\n                    0,\n                    this.state.episodesWrapped ? 0 : this.state.episodes.length\n                  )\n                  .map((episode, index) => {\n                    return (\n                      <div disabled={this.state.episodes[episode.episodeNumber - 1].provider === undefined || this.state.episodes[episode.episodeNumber - 1].files.filter(file => file.type === FILE_TYPES.SOURCE).length === 0} className='Season__episode' onClick={() => this.watch(episode.episodeNumber)} key={index}>\n                        <div className='Season__episode__number'>{episode.episodeNumber}</div>\n                        <div className='Season__episode__details'>\n                          <h2>{episode.name}</h2>\n                          <p className='small'>Aired {new Date(episode.airDate).toDateString()}</p>\n                          <p>{episode.overview}</p>\n                        </div>\n                      </div>\n                    )\n                  })}\n              </div>\n              {this.state.episodes.length > 0 && <span onClick={this.toggleEpisodes.bind(this)}>{this.state.episodesWrapped ? 'Show all episodes' : 'Hide episodes'}</span>}\n            </div>\n            <p className='Season__overview'>{this.state.season.overview}</p>\n            <div className='Season__people'>\n              <div className='Season__people__cast'>\n                <h4>Starring</h4>\n                <PersonList people={this.state.season.cast} attribute='character' />\n              </div>\n              <div className='Season__people__crew'>\n                <h4>Crew</h4>\n                <PersonList people={this.state.season.crew} attribute='job' />\n              </div>\n            </div>\n          </div>\n        </div>\n      )\n    } else {\n      return <NotFound />\n    }\n  }\n}\n\nexport default connect(\n  state => ({\n    shows: state.shows,\n    seasons: state.seasons,\n    episodes: state.episodes\n  }),\n  { updateSeason, updateEpisode }\n)(Season)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './Person.scss'\n\nimport NotFound from './NotFound'\n\nimport Backdrop from '../components/Backdrop'\nimport Cover from '../components/Cover'\nimport HorizontalSlide from '../components/HorizontalSlide'\n\nimport { moviesByPersonSelector } from '../selectors/movies'\nimport { seasonsByPersonSelector } from '../selectors/seasons'\nimport { personSelector, personRolesSelector } from '../selectors/people'\n\nclass Person extends Component {\n  render() {\n    const id = Number.parseInt(this.props.match.params.id)\n\n    const person = personSelector(id)({\n      movies: this.props.movies,\n      seasons: this.props.seasons\n    })\n    const movies = moviesByPersonSelector(id)({ movies: this.props.movies })\n    const seasons = seasonsByPersonSelector(id)({ seasons: this.props.seasons })\n    const roles = personRolesSelector(id, person.gender)({\n      movies: this.props.movies,\n      seasons: this.props.seasons\n    })\n\n    if (person) {\n      return (\n        <div className='Person'>\n          <Backdrop url={(movies[0] || this.props.shows[seasons[0].showId]).backdropUrl} />\n          <div className='Person__details'>\n            <Cover url={person.profileUrl} alt='profile' width='50%' />\n            <h1>{person.name}</h1>\n            <h5>Known as</h5>\n            <p>{roles.join(', ')}</p>\n          </div>\n\n          {movies.length > 0 && <div className='Person__movies'>\n            <h2>Movies</h2>\n            <HorizontalSlide items={movies} id='movies' />\n          </div>}\n\n          {seasons.length > 0 && <div className='Person__seasons'>\n            <h2>TV seasons</h2>\n            <HorizontalSlide items={seasons} id='seasons' />\n          </div>}\n        </div>\n      )\n    } else {\n      return <NotFound />\n    }\n  }\n}\n\nexport default connect(\n  state => ({\n    movies: state.movies,\n    shows: state.shows,\n    seasons: state.seasons\n  })\n)(Person)\n","import { createSelector } from 'reselect'\n\nimport {\n  moviesCastMemberSelector,\n  moviesCrewMemberSelector\n} from '../selectors/movies'\nimport {\n  seasonsCastMemberSelector,\n  seasonsCrewMemberSelector\n} from '../selectors/seasons'\n\nexport const personSelector = id => {\n  return createSelector(\n    moviesCastMemberSelector(id),\n    moviesCrewMemberSelector(id),\n    seasonsCastMemberSelector(id),\n    seasonsCrewMemberSelector(id),\n    (moviesCast, moviesCrew, seasonsCast, seasonsCrew) => {\n      return [...moviesCast, ...moviesCrew, ...seasonsCast, ...seasonsCrew][0]\n    }\n  )\n}\n\nexport const personRolesSelector = (id, gender) => {\n  return createSelector(\n    moviesCastMemberSelector(id),\n    moviesCrewMemberSelector(id),\n    seasonsCastMemberSelector(id),\n    seasonsCrewMemberSelector(id),\n    (moviesCast, moviesCrew, seasonsCast, seasonsCrew) => {\n      return [\n        ...new Set([\n          ((moviesCast.length > 0 || seasonsCast.length > 0) ?\n            (gender === 1 ? 'Actress' : 'Actor') : null),\n          ...moviesCrew.map(crewMember => crewMember.job),\n          ...seasonsCrew.map(crewMember => crewMember.job)\n        ])\n      ].filter(role => role !== null)\n    }\n  )\n}\n","import React from 'react'\n\nexport default props => (\n  <svg height={props.height} width={props.width} viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n  \t<title>e add</title>\n  \t<g fill=\"#ffffff\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"3\">\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" x1=\"16\" x2=\"16\" y1=\"2\" y2=\"30\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" x1=\"30\" x2=\"2\" y1=\"16\" y2=\"16\"/>\n  \t</g>\n  </svg>\n)\n","import React from 'react'\n\nexport default props => (\n  <svg height={props.height} width={props.width} viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n  \t<title>logo dropbox 2</title>\n  \t<g fill=\"#ffffff\">\n  \t\t<polygon fill=\"#ffffff\" points=\"9.41319,1.11824 0,7.26432 6.50879,12.47649 15.99985,6.61586 \"/>\n  \t\t<polygon fill=\"#ffffff\" points=\"0,17.68899 9.41319,23.83504 15.99985,18.33712 6.50879,12.47649 \"/>\n  \t\t<polygon fill=\"#ffffff\" points=\"15.99985,18.33712 22.58681,23.83504 32,17.68899 25.49121,12.47649 \"/>\n  \t\t<polygon fill=\"#ffffff\" points=\"32,7.26432 22.58681,1.11824 15.99985,6.61586 25.49121,12.47649 \"/>\n  \t\t<polygon points=\"16.01932,19.51992 9.41319,25.00165 6.58635,23.15606 6.58635,25.22512 16.01932,30.88176 25.45226,25.22512 25.45226,23.15606 22.62543,25.00165 \"/>\n  \t</g>\n  </svg>\n)\n","import React from 'react'\n\nexport default props => (\n  <svg height={props.height} width={props.width} viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n  \t<title>google 2</title>\n  \t<g fill=\"#ffffff\">\n  \t\t<path d=\"M30.383,13.273H16.065v6.136H24.18c-1.3,4.091-4.5,5.455-8.18,5.455a8.864,8.864,0,1,1,5.691-15.65L26.15,4.967A15,15,0,1,0,16,31C24.271,31,31.747,25.545,30.383,13.273Z\" fill=\"#ffffff\"/>\n  \t</g>\n  </svg>\n)\n","import React from 'react'\n\nexport default props => (\n  <svg height={props.height} width={props.width} viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n  \t<title>microsoft</title>\n  \t<g fill=\"#ffffff\">\n  \t\t<rect height=\"14\" width=\"14\" fill=\"#ffffff\" x=\"1\" y=\"1\"/>\n  \t\t<rect height=\"14\" width=\"14\" x=\"17\" y=\"1\"/>\n  \t\t<rect height=\"14\" width=\"14\" x=\"1\" y=\"17\"/>\n  \t\t<rect height=\"14\" width=\"14\" fill=\"#ffffff\" x=\"17\" y=\"17\"/>\n  \t</g>\n  </svg>\n)\n","import React, { Component } from 'react'\nimport './Banner.scss'\n\nclass Banner extends Component {\n  render() {\n    return (\n      <div className='Banner'>\n        <h2>{this.props.title}</h2>\n        <p>{this.props.text}</p>\n        {this.props.linkUrl && <a href={this.props.linkUrl} target='_blank' rel='noopener noreferrer'>{this.props.linkText || 'Help'}</a>}\n      </div>\n    )\n  }\n}\n\nexport default Banner\n","import { createSelector } from 'reselect'\n\nconst authSelector = state => state.auth\n\nexport const authProviderSelector = provider => {\n  return createSelector(\n    authSelector,\n    auth => auth[provider]\n  )\n}\n\nexport const authTokenSelector = provider => {\n  return createSelector(\n    authProviderSelector(provider),\n    authProvider => authProvider.token\n  )\n}\n\nexport const authError = () => {\n  return createSelector(\n    authSelector,\n    auth => Object.keys(auth).some(provider => auth[provider].error !== null)\n  )\n}\n\nexport const authProviderError = provider => {\n  return createSelector(\n    authSelector,\n    auth => auth[provider].error !== null\n  )\n}\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport './Settings.scss'\n\nimport { VERSION, PROVIDERS, AUTOMATIC_INDEXING } from '../constants'\n\nimport { authenticateMicrosoft } from '../actions/auth'\nimport { index } from '../actions/indexing'\nimport { updateSettings } from '../actions/settings'\n\nimport AddIcon from '../components/Nucleo/icons/add.jsx'\nimport DropboxIcon from '../components/Nucleo/icons/dropbox.jsx'\nimport GoogleIcon from '../components/Nucleo/icons/google.jsx'\nimport MicrosoftIcon from '../components/Nucleo/icons/microsoft.jsx'\n\nimport Banner from '../components/Banner'\n\nimport {\n  authTokenSelector,\n  authError,\n  authProviderError\n} from '../selectors/auth'\n\nclass Settings extends Component {\n  componentDidMount() {\n    document.querySelector('.Nav a:last-child').classList.add('active')\n  }\n\n  componentWillUnmount() {\n    document.querySelector('.Nav a:last-child').classList.remove('active')\n  }\n\n  index() {\n    this.props.index()\n  }\n\n  handleAutomaticIndexingChange(event) {\n    this.props.updateSettings({\n      ...this.props.settings,\n      automaticIndexing: event.target.value\n    })\n  }\n\n  render() {\n    const newVersionAvailable = window.newVersionAvailable\n    const notAuthenticated = Object.values(PROVIDERS).filter(provider => {\n      return this.props.auth[provider].token !== null\n    }).length === 0\n    const authenticationExpired = authError()({ auth: this.props.auth })\n    const noMediaFound = Object.entries(this.props.movies).length === 0 &&\n      Object.entries(this.props.shows).length === 0\n\n    return (\n      <div className='Settings'>\n        {newVersionAvailable && <Banner title='Update available!' text='Restart the app to apply the changes.' />}\n        {notAuthenticated && <Banner title='Authenticate with cloud service' text='To get started, authenticate with the cloud service that hosts your media.' />}\n        {noMediaFound && <Banner title='No media found!' text=\"We indexed all your authenticated services, but weren't able to find any source files.\" linkText='Getting started with Plaain' linkUrl='https://github.com/jonhue/plaain#getting-started' />}\n        {authenticationExpired && <Banner title='Authentication expired!' text='Reauthenticate with the failing service.' />}\n\n        <section className='Settings__auth'>\n          <h2>Authentication</h2>\n          <p>Sign into your cloud to add your movies and TV shows to your library.</p>\n          <div className='Settings__auth__scroll'>\n            <div className='Settings__auth__flex'>\n              <button className={`microsoft ${authTokenSelector(PROVIDERS.MICROSOFT)({ auth: this.props.auth }) && 'primary'} ${authProviderError(PROVIDERS.MICROSOFT)({ auth: this.props.auth }) && 'warn'}`} onClick={this.props.authenticateMicrosoft}>\n                <MicrosoftIcon width={32} height={32} />\n              </button>\n              <button disabled className='dropbox'>\n                <DropboxIcon width={32} height={32} />\n              </button>\n              <button disabled className='google'>\n                <GoogleIcon width={32} height={32} />\n              </button>\n              <a className='button' href='https://github.com/jonhue/plaain' target='_blank' rel='noopener noreferrer'>\n                <AddIcon width={32} height={32} />\n              </a>\n            </div>\n          </div>\n        </section>\n\n        <section className='Settings__indexing'>\n          <h2>Indexing</h2>\n          <p>Index to look for new media on your linked services and to fetch the latest metadata.</p>\n          <button onClick={this.index.bind(this)}>\n            Index\n          </button>\n          <h5>Automatic indexing</h5>\n          <p>Index automatically when you launch Plaain after a given time has passed.</p>\n          <select value={this.props.settings.automaticIndexing} onChange={this.handleAutomaticIndexingChange.bind(this)}>\n            <option value={AUTOMATIC_INDEXING.NEVER}>Never</option>\n            <option value={AUTOMATIC_INDEXING.MONTHLY}>Monthly</option>\n            <option value={AUTOMATIC_INDEXING.DAILY}>Daily</option>\n            <option value={AUTOMATIC_INDEXING.ALWAYS}>Always</option>\n          </select>\n        </section>\n\n        <section className='Settings__version'>\n          <h2>Version</h2>\n          <p>Plaain {VERSION}{!window.newVersionAvailable && ' (latest)'}.</p>\n          <p className='small'>\n            Plaain is <a href='https://github.com/jonhue/plaain' target='_blank' rel='noopener noreferrer'>open-source</a>. See the <a href='https://github.com/jonhue/plaain/releases' target='_blank' rel='noopener noreferrer'>changelog</a>.\n          </p>\n          <p className='small'>Note that Plaain may <span className='bold'>not</span> be used to stream pirated content or publicly share your private media library. You may only connect to your private cloud storage.</p>\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    auth: state.auth,\n    settings: state.settings,\n    movies: state.movies,\n    shows: state.shows\n  }),\n  { authenticateMicrosoft, index, updateSettings }\n)(Settings)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport FlexSearch from 'flexsearch'\nimport './Find.scss'\n\nimport HorizontalSlide from '../components/HorizontalSlide'\n\nclass Find extends Component {\n  constructor(props) {\n    super(props)\n\n    this.moviesIndex = new FlexSearch()\n    Object.values(this.props.movies).forEach(movie => {\n      this.moviesIndex.add(movie.id, `${movie.name};${movie.overview}`)\n    })\n    this.showsIndex = new FlexSearch()\n    Object.values(this.props.shows).forEach(show => {\n      this.showsIndex.add(show.id, `${show.name};${show.overview}`)\n    })\n\n    this.state = {\n      query: new URLSearchParams(this.props.location.search).get('q') || '',\n      movies: [],\n      shows: [],\n    }\n  }\n\n  componentDidMount() {\n    this.search(new URLSearchParams(this.props.location.search).get('q'))\n  }\n\n  search(query) {\n    this.setState({\n      query: query || '',\n      movies: this.moviesIndex.search(query || '')\n        .map(result => this.props.movies[result]),\n      shows: this.showsIndex.search(query || '')\n        .map(result => this.props.shows[result])\n    })\n  }\n\n  handleInputChange(event) {\n    this.props.history.replace(`/app/find?q=${event.target.value}`)\n    this.search(event.target.value)\n  }\n\n  render() {\n    return (\n      <div className='Find'>\n        <form>\n          <input autoFocus value={this.state.query} placeholder=\"Search your library\" onChange={this.handleInputChange.bind(this)} />\n        </form>\n\n        {this.state.movies.length > 0 && <section>\n          <h2>Movies</h2>\n          <HorizontalSlide items={this.state.movies} id='movies' />\n        </section>}\n\n        {this.state.shows.length > 0 && <section>\n          <h2>TV shows</h2>\n          <HorizontalSlide items={this.state.shows} id='shows' />\n        </section>}\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    movies: state.movies,\n    shows: state.shows\n  })\n)(Find)\n","import React from 'react'\n\nexport default props => (\n  <svg xmlns=\"http://www.w3.org/2000/svg\" width={props.width} height={props.height}>\n    <path fill=\"none\" strokeMiterlimit=\"10\" d=\"M2.5 26.5h4l4-6 8 20 10-32 8 26 6-8h4\" strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"3\" stroke=\"#ff2fc1\" className=\"unPUVPIZ_0\"></path>\n    <style data-made-with=\"vivus-instant\">{`.unPUVPIZ_0{stroke-dasharray:108 110;stroke-dashoffset:109;animation:unPUVPIZ_draw_0 750ms ease-in-out 0ms infinite,unPUVPIZ_fade 750ms linear 0ms infinite;}@keyframes unPUVPIZ_draw{100%{stroke-dashoffset:0;}}@keyframes unPUVPIZ_fade{0%{stroke-opacity:1;}100%{stroke-opacity:1;}100%{stroke-opacity:0;}}@keyframes unPUVPIZ_draw_0{0%{stroke-dashoffset: 109}66.66666666666666%{ stroke-dashoffset: 0;}100%{ stroke-dashoffset: 0;}}`}</style>\n  </svg>\n)\n","import React, { Component } from 'react'\nimport './Loading.scss'\n\nimport SoundWaveIcon from '../components/Nucleo/icons/soundWave.jsx'\n\nclass Loading extends Component {\n  render() {\n    return (\n      <div className='Loading'>\n        <div className='Loading__wrapper'>\n          <SoundWaveIcon width={48} height={48} />\n          {this.props.caption && <p className='small'>{this.props.caption}</p>}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Loading\n","import React from 'react'\n\nexport default props => (\n  <svg height={props.height} width={props.width} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n  \t<title>popcorn</title>\n  \t<g fill=\"#ffffff\">\n  \t\t<polygon fill=\"none\" points=\"21 7 3 7 5 23 19 23 21 7\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\"/>\n  \t\t<path d=\"M19,5a3,3,0,0,0-3-3,2.97,2.97,0,0,0-1.47.4,2.986,2.986,0,0,0-5.06,0A2.97,2.97,0,0,0,8,2,3,3,0,0,0,5,5\" fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"9\" x2=\"8\" y1=\"23\" y2=\"7\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"15\" x2=\"16\" y1=\"23\" y2=\"7\"/>\n  \t</g>\n  </svg>\n)\n","import React from 'react'\n\nexport default props => (\n  <svg height={props.height} width={props.width} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n  \t<title>movie 61</title>\n  \t<g fill=\"#ffffff\">\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"1\" x2=\"1\" y1=\"1\" y2=\"23\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"23\" x2=\"23\" y1=\"1\" y2=\"23\"/>\n  \t\t<rect height=\"22\" width=\"14\" fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x=\"5\" y=\"1\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"1\" x2=\"23\" y1=\"12\" y2=\"12\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"1\" x2=\"5\" y1=\"8\" y2=\"8\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"1\" x2=\"5\" y1=\"4\" y2=\"4\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"19\" x2=\"23\" y1=\"8\" y2=\"8\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"19\" x2=\"23\" y1=\"4\" y2=\"4\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"19\" x2=\"23\" y1=\"20\" y2=\"20\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"19\" x2=\"23\" y1=\"16\" y2=\"16\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"1\" x2=\"5\" y1=\"20\" y2=\"20\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"1\" x2=\"5\" y1=\"16\" y2=\"16\"/>\n  \t</g>\n  </svg>\n)\n","import React from 'react'\n\nexport default props => (\n  <svg height={props.height} width={props.width} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n  \t<title>desktop screen</title>\n  \t<g fill=\"#ffffff\">\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"12\" x2=\"12\" y1=\"22\" y2=\"18\"/>\n  \t\t<line fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x1=\"6\" x2=\"18\" y1=\"22\" y2=\"22\"/>\n  \t\t<rect height=\"16\" width=\"22\" fill=\"none\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\" x=\"1\" y=\"2\"/>\n  \t</g>\n  </svg>\n)\n","import React from 'react'\n\nexport default props => (\n  <svg height={props.height} width={props.width} viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n  \t<title>settings gear</title>\n  \t<g fill=\"#ffffff\" stroke=\"#ffffff\" strokeLinecap=\"round\" strokeWidth=\"2\">\n  \t\t<circle cx=\"12\" cy=\"12\" fill=\"none\" r=\"3\"/>\n  \t\t<path d=\"M20,12a8.049,8.049,0,0,0-.188-1.713l2.714-2.055-2-3.464L17.383,6.094a7.987,7.987,0,0,0-2.961-1.719L14,1H10L9.578,4.375A7.987,7.987,0,0,0,6.617,6.094L3.474,4.768l-2,3.464,2.714,2.055a7.9,7.9,0,0,0,0,3.426L1.474,15.768l2,3.464,3.143-1.326a7.987,7.987,0,0,0,2.961,1.719L10,23h4l.422-3.375a7.987,7.987,0,0,0,2.961-1.719l3.143,1.326,2-3.464-2.714-2.055A8.049,8.049,0,0,0,20,12Z\" fill=\"none\" stroke=\"#ffffff\"/>\n  \t</g>\n  </svg>\n)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport './Nav.scss'\n\nimport PopcornIcon from './Nucleo/icons/popcorn.jsx'\nimport MovieIcon from './Nucleo/icons/movie.jsx'\nimport ShowIcon from './Nucleo/icons/show.jsx'\nimport GearIcon from './Nucleo/icons/gear.jsx'\n\nclass Nav extends Component {\n  render() {\n    return (\n      <div className='Nav'>\n        <Link to='/app'>\n          <PopcornIcon width={24} height={24} />\n          <p>For you</p>\n        </Link>\n        <Link disabled={Object.entries(this.props.movies).length === 0} to='/app/movies'>\n          <MovieIcon width={24} height={24} />\n          <p>Movies</p>\n        </Link>\n        <Link disabled={Object.entries(this.props.shows).length === 0} to='/app/shows'>\n          <ShowIcon width={24} height={24} />\n          <p>Shows</p>\n        </Link>\n        <Link to='/app/settings'>\n          <GearIcon width={24} height={24} />\n          <p>Settings</p>\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  state => ({\n    movies: state.movies,\n    shows: state.shows\n  })\n)(Nav)\n","import React, { Component } from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport './App.scss'\n\nimport { index } from './actions/indexing'\n\nimport AutomaticIndexing from './services/AutomaticIndexing'\nimport IndexAfterUpdate from './services/IndexAfterUpdate'\nimport MicrosoftAuth from './services/auth/MicrosoftAuth'\n\nimport ForYou from './scenes/ForYou'\nimport Movies from './scenes/Movies'\nimport Movie from './scenes/Movie'\nimport Shows from './scenes/Shows'\nimport Show from './scenes/Show'\nimport Season from './scenes/Season'\nimport Person from './scenes/Person'\nimport Settings from './scenes/Settings'\nimport Find from './scenes/Find'\nimport Loading from './scenes/Loading'\nimport NotFound from './scenes/NotFound'\n\nimport Nav from './components/Nav'\n\nimport { authError } from './selectors/auth'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n\n    // this is required for the login popup to close;\n    // see https://github.com/AzureAD/microsoft-authentication-library-for-js/issues/174\n    new MicrosoftAuth()\n  }\n\n  componentDidMount() {\n    new IndexAfterUpdate(this.props.version, this.props.index).perform() ||\n      new AutomaticIndexing(\n        this.props.automaticIndexing,\n        this.props.lastIndexed,\n        this.props.index\n      ).perform()\n  }\n\n  render() {\n    if (this.props.loading) {\n      return <Loading caption={this.props.loading} />\n    } else {\n      return (\n        <div className='App'>\n          {authError()({ auth: this.props.auth }) && <Redirect to={`${this.props.match.path}/settings`} />}\n\n          <Switch>\n            <Route path={`${this.props.match.path}/`} exact component={ForYou} />\n            <Route path={`${this.props.match.path}/movies`} component={Movies} />\n            <Route path={`${this.props.match.path}/movie/:id`} exact component={Movie} />\n            <Route path={`${this.props.match.path}/shows`} component={Shows} />\n            <Route path={`${this.props.match.path}/show/:id`} exact component={Show} />\n            <Route path={`${this.props.match.path}/season/:id`} exact component={Season} />\n            <Route path={`${this.props.match.path}/person/:id`} exact component={Person} />\n            <Route path={`${this.props.match.path}/settings`} exact component={Settings} />\n            <Route path={`${this.props.match.path}/find`} exact component={Find} />\n            <Route component={NotFound} />\n          </Switch>\n\n          <Nav />\n        </div>\n      )\n    }\n  }\n}\n\nexport default connect(\n  state => ({\n    loading: state.loading,\n    version: state.version,\n    auth: state.auth,\n    lastIndexed: state.indexing.lastIndexed,\n    automaticIndexing: state.settings.automaticIndexing\n  }),\n  { index }\n)(App)\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './Welcome.scss'\n\nclass Welcome extends Component {\n  render() {\n    return (\n      <div className='Welcome'>\n        <h1>Your movies & TV shows. Anywhere.</h1>\n        <div className='Welcome__details'>\n          <h3>Plaain lets you stream and maintain your media library from anywhere. No server needed, no fee required.</h3>\n          <Link to='/app' className='button primary'>Launch</Link>\n          <a href='https://github.com/jonhue/plaain#getting-started' target='_blank' rel='noopener noreferrer' className='button'>How it works</a>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Welcome\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nclass ScrollToTop extends Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      window.scrollTo(0, 0)\n    }\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nexport default withRouter(ScrollToTop)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\n\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport { persistStore } from 'redux-persist'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nimport * as serviceWorker from './serviceWorker'\n\nimport App from './App'\nimport Welcome from './scenes/Welcome'\nimport NotFound from './scenes/NotFound'\nimport Loading from './scenes/Loading'\n\nimport ScrollToTop from './components/ScrollToTop'\n\nimport './index.scss'\n\nReactDOM.render(\n  <Provider store={store}>\n    <PersistGate loading={<Loading caption='Loading...' />} persistor={persistStore(store)}>\n      <Router basename='/plaain'>\n        <ScrollToTop>\n          <Switch>\n            <Route path='/' exact component={Welcome} />\n            <Route path='/app' component={App} />\n            <Route component={NotFound} />\n          </Switch>\n        </ScrollToTop>\n      </Router>\n    </PersistGate>\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}