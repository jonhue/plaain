{"version":3,"sources":["i18n.ts","serviceWorker.ts","components/icons/Nucleo/e-remove.tsx","components/Toast.tsx","components/notifications/APIErrorToast.tsx","components/notifications/AuthenticationFailureToast.tsx","components/notifications/CannotFindFileToast.tsx","components/notifications/GenericErrorToast.tsx","components/notifications/ProviderAlreadyExistsToast.tsx","components/notifications/NotificationsViewer.tsx","components/ScrollToTop.tsx","views/Welcome.tsx","views/index.tsx","store/auth/reducers.ts","store/episodes/reducers.ts","store/movies/reducers.ts","store/seasons/reducers.ts","store/shows/reducers.ts","store/ui/reducers.ts","store/index.ts","index.tsx","components/icons/Nucleo/microsoft.tsx","util.tsx","store/ui/types.ts","components/icons/Icon.tsx","types/Notification.ts","types/providers/Provider.ts","constants.ts","components/icons/SoundWave.tsx","views/Loading.tsx","store/auth/types.ts","types/files/videos/Video.ts","store/episodes/types.ts","store/movies/types.ts","store/seasons/types.ts","store/shows/types.ts","types/items/Person.ts","services/databases/util.ts","services/databases/TMDb/util.ts","views/NotFound.tsx","store/ui/actions.ts","types/items/Item.ts"],"names":["EN","LANGUAGES","resources","translation","en","i18next","use","initReactI18next","HttpApi","LanguageDetector","init","fallbackLng","supportedLngs","keySeparator","nsSeparator","interpolation","escapeValue","debug","process","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","color","Icon","className","width","height","fill","stroke","x1","y1","x2","y2","Toast","title","text","action","onClose","onClick","styles","white","href","url","target","rel","APIErrorToast","notification","t","useTranslation","status","message","AuthenticationFailureToast","provider","buildProviderKindName","CannotFindFileToast","name","file","kind","GenericErrorToast","ProviderAlreadyExistsToast","NotificationsViewer","dispatch","useDispatch","notifications","useSelector","ui","handleClose","useCallback","removeNotification","renderNotification","index","NotificationKind","APIError","AuthenticationFailure","CannotFindFile","GenericError","ProviderAlreadyExists","length","map","ScrollToTop","pathname","useLocation","useEffect","scrollTo","Welcome","to","App","lazy","Player","Base","isLoading","Loading","basename","path","exact","component","NotFound","initialState","providers","version","VERSION","rootReducer","combineReducers","auth","type","UPDATE_PROVIDER","payload","id","UPDATE_VERSION","REMOVE_PROVIDER","episodes","UPDATE_EPISODE","episode","REMOVE_EPISODE","movies","UPDATE_MOVIE","movie","REMOVE_MOVIE","seasons","UPDATE_SEASON","season","REMOVE_SEASON","shows","UPDATE_SHOW","show","REMOVE_SHOW","ASYNC_BEGIN","ASYNC_END","ADD_NOTIFICATION","REMOVE_NOTIFICATION","filter","persistedReducer","persistReducer","key","storage","whitelist","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","store","loading","persistor","persistStore","fallback","document","getElementById","URL","origin","addEventListener","fetch","headers","response","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker","x","y","notUndefined","undefined","isInProgress","item","usage","progress","wasRecentlyWatched","thresh","lastWatched","Date","sortByNumber","items","getAttr","sort","a","b","sortByLastWatched","getTime","sortAlphabetically","splitHoursAndMinutes","duration","hours","Math","floor","minutes","buildBackdropUrl","backdropPath","buildTMDbImageUrl","FALLBACK_BACKDROP_URL","buildCoverUrl","posterPath","FALLBACK_COVER_URL","buildItemUrl","ItemKind","Episode","seasonId","Movie","Person","Season","Show","buildFileDownloadUrl","ProviderKind","OneDrive","downloadUrl","buildVideoType","M4V_EXTENSION","MP4_EXTENSION","buildVideoSize","buildCaptionSrcLang","caption","ISO6391","getCode","buildProviderIcon","children","classNames","viewBox","xmlns","PROVIDER_KINDS","RECENTLY_WATCHED_THRESHOLD","SoundWave","d","data-made-with","highlight","MKV_EXTENSION","WEBM_EXTENSION","Gender","Job","buildItemId","tmdbId","buildTrailerUrl","toLowerCase","replace","size","buildEpisode","showId","seasonNumber","showTmdbId","sources","captions","airDate","air_date","crew","number","episode_number","guestStars","guest_stars","summary","overview","stillPath","still_path","toISOString","buildCastMember","buildCrewMember","buildMovie","isAdult","adult","backdrop_path","budget","homepage","poster_path","releaseDate","release_date","revenue","runtime","cast","trailerUrl","buildGender","gender","Unknown","Female","Male","buildJob","job","Actress","Actor","Object","values","includes","character","rawGender","profilePath","profile_path","department","rawJob","buildSeason","showTitle","showBackdropPath","season_number","buildShow","episodeRunTime","episode_run_time","firstAirDate","first_air_date","lastAirDate","last_air_date","numberOfEpisodes","number_of_episodes","numberOfSeasons","number_of_seasons","asyncBegin","asyncEnd","addNotification"],"mappings":"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","file":"static/js/main.3dc42673.chunk.js","sourcesContent":["import HttpApi from 'i18next-http-backend'\nimport LanguageDetector from 'i18next-browser-languagedetector'\nimport en from './locales/en/translation.json'\nimport i18next from 'i18next'\nimport { initReactI18next } from 'react-i18next'\n\nconst EN = 'en'\nconst LANGUAGES = [EN]\n\nconst resources = {\n  [EN]: {\n    translation: en,\n  },\n}\n\ni18next\n  .use(initReactI18next)\n  .use(HttpApi)\n  .use(LanguageDetector)\n  .init({\n    resources,\n    fallbackLng: EN,\n    supportedLngs: LANGUAGES,\n    keySeparator: false,\n    nsSeparator: false,\n    interpolation: {\n      escapeValue: false,\n    },\n    debug: process.env.NODE_ENV === 'development',\n  })\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error: unknown) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.error(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error: unknown) => {\n        if (error instanceof Error) console.error(error.message)\n      })\n  }\n}\n","import Icon from '../Icon'\nimport React from 'react'\n\ntype Props = {\n  color: string\n}\n\nexport default ({ color }: Props) => (\n  <Icon className=\"e-remove\" width={24} height={24}>\n    <title>e remove</title>\n    <g fill={color} stroke={color}>\n      <line fill=\"none\" stroke={color} x1=\"19\" y1=\"5\" x2=\"5\" y2=\"19\" />\n      <line fill=\"none\" stroke={color} x1=\"19\" y1=\"19\" x2=\"5\" y2=\"5\" />\n    </g>\n  </Icon>\n)\n","import './Toast.scss'\nimport CloseIcon from './icons/Nucleo/e-remove'\nimport React from 'react'\nimport styles from '../_variables.scss'\n\ntype ToastProps = {\n  title: string\n  text: string\n  action?: {\n    text: string\n    url: string\n  }\n\n  onClose: () => void\n}\n\nconst Toast = ({ title, text, action, onClose }: ToastProps) => (\n  <div className=\"Toast\">\n    <div className=\"Toast__header\">\n      <h2>{title}</h2>\n      <div className=\"Toast__header__close\" onClick={onClose}>\n        <CloseIcon color={styles.white} />\n      </div>\n    </div>\n    <p>{text}</p>\n    {action && (\n      <a href={action.url} target=\"_blank\" rel=\"noopener noreferrer\">\n        {action.text}\n      </a>\n    )}\n  </div>\n)\n\nexport default Toast\n","import { APIError } from '../../types/Notification'\nimport React from 'react'\nimport Toast from '../Toast'\nimport { useTranslation } from 'react-i18next'\n\ntype APIErrorToastProps = {\n  notification: APIError\n\n  onClose: () => void\n}\n\nexport const APIErrorToast = ({\n  notification,\n  onClose,\n}: APIErrorToastProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <Toast\n      title={t('Error connecting to service')}\n      text={t(\n        \"Plaain wasn't able to connect to one of your services. Please report this incident. Status code: {{status}}. Message: {{message}}.\",\n        {\n          status: notification.status,\n          message: notification.message || t('None'),\n        },\n      )}\n      action={{\n        text: t('Report'),\n        url: 'https://github.com/jonhue/plaain/issues/new/choose',\n      }}\n      onClose={onClose}\n    />\n  )\n}\n\nexport default APIErrorToast\n","import { AuthenticationFailure } from '../../types/Notification'\nimport React from 'react'\nimport Toast from '../Toast'\nimport { buildProviderKindName } from '../../util'\nimport { useTranslation } from 'react-i18next'\n\ntype AuthenticationFailureToastProps = {\n  notification: AuthenticationFailure\n\n  onClose: () => void\n}\n\nexport const AuthenticationFailureToast = ({\n  notification,\n  onClose,\n}: AuthenticationFailureToastProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <Toast\n      title={t('Authentication unsuccessful')}\n      text={t(\n        \"Plaain wasn't able to authenticate with {{provider}}. Please report this error if it persists.\",\n        { provider: buildProviderKindName(notification.provider) },\n      )}\n      action={{\n        text: t('Report'),\n        url: 'https://github.com/jonhue/plaain/issues/new/choose',\n      }}\n      onClose={onClose}\n    />\n  )\n}\n\nexport default AuthenticationFailureToast\n","import { CannotFindFile } from '../../types/Notification'\nimport React from 'react'\nimport Toast from '../Toast'\nimport { buildProviderKindName } from '../../util'\nimport { useTranslation } from 'react-i18next'\n\ntype CannotFindFileToastProps = {\n  notification: CannotFindFile\n\n  onClose: () => void\n}\n\nexport const CannotFindFileToast = ({\n  notification,\n  onClose,\n}: CannotFindFileToastProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <Toast\n      title={t('Unable to locate file')}\n      text={t(\n        \"We weren't able to locate the file named {{name}} located in your {{provider}} provider.\",\n        {\n          name: notification.file.name,\n          provider: buildProviderKindName(notification.file.provider.kind),\n        },\n      )}\n      onClose={onClose}\n    />\n  )\n}\n\nexport default CannotFindFileToast\n","import { GenericError } from '../../types/Notification'\nimport React from 'react'\nimport Toast from '../Toast'\nimport { useTranslation } from 'react-i18next'\n\ntype GenericErrorToastProps = {\n  notification: GenericError\n\n  onClose: () => void\n}\n\nexport const GenericErrorToast = ({\n  notification,\n  onClose,\n}: GenericErrorToastProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <Toast\n      title={t('An error occurred')}\n      text={notification.error.message}\n      onClose={onClose}\n    />\n  )\n}\n\nexport default GenericErrorToast\n","import { ProviderAlreadyExists } from '../../types/Notification'\nimport React from 'react'\nimport Toast from '../Toast'\nimport { buildProviderKindName } from '../../util'\nimport { useTranslation } from 'react-i18next'\n\ntype ProviderAlreadyExistsToastProps = {\n  notification: ProviderAlreadyExists\n\n  onClose: () => void\n}\n\nexport const ProviderAlreadyExistsToast = ({\n  notification,\n  onClose,\n}: ProviderAlreadyExistsToastProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <Toast\n      title={t('Provider already exists')}\n      text={t(\n        'You already linked your {{provider}} account {{name}} with Plaain. You can change your settings by clicking on the service in the authentication list on the settings page.',\n        {\n          name: notification.provider.name,\n          provider: buildProviderKindName(notification.provider.kind),\n        },\n      )}\n      onClose={onClose}\n    />\n  )\n}\n\nexport default ProviderAlreadyExistsToast\n","import { Notification, NotificationKind } from '../../types/Notification'\nimport React, { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport APIErrorToast from './APIErrorToast'\nimport AuthenticationFailureToast from './AuthenticationFailureToast'\nimport CannotFindFileToast from './CannotFindFileToast'\nimport GenericErrorToast from './GenericErrorToast'\nimport ProviderAlreadyExistsToast from './ProviderAlreadyExistsToast'\nimport { RootState } from '../../store'\nimport { removeNotification } from '../../store/ui/actions'\n\nexport const NotificationsViewer = () => {\n  const dispatch = useDispatch()\n\n  const notifications = useSelector(\n    (state: RootState) => state.ui.notifications,\n  )\n\n  const handleClose = useCallback(\n    (notification: Notification) => () =>\n      dispatch(removeNotification(notification)),\n    [dispatch],\n  )\n\n  const renderNotification = useCallback(\n    (notification: Notification, index: number): JSX.Element => {\n      switch (notification.kind) {\n        case NotificationKind.APIError:\n          return (\n            <APIErrorToast\n              notification={notification}\n              onClose={handleClose(notification)}\n              key={index}\n            />\n          )\n        case NotificationKind.AuthenticationFailure:\n          return (\n            <AuthenticationFailureToast\n              notification={notification}\n              onClose={handleClose(notification)}\n              key={index}\n            />\n          )\n        case NotificationKind.CannotFindFile:\n          return (\n            <CannotFindFileToast\n              notification={notification}\n              onClose={handleClose(notification)}\n              key={index}\n            />\n          )\n        case NotificationKind.GenericError:\n          return (\n            <GenericErrorToast\n              notification={notification}\n              onClose={handleClose(notification)}\n              key={index}\n            />\n          )\n        case NotificationKind.ProviderAlreadyExists:\n          return (\n            <ProviderAlreadyExistsToast\n              notification={notification}\n              onClose={handleClose(notification)}\n              key={index}\n            />\n          )\n      }\n    },\n    [handleClose],\n  )\n\n  return notifications.length > 0 ? (\n    <div className=\"NotificationsViewer\">\n      {notifications.map(renderNotification)}\n    </div>\n  ) : null\n}\n\nexport default NotificationsViewer\n","import { useEffect } from 'react'\nimport { useLocation } from 'react-router'\n\nexport const ScrollToTop = () => {\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [pathname])\n\n  return null\n}\n\nexport default ScrollToTop\n","import './Welcome.scss'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nexport const Welcome = () => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"Welcome\">\n      <h1>{t('Your movies & TV shows. Anywhere.')}</h1>\n      <div className=\"Welcome__details\">\n        <h3>\n          {t(\n            'Plaain lets you stream and maintain your media library from anywhere. No server needed, no fee required.',\n          )}\n        </h3>\n        <Link to=\"/app\" className=\"button primary\">\n          {t('Launch')}\n        </Link>\n        <a\n          href=\"https://github.com/jonhue/plaain#getting-started\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n          className=\"button\"\n        >\n          {t('How it works')}\n        </a>\n      </div>\n    </div>\n  )\n}\n\nexport default Welcome\n","import React, { lazy } from 'react'\nimport { Route, BrowserRouter as Router, Switch } from 'react-router-dom'\nimport Loading from './Loading'\nimport NotFound from './NotFound'\nimport NotificationsViewer from '../components/notifications/NotificationsViewer'\nimport { RootState } from '../store'\nimport ScrollToTop from '../components/ScrollToTop'\nimport Welcome from './Welcome'\nimport { useSelector } from 'react-redux'\n\nconst App = lazy(() => import('./app'))\nconst Player = lazy(() => import('./Player'))\n\nconst Base = () => {\n  const isLoading = useSelector((state: RootState) => state.ui.isLoading)\n\n  return (\n    <div className=\"Base\">\n      {isLoading && <Loading />}\n      <Router basename=\"/plaain\">\n        <ScrollToTop />\n        <Switch>\n          <Route path=\"/\" exact component={Welcome} />\n          <Route path=\"/app\" component={App} />\n          <Route path=\"/player\" exact component={Player} />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n\n      <NotificationsViewer />\n    </div>\n  )\n}\n\nexport default Base\n","import {\n  AuthActionTypes,\n  AuthState,\n  REMOVE_PROVIDER,\n  UPDATE_PROVIDER,\n  UPDATE_VERSION,\n} from './types'\nimport { VERSION } from '../../constants'\n\nconst initialState: AuthState = {\n  providers: {},\n  version: VERSION,\n}\n\nexport default (state = initialState, action: AuthActionTypes): AuthState => {\n  switch (action.type) {\n    case UPDATE_PROVIDER:\n      return {\n        ...state,\n        providers: {\n          ...state.providers,\n          [action.payload.provider.id]: action.payload.provider,\n        },\n      }\n    case UPDATE_VERSION:\n      return {\n        ...state,\n        version: action.payload.version,\n      }\n    case REMOVE_PROVIDER:\n      const { [action.payload.id]: provider, ...providers } = state.providers\n\n      return {\n        ...state,\n        providers,\n      }\n    default:\n      return state\n  }\n}\n","import {\n  EpisodesActionTypes,\n  EpisodesState,\n  REMOVE_EPISODE,\n  UPDATE_EPISODE,\n} from './types'\n\nconst initialState: EpisodesState = {}\n\nexport default (\n  state = initialState,\n  action: EpisodesActionTypes,\n): EpisodesState => {\n  switch (action.type) {\n    case UPDATE_EPISODE:\n      return { ...state, [action.payload.episode.id]: action.payload.episode }\n    case REMOVE_EPISODE:\n      const { [action.payload.id]: episode, ...episodes } = state\n\n      return episodes\n    default:\n      return state\n  }\n}\n","import {\n  MoviesActionTypes,\n  MoviesState,\n  REMOVE_MOVIE,\n  UPDATE_MOVIE,\n} from './types'\n\nconst initialState: MoviesState = {}\n\nexport default (\n  state = initialState,\n  action: MoviesActionTypes,\n): MoviesState => {\n  switch (action.type) {\n    case UPDATE_MOVIE:\n      return { ...state, [action.payload.movie.id]: action.payload.movie }\n    case REMOVE_MOVIE:\n      const { [action.payload.id]: movie, ...movies } = state\n\n      return movies\n    default:\n      return state\n  }\n}\n","import {\n  REMOVE_SEASON,\n  SeasonsActionTypes,\n  SeasonsState,\n  UPDATE_SEASON,\n} from './types'\n\nconst initialState: SeasonsState = {}\n\nexport default (\n  state = initialState,\n  action: SeasonsActionTypes,\n): SeasonsState => {\n  switch (action.type) {\n    case UPDATE_SEASON:\n      return { ...state, [action.payload.season.id]: action.payload.season }\n    case REMOVE_SEASON:\n      const { [action.payload.id]: season, ...seasons } = state\n\n      return seasons\n    default:\n      return state\n  }\n}\n","import { REMOVE_SHOW, ShowsActionTypes, ShowsState, UPDATE_SHOW } from './types'\n\nconst initialState: ShowsState = {}\n\nexport default (state = initialState, action: ShowsActionTypes): ShowsState => {\n  switch (action.type) {\n    case UPDATE_SHOW:\n      return { ...state, [action.payload.show.id]: action.payload.show }\n    case REMOVE_SHOW:\n      const { [action.payload.id]: show, ...shows } = state\n\n      return shows\n    default:\n      return state\n  }\n}\n","import {\n  ADD_NOTIFICATION,\n  ASYNC_BEGIN,\n  ASYNC_END,\n  REMOVE_NOTIFICATION,\n  UIActionTypes,\n  UIState,\n} from './types'\n\nconst initialState: UIState = {\n  isLoading: false,\n  notifications: [],\n}\n\nexport default (state = initialState, action: UIActionTypes): UIState => {\n  switch (action.type) {\n    case ASYNC_BEGIN:\n      return {\n        ...state,\n        isLoading: true,\n      }\n    case ASYNC_END:\n      return {\n        ...state,\n        isLoading: false,\n      }\n    case ADD_NOTIFICATION:\n      return {\n        ...state,\n        notifications: [...state.notifications, action.payload.notification],\n      }\n    case REMOVE_NOTIFICATION:\n      return {\n        ...state,\n        notifications: state.notifications.filter(\n          (notification) => notification !== action.payload.notification,\n        ),\n      }\n    default:\n      return state\n  }\n}\n","import { Action, applyMiddleware, createStore } from 'redux'\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk'\nimport auth from './auth/reducers'\nimport { combineReducers } from 'redux'\nimport episodes from './episodes/reducers'\nimport movies from './movies/reducers'\nimport { persistReducer } from 'redux-persist'\nimport seasons from './seasons/reducers'\nimport shows from './shows/reducers'\nimport storage from 'redux-persist/lib/storage'\nimport thunk from 'redux-thunk'\nimport ui from './ui/reducers'\n\nconst rootReducer = combineReducers({\n  auth,\n  episodes,\n  movies,\n  seasons,\n  shows,\n  ui,\n})\n\nconst persistedReducer = persistReducer(\n  {\n    key: 'root',\n    storage: storage,\n    whitelist: ['auth', 'episodes', 'movies', 'seasons', 'shows'],\n    debug: process.env.NODE_ENV === 'development',\n  },\n  rootReducer,\n)\n\nexport default createStore(persistedReducer, applyMiddleware(thunk))\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport type AppThunk<ReturnType> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action\n>\n\nexport type AppDispatch = ThunkDispatch<RootState, unknown, Action>\n","import './i18n.ts'\nimport './index.scss'\nimport 'whatwg-fetch'\nimport * as serviceWorker from './serviceWorker'\nimport React, { Suspense } from 'react'\nimport Base from './views'\nimport Loading from './views/Loading'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { Provider } from 'react-redux'\nimport ReactDOM from 'react-dom'\nimport { persistStore } from 'redux-persist'\nimport store from './store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<Loading />} persistor={persistStore(store)}>\n        <Suspense fallback={<Loading />}>\n          <Base />\n        </Suspense>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\nserviceWorker.register()\n","import Icon from '../Icon'\nimport React from 'react'\n\ntype Props = {\n  color: string\n}\n\nexport default ({ color }: Props) => (\n  <Icon className=\"microsoft\" width={32} height={32}>\n    <title>microsoft</title>\n    <g fill={color}>\n      <rect height=\"14\" width=\"14\" fill={color} x=\"1\" y=\"1\" />\n      <rect height=\"14\" width=\"14\" x=\"17\" y=\"1\" />\n      <rect height=\"14\" width=\"14\" x=\"1\" y=\"17\" />\n      <rect height=\"14\" width=\"14\" fill={color} x=\"17\" y=\"17\" />\n    </g>\n  </Icon>\n)\n","import { FALLBACK_BACKDROP_URL, FALLBACK_COVER_URL } from './constants'\nimport { FileProvider, VideoProvider } from './types/files/FileProvider'\nimport { IMediaItem, Item, ItemKind } from './types/items/Item'\nimport { M4V_EXTENSION, MP4_EXTENSION, Video } from './types/files/videos/Video'\nimport { Caption } from './types/files/captions/Caption'\nimport ISO6391 from 'iso-639-1'\nimport MicrosoftIcon from './components/icons/Nucleo/microsoft'\nimport { ProviderKind } from './types/providers/Provider'\nimport React from 'react'\nimport { TFunction } from 'i18next'\nimport { buildTMDbImageUrl } from './services/databases/TMDb/util'\n\nexport const notUndefined = <T extends unknown>(x: T | undefined): x is T =>\n  x !== undefined\n\nexport const isInProgress = (item: IMediaItem) =>\n  item.usage.progress !== undefined\n\nexport const wasRecentlyWatched = (item: IMediaItem, thresh: Date) =>\n  !isInProgress(item) &&\n  item.usage.lastWatched !== undefined &&\n  new Date(item.usage.lastWatched) > thresh\n\nexport const sortByNumber = <T extends unknown>(\n  items: T[],\n  getAttr: (item: T) => number,\n) => items.sort((a, b) => getAttr(a) - getAttr(b))\n\nexport const sortByLastWatched = <T extends IMediaItem>(items: T[]) =>\n  sortByNumber(items, (item) =>\n    item.usage.lastWatched !== undefined\n      ? new Date(item.usage.lastWatched).getTime()\n      : 0,\n  )\n\nexport const sortAlphabetically = <T extends unknown>(\n  items: T[],\n  getAttr: (item: T) => string,\n) => items.sort((a, b) => (getAttr(a) < getAttr(b) ? -1 : 1))\n\nexport const splitHoursAndMinutes = (t: TFunction, duration: number) => {\n  const hours = Math.floor(duration / 60)\n  const minutes = duration % 60\n\n  return (\n    <>\n      {hours > 0 && hours + t('h')}\n      {hours !== 0 && minutes !== 0 ? ' ' : ''}\n      {minutes > 0 && minutes + t('m')}\n    </>\n  )\n}\n\nexport const buildBackdropUrl = (backdropPath: string | undefined) =>\n  backdropPath ? buildTMDbImageUrl(backdropPath) : FALLBACK_BACKDROP_URL\n\nexport const buildCoverUrl = (posterPath: string | undefined) =>\n  posterPath ? buildTMDbImageUrl(posterPath) : FALLBACK_COVER_URL\n\nexport const buildItemUrl = (item: Item): string => {\n  switch (item.kind) {\n    case ItemKind.Episode:\n      return `/app/seasons/${item.seasonId}`\n    case ItemKind.Movie:\n      return `/app/movies/${item.id}`\n    case ItemKind.Person:\n      return `/app/people/${item.id}`\n    case ItemKind.Season:\n      return `/app/seasons/${item.id}`\n    case ItemKind.Show:\n      return `/app/shows/${item.id}`\n  }\n}\n\nexport const buildFileDownloadUrl = (file: FileProvider): string => {\n  switch (file.kind) {\n    case ProviderKind.OneDrive:\n      return file.downloadUrl\n  }\n}\n\nexport const buildVideoType = (file: Video): string => {\n  switch (file.type) {\n    case M4V_EXTENSION:\n      return MP4_EXTENSION\n    default:\n      return file.type\n  }\n}\n\nexport const buildVideoSize = (file: VideoProvider): number => {\n  switch (file.kind) {\n    case ProviderKind.OneDrive:\n      return file.height\n  }\n}\n\nexport const buildCaptionSrcLang = (caption: Caption): string =>\n  ISO6391.getCode(caption.name)\n\nexport const buildProviderKindName = (kind: ProviderKind): string => {\n  switch (kind) {\n    case ProviderKind.OneDrive:\n      return 'OneDrive'\n  }\n}\n\nexport const buildProviderIcon = (\n  kind: ProviderKind,\n  color: string,\n): JSX.Element => {\n  switch (kind) {\n    case ProviderKind.OneDrive:\n      return <MicrosoftIcon color={color} />\n  }\n}\n","import { Notification } from '../../types/Notification'\n\nexport const ASYNC_BEGIN = 'ASYNC_BEGIN'\nexport const ASYNC_END = 'ASYNC_END'\nexport const ADD_NOTIFICATION = 'ADD_NOTIFICATION'\nexport const REMOVE_NOTIFICATION = 'REMOVE_NOTIFICATION'\n\nexport interface UIState {\n  isLoading: boolean\n  notifications: Notification[]\n}\n\ninterface AsyncBeginAction {\n  type: typeof ASYNC_BEGIN\n}\n\ninterface AsyncEndAction {\n  type: typeof ASYNC_END\n}\n\ninterface AddNotificationAction {\n  type: typeof ADD_NOTIFICATION\n  payload: {\n    notification: Notification\n  }\n}\n\ninterface RemoveNotificationAction {\n  type: typeof REMOVE_NOTIFICATION\n  payload: {\n    notification: Notification\n  }\n}\n\nexport type UIActionTypes =\n  | AsyncBeginAction\n  | AsyncEndAction\n  | AddNotificationAction\n  | RemoveNotificationAction\n","import './Icon.scss'\nimport React, { FunctionComponent } from 'react'\nimport classNames from 'classnames'\n\ntype IconProps = {\n  className: string\n  height: number\n  width: number\n}\n\nexport const Icon: FunctionComponent<IconProps> = ({\n  children,\n  className,\n  height,\n  width,\n}) => (\n  <svg\n    className={classNames('Icon', className)}\n    viewBox={`0 0 ${width} ${height}`}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    {children}\n  </svg>\n)\n\nexport default Icon\n","import { Provider, ProviderKind } from './providers/Provider'\nimport { File } from './files/File'\n\nexport enum NotificationKind {\n  APIError,\n  AuthenticationFailure,\n  CannotFindFile,\n  GenericError,\n  ProviderAlreadyExists,\n}\n\nexport interface APIError {\n  kind: NotificationKind.APIError\n  status: number\n  message: string | undefined\n}\n\nexport interface AuthenticationFailure {\n  kind: NotificationKind.AuthenticationFailure\n  provider: ProviderKind\n}\n\nexport interface CannotFindFile {\n  kind: NotificationKind.CannotFindFile\n  file: File\n}\n\nexport interface GenericError {\n  kind: NotificationKind.GenericError\n  error: Error\n}\n\nexport interface ProviderAlreadyExists {\n  kind: NotificationKind.ProviderAlreadyExists\n  provider: Provider\n}\n\nexport type Notification =\n  | APIError\n  | AuthenticationFailure\n  | CannotFindFile\n  | GenericError\n  | ProviderAlreadyExists\n","import { OneDrive } from './OneDrive'\n\nexport enum ProviderKind {\n  OneDrive,\n}\n\nexport const PROVIDER_KINDS = [ProviderKind.OneDrive]\n\nexport interface IProvider {\n  kind: ProviderKind\n  id: string\n  name: string\n  moviesPath: string | undefined\n  showsPath: string | undefined\n}\n\nexport type Provider = OneDrive\n","export const VERSION = '0.1.0'\n\nexport const RECENTLY_WATCHED_THRESHOLD = new Date(0)\n\nexport const FALLBACK_BACKDROP_URL = '/fallback_backdrop.png'\nexport const FALLBACK_COVER_URL = '/fallback_cover.png'\n","import Icon from './Icon'\nimport React from 'react'\n\ntype SoundWaveProps = {\n  color: string\n}\n\nconst SoundWave = ({ color }: SoundWaveProps) => (\n  <Icon className=\"SoundWave\" height={50} width={50}>\n    <path\n      fill=\"none\"\n      d=\"M2.5 26.5h4l4-6 8 20 10-32 8 26 6-8h4\"\n      stroke={color}\n      className=\"unPUVPIZ_0\"\n    ></path>\n    <style data-made-with=\"vivus-instant\">{`.unPUVPIZ_0{stroke-dasharray:108 110;stroke-dashoffset:109;animation:unPUVPIZ_draw_0 750ms ease-in-out 0ms infinite,unPUVPIZ_fade 750ms linear 0ms infinite;}@keyframes unPUVPIZ_draw{100%{stroke-dashoffset:0;}}@keyframes unPUVPIZ_fade{0%{stroke-opacity:1;}100%{stroke-opacity:1;}100%{stroke-opacity:0;}}@keyframes unPUVPIZ_draw_0{0%{stroke-dashoffset: 109}66.66666666666666%{ stroke-dashoffset: 0;}100%{ stroke-dashoffset: 0;}}`}</style>\n  </Icon>\n)\n\nexport default SoundWave\n","import './Loading.scss'\nimport React from 'react'\nimport SoundWaveIcon from '../components/icons/SoundWave'\nimport styles from '../_variables.scss'\n\nexport const Loading = () => (\n  <div className=\"Loading\">\n    <div className=\"Loading__wrapper\">\n      <SoundWaveIcon color={styles.highlight} />\n    </div>\n  </div>\n)\n\nexport default Loading\n","import { Provider } from '../../types/providers/Provider'\n\nexport const UPDATE_PROVIDER = 'UPDATE_PROVIDER'\nexport const UPDATE_VERSION = 'UPDATE_VERSION'\nexport const REMOVE_PROVIDER = 'REMOVE_PROVIDER'\n\nexport interface AuthState {\n  providers: {\n    [id: string]: Provider | undefined\n  }\n  version: string\n}\n\ninterface UpdateProviderAction {\n  type: typeof UPDATE_PROVIDER\n  payload: {\n    provider: Provider\n  }\n}\n\ninterface UpdateVersionAction {\n  type: typeof UPDATE_VERSION\n  payload: {\n    version: string\n  }\n}\n\ninterface RemoveProviderAction {\n  type: typeof REMOVE_PROVIDER\n  payload: {\n    id: string\n  }\n}\n\nexport type AuthActionTypes =\n  | UpdateProviderAction\n  | UpdateVersionAction\n  | RemoveProviderAction\n","import { FileKind, IFile } from '../File'\nimport { VideoProvider } from '../FileProvider'\n\nexport const MP4_EXTENSION = 'mp4'\nexport const M4V_EXTENSION = 'm4v'\nexport const MKV_EXTENSION = 'mkv'\nexport const WEBM_EXTENSION = 'webm'\n\nexport type VideoType =\n  | typeof MP4_EXTENSION\n  | typeof M4V_EXTENSION\n  | typeof MKV_EXTENSION\n  | typeof WEBM_EXTENSION\n\nexport interface Video extends IFile<VideoProvider> {\n  kind: typeof FileKind.Video\n  type: VideoType\n}\n","import { Episode } from '../../types/items/Episode'\n\nexport const UPDATE_EPISODE = 'UPDATE_EPISODE'\nexport const REMOVE_EPISODE = 'REMOVE_EPISODE'\n\nexport interface EpisodesState {\n  [id: string]: Episode | undefined\n}\n\ninterface UpdateEpisodeAction {\n  type: typeof UPDATE_EPISODE\n  payload: {\n    episode: Episode\n  }\n}\n\ninterface RemoveEpisodeAction {\n  type: typeof REMOVE_EPISODE\n  payload: {\n    id: string\n  }\n}\n\nexport type EpisodesActionTypes = UpdateEpisodeAction | RemoveEpisodeAction\n","import { Movie } from '../../types/items/Movie'\n\nexport const UPDATE_MOVIE = 'UPDATE_MOVIE'\nexport const REMOVE_MOVIE = 'REMOVE_MOVIE'\n\nexport interface MoviesState {\n  [id: string]: Movie | undefined\n}\n\ninterface UpdateMovieAction {\n  type: typeof UPDATE_MOVIE\n  payload: {\n    movie: Movie\n  }\n}\n\ninterface RemoveMovieAction {\n  type: typeof REMOVE_MOVIE\n  payload: {\n    id: string\n  }\n}\n\nexport type MoviesActionTypes = UpdateMovieAction | RemoveMovieAction\n","import { Season } from '../../types/items/Season'\n\nexport const UPDATE_SEASON = 'UPDATE_SEASON'\nexport const REMOVE_SEASON = 'REMOVE_SEASON'\n\nexport interface SeasonsState {\n  [id: string]: Season | undefined\n}\n\ninterface UpdateSeasonAction {\n  type: typeof UPDATE_SEASON\n  payload: {\n    season: Season\n  }\n}\n\ninterface RemoveSeasonAction {\n  type: typeof REMOVE_SEASON\n  payload: {\n    id: string\n  }\n}\n\nexport type SeasonsActionTypes = UpdateSeasonAction | RemoveSeasonAction\n","import { Show } from '../../types/items/Show'\n\nexport const UPDATE_SHOW = 'UPDATE_SHOW'\nexport const REMOVE_SHOW = 'REMOVE_SHOW'\n\nexport interface ShowsState {\n  [id: string]: Show | undefined\n}\n\ninterface UpdateShowAction {\n  type: typeof UPDATE_SHOW\n  payload: {\n    show: Show\n  }\n}\n\ninterface RemoveShowAction {\n  type: typeof REMOVE_SHOW\n  payload: {\n    id: string\n  }\n}\n\nexport type ShowsActionTypes = UpdateShowAction | RemoveShowAction\n","import { IItem, ItemKind } from './Item'\n\nexport enum Gender {\n  Female,\n  Male,\n  Unknown,\n}\n\nexport enum Job {\n  Actor = 'Actor',\n  Actress = 'Actress',\n  Casting = 'Casting',\n  CostumeDesign = 'Costume Design',\n  Director = 'Director',\n  DirectorOfPhotography = 'Director of Photography',\n  ExecutiveProducer = 'Executive Producer',\n  Editor = 'Editor',\n  OriginalMusicComposer = 'Original Music Composer',\n  Producer = 'Producer',\n  Screenplay = 'Screenplay',\n  SoundDesigner = 'Sound Designer',\n  UnitProductionManager = 'Unit Production Manager',\n  Writer = 'Writer',\n}\n\ninterface IPerson extends IItem {\n  kind: typeof ItemKind.Person\n  name: string\n  gender: Gender\n  profilePath: string | undefined\n}\n\nexport interface AccPerson extends IPerson {\n  jobs: Job[]\n}\n\nexport interface Person extends IPerson {\n  job: Job\n}\n\nexport interface CastMember extends Person {\n  character: string\n}\n\nexport interface CrewMember extends Person {\n  department: string\n}\n","export const buildItemId = (tmdbId: number) => `TMDb@${tmdbId}`\n\nconst parametrize = (str: string) => str.toLowerCase().replace(/\\s/g, '+')\n\nexport const buildTrailerUrl = (title: string) =>\n  'https://www.youtube.com/results?search_query=' +\n  `${parametrize(title)}+official+trailer`\n","import {\n  CastMember,\n  CrewMember,\n  Gender,\n  Job,\n} from '../../../types/items/Person'\nimport {\n  CastResponse,\n  CrewResponse,\n  MovieCreditsResponse,\n  MovieDetailsResponse,\n  TVEpisodeResponse,\n  TVSeasonCreditsResponse,\n  TVSeasonDetailsResponse,\n  TVShowDetailsResponse,\n} from './types'\nimport { Episode, EpisodeLike } from '../../../types/items/Episode'\nimport { Movie, MovieLike } from '../../../types/items/Movie'\nimport { Season, SeasonLike } from '../../../types/items/Season'\nimport { Show, ShowLike } from '../../../types/items/Show'\nimport { buildItemId, buildTrailerUrl } from '../util'\nimport { ItemKind } from '../../../types/items/Item'\nimport { notUndefined } from '../../../util'\n\n// https://developers.themoviedb.org/3/getting-started/images\nexport const buildTMDbImageUrl = (path: string, size = 'original') =>\n  `https://image.tmdb.org/t/p/${size}${path}`\n\nexport const buildEpisode = (\n  showId: string,\n  seasonId: string,\n  { seasonNumber, showTmdbId, sources, captions, usage }: EpisodeLike,\n  {\n    air_date: airDate,\n    crew,\n    episode_number: number,\n    guest_stars: guestStars,\n    name: title,\n    overview: summary,\n    id: tmdbId,\n    still_path: stillPath,\n  }: TVEpisodeResponse,\n): Episode => ({\n  kind: ItemKind.Episode,\n  id: buildItemId(tmdbId),\n  tmdbId,\n  number,\n  title,\n  seasonId,\n  seasonNumber,\n  showId,\n  showTmdbId,\n  summary,\n  airDate: new Date(airDate).toISOString(),\n  stillPath,\n  guestStars: guestStars.map(buildCastMember),\n  crew: crew.map(buildCrewMember).filter(notUndefined),\n  sources,\n  captions,\n  usage,\n})\n\nexport const buildMovie = (\n  { sources, captions, usage }: MovieLike,\n  {\n    adult: isAdult,\n    backdrop_path: backdropPath,\n    budget,\n    homepage,\n    id: tmdbId,\n    overview: summary,\n    poster_path: posterPath,\n    release_date: releaseDate,\n    revenue,\n    runtime: duration,\n    title,\n  }: MovieDetailsResponse,\n  { cast, crew }: MovieCreditsResponse,\n): Movie => ({\n  kind: ItemKind.Movie,\n  id: buildItemId(tmdbId),\n  tmdbId,\n  title,\n  summary,\n  duration,\n  releaseDate: new Date(releaseDate).toISOString(),\n  isAdult,\n  budget,\n  revenue,\n  homepage,\n  posterPath,\n  backdropPath,\n  trailerUrl: buildTrailerUrl(title),\n  cast: cast.map(buildCastMember),\n  crew: crew.map(buildCrewMember).filter(notUndefined),\n  sources,\n  captions,\n  usage,\n})\n\nconst buildGender = (gender: number | undefined): Gender => {\n  switch (gender) {\n    case 0:\n      return Gender.Unknown\n    case 1:\n      return Gender.Female\n    case 2:\n      return Gender.Male\n    default:\n      return Gender.Unknown\n  }\n}\n\nconst buildJob = (\n  job: string | undefined,\n  gender?: Gender,\n): Job | undefined => {\n  if (job === undefined) {\n    if (gender === Gender.Female) return Job.Actress\n    else return Job.Actor\n  }\n\n  if (Object.values(Job).includes(job as Job)) return job as Job\n}\n\nexport const buildCastMember = ({\n  character,\n  gender: rawGender,\n  id: tmdbId,\n  name,\n  profile_path: profilePath,\n}: CastResponse): CastMember => {\n  const gender = buildGender(rawGender)\n  const job = buildJob(undefined, gender)!\n\n  return {\n    kind: ItemKind.Person,\n    id: buildItemId(tmdbId),\n    tmdbId,\n    name,\n    gender,\n    profilePath,\n    job,\n    character,\n  }\n}\n\nexport const buildCrewMember = ({\n  department,\n  gender: rawGender,\n  id: tmdbId,\n  job: rawJob,\n  name,\n  profile_path: profilePath,\n}: CrewResponse): CrewMember | undefined => {\n  const gender = buildGender(rawGender)\n  const job = buildJob(rawJob)\n  if (job === undefined) return\n\n  return {\n    kind: ItemKind.Person,\n    id: buildItemId(tmdbId),\n    tmdbId,\n    name,\n    gender,\n    profilePath,\n    job,\n    department,\n  }\n}\n\nexport const buildSeason = (\n  { id: showId, title: showTitle, backdropPath: showBackdropPath }: Show,\n  { showTmdbId, usage }: SeasonLike,\n  {\n    air_date: airDate,\n    id: tmdbId,\n    name: title,\n    overview: summary,\n    poster_path: posterPath,\n    season_number: number,\n  }: TVSeasonDetailsResponse,\n  { cast, crew }: TVSeasonCreditsResponse,\n): Season => ({\n  kind: ItemKind.Season,\n  id: buildItemId(tmdbId),\n  tmdbId,\n  number,\n  title,\n  showId,\n  showTmdbId,\n  showTitle,\n  showBackdropPath,\n  summary,\n  airDate: new Date(airDate).toISOString(),\n  posterPath,\n  trailerUrl: buildTrailerUrl(`${showTitle} season ${number}`),\n  cast: cast.map(buildCastMember),\n  crew: crew.map(buildCrewMember).filter(notUndefined),\n  usage,\n})\n\nexport const buildShow = (\n  { usage }: ShowLike,\n  {\n    backdrop_path: backdropPath,\n    episode_run_time: episodeRunTime,\n    first_air_date: firstAirDate,\n    homepage,\n    id: tmdbId,\n    last_air_date: lastAirDate,\n    name: title,\n    number_of_episodes: numberOfEpisodes,\n    number_of_seasons: numberOfSeasons,\n    overview: summary,\n    poster_path: posterPath,\n  }: TVShowDetailsResponse,\n): Show => ({\n  kind: ItemKind.Show,\n  id: buildItemId(tmdbId),\n  tmdbId,\n  title,\n  summary,\n  episodeRunTime,\n  firstAirDate: new Date(firstAirDate).toISOString(),\n  lastAirDate: new Date(lastAirDate).toISOString(),\n  homepage,\n  numberOfEpisodes,\n  numberOfSeasons,\n  posterPath,\n  backdropPath,\n  usage,\n})\n","import './NotFound.scss'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\n\nexport const NotFound = () => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"NotFound\">\n      <h2>{t('You want to get lost?')}</h2>\n      <p>\n        <Trans>\n          This path went astray... If you do want to get lost, we recommend{' '}\n          <a\n            href=\"https://www.imdb.com/title/tt6969502/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Get Lost!\n          </a>{' '}\n          by Mirjam de With.\n        </Trans>\n      </p>\n      <p>\n        <Trans>\n          If all you&apos;re looking for is to get back on track: you can{' '}\n          <Link to=\"/app\">find home this way</Link>.\n        </Trans>\n      </p>\n    </div>\n  )\n}\n\nexport default NotFound\n","import {\n  ADD_NOTIFICATION,\n  ASYNC_BEGIN,\n  ASYNC_END,\n  REMOVE_NOTIFICATION,\n  UIActionTypes,\n} from './types'\nimport { Notification } from '../../types/Notification'\n\nexport const asyncBegin = (): UIActionTypes => ({\n  type: ASYNC_BEGIN,\n})\n\nexport const asyncEnd = (): UIActionTypes => ({\n  type: ASYNC_END,\n})\n\nexport const addNotification = (notification: Notification): UIActionTypes => ({\n  type: ADD_NOTIFICATION,\n  payload: { notification },\n})\n\nexport const removeNotification = (\n  notification: Notification,\n): UIActionTypes => ({\n  type: REMOVE_NOTIFICATION,\n  payload: { notification },\n})\n","import { Episode, EpisodeLike } from './Episode'\nimport { Movie, MovieLike } from './Movie'\nimport { Season, SeasonLike } from './Season'\nimport { Show, ShowLike } from './Show'\nimport { Caption } from '../files/captions/Caption'\nimport { Person } from './Person'\nimport { Video } from '../files/videos/Video'\n\nexport enum ItemKind {\n  Episode,\n  Movie,\n  Person,\n  Season,\n  Show,\n}\n\nexport interface Usage {\n  lastWatched: string | undefined\n  progress: number | undefined\n}\n\nexport interface IItem {\n  kind: ItemKind\n  id: string\n  tmdbId: number\n}\n\nexport interface IMediaItem extends IItem {\n  usage: Usage\n}\n\nexport interface IWatchableMediaItem extends IMediaItem {\n  sources: Video[]\n  captions: Caption[]\n}\n\nexport type Item = Episode | Movie | Person | Season | Show\n\nexport type ItemLike = Item | EpisodeLike | MovieLike | SeasonLike | ShowLike\n"],"sourceRoot":""}