{"version":3,"sources":["components/Cover.tsx","components/HorizontalSlide.tsx","views/app/Find.tsx","store/selectors.ts","components/get_started/Authenticated.tsx","components/ForYou.tsx","components/get_started/Setup.tsx","components/get_started/Unauthenticated.tsx","views/app/Home.tsx","components/FileList.tsx","hooks/toggle.ts","components/PersonList.tsx","views/app/Movie.tsx","components/ItemGrid.tsx","components/VerticalSlide.tsx","components/authentication/AddProviderModal.tsx","views/app/Movies.tsx","components/icons/Nucleo/FindIcon.tsx","components/icons/Nucleo/ForYouIcon.tsx","components/icons/Nucleo/MovieIcon.tsx","components/icons/Nucleo/SettingsIcon.tsx","components/icons/Nucleo/ShowIcon.tsx","components/Tab.tsx","components/Nav.tsx","views/app/Person.tsx","components/EpisodeEntry.tsx","views/app/Season.tsx","components/icons/Nucleo/AddIcon.tsx","components/ProviderButton.tsx","components/authentication/ChooseProvider.tsx","components/icons/Nucleo/CheckIcon.tsx","components/authentication/FTPProviderForm.tsx","components/authentication/EnterDetailsProvider.tsx","components/authentication/ProviderForm.tsx","components/authentication/SetupProvider.tsx","components/authentication/UpdateProviderModal.tsx","components/LanguageSelector.tsx","views/app/Settings.tsx","views/app/Show.tsx","views/app/Shows.tsx","views/app/index.tsx"],"names":["Cover","url","alt","className","src","HorizontalSlide","id","items","t","useTranslation","spaceBetween","slidesPerView","slidesOffsetBefore","slidesOffsetAfter","grabCursor","length","map","item","index","to","buildItemUrl","buildCoverUrl","posterPath","title","buildIndex","itemToText","Index","tokenize","forEach","add","Find","navigate","useNavigate","location","useLocation","initialQuery","useMemo","URLSearchParams","search","get","useSelector","state","movies","shows","useState","query","setQuery","moviesIndex","moviesSelector","movie","summary","showsIndex","showsSelector","show","foundMovies","movieSelector","filter","notUndefined","foundShows","showSelector","handleInputChange","useCallback","event","target","value","replace","autoFocus","placeholder","onChange","Object","keys","inProgressSelector","createSelector","inProgressMoviesSelector","inProgressSeasonsSelector","seasons","recentlyWatchedSelector","recentlyWatchedMoviesSelector","recentlyWatchedSeasonsSelector","Authenticated","onIndex","href","rel","onClick","ForYou","inProgress","recentlyWatched","Setup","Unauthenticated","Trans","Home","dispatch","useDispatch","sortByLastWatched","providers","providersSelector","auth","handleIndex","load","FileList","files","file","name","useToggle","initialValue","setValue","PersonList","people","details","isWrapped","toggleIsWrapped","displayedPeople","slice","person","Movie","useParams","handleContinue","undefined","kind","usage","progress","handleWatch","Backdrop","buildBackdropUrl","backdropPath","Date","releaseDate","getFullYear","duration","splitHoursAndMinutes","isInProgress","disabled","sources","classNames","primary","trailerUrl","cast","character","crew","buildJobTitle","job","gender","captions","NotFound","ItemGrid","SwiperCore","use","EffectCoverflow","State","VerticalSlide","path","direction","effect","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","history","replaceState","key","Movies","sortAlphabetically","FindIcon","Icon","width","height","fill","stroke","x1","x2","y1","y2","cx","cy","r","ForYouIcon","points","d","MovieIcon","x","y","SettingsIcon","ShowIcon","Tab","children","inexact","isActive","useMatch","active","Nav","moviesDisabled","showsDisabled","Person","moviesPersonSelector","seasonsPersonSelector","season","moviesCast","moviesCrew","seasonsCast","seasonsCrew","reduce","acc","ItemKind","tmdbId","profilePath","jobs","Set","personSelector","moviesByPersonSelector","seasonsByPersonSelector","showBackdropPath","join","EpisodeEntry","episode","number","airDate","toDateString","Season","seasonSelector","showId","episodes","sortByNumber","episodesBySeasonSelector","currentEpisode","find","showEpisodes","toggleEpisodes","episodeNumber","shown","AddIcon","ProviderButton","icon","large","ChooseProvider","onChoose","handleChoose","PROVIDER_KINDS","buildProviderIcon","buildProviderKindName","CheckIcon","FTPProviderForm","submitCaption","provider","onSubmit","initalState","host","port","username","password","secure","setState","handleChange","currentTarget","type","checked","handleSubmit","preventDefault","ProviderKind","FTP","isSetupInput","isValid","useEffect","valid","min","step","EnterDetailsProvider","onEnteredDetails","ProviderForm","moviesPath","showsPath","isValidPath","startsWith","warn","SetupProvider","onSetup","AddProviderModal","onClose","onSetupAuth","onAddProvider","useModal","handleOpen","initialState","Choose","setKind","authResponse","setAuthResponse","useSetupAuthRedirect","response","handleClose","setTimeout","a","OneDrive","EnterDetails","handleEnteredDetails","config","handleSetup","Modal","LanguageSelector","i18next","changeLanguage","defaultValue","language","LANGUAGES","UpdateProviderModal","onUpdateProvider","onRemoveProvider","Specific","General","setDetails","handleDetails","handleUpdate","newProvider","handleRemoveProvider","window","confirm","Settings","handleSetupAuth","setupAuth","handleUpdateProvider","updateProvider","handleFetchMetadataAll","fetchAllMetadata","removeProvider","showAddProviderModal","handleShowAddProviderModal","handleCloseAddProviderModal","_","showUpdateProviderModals","setShowUpdateProviderModals","handleShowUpdateProviderModal","handleCloseUpdateProviderModal","version","VERSION","process","buildCommitId","Show","seasonsByShowSelector","firstAirDate","lastAirDate","Shows","App","moviesCount","showsCount","element"],"mappings":"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","file":"static/js/5.a41911d2.chunk.js","sourcesContent":["import './Cover.scss'\nimport React from 'react'\n\ntype CoverProps = {\n  url: string\n  alt: string\n}\n\nexport const Cover = ({ url, alt }: CoverProps) => (\n  <img className=\"Cover\" src={url} alt={alt} />\n)\n","import './HorizontalSlide.scss'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport { buildCoverUrl, buildItemUrl } from '../util'\nimport { Cover } from './Cover'\nimport { Link } from 'react-router-dom'\nimport { Movie } from '../types/items/Movie'\nimport React from 'react'\nimport { Season } from '../types/items/Season'\nimport { Show } from '../types/items/Show'\nimport { useTranslation } from 'react-i18next'\n\ntype HorizontalSlideProps = {\n  id: string\n  items: (Movie | Season | Show)[]\n}\n\nexport const HorizontalSlide = ({ id, items }: HorizontalSlideProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"HorizontalSlide\" id={id}>\n      <Swiper\n        spaceBetween={15}\n        slidesPerView=\"auto\"\n        slidesOffsetBefore={20}\n        slidesOffsetAfter={20}\n        grabCursor\n      >\n        {items.length > 0 ? (\n          items.map((item, index) => (\n            <SwiperSlide key={index}>\n              <Link to={buildItemUrl(item)}>\n                <Cover url={buildCoverUrl(item.posterPath)} alt={item.title} />\n              </Link>\n            </SwiperSlide>\n          ))\n        ) : (\n          <SwiperSlide>\n            <h3>{t('Nothing found.')}</h3>\n          </SwiperSlide>\n        )}\n      </Swiper>\n    </div>\n  )\n}\n","import './Find.scss'\nimport { Navigate, useLocation, useNavigate } from 'react-router-dom'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { movieSelector, moviesSelector } from '../../store/movies/selectors'\nimport { showSelector, showsSelector } from '../../store/shows/selectors'\nimport { HorizontalSlide } from '../../components/HorizontalSlide'\nimport { Index } from 'flexsearch'\nimport { Item } from '../../types/items/Item'\nimport { RootState } from '../../store'\nimport { notUndefined } from '../../util'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\nconst QUERY_PARAMETER = 'q'\n\nconst buildIndex = <T extends Item>(\n  items: T[],\n  itemToText: (item: T) => string,\n) => {\n  const index = new Index({\n    tokenize: 'forward',\n  })\n  items.forEach((item) => index.add(item.id, itemToText(item)))\n  return index\n}\n\nexport const Find = () => {\n  const { t } = useTranslation()\n  const navigate = useNavigate()\n  const location = useLocation()\n\n  const initialQuery = useMemo(\n    () => new URLSearchParams(location.search).get(QUERY_PARAMETER),\n    [location],\n  )\n\n  const { movies, shows } = useSelector((state: RootState) => ({\n    movies: state.movies,\n    shows: state.shows,\n  }))\n\n  const [query, setQuery] = useState(initialQuery || '')\n\n  const moviesIndex = useMemo(\n    () =>\n      buildIndex(\n        moviesSelector(movies),\n        (movie) => `${movie.title};${movie.summary}`,\n      ),\n    [movies],\n  )\n  const showsIndex = useMemo(\n    () =>\n      buildIndex(\n        showsSelector(shows),\n        (show) => `${show.title};${show.summary}`,\n      ),\n    [shows],\n  )\n\n  const foundMovies = useMemo(() => {\n    const result = moviesIndex.search(query)\n    return result\n      .map((id) => movieSelector(id as string)(movies))\n      .filter(notUndefined)\n  }, [moviesIndex, query])\n  const foundShows = useMemo(() => {\n    const result = showsIndex.search(query)\n    return result\n      .map((id) => showSelector(id as string)(shows))\n      .filter(notUndefined)\n  }, [showsIndex, query])\n\n  const handleInputChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      navigate(`/app/find?${QUERY_PARAMETER}=${event.target.value}`, {\n        replace: true,\n      })\n      setQuery(event.target.value)\n    },\n    [navigate, setQuery],\n  )\n\n  return moviesSelector(movies).length > 0 ||\n    showsSelector(shows).length > 0 ? (\n    <div className=\"Find\">\n      <form>\n        <input\n          autoFocus\n          value={query}\n          placeholder={t('Search your library')}\n          onChange={handleInputChange}\n        />\n      </form>\n\n      {foundMovies && Object.keys(foundMovies).length > 0 && (\n        <section>\n          <h2>{t('Movies')}</h2>\n          <HorizontalSlide items={foundMovies} id=\"movies\" />\n        </section>\n      )}\n\n      {foundShows && Object.keys(foundShows).length > 0 && (\n        <section>\n          <h2>{t('TV shows')}</h2>\n          <HorizontalSlide items={foundShows} id=\"shows\" />\n        </section>\n      )}\n    </div>\n  ) : (\n    <Navigate to=\"/app\" />\n  )\n}\n","import {\n  inProgressSelector as inProgressMoviesSelector,\n  moviesPersonSelector,\n  recentlyWatchedSelector as recentlyWatchedMoviesSelector,\n} from './movies/selectors'\nimport {\n  inProgressSelector as inProgressSeasonsSelector,\n  recentlyWatchedSelector as recentlyWatchedSeasonsSelector,\n  seasonsPersonSelector,\n} from './seasons/selectors'\nimport { AccPerson } from '../types/items/Person'\nimport { ItemKind } from '../types/items/Item'\nimport { RootState } from '.'\nimport { createSelector } from 'reselect'\n\nexport const inProgressSelector = createSelector(\n  [\n    (state: RootState) => inProgressMoviesSelector(state.movies),\n    (state: RootState) => inProgressSeasonsSelector(state.seasons),\n  ],\n  (movies, seasons) => [...movies, ...seasons],\n)\n\nexport const recentlyWatchedSelector = createSelector(\n  [\n    (state: RootState) => recentlyWatchedMoviesSelector(state.movies),\n    (state: RootState) => recentlyWatchedSeasonsSelector(state.seasons),\n  ],\n  (movies, seasons) => [...movies, ...seasons],\n)\n\nexport const personSelector = (id: string) =>\n  createSelector(\n    [\n      ({ movies }) => moviesPersonSelector(id, (movie) => movie.cast)(movies),\n      ({ movies }) => moviesPersonSelector(id, (movie) => movie.crew)(movies),\n      ({ seasons }) =>\n        seasonsPersonSelector(id, (season) => season.cast)(seasons),\n      ({ seasons }) =>\n        seasonsPersonSelector(id, (season) => season.crew)(seasons),\n    ],\n    (moviesCast, moviesCrew, seasonsCast, seasonsCrew) => {\n      const roles = [\n        ...moviesCast,\n        ...moviesCrew,\n        ...seasonsCast,\n        ...seasonsCrew,\n      ]\n\n      return roles.reduce<AccPerson | undefined>(\n        (acc, person) => ({\n          kind: ItemKind.Person,\n          id,\n          tmdbId: person.tmdbId,\n          name: person.name,\n          gender: person.gender,\n          profilePath: person.profilePath,\n          jobs:\n            person.job === undefined\n              ? acc?.jobs\n              : acc !== undefined && acc.jobs !== undefined\n              ? [...new Set([...acc.jobs, person.job])]\n              : [person.job],\n        }),\n        undefined,\n      )\n    },\n  )\n","import './Authenticated.scss'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\ntype AuthenticatedProps = {\n  onIndex: () => void\n}\n\nexport const Authenticated = ({ onIndex }: AuthenticatedProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"Authenticated\">\n      <h2>{t('Get started')}</h2>\n      <p>\n        {t(\n          \"You signed into a cloud service, but we didn't find any movies or TV shows.\",\n        )}\n      </p>\n      <p>\n        {t(\n          \"It's likely that you just have to move some of your files around and create some folders to make it work.\",\n        )}\n      </p>\n      <p>\n        {t(\n          \"Reference the getting started guide to learn how to organize your files so that Plaain finds them. After you're done, just re-index.\",\n        )}\n      </p>\n      <div className=\"Authenticated__buttons\">\n        <a\n          className=\"button primary\"\n          href=\"https://github.com/jonhue/plaain#getting-started\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {t('Getting started')}\n        </a>\n        <button onClick={onIndex}>{t('Index')}</button>\n      </div>\n    </div>\n  )\n}\n","import './ForYou.scss'\nimport { HorizontalSlide } from './HorizontalSlide'\nimport { Movie } from '../types/items/Movie'\nimport React from 'react'\nimport { Season } from '../types/items/Season'\nimport { useTranslation } from 'react-i18next'\n\ntype ForYouProps = {\n  inProgress: (Movie | Season)[]\n  recentlyWatched: (Movie | Season)[]\n}\n\nexport const ForYou = ({ inProgress, recentlyWatched }: ForYouProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"ForYou\">\n      {inProgress.length > 0 && (\n        <section>\n          <h2>{t('Continue watching')}</h2>\n          <HorizontalSlide items={inProgress} id=\"inProgress\" />\n        </section>\n      )}\n\n      {recentlyWatched.length > 0 && (\n        <section>\n          <h2>{t('Recently watched')}</h2>\n          <HorizontalSlide items={recentlyWatched} id=\"recentlyWatched\" />\n        </section>\n      )}\n    </div>\n  )\n}\n","import './Setup.scss'\nimport { Link } from 'react-router-dom'\nimport { Movie } from '../../types/items/Movie'\nimport React from 'react'\nimport { Show } from '../../types/items/Show'\nimport { useTranslation } from 'react-i18next'\n\ntype SetupProps = {\n  movies: Movie[]\n  shows: Show[]\n}\n\nexport const Setup = ({ movies, shows }: SetupProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"Setup\">\n      <h2>{t('Get started')}</h2>\n      <p>\n        {t(\n          \"Here, you'll be able to find your recently watched movie or the show you didn't finish yet.\",\n        )}\n      </p>\n      <div className=\"Setup__buttons\">\n        {movies.length > 0 && (\n          <Link to=\"/app/movies\" className=\"button\">\n            {t('Discover your movies')}\n          </Link>\n        )}\n        {shows.length > 0 && (\n          <Link to=\"/app/shows\" className=\"button\">\n            {t('Discover your shows')}\n          </Link>\n        )}\n      </div>\n    </div>\n  )\n}\n","import './Unauthenticated.scss'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\n\nexport const Unauthenticated = () => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"Unauthenticated\">\n      <h2>{t('Get started')}</h2>\n      <p>\n        {t(\n          'To watch your movies and TV shows, you first have to sign in with the cloud service that hosts your media.',\n        )}\n      </p>\n      <Link to=\"/app/settings\" className=\"button\">\n        {t('Authenticate')}\n      </Link>\n      <p className=\"small\">\n        <Trans>\n          Note that Plaain may <span className=\"bold\">not</span> be used to\n          stream pirated content or publicly share your private media library.\n          You may only connect to your private cloud storage.\n        </Trans>\n      </p>\n    </div>\n  )\n}\n","import React, { useCallback } from 'react'\nimport {\n  inProgressSelector,\n  recentlyWatchedSelector,\n} from '../../store/selectors'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Authenticated } from '../../components/get_started/Authenticated'\nimport { ForYou } from '../../components/ForYou'\nimport { RootState } from '../../store'\nimport { Setup } from '../../components/get_started/Setup'\nimport { Unauthenticated } from '../../components/get_started/Unauthenticated'\nimport { index } from '../../store/thunks'\nimport { load } from '../../store/ui/thunks'\nimport { moviesSelector } from '../../store/movies/selectors'\nimport { providersSelector } from '../../store/auth/selectors'\nimport { showsSelector } from '../../store/shows/selectors'\nimport { sortByLastWatched } from '../../util'\n\nexport const Home = () => {\n  const dispatch = useDispatch()\n\n  const { inProgress, movies, providers, recentlyWatched, shows } = useSelector(\n    (state: RootState) => ({\n      inProgress: sortByLastWatched(inProgressSelector(state)),\n      movies: moviesSelector(state.movies),\n      providers: providersSelector(state.auth),\n      recentlyWatched: sortByLastWatched(recentlyWatchedSelector(state)),\n      shows: showsSelector(state.shows),\n    }),\n  )\n\n  const handleIndex = useCallback(() => {\n    dispatch(load(index(providers)))\n  }, [dispatch, providers])\n\n  return inProgress.length > 0 || recentlyWatched.length > 0 ? (\n    <ForYou inProgress={inProgress} recentlyWatched={recentlyWatched} />\n  ) : providers.length === 0 ? (\n    <Unauthenticated />\n  ) : movies.length === 0 && shows.length === 0 ? (\n    <Authenticated onIndex={handleIndex} />\n  ) : (\n    <Setup movies={movies} shows={shows} />\n  )\n}\n","import { File } from '../types/files/File'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\ntype FileListProps = {\n  files: File[]\n}\n\nexport const FileList = ({ files }: FileListProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"FileList\">\n      {files.map((file, index) => {\n        return (\n          <p className=\"small\" key={index}>\n            {file.name}\n          </p>\n        )\n      })}\n      {files.length === 0 && <p className=\"small\">{t('None')}</p>}\n    </div>\n  )\n}\n","import { useCallback, useState } from 'react'\n\nexport const useToggle = (\n  initialValue: boolean,\n): [value: boolean, handleToggle: () => void] => {\n  const [value, setValue] = useState(initialValue)\n  const handleToggle = useCallback(\n    () => setValue((state) => !state),\n    [setValue],\n  )\n\n  return [value, handleToggle]\n}\n","import './PersonList.scss'\nimport React, { useMemo } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Person } from '../types/items/Person'\nimport { buildItemUrl } from '../util'\nimport { useToggle } from '../hooks/toggle'\nimport { useTranslation } from 'react-i18next'\n\nconst WRAPPED_SIZE = 10\n\ntype PersonListProps<T extends Person> = {\n  people: T[]\n\n  details: (person: T) => string\n}\n\nexport const PersonList = <T extends Person>({\n  people,\n  details,\n}: PersonListProps<T>) => {\n  const { t } = useTranslation()\n\n  const [isWrapped, toggleIsWrapped] = useToggle(true)\n\n  const displayedPeople = useMemo(\n    () => people.slice(0, isWrapped ? WRAPPED_SIZE : people.length),\n    [isWrapped, people],\n  )\n\n  return (\n    <div className=\"PersonList\">\n      {people.length > 0 ? (\n        displayedPeople.map((person, index) => {\n          return (\n            <p key={index}>\n              <Link to={buildItemUrl(person)}>{person.name}</Link> ·{' '}\n              <span>{details(person)}</span>\n            </p>\n          )\n        })\n      ) : (\n        <p>{t('None')}</p>\n      )}\n      {people.length > WRAPPED_SIZE && (\n        <span onClick={toggleIsWrapped}>\n          {isWrapped ? t('Show more') : t('Show less')}\n        </span>\n      )}\n    </div>\n  )\n}\n","import './Movie.scss'\nimport React, { useCallback } from 'react'\nimport {\n  buildBackdropUrl,\n  buildCoverUrl,\n  buildJobTitle,\n  isInProgress,\n  splitHoursAndMinutes,\n} from '../../util'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { Backdrop } from '../../components/Backdrop'\nimport { Cover } from '../../components/Cover'\nimport { FileList } from '../../components/FileList'\nimport { NotFound } from '../NotFound'\nimport { PersonList } from '../../components/PersonList'\nimport { RootState } from '../../store'\nimport classNames from 'classnames'\nimport { movieSelector } from '../../store/movies/selectors'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\nexport const Movie = () => {\n  const { t } = useTranslation()\n  const navigate = useNavigate()\n  const { id } = useParams()\n\n  const movie = useSelector((state: RootState) =>\n    movieSelector(id!)(state.movies),\n  )\n\n  const handleContinue = useCallback(() => {\n    if (movie === undefined) return\n    navigate(\n      `/player?id=${movie.id}&type=${movie.kind}&s=${movie.usage.progress}`,\n    )\n  }, [movie, navigate])\n\n  const handleWatch = useCallback(() => {\n    if (movie === undefined) return\n    navigate(`/player?id=${movie.id}&type=${movie.kind}`)\n  }, [movie, navigate])\n\n  return movie !== undefined ? (\n    <div className=\"Movie\">\n      <Backdrop url={buildBackdropUrl(movie.backdropPath)} />\n      <div className=\"Movie__details\">\n        <Cover url={buildCoverUrl(movie.posterPath)} alt=\"poster\" />\n        <h1>{movie.title}</h1>\n        <div className=\"Movie__information\">\n          <p className=\"small\">{new Date(movie.releaseDate).getFullYear()}</p>\n          {movie.duration && (\n            <p className=\"small\">{splitHoursAndMinutes(t, movie.duration)}</p>\n          )}\n        </div>\n        <div className=\"Movie__actions\">\n          {isInProgress(movie) && (\n            <button\n              className=\"primary\"\n              onClick={handleContinue}\n              disabled={movie.sources.length === 0}\n            >\n              {t('Continue')}\n            </button>\n          )}\n          <button\n            className={classNames({ primary: !isInProgress(movie) })}\n            onClick={handleWatch}\n            disabled={movie.sources.length === 0}\n          >\n            {t('Watch')}\n          </button>\n          <a\n            className=\"button\"\n            href={movie.trailerUrl}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {t('Play trailer')}\n          </a>\n        </div>\n        <p className=\"Movie__overview\">{movie.summary}</p>\n        <div className=\"Movie__people\">\n          <div className=\"Movie__people__cast\">\n            <h4>{t('Starring')}</h4>\n            <PersonList\n              people={movie.cast}\n              details={(person) => person.character}\n            />\n          </div>\n          <div className=\"Movie__people__crew\">\n            <h4>{t('Crew')}</h4>\n            <PersonList\n              people={movie.crew}\n              details={(person) => buildJobTitle(t, person.job, person.gender)}\n            />\n          </div>\n        </div>\n      </div>\n      <div className=\"Movie__sources\">\n        <div>\n          <h4>{t('Sources')}</h4>\n          <div>\n            <div className=\"Movie__sources__versions\">\n              <h5>{t('Versions')}</h5>\n              <FileList files={movie.sources} />\n            </div>\n            <div className=\"Movie__sources__captions\">\n              <h5>{t('Subtitles')}</h5>\n              <FileList files={movie.captions} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <NotFound />\n  )\n}\n","import './ItemGrid.scss'\nimport { buildCoverUrl, buildItemUrl } from '../util'\nimport { Cover } from './Cover'\nimport { Link } from 'react-router-dom'\nimport { Movie } from '../types/items/Movie'\nimport React from 'react'\nimport { Season } from '../types/items/Season'\nimport { Show } from '../types/items/Show'\nimport { useTranslation } from 'react-i18next'\n\ntype ItemGridProps = {\n  items: (Movie | Season | Show)[]\n}\n\nexport const ItemGrid = ({ items }: ItemGridProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"ItemGrid\">\n      {items.length > 0 ? (\n        items.map((item, index) => (\n          <div className=\"ItemGrid__item\" key={index}>\n            <Link to={buildItemUrl(item)}>\n              <Cover url={buildCoverUrl(item.posterPath)} alt={item.title} />\n            </Link>\n          </div>\n        ))\n      ) : (\n        <div className=\"ItemGrid__item\">\n          <h3>{t('Nothing found.')}</h3>\n        </div>\n      )}\n    </div>\n  )\n}\n","import './VerticalSlide.scss'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport SwiperCore, { EffectCoverflow } from 'swiper'\nimport { buildCoverUrl, buildItemUrl } from '../util'\nimport { Cover } from './Cover'\nimport { Link } from 'react-router-dom'\nimport { Movie } from '../types/items/Movie'\nimport React from 'react'\nimport { Season } from '../types/items/Season'\nimport { Show } from '../types/items/Show'\nimport { useTranslation } from 'react-i18next'\n\nSwiperCore.use([EffectCoverflow])\n\ntype VerticalSlideProps = {\n  id: string\n  items: (Movie | Season | Show)[]\n  path: string\n}\n\nexport const VerticalSlide = ({ id, items, path }: VerticalSlideProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"VerticalSlide\" id={id}>\n      <Swiper\n        direction=\"vertical\"\n        slidesPerView=\"auto\"\n        grabCursor\n        effect=\"coverflow\"\n        coverflowEffect={{\n          rotate: 0,\n          stretch: 425,\n          depth: 150,\n          modifier: 1,\n          slideShadows: false,\n        }}\n        history={{\n          replaceState: true,\n          key: path,\n        }}\n      >\n        {items.length > 0 ? (\n          items.map((item, index) => (\n            <SwiperSlide data-history={item.id} key={index}>\n              <Link to={buildItemUrl(item)}>\n                <Cover url={buildCoverUrl(item.posterPath)} alt={item.title} />\n              </Link>\n            </SwiperSlide>\n          ))\n        ) : (\n          <SwiperSlide>\n            <h3>{t('Nothing found.')}</h3>\n          </SwiperSlide>\n        )}\n      </Swiper>\n    </div>\n  )\n}\n","import './AddProviderModal.scss'\nimport { AuthResponse, AuthSetup } from '../../services/auth/types'\nimport { Provider, ProviderKind } from '../../types/providers/Provider'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { ChooseProvider } from './ChooseProvider'\nimport { EnterDetailsProvider } from './EnterDetailsProvider'\nimport { Modal } from '../Modal'\nimport { SetupProvider } from './SetupProvider'\nimport { useModal } from '../../hooks/modal'\nimport { useSetupAuthRedirect } from '../../hooks/auth'\n\nenum State {\n  Choose,\n  EnterDetails,\n  Setup,\n}\n\ntype AddProviderModalProps = {\n  isActive: boolean\n\n  onClose: () => void\n  onSetupAuth: (config: AuthSetup) => Promise<AuthResponse | undefined>\n  onAddProvider: (provider: Provider) => void\n}\n\nexport const AddProviderModal = ({\n  isActive,\n  onClose,\n  onSetupAuth,\n  onAddProvider,\n}: AddProviderModalProps) => {\n  const [show, handleOpen] = useModal()\n\n  const initialState = useMemo(() => State.Choose, [])\n  const [state, setState] = useState(initialState)\n  const [kind, setKind] = useState<ProviderKind | undefined>()\n  const [authResponse, setAuthResponse] = useState<AuthResponse | undefined>()\n  useSetupAuthRedirect((response) => {\n    setAuthResponse(response)\n    setState(State.Setup)\n    handleOpen()\n  })\n\n  const handleClose = useCallback(() => {\n    onClose()\n    setTimeout(() => {\n      setState(initialState)\n      setKind(undefined)\n      setAuthResponse(undefined)\n    }, 500)\n  }, [initialState, onClose, setAuthResponse, setKind, setState])\n\n  const handleChoose = useCallback(\n    async (kind: ProviderKind) => {\n      setKind(kind)\n      switch (kind) {\n        case ProviderKind.FTP:\n          setState(State.EnterDetails)\n          return\n        case ProviderKind.OneDrive:\n          const authResponse = await onSetupAuth({ kind })\n          setAuthResponse(authResponse)\n          setState(State.Setup)\n          return\n      }\n    },\n    [setAuthResponse, setKind, onSetupAuth, setState],\n  )\n\n  const handleEnteredDetails = useCallback(\n    async (config: AuthSetup) => {\n      const authResponse = await onSetupAuth(config)\n      setAuthResponse(authResponse)\n      setState(State.Setup)\n    },\n    [setAuthResponse, onSetupAuth],\n  )\n\n  const handleSetup = useCallback(\n    (moviesPath: string | undefined, showsPath: string | undefined) => {\n      if (authResponse === undefined) return\n\n      const provider = { ...authResponse, moviesPath, showsPath }\n      onAddProvider(provider)\n      handleClose()\n    },\n    [authResponse, onAddProvider, handleClose],\n  )\n\n  return (\n    <div className=\"AddProviderModal\">\n      <Modal isActive={isActive || show} onClose={handleClose}>\n        {state === State.Choose ? (\n          <ChooseProvider onChoose={handleChoose} />\n        ) : state === State.EnterDetails ? (\n          <EnterDetailsProvider\n            kind={kind!}\n            onEnteredDetails={handleEnteredDetails}\n          />\n        ) : state === State.Setup ? (\n          <SetupProvider onSetup={handleSetup} />\n        ) : null}\n      </Modal>\n    </div>\n  )\n}\n","import './Movies.scss'\nimport { ItemGrid } from '../../components/ItemGrid'\nimport { Navigate } from 'react-router-dom'\nimport React from 'react'\nimport { RootState } from '../../store'\nimport { VerticalSlide } from '../../components/VerticalSlide'\nimport { moviesSelector } from '../../store/movies/selectors'\nimport { sortAlphabetically } from '../../util'\nimport { useSelector } from 'react-redux'\n\nexport const Movies = () => {\n  const movies = useSelector((state: RootState) =>\n    sortAlphabetically(moviesSelector(state.movies), (movie) => movie.title),\n  )\n\n  return movies.length > 0 ? (\n    <div className=\"Movies\">\n      <VerticalSlide items={movies} path=\"movies\" id=\"movies\" />\n      <ItemGrid items={movies} />\n    </div>\n  ) : (\n    <Navigate to=\"/app\" />\n  )\n}\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const FindIcon = () => (\n  <Icon className=\"zoom\" width={24} height={24}>\n    <title>Find</title>\n    <g fill=\"#ffffff\">\n      <line\n        fill=\"none\"\n        stroke=\"#ffffff\"\n        x1=\"22\"\n        x2=\"15.656\"\n        y1=\"22\"\n        y2=\"15.656\"\n      />\n      <circle cx=\"10\" cy=\"10\" fill=\"none\" r=\"8\" stroke=\"#ffffff\" />\n    </g>\n  </Icon>\n)\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const ForYouIcon = () => (\n  <Icon className=\"popcorn\" width={24} height={24}>\n    <title>For You</title>\n    <g fill=\"#ffffff\">\n      <polygon fill=\"none\" points=\"21 7 3 7 5 23 19 23 21 7\" stroke=\"#ffffff\" />\n      <path\n        d=\"M19,5a3,3,0,0,0-3-3,2.97,2.97,0,0,0-1.47.4,2.986,2.986,0,0,0-5.06,0A2.97,2.97,0,0,0,8,2,3,3,0,0,0,5,5\"\n        fill=\"none\"\n        stroke=\"#ffffff\"\n      />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"9\" x2=\"8\" y1=\"23\" y2=\"7\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"15\" x2=\"16\" y1=\"23\" y2=\"7\" />\n    </g>\n  </Icon>\n)\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const MovieIcon = () => (\n  <Icon className=\"movie-61\" width={24} height={24}>\n    <title>Movie</title>\n    <g fill=\"#ffffff\">\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"1\" x2=\"1\" y1=\"1\" y2=\"23\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"23\" x2=\"23\" y1=\"1\" y2=\"23\" />\n      <rect height=\"22\" width=\"14\" fill=\"none\" stroke=\"#ffffff\" x=\"5\" y=\"1\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"1\" x2=\"23\" y1=\"12\" y2=\"12\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"1\" x2=\"5\" y1=\"8\" y2=\"8\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"1\" x2=\"5\" y1=\"4\" y2=\"4\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"19\" x2=\"23\" y1=\"8\" y2=\"8\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"19\" x2=\"23\" y1=\"4\" y2=\"4\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"19\" x2=\"23\" y1=\"20\" y2=\"20\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"19\" x2=\"23\" y1=\"16\" y2=\"16\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"1\" x2=\"5\" y1=\"20\" y2=\"20\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"1\" x2=\"5\" y1=\"16\" y2=\"16\" />\n    </g>\n  </Icon>\n)\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const SettingsIcon = () => (\n  <Icon className=\"settings-gear\" width={24} height={24}>\n    <title>Settings</title>\n    <g fill=\"#ffffff\" stroke=\"#ffffff\">\n      <circle cx=\"12\" cy=\"12\" fill=\"none\" r=\"3\" />\n      <path\n        d=\"M20,12a8.049,8.049,0,0,0-.188-1.713l2.714-2.055-2-3.464L17.383,6.094a7.987,7.987,0,0,0-2.961-1.719L14,1H10L9.578,4.375A7.987,7.987,0,0,0,6.617,6.094L3.474,4.768l-2,3.464,2.714,2.055a7.9,7.9,0,0,0,0,3.426L1.474,15.768l2,3.464,3.143-1.326a7.987,7.987,0,0,0,2.961,1.719L10,23h4l.422-3.375a7.987,7.987,0,0,0,2.961-1.719l3.143,1.326,2-3.464-2.714-2.055A8.049,8.049,0,0,0,20,12Z\"\n        fill=\"none\"\n        stroke=\"#ffffff\"\n      />\n    </g>\n  </Icon>\n)\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const ShowIcon = () => (\n  <Icon className=\"desktop-screen\" width={24} height={24}>\n    <title>Show</title>\n    <g fill=\"#ffffff\">\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"12\" x2=\"12\" y1=\"22\" y2=\"18\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"6\" x2=\"18\" y1=\"22\" y2=\"22\" />\n      <rect height=\"16\" width=\"22\" fill=\"none\" stroke=\"#ffffff\" x=\"1\" y=\"2\" />\n    </g>\n  </Icon>\n)\n","import './Tab.scss'\nimport { Link, useMatch } from 'react-router-dom'\nimport React, { FunctionComponent } from 'react'\nimport classNames from 'classnames'\n\ntype TabProps = {\n  to: string\n  inexact?: boolean\n  disabled?: boolean\n}\n\nexport const Tab: FunctionComponent<TabProps> = ({\n  children,\n  to,\n  inexact,\n  disabled,\n}) => {\n  const isActive = !!useMatch({ path: `${to}${inexact ? '/*' : ''}` })\n\n  return (\n    <Link className={classNames('Tab', { active: isActive, disabled })} to={to}>\n      {children}\n    </Link>\n  )\n}\n","import './Nav.scss'\nimport { FindIcon } from './icons/Nucleo/FindIcon'\nimport { ForYouIcon } from './icons/Nucleo/ForYouIcon'\nimport { MovieIcon } from './icons/Nucleo/MovieIcon'\nimport React from 'react'\nimport { SettingsIcon } from './icons/Nucleo/SettingsIcon'\nimport { ShowIcon } from './icons/Nucleo/ShowIcon'\nimport { Tab } from './Tab'\nimport { useTranslation } from 'react-i18next'\n\ntype NavProps = {\n  moviesDisabled?: boolean\n  showsDisabled?: boolean\n}\n\nexport const Nav = ({ moviesDisabled, showsDisabled }: NavProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"Nav\">\n      <div className=\"Nav__wrapper\">\n        <Tab to=\"/app\">\n          <ForYouIcon />\n          <p>{t('For you')}</p>\n        </Tab>\n        <Tab disabled={moviesDisabled} to=\"/app/movies\" inexact>\n          <MovieIcon />\n          <p>{t('Movies')}</p>\n        </Tab>\n        <Tab disabled={showsDisabled} to=\"/app/shows\" inexact>\n          <ShowIcon />\n          <p>{t('Shows')}</p>\n        </Tab>\n        <Tab disabled={moviesDisabled && showsDisabled} to=\"/app/find\">\n          <FindIcon />\n          <p>{t('Find')}</p>\n        </Tab>\n        <Tab to=\"/app/settings\">\n          <SettingsIcon />\n          <p>{t('Settings')}</p>\n        </Tab>\n      </div>\n    </div>\n  )\n}\n","import './Person.scss'\nimport React, { useMemo } from 'react'\nimport { buildBackdropUrl, buildCoverUrl, buildJobTitle } from '../../util'\nimport { Backdrop } from '../../components/Backdrop'\nimport { Cover } from '../../components/Cover'\nimport { HorizontalSlide } from '../../components/HorizontalSlide'\nimport { NotFound } from '../NotFound'\nimport { RootState } from '../../store'\nimport { moviesByPersonSelector } from '../../store/movies/selectors'\nimport { personSelector } from '../../store/selectors'\nimport { seasonsByPersonSelector } from '../../store/seasons/selectors'\nimport { useParams } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\nexport const Person = () => {\n  const { t } = useTranslation()\n  const { id } = useParams()\n\n  const person = useSelector((state: RootState) => personSelector(id!)(state))\n  const { movies, seasons } = useSelector((state: RootState) => ({\n    movies: person && moviesByPersonSelector(person.id)(state.movies),\n    seasons: person && seasonsByPersonSelector(person.id)(state.seasons),\n  }))\n\n  const backdropPath = useMemo(() => {\n    if (movies !== undefined && movies.length > 0) return movies[0].backdropPath\n    else if (seasons !== undefined && seasons.length > 0)\n      return seasons[0].showBackdropPath\n  }, [movies, seasons])\n\n  return person !== undefined &&\n    movies !== undefined &&\n    seasons !== undefined ? (\n    <div className=\"Person\">\n      <Backdrop url={buildBackdropUrl(backdropPath)} />\n      <div className=\"Person__details\">\n        <Cover url={buildCoverUrl(person.profilePath)} alt=\"profile\" />\n        <h1>{person.name}</h1>\n        {person.jobs && (\n          <p>\n            {person.jobs\n              .map((job) => buildJobTitle(t, job, person.gender))\n              .join(', ')}\n          </p>\n        )}\n      </div>\n\n      {movies.length > 0 && (\n        <div className=\"Person__movies\">\n          <h2>{t('Movies')}</h2>\n          <HorizontalSlide items={movies} id=\"movies\" />\n        </div>\n      )}\n\n      {seasons.length > 0 && (\n        <div className=\"Person__seasons\">\n          <h2>{t('TV seasons')}</h2>\n          <HorizontalSlide items={seasons} id=\"seasons\" />\n        </div>\n      )}\n    </div>\n  ) : (\n    <NotFound />\n  )\n}\n","import './EpisodeEntry.scss'\nimport { Episode } from '../types/items/Episode'\nimport React from 'react'\nimport classNames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\ntype EpisodeEntryProps = {\n  episode: Episode\n\n  onClick: () => void\n}\n\nexport const EpisodeEntry = ({ episode, onClick }: EpisodeEntryProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div\n      className={classNames('EpisodeEntry', {\n        disabled: episode.sources.length === 0,\n      })}\n      onClick={onClick}\n    >\n      <div className=\"EpisodeEntry__number\">{episode.number}</div>\n      <div className=\"EpisodeEntry__details\">\n        <h2>{episode.title}</h2>\n        <p className=\"small\">\n          {t('Aired')} {new Date(episode.airDate).toDateString()}\n        </p>\n        <p>{episode.summary}</p>\n      </div>\n    </div>\n  )\n}\n","import './Season.scss'\nimport React, { useCallback, useMemo } from 'react'\nimport {\n  buildBackdropUrl,\n  buildCoverUrl,\n  buildJobTitle,\n  sortByNumber,\n} from '../../util'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { Backdrop } from '../../components/Backdrop'\nimport { Cover } from '../../components/Cover'\nimport { Episode } from '../../types/items/Episode'\nimport { EpisodeEntry } from '../../components/EpisodeEntry'\nimport { NotFound } from '../NotFound'\nimport { PersonList } from '../../components/PersonList'\nimport { RootState } from '../../store'\nimport classNames from 'classnames'\nimport { episodesBySeasonSelector } from '../../store/episodes/selectors'\nimport { seasonSelector } from '../../store/seasons/selectors'\nimport { showSelector } from '../../store/shows/selectors'\nimport { useSelector } from 'react-redux'\nimport { useToggle } from '../../hooks/toggle'\nimport { useTranslation } from 'react-i18next'\n\nexport const Season = () => {\n  const { t } = useTranslation()\n  const navigate = useNavigate()\n  const { id } = useParams()\n\n  const season = useSelector((state: RootState) =>\n    seasonSelector(id!)(state.seasons),\n  )\n  const { show, episodes } = useSelector((state: RootState) => ({\n    show: season && showSelector(season.showId)(state.shows),\n    episodes:\n      season &&\n      sortByNumber(\n        episodesBySeasonSelector(season.id)(state.episodes),\n        (episode) => episode.number,\n      ),\n  }))\n  const currentEpisode = useMemo(() => {\n    if (season !== undefined && episodes !== undefined)\n      return episodes.find(\n        (episode) => episode.number === season.usage.progress,\n      )\n  }, [season, episodes])\n\n  const [showEpisodes, toggleEpisodes] = useToggle(false)\n\n  const handleContinue = useCallback(\n    (episode: Episode) => () => {\n      navigate(\n        `/player?id=${episode.id}&type=${episode.kind}&s=${episode.usage.progress}`,\n      )\n    },\n    [navigate],\n  )\n\n  const handleWatch = useCallback(\n    (episodeNumber: number) => () => {\n      if (episodes === undefined) return\n\n      const episode = episodes.find(\n        (episode) => episode.number === episodeNumber,\n      )!\n\n      navigate(`/player?id=${episode.id}&type=${episode.kind}`)\n    },\n    [episodes, navigate],\n  )\n\n  return show !== undefined &&\n    season !== undefined &&\n    episodes !== undefined ? (\n    <div className=\"Season\">\n      <Backdrop url={buildBackdropUrl(season.showBackdropPath)} />\n      <div className=\"Season__details\">\n        <Cover url={buildCoverUrl(season.posterPath)} alt=\"poster\" />\n        <h1>\n          {t('Season')} {season.number}\n        </h1>\n        <div className=\"Season__information\">\n          <p className=\"small\">{show.title}</p>\n          <p className=\"small\">{new Date(season.airDate).getFullYear()}</p>\n        </div>\n        <div className=\"Season__actions\">\n          {currentEpisode !== undefined && (\n            <button\n              className=\"primary\"\n              onClick={handleContinue(currentEpisode)}\n              disabled={currentEpisode.sources.length === 0}\n            >\n              {t('Continue episode')} {currentEpisode.number}\n            </button>\n          )}\n          {episodes.length > 0 && (\n            <button\n              className={classNames({ primary: currentEpisode === undefined })}\n              onClick={handleWatch(0)}\n              disabled={episodes[0].sources.length === 0}\n            >\n              {t('Watch')}\n            </button>\n          )}\n          <a\n            className=\"button\"\n            id=\"trailer\"\n            href={season.trailerUrl}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {t('Play trailer')}\n          </a>\n        </div>\n        <div className=\"Season__episodes\">\n          <div\n            className={classNames('Season__episodes__list', {\n              shown: showEpisodes,\n            })}\n          >\n            {episodes\n              .slice(0, showEpisodes ? episodes.length : 0)\n              .map((episode, index) => (\n                <EpisodeEntry\n                  episode={episode}\n                  onClick={handleWatch(episode.number)}\n                  key={index}\n                />\n              ))}\n          </div>\n          {episodes.length > 0 && (\n            <div className=\"Season__episodes__toggle\" onClick={toggleEpisodes}>\n              {showEpisodes ? t('Hide episodes') : t('Show all episodes')}\n            </div>\n          )}\n        </div>\n        <p className=\"Season__overview\">{season.summary}</p>\n        <div className=\"Season__people\">\n          <div className=\"Season__people__cast\">\n            <h4>{t('Starring')}</h4>\n            <PersonList\n              people={season.cast}\n              details={(person) => person.character}\n            />\n          </div>\n          <div className=\"Season__people__crew\">\n            <h4>{t('Crew')}</h4>\n            <PersonList\n              people={season.crew}\n              details={(person) => buildJobTitle(t, person.job, person.gender)}\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <NotFound />\n  )\n}\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const AddIcon = () => (\n  <Icon className=\"e-add\" width={32} height={32}>\n    <title>Add</title>\n    <g fill=\"#ffffff\" stroke=\"#ffffff\">\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"16\" x2=\"16\" y1=\"2\" y2=\"30\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"30\" x2=\"2\" y1=\"16\" y2=\"16\" />\n    </g>\n  </Icon>\n)\n","import './ProviderButton.scss'\nimport React from 'react'\nimport classNames from 'classnames'\n\ntype ProviderButtonProps = {\n  className?: string\n  icon: JSX.Element\n  title?: string\n\n  onClick: (event: React.MouseEvent) => void\n}\n\nexport const ProviderButton = ({\n  className,\n  icon,\n  title,\n  onClick,\n}: ProviderButtonProps) => (\n  <div className={classNames('ProviderButton', { large: title !== undefined })}>\n    <button className={className} onClick={onClick}>\n      {icon}\n      {title && <h3>{title}</h3>}\n    </button>\n  </div>\n)\n","import './ChooseProvider.scss'\nimport { PROVIDER_KINDS, ProviderKind } from '../../types/providers/Provider'\nimport React, { useCallback } from 'react'\nimport { buildProviderIcon, buildProviderKindName } from '../../util'\nimport { ProviderButton } from '../ProviderButton'\nimport { useTranslation } from 'react-i18next'\n\ntype ChooseProviderProps = {\n  onChoose: (kind: ProviderKind) => Promise<void>\n}\n\nexport const ChooseProvider = ({ onChoose }: ChooseProviderProps) => {\n  const { t } = useTranslation()\n\n  const handleChoose = useCallback(\n    (kind: ProviderKind) => () => onChoose(kind),\n    [onChoose],\n  )\n\n  return (\n    <div className=\"ChooseProvider\">\n      <h2>{t('Add a provider')}</h2>\n      <p>\n        {t(\n          'Select which service you want to use to stream your movies & shows.',\n        )}\n      </p>\n      <div className=\"ChooseProvider__providers\">\n        {PROVIDER_KINDS.map((kind, index) => (\n          <ProviderButton\n            icon={buildProviderIcon(kind)}\n            title={buildProviderKindName(t, kind)}\n            onClick={handleChoose(kind)}\n            key={index}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const CheckIcon = () => (\n  <Icon className=\"c-check\" width={24} height={24}>\n    <title>Check</title>\n    <g fill=\"#ffffff\">\n      <path\n        d=\"M12,0A12,12,0,1,0,24,12,12.035,12.035,0,0,0,12,0ZM10,17.414,4.586,12,6,10.586l4,4,8-8L19.414,8Z\"\n        fill=\"#ffffff\"\n      />\n    </g>\n  </Icon>\n)\n","import './FTPProviderForm.scss'\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { CheckIcon } from '../icons/Nucleo/CheckIcon'\nimport { FTP } from '../../types/providers/FTP'\nimport { FTPAuthSetup } from '../../services/auth/types'\nimport { ProviderKind } from '../../types/providers/Provider'\nimport classNames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\ntype FTPProviderFormProps = {\n  submitCaption: string\n  provider?: FTP\n\n  onSubmit: (config: FTPAuthSetup) => void\n}\n\ntype FTPProviderFormState = {\n  name?: string\n  host?: string\n  port?: number\n  username?: string\n  password?: string\n  secure: boolean\n}\n\nexport const FTPProviderForm = ({\n  submitCaption,\n  provider,\n  onSubmit,\n}: FTPProviderFormProps) => {\n  const { t } = useTranslation()\n\n  const initalState = useMemo<FTPProviderFormState>(\n    () => ({\n      name: provider?.name,\n      host: provider?.host,\n      port: provider?.port || 21,\n      username: provider?.username,\n      password: provider?.password,\n      secure: provider?.secure || true,\n    }),\n    [provider],\n  )\n  const [state, setState] = useState<FTPProviderFormState>(initalState)\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>): void => {\n      const target = event.currentTarget\n      setState((state) => ({\n        ...state,\n        [target.name]:\n          target.type === 'checkbox'\n            ? target.checked\n            : target.value === ''\n            ? undefined\n            : target.value,\n      }))\n    },\n    [setState],\n  )\n\n  const handleSubmit = useCallback(\n    (event: React.FormEvent<HTMLFormElement>): void => {\n      event.preventDefault()\n      onSubmit({\n        kind: ProviderKind.FTP,\n        name: state.name!,\n        host: state.host!,\n        port: state.port!,\n        username: state.username!,\n        password: state.password!,\n        secure: state.secure,\n      })\n    },\n    [onSubmit, state],\n  )\n\n  const isSetupInput = useCallback(\n    (value: unknown | undefined) => value !== undefined && value !== '',\n    [],\n  )\n\n  const isValid = useMemo(\n    () =>\n      isSetupInput(state.name) &&\n      isSetupInput(state.host) &&\n      isSetupInput(state.port) &&\n      isSetupInput(state.username) &&\n      isSetupInput(state.password),\n    [isSetupInput, state],\n  )\n\n  useEffect(() => {\n    setState(initalState)\n  }, [initalState, setState])\n\n  return (\n    <form className=\"FTPProviderForm\" onSubmit={handleSubmit}>\n      <label>\n        {t('Name')}\n        <p className=\"small\">\n          {t('Friendly name to identify server, not used for connecting.')}\n        </p>\n        <div\n          className={classNames('FTPProviderForm__input', 'warn', {\n            valid: isSetupInput(state.name),\n          })}\n        >\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={state.name || ''}\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <label>\n        {t('Host')}\n        <div\n          className={classNames('FTPProviderForm__input', 'warn', {\n            valid: isSetupInput(state.host),\n          })}\n        >\n          <input\n            type=\"text\"\n            name=\"host\"\n            value={state.host || ''}\n            placeholder=\"example.com\"\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <label>\n        {t('Port')}\n        <div\n          className={classNames('FTPProviderForm__input', 'warn', {\n            valid: isSetupInput(state.port),\n          })}\n        >\n          <input\n            type=\"number\"\n            min={0}\n            step={1}\n            name=\"port\"\n            value={state.port || ''}\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <label>\n        {t('Username')}\n        <div\n          className={classNames('FTPProviderForm__input', 'warn', {\n            valid: isSetupInput(state.username),\n          })}\n        >\n          <input\n            type=\"text\"\n            name=\"username\"\n            value={state.username || ''}\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <label>\n        {t('Password')}\n        <div\n          className={classNames('FTPProviderForm__input', 'warn', {\n            valid: isSetupInput(state.password),\n          })}\n        >\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={state.password || ''}\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <div className=\"FTPProviderForm__checkbox\">\n        <input\n          type=\"checkbox\"\n          name=\"secure\"\n          checked={state.secure}\n          onChange={handleChange}\n        />\n        <label>\n          {t('Secure')}\n          <p className=\"small\">{t('Explicit FTPS over TLS.')}</p>\n        </label>\n      </div>\n\n      <div className=\"FTPProviderForm__actions\">\n        <button type=\"submit\" disabled={!isValid}>\n          {submitCaption}\n        </button>\n      </div>\n    </form>\n  )\n}\n","import './EnterDetailsProvider.scss'\nimport { AuthSetup } from '../../services/auth/types'\nimport { FTPProviderForm } from './FTPProviderForm'\nimport { ProviderKind } from '../../types/providers/Provider'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\ntype EnterDetailsProviderProps = {\n  kind: ProviderKind\n  onEnteredDetails: (config: AuthSetup) => void\n}\n\nexport const EnterDetailsProvider = ({\n  kind,\n  onEnteredDetails,\n}: EnterDetailsProviderProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"EnterDetailsProvider\">\n      <h2>{t('Configure your provider')}</h2>\n      <p>{t('Plaain needs some more details to connect to your provider.')}</p>\n      {kind === ProviderKind.FTP ? (\n        <FTPProviderForm\n          submitCaption={t('Continue')}\n          onSubmit={onEnteredDetails}\n        />\n      ) : null}\n    </div>\n  )\n}\n","import './ProviderForm.scss'\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { CheckIcon } from '../icons/Nucleo/CheckIcon'\nimport { Provider } from '../../types/providers/Provider'\nimport classNames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\ntype ProviderFormProps = {\n  submitCaption: string\n  provider?: Provider\n\n  onSubmit: (\n    moviesPath: string | undefined,\n    showsPath: string | undefined,\n  ) => void\n}\n\ntype ProviderFormState = {\n  moviesPath?: string\n  showsPath?: string\n}\n\nexport const ProviderForm = ({\n  submitCaption,\n  provider,\n  onSubmit,\n}: ProviderFormProps) => {\n  const { t } = useTranslation()\n\n  const initalState = useMemo<ProviderFormState>(\n    () => ({\n      moviesPath: provider?.moviesPath,\n      showsPath: provider?.showsPath,\n    }),\n    [provider],\n  )\n  const [state, setState] = useState<ProviderFormState>(initalState)\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>): void => {\n      const target = event.currentTarget\n      setState((state) => ({\n        ...state,\n        [target.name]: target.value === '' ? undefined : target.value,\n      }))\n    },\n    [setState],\n  )\n\n  const handleSubmit = useCallback(\n    (event: React.FormEvent<HTMLFormElement>): void => {\n      event.preventDefault()\n      onSubmit(state.moviesPath, state.showsPath)\n    },\n    [onSubmit, state],\n  )\n\n  const isSetupInput = useCallback(\n    (value: string | undefined) => value !== undefined && value !== '',\n    [],\n  )\n\n  const isValidPath = useCallback(\n    (value: string | undefined) => value !== undefined && value.startsWith('/'),\n    [],\n  )\n\n  const isValid = useMemo(\n    () =>\n      (!isSetupInput(state.moviesPath) || isValidPath(state.moviesPath)) &&\n      (!isSetupInput(state.showsPath) || isValidPath(state.showsPath)),\n    [isSetupInput, isValidPath, state],\n  )\n\n  useEffect(() => {\n    setState(initalState)\n  }, [initalState, setState])\n\n  return (\n    <form className=\"ProviderForm\" onSubmit={handleSubmit}>\n      <label>\n        {t('Movies path')}\n        <p className=\"small\">\n          {t(\n            'The path from your home directory to where you keep your movies.',\n          )}\n        </p>\n        <div\n          className={classNames('ProviderForm__input', {\n            warn: isSetupInput(state.moviesPath),\n            valid: isValidPath(state.moviesPath),\n          })}\n        >\n          <input\n            type=\"text\"\n            name=\"moviesPath\"\n            value={state.moviesPath || ''}\n            placeholder=\"/Plaain/movies\"\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <label>\n        {t('Shows path')}\n        <p className=\"small\">\n          {t('The path from your home directory to where you keep your shows.')}\n        </p>\n        <div\n          className={classNames('ProviderForm__input', {\n            warn: isSetupInput(state.showsPath),\n            valid: isValidPath(state.showsPath),\n          })}\n        >\n          <input\n            type=\"text\"\n            name=\"showsPath\"\n            value={state.showsPath || ''}\n            placeholder=\"/Plaain/shows\"\n            onChange={handleChange}\n          />\n          <CheckIcon />\n        </div>\n      </label>\n\n      <div className=\"ProviderForm__actions\">\n        <button type=\"submit\" disabled={!isValid}>\n          {submitCaption}\n        </button>\n      </div>\n    </form>\n  )\n}\n","import './SetupProvider.scss'\nimport { ProviderForm } from './ProviderForm'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\ntype SetupProviderProps = {\n  onSetup: (\n    moviesPath: string | undefined,\n    showsPath: string | undefined,\n  ) => void\n}\n\nexport const SetupProvider = ({ onSetup }: SetupProviderProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"SetupProvider\">\n      <h2>{t('Setup your provider')}</h2>\n      <p>\n        {t(\n          \"All that's left is to tell Plaain where to look for your movies and shows. You can always skip this step and come back later.\",\n        )}\n      </p>\n      <ProviderForm submitCaption={t('Complete')} onSubmit={onSetup} />\n    </div>\n  )\n}\n","import './UpdateProviderModal.scss'\nimport { AuthResponse, AuthSetup } from '../../services/auth/types'\nimport { Provider, ProviderKind } from '../../types/providers/Provider'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { FTPProviderForm } from './FTPProviderForm'\nimport { Modal } from '../Modal'\nimport { ProviderForm } from './ProviderForm'\nimport { buildProviderKindName } from '../../util'\nimport { useTranslation } from 'react-i18next'\n\nenum State {\n  Specific,\n  General,\n}\n\ntype UpdateProviderModalProps = {\n  isActive: boolean\n  provider: Provider\n\n  onClose: () => void\n  onSetupAuth: (config: AuthSetup) => Promise<AuthResponse | undefined>\n  onUpdateProvider: (provider: Provider) => void\n  onRemoveProvider: () => void\n}\n\nexport const UpdateProviderModal = ({\n  isActive,\n  provider,\n  onClose,\n  onSetupAuth,\n  onUpdateProvider,\n  onRemoveProvider,\n}: UpdateProviderModalProps) => {\n  const { t } = useTranslation()\n\n  const initialState = useMemo(\n    () => (provider.kind === ProviderKind.FTP ? State.Specific : State.General),\n    [provider],\n  )\n  const [state, setState] = useState(initialState)\n  const [details, setDetails] = useState<AuthResponse | undefined>()\n\n  const handleClose = useCallback(() => {\n    onClose()\n    setTimeout(() => {\n      setState(initialState)\n      setDetails(undefined)\n    }, 500)\n  }, [initialState, onClose, setDetails, setState])\n\n  const handleDetails = useCallback(\n    async (config: AuthSetup) => {\n      const authResponse = await onSetupAuth(config)\n      setDetails(authResponse)\n      setState(State.General)\n    },\n    [setDetails, setState],\n  )\n\n  const handleUpdate = useCallback(\n    (moviesPath: string | undefined, showsPath: string | undefined) => {\n      const newProvider: Provider =\n        details !== undefined\n          ? { ...details, moviesPath, showsPath }\n          : { ...provider, moviesPath, showsPath }\n      onUpdateProvider(newProvider)\n      handleClose()\n    },\n    [details, handleClose, onUpdateProvider, provider],\n  )\n\n  const handleRemoveProvider = useCallback(() => {\n    if (!window.confirm(t('Are you sure?'))) return\n\n    onRemoveProvider()\n    handleClose()\n  }, [handleClose, onRemoveProvider, t])\n\n  return (\n    <div className=\"UpdateProviderModal\">\n      <Modal isActive={isActive} onClose={handleClose}>\n        <h2>{buildProviderKindName(t, provider.kind)}</h2>\n        <p>{provider.name}</p>\n        {state === State.Specific ? (\n          <>\n            {provider.kind === ProviderKind.FTP ? (\n              <FTPProviderForm\n                submitCaption={t('Continue')}\n                provider={provider}\n                onSubmit={handleDetails}\n              />\n            ) : null}\n          </>\n        ) : state === State.General ? (\n          <ProviderForm\n            submitCaption={t('Update')}\n            provider={provider}\n            onSubmit={handleUpdate}\n          />\n        ) : null}\n        <button className=\"secondary\" onClick={handleRemoveProvider}>\n          {t('Remove')}\n        </button>\n      </Modal>\n    </div>\n  )\n}\n","import React, { useCallback } from 'react'\nimport { LANGUAGES } from '../i18n'\nimport i18next from 'i18next'\nimport { useTranslation } from 'react-i18next'\n\ntype LanguageSelectorProps = {\n  onChange?: (lng: string | undefined) => void\n}\n\nexport const LanguageSelector = ({ onChange }: LanguageSelectorProps) => {\n  const { t } = useTranslation()\n\n  const handleChange = useCallback(\n    (event) => {\n      i18next.changeLanguage(event.target.value)\n      if (onChange) onChange(event.target.value)\n    },\n    [onChange],\n  )\n\n  return (\n    <div className=\"LanguageSelector\">\n      <select defaultValue={i18next.language} onChange={handleChange}>\n        {LANGUAGES.map((language) => (\n          <option value={language} key={language}>\n            {t(language)}\n          </option>\n        ))}\n      </select>\n    </div>\n  )\n}\n","import './Settings.scss'\nimport { AppDispatch, RootState } from '../../store'\nimport React, { useCallback, useState } from 'react'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { buildCommitId, buildProviderIcon } from '../../util'\nimport { fetchAllMetadata, index } from '../../store/thunks'\nimport { removeProvider, updateProvider } from '../../store/auth/actions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AddIcon } from '../../components/icons/Nucleo/AddIcon'\nimport { AddProviderModal } from '../../components/authentication/AddProviderModal'\nimport { AuthSetup } from '../../services/auth/types'\nimport { LanguageSelector } from '../../components/LanguageSelector'\nimport { Provider } from '../../types/providers/Provider'\nimport { ProviderButton } from '../../components/ProviderButton'\nimport { UpdateProviderModal } from '../../components/authentication/UpdateProviderModal'\nimport { VERSION } from '../../constants'\nimport classNames from 'classnames'\nimport { load } from '../../store/ui/thunks'\nimport { providersSelector } from '../../store/auth/selectors'\nimport { setupAuth } from '../../store/auth/thunks'\nimport { useModal } from '../../hooks/modal'\n\nexport const Settings = () => {\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n\n  const providers = useSelector((state: RootState) =>\n    providersSelector(state.auth),\n  )\n\n  const handleSetupAuth = useCallback(\n    (config: AuthSetup) => dispatch(load(setupAuth(config))),\n    [dispatch],\n  )\n\n  const handleUpdateProvider = useCallback(\n    (provider: Provider) => {\n      dispatch(updateProvider(provider))\n      dispatch(load(index([provider])))\n    },\n    [dispatch],\n  )\n\n  const handleIndex = useCallback(\n    () => dispatch(load(index(providers))),\n    [dispatch, providers],\n  )\n\n  const handleFetchMetadataAll = useCallback(\n    () => dispatch(load(fetchAllMetadata())),\n    [dispatch],\n  )\n\n  const handleRemoveProvider = useCallback(\n    (id: string) => () => dispatch(removeProvider(id)),\n    [dispatch],\n  )\n\n  const [\n    showAddProviderModal,\n    handleShowAddProviderModal,\n    handleCloseAddProviderModal,\n  ] = useModal()\n\n  const [showUpdateProviderModals, setShowUpdateProviderModals] = useState<{\n    [index: number]: boolean\n  }>(providers.reduce((acc, _, index) => ({ ...acc, [index]: false }), {}))\n  const handleShowUpdateProviderModal = useCallback(\n    (index: number) => () =>\n      setShowUpdateProviderModals((state) => ({ ...state, [index]: true })),\n    [setShowUpdateProviderModals],\n  )\n  const handleCloseUpdateProviderModal = useCallback(\n    (index: number) => () =>\n      setShowUpdateProviderModals((state) => ({ ...state, [index]: false })),\n    [setShowUpdateProviderModals],\n  )\n\n  return (\n    <div className=\"Settings\">\n      <section className=\"Settings__auth\">\n        <h2>{t('Authentication')}</h2>\n        <p>\n          {t(\n            'Sign into your cloud to add your movies and TV shows to your library.',\n          )}\n        </p>\n        <div className=\"Settings__auth__scroll\">\n          <div className=\"Settings__auth__providers\">\n            {providers.map((provider, index) => (\n              <div className=\"Settings__auth__provider\" key={index}>\n                <ProviderButton\n                  className={classNames('primary', {\n                    warn:\n                      provider.moviesPath === undefined &&\n                      provider.showsPath === undefined,\n                  })}\n                  icon={buildProviderIcon(provider.kind)}\n                  onClick={handleShowUpdateProviderModal(index)}\n                />\n                <UpdateProviderModal\n                  isActive={showUpdateProviderModals[index]}\n                  provider={provider}\n                  onClose={handleCloseUpdateProviderModal(index)}\n                  onSetupAuth={handleSetupAuth}\n                  onUpdateProvider={handleUpdateProvider}\n                  onRemoveProvider={handleRemoveProvider(provider.id)}\n                  key={7}\n                />\n              </div>\n            ))}\n            <div className=\"Settings__auth__provider\" key={providers.length}>\n              <ProviderButton\n                icon={<AddIcon />}\n                onClick={handleShowAddProviderModal}\n                key={5}\n              />\n              <AddProviderModal\n                isActive={showAddProviderModal}\n                onClose={handleCloseAddProviderModal}\n                onSetupAuth={handleSetupAuth}\n                onAddProvider={handleUpdateProvider}\n                key={7}\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"Settings__indexing\">\n        <h2>{t('Indexing')}</h2>\n        <p>\n          {t(\n            'Index to look for new media on your linked services or fetch the latest metadata.',\n          )}\n        </p>\n        <div className=\"Settings__indexing__actions\">\n          <button disabled={providers.length === 0} onClick={handleIndex}>\n            {t('Index')}\n          </button>\n          <button\n            disabled={providers.length === 0}\n            onClick={handleFetchMetadataAll}\n          >\n            {t('Update metadata')}\n          </button>\n        </div>\n      </section>\n\n      <section className=\"Settings__language\">\n        <h2>{t('Language')}</h2>\n        <p>{t('Change the display language.')}</p>\n        <LanguageSelector onChange={handleFetchMetadataAll} />\n      </section>\n\n      <section className=\"Settings__version\">\n        <h2>{t('Version')}</h2>\n        <p>{t('Plaain {{version}}.', { version: VERSION })}</p>\n        <p className=\"small\">\n          <Trans>\n            Plaain is{' '}\n            <a\n              href=\"https://github.com/jonhue/plaain\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              open-source\n            </a>\n            . See the{' '}\n            <a\n              href=\"https://github.com/jonhue/plaain/releases\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              changelog\n            </a>\n            .\n          </Trans>\n        </p>\n        <p className=\"small\">\n          <Trans>\n            You are running commit{' '}\n            <a\n              href={`https://github.com/jonhue/plaain/commit/${process.env.REACT_APP_GIT_SHA}`}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {process.env.REACT_APP_GIT_SHA\n                ? buildCommitId(process.env.REACT_APP_GIT_SHA)\n                : t('Unknown')}\n            </a>\n            .\n          </Trans>\n        </p>\n        <p className=\"small\">\n          <Trans>\n            Note that Plaain may <span className=\"bold\">not</span> be used to\n            stream pirated content or publicly share your private media library.\n            You may only connect to your private cloud storage.\n          </Trans>\n        </p>\n      </section>\n    </div>\n  )\n}\n","import './Show.scss'\nimport { buildBackdropUrl, buildCoverUrl } from '../../util'\nimport { Backdrop } from '../../components/Backdrop'\nimport { Cover } from '../../components/Cover'\nimport { HorizontalSlide } from '../../components/HorizontalSlide'\nimport { NotFound } from '../NotFound'\nimport React from 'react'\nimport { RootState } from '../../store'\nimport { seasonsByShowSelector } from '../../store/seasons/selectors'\nimport { showSelector } from '../../store/shows/selectors'\nimport { sortByNumber } from '../../util'\nimport { useParams } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\nexport const Show = () => {\n  const { t } = useTranslation()\n  const { id } = useParams()\n\n  const show = useSelector((state: RootState) => showSelector(id!)(state.shows))\n\n  const seasons = useSelector(\n    (state: RootState) =>\n      show &&\n      sortByNumber(\n        seasonsByShowSelector(show.id)(state.seasons),\n        (season) => season.number,\n      ),\n  )\n\n  return show !== undefined && seasons !== undefined ? (\n    <div className=\"Show\">\n      <Backdrop url={buildBackdropUrl(show.backdropPath)} />\n      <div className=\"Show__details\">\n        <Cover url={buildCoverUrl(show.posterPath)} alt=\"poster\" />\n        <h1>{show.title}</h1>\n        <div className=\"Show__information\">\n          <p className=\"small\">\n            {new Date(show.firstAirDate).getFullYear()} -{' '}\n            {new Date(show.lastAirDate).getFullYear()}\n          </p>\n        </div>\n        <p className=\"Show__overview\">{show.summary}</p>\n      </div>\n      {seasons.length > 0 && (\n        <div className=\"Show__seasons\">\n          <h2>{t('Seasons')}</h2>\n          <HorizontalSlide items={seasons} id=\"seasons\" />\n        </div>\n      )}\n    </div>\n  ) : (\n    <NotFound />\n  )\n}\n","import './Shows.scss'\nimport { ItemGrid } from '../../components/ItemGrid'\nimport { Navigate } from 'react-router-dom'\nimport React from 'react'\nimport { RootState } from '../../store'\nimport { VerticalSlide } from '../../components/VerticalSlide'\nimport { showsSelector } from '../../store/shows/selectors'\nimport { sortAlphabetically } from '../../util'\nimport { useSelector } from 'react-redux'\n\nexport const Shows = () => {\n  const shows = useSelector((state: RootState) =>\n    sortAlphabetically(showsSelector(state.shows), (show) => show.title),\n  )\n\n  return shows.length > 0 ? (\n    <div className=\"Shows\">\n      <VerticalSlide items={shows} path=\"shows\" id=\"shows\" />\n      <ItemGrid items={shows} />\n    </div>\n  ) : (\n    <Navigate to=\"/app\" />\n  )\n}\n","import './index.scss'\nimport { Route, Routes } from 'react-router-dom'\nimport { Find } from './Find'\nimport { Home } from './Home'\nimport { Movie } from './Movie'\nimport { Movies } from './Movies'\nimport { Nav } from '../../components/Nav'\nimport { NotFound } from '../NotFound'\nimport { Person } from './Person'\nimport React from 'react'\nimport { RootState } from '../../store'\nimport { Season } from './Season'\nimport { Settings } from './Settings'\nimport { Show } from './Show'\nimport { Shows } from './Shows'\nimport { useSelector } from 'react-redux'\n\nconst App = () => {\n  const { moviesCount, showsCount } = useSelector((state: RootState) => ({\n    moviesCount: Object.keys(state.movies).length,\n    showsCount: Object.keys(state.shows).length,\n  }))\n\n  return (\n    <div className=\"App\">\n      <Routes>\n        <Route path={'/'} element={<Home />} />\n        <Route path={'movies/:id'} element={<Movie />} />\n        <Route path={'movies'} element={<Movies />} />\n        <Route path={'shows/:id'} element={<Show />} />\n        <Route path={'shows'} element={<Shows />} />\n        <Route path={'seasons/:id'} element={<Season />} />\n        <Route path={'people/:id'} element={<Person />} />\n        <Route path={'settings'} element={<Settings />} />\n        <Route path={'find'} element={<Find />} />\n        <Route path=\"*\" element={<NotFound />} />\n      </Routes>\n\n      <Nav\n        moviesDisabled={moviesCount === 0}\n        showsDisabled={showsCount === 0}\n      />\n    </div>\n  )\n}\n\nexport default App\n"],"sourceRoot":""}