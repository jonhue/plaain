{"version":3,"file":"static/js/main.b1aae913.js","mappings":"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","sources":["components/Backdrop.tsx","components/icons/Icon.tsx","constants.ts","errors/APIError.ts","errors/AuthenticationFailure.ts","errors/CannotFindFileError.ts","errors/ProviderAlreadyExists.ts","hooks/auth.ts","../node_modules/i18next-http-backend/esm/utils.js","../node_modules/i18next-http-backend/esm/request.js","../node_modules/i18next-http-backend/esm/index.js","../node_modules/i18next-browser-languagedetector/dist/esm/i18nextBrowserLanguageDetector.js","i18n.ts","services/databases/util.ts","services/databases/TMDb/util.ts","store/auth/actions.ts","store/auth/selectors.ts","../node_modules/@azure/msal-browser/src/operatingcontext/BaseOperatingContext.ts","../node_modules/@azure/msal-browser/src/operatingcontext/TeamsAppOperatingContext.ts","../node_modules/@azure/msal-browser/src/operatingcontext/StandardOperatingContext.ts","../node_modules/@azure/msal-browser/src/controllers/ControllerFactory.ts","../node_modules/@azure/msal-browser/src/app/PublicClientApplication.ts","services/auth/util.ts","services/auth/OneDrive.ts","services/auth/FTP.ts","store/auth/thunks.ts","store/auth/types.ts","store/episodes/types.ts","store/movies/types.ts","store/people/types.ts","store/seasons/types.ts","store/shows/types.ts","store/ui/actions.ts","store/ui/thunks.ts","errors/index.ts","store/ui/types.ts","types/Notification.ts","types/files/Video.ts","types/items/Item.ts","types/items/Person.ts","types/providers/Provider.ts","components/icons/Nucleo/FTPIcon.tsx","components/icons/Nucleo/OneDriveIcon.tsx","util.tsx","components/icons/SoundWaveIcon.tsx","views/Loading.tsx","views/NotFound.tsx","../node_modules/@remix-run/router/history.ts","../node_modules/@remix-run/router/utils.ts","../node_modules/@remix-run/router/router.ts","../node_modules/classnames/index.js","../node_modules/hoist-non-react-statics/dist/hoist-non-react-statics.cjs.js","../node_modules/react-device-detect/dist/lib.js","../node_modules/react-dom/cjs/react-dom.production.min.js","../node_modules/react-dom/client.js","../node_modules/react-dom/index.js","../node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-is/index.js","../node_modules/react-redux/es/utils/batch.js","../node_modules/react-redux/es/components/Context.js","../node_modules/react-redux/es/hooks/useReduxContext.js","../node_modules/react-redux/es/utils/useSyncExternalStore.js","../node_modules/react-redux/es/hooks/useSelector.js","../node_modules/react-redux/es/utils/Subscription.js","../node_modules/react-redux/es/utils/useIsomorphicLayoutEffect.js","../node_modules/react-redux/es/components/Provider.js","../node_modules/react-redux/es/hooks/useStore.js","../node_modules/react-redux/es/hooks/useDispatch.js","../node_modules/react-redux/es/index.js","../node_modules/react-redux/es/components/connect.js","../node_modules/react-redux/node_modules/react-is/cjs/react-is.production.min.js","../node_modules/react-redux/node_modules/react-is/index.js","../node_modules/react-router-dom/dom.ts","../node_modules/react-router-dom/index.tsx","../node_modules/react-router/lib/context.ts","../node_modules/react-router/lib/hooks.tsx","../node_modules/react-router/lib/components.tsx","../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../node_modules/redux-persist/lib/storage/createWebStorage.js","../node_modules/redux-persist/lib/storage/getStorage.js","../node_modules/redux-persist/lib/storage/index.js","../node_modules/scheduler/cjs/scheduler.production.min.js","../node_modules/scheduler/index.js","../node_modules/ua-parser-js/dist/ua-parser.min.js","../node_modules/use-async-effect/index.js","../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim.production.min.js","../node_modules/use-sync-external-store/cjs/use-sync-external-store-shim/with-selector.production.min.js","../node_modules/use-sync-external-store/shim/index.js","../node_modules/use-sync-external-store/shim/with-selector.js","../node_modules/void-elements/index.js","../node_modules/@babel/runtime/helpers/classCallCheck.js","../node_modules/@babel/runtime/helpers/createClass.js","../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/toPrimitive.js","../node_modules/@babel/runtime/helpers/toPropertyKey.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/regenerator/index.js","../node_modules/iso-639-1/src/data.js","../node_modules/iso-639-1/src/index.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../node_modules/@azure/msal-common/src/network/INetworkModule.ts","../node_modules/@azure/msal-common/src/telemetry/performance/StubPerformanceClient.ts","../node_modules/@azure/msal-browser/src/navigation/NavigationClient.ts","../node_modules/@azure/msal-browser/src/network/FetchClient.ts","../node_modules/@azure/msal-browser/src/config/Configuration.ts","../node_modules/@azure/msal-common/src/error/JoseHeaderError.ts","../node_modules/@azure/msal-common/src/crypto/JoseHeader.ts","../node_modules/@azure/msal-browser/src/encode/Base64Encode.ts","../node_modules/@azure/msal-browser/src/utils/BrowserStringUtils.ts","../node_modules/@azure/msal-browser/src/crypto/BrowserCrypto.ts","../node_modules/@azure/msal-browser/src/cache/DatabaseStorage.ts","../node_modules/@azure/msal-browser/src/cache/MemoryStorage.ts","../node_modules/@azure/msal-browser/src/cache/AsyncMemoryStorage.ts","../node_modules/@azure/msal-browser/src/cache/CryptoKeyStore.ts","../node_modules/@azure/msal-browser/src/crypto/CryptoOps.ts","../node_modules/@azure/msal-common/src/utils/FunctionWrappers.ts","../node_modules/@azure/msal-common/src/url/UrlString.ts","../node_modules/@azure/msal-common/src/cache/entities/CredentialEntity.ts","../node_modules/@azure/msal-common/src/cache/entities/IdTokenEntity.ts","../node_modules/@azure/msal-common/src/utils/TimeUtils.ts","../node_modules/@azure/msal-common/src/cache/entities/AccessTokenEntity.ts","../node_modules/@azure/msal-common/src/cache/entities/RefreshTokenEntity.ts","../node_modules/@azure/msal-common/src/cache/entities/AppMetadataEntity.ts","../node_modules/@azure/msal-common/src/cache/entities/ServerTelemetryEntity.ts","../node_modules/@azure/msal-common/src/cache/entities/AuthorityMetadataEntity.ts","../node_modules/@azure/msal-common/src/cache/entities/ThrottlingEntity.ts","../node_modules/@azure/msal-common/src/utils/ProtocolUtils.ts","../node_modules/@azure/msal-common/src/account/CcsCredential.ts","../node_modules/@azure/msal-common/src/cache/entities/CacheRecord.ts","../node_modules/@azure/msal-browser/src/error/BrowserConfigurationAuthError.ts","../node_modules/@azure/msal-browser/src/cache/BrowserStorage.ts","../node_modules/@azure/msal-browser/src/utils/BrowserProtocolUtils.ts","../node_modules/@azure/msal-browser/src/cache/BrowserCacheManager.ts","../node_modules/@azure/msal-browser/src/utils/BrowserUtils.ts","../node_modules/@azure/msal-browser/src/event/EventType.ts","../node_modules/@azure/msal-browser/src/event/EventHandler.ts","../node_modules/@azure/msal-common/src/network/ThrottlingUtils.ts","../node_modules/@azure/msal-common/src/network/NetworkManager.ts","../node_modules/@azure/msal-common/src/request/RequestValidator.ts","../node_modules/@azure/msal-common/src/request/RequestParameterBuilder.ts","../node_modules/@azure/msal-common/src/client/BaseClient.ts","../node_modules/@azure/msal-common/src/crypto/PopTokenGenerator.ts","../node_modules/@azure/msal-common/src/cache/persistence/TokenCacheContext.ts","../node_modules/@azure/msal-common/src/response/ResponseHandler.ts","../node_modules/@azure/msal-common/src/client/AuthorizationCodeClient.ts","../node_modules/@azure/msal-common/src/authority/OpenIdConfigResponse.ts","../node_modules/@azure/msal-common/src/authority/AuthorityMetadata.ts","../node_modules/@azure/msal-common/src/authority/CloudInstanceDiscoveryResponse.ts","../node_modules/@azure/msal-common/src/authority/CloudInstanceDiscoveryErrorResponse.ts","../node_modules/@azure/msal-common/src/authority/RegionDiscovery.ts","../node_modules/@azure/msal-common/src/authority/Authority.ts","../node_modules/@azure/msal-common/src/authority/AuthorityFactory.ts","../node_modules/@azure/msal-common/src/telemetry/server/ServerTelemetryManager.ts","../node_modules/@azure/msal-browser/src/interaction_client/BaseInteractionClient.ts","../node_modules/@azure/msal-browser/src/interaction_client/StandardInteractionClient.ts","../node_modules/@azure/msal-browser/src/error/NativeAuthError.ts","../node_modules/@azure/msal-browser/src/broker/nativeBroker/NativeStatusCodes.ts","../node_modules/@azure/msal-common/src/client/RefreshTokenClient.ts","../node_modules/@azure/msal-common/src/client/SilentFlowClient.ts","../node_modules/@azure/msal-browser/src/interaction_client/SilentCacheClient.ts","../node_modules/@azure/msal-browser/src/interaction_client/NativeInteractionClient.ts","../node_modules/@azure/msal-browser/src/broker/nativeBroker/NativeMessageHandler.ts","../node_modules/@azure/msal-browser/src/interaction_handler/InteractionHandler.ts","../node_modules/@azure/msal-browser/src/interaction_client/PopupClient.ts","../node_modules/@azure/msal-browser/src/interaction_handler/RedirectHandler.ts","../node_modules/@azure/msal-browser/src/interaction_client/RedirectClient.ts","../node_modules/@azure/msal-browser/src/interaction_handler/SilentHandler.ts","../node_modules/@azure/msal-browser/src/interaction_client/SilentIframeClient.ts","../node_modules/@azure/msal-browser/src/interaction_client/SilentRefreshClient.ts","../node_modules/@azure/msal-browser/src/cache/TokenCache.ts","../node_modules/@azure/msal-browser/src/interaction_client/SilentAuthCodeClient.ts","../node_modules/@azure/msal-browser/src/controllers/StandardController.ts","../node_modules/@azure/msal-browser/src/error/BrowserAuthError.ts","../node_modules/@azure/msal-browser/src/error/BrowserAuthErrorCodes.ts","../node_modules/@azure/msal-browser/src/packageMetadata.ts","../node_modules/@azure/msal-browser/src/utils/BrowserConstants.ts","../node_modules/@azure/msal-common/src/account/AuthToken.ts","../node_modules/@azure/msal-common/src/account/ClientInfo.ts","../node_modules/@azure/msal-common/src/authority/AuthorityOptions.ts","../node_modules/@azure/msal-common/src/authority/AuthorityType.ts","../node_modules/@azure/msal-common/src/authority/ProtocolMode.ts","../node_modules/@azure/msal-common/src/cache/CacheManager.ts","../node_modules/@azure/msal-common/src/cache/entities/AccountEntity.ts","../node_modules/@azure/msal-common/src/config/ClientConfiguration.ts","../node_modules/@azure/msal-common/src/crypto/ICrypto.ts","../node_modules/@azure/msal-common/src/error/AuthError.ts","../node_modules/@azure/msal-common/src/error/ClientAuthError.ts","../node_modules/@azure/msal-common/src/error/ClientAuthErrorCodes.ts","../node_modules/@azure/msal-common/src/error/ClientConfigurationError.ts","../node_modules/@azure/msal-common/src/error/ClientConfigurationErrorCodes.ts","../node_modules/@azure/msal-common/src/error/InteractionRequiredAuthError.ts","../node_modules/@azure/msal-common/src/logger/Logger.ts","../node_modules/@azure/msal-common/src/packageMetadata.ts","../node_modules/@azure/msal-common/src/request/ScopeSet.ts","../node_modules/@azure/msal-common/src/telemetry/performance/PerformanceEvent.ts","../node_modules/@azure/msal-common/src/utils/Constants.ts","../node_modules/@azure/msal-common/src/utils/StringUtils.ts","../node_modules/i18next/dist/esm/i18next.js","../node_modules/@babel/runtime/helpers/esm/extends.js","../node_modules/html-parse-stringify/src/parse-tag.js","../node_modules/html-parse-stringify/src/parse.js","../node_modules/html-parse-stringify/src/stringify.js","../node_modules/html-parse-stringify/src/index.js","../node_modules/react-i18next/dist/es/utils.js","../node_modules/react-i18next/dist/es/unescape.js","../node_modules/react-i18next/dist/es/i18nInstance.js","../node_modules/react-i18next/dist/es/defaults.js","../node_modules/react-i18next/dist/es/TransWithoutContext.js","../node_modules/react-i18next/dist/es/initReactI18next.js","../node_modules/react-i18next/dist/es/context.js","../node_modules/react-i18next/dist/es/Trans.js","../node_modules/react-i18next/dist/es/useTranslation.js","../webpack/bootstrap","../webpack/runtime/amd options","../webpack/runtime/compat get default export","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/ensure chunk","../webpack/runtime/get javascript chunk filename","../webpack/runtime/get mini-css chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/load script","../webpack/runtime/make namespace object","../webpack/runtime/node module decorator","../webpack/runtime/publicPath","../webpack/runtime/css loading","../webpack/runtime/jsonp chunk loading","../node_modules/whatwg-fetch/fetch.js","serviceWorkerRegistration.ts","components/icons/Nucleo/CloseIcon.tsx","components/Toast.tsx","components/notifications/APIErrorToast.tsx","components/notifications/AuthenticationFailureToast.tsx","components/notifications/CannotFindFileToast.tsx","components/notifications/GenericErrorToast.tsx","components/notifications/ProviderAlreadyExistsToast.tsx","components/notifications/NotificationsViewer.tsx","components/ScrollToTop.tsx","views/Welcome.tsx","views/index.tsx","../node_modules/redux-persist/es/integration/react.js","../node_modules/redux-persist/es/constants.js","../node_modules/redux-persist/es/stateReconciler/autoMergeLevel1.js","../node_modules/redux-persist/es/createPersistoid.js","../node_modules/redux-persist/es/getStoredState.js","../node_modules/redux-persist/es/purgeStoredState.js","../node_modules/redux-persist/es/persistReducer.js","../node_modules/redux/es/redux.js","../node_modules/redux-persist/es/persistStore.js","reportWebVitals.ts","store/auth/reducers.ts","store/episodes/reducers.ts","store/movies/reducers.ts","store/people/reducers.ts","store/seasons/reducers.ts","store/shows/reducers.ts","../node_modules/redux-thunk/es/index.js","store/ui/reducers.ts","store/index.ts","index.tsx"],"sourcesContent":["import './Backdrop.scss'\nimport React from 'react'\n\ntype BackdropProps = {\n  url: string\n}\n\nexport const Backdrop = ({ url }: BackdropProps) => (\n  <picture className=\"Backdrop\">\n    <img src={url} alt=\"backdrop\" />\n  </picture>\n)\n","import './Icon.scss'\nimport React, { FunctionComponent } from 'react'\nimport classNames from 'classnames'\n\ntype IconProps = {\n  className: string\n  height: number\n  width: number\n  x?: number\n  y?: number\n  children?: React.ReactNode\n}\n\nexport const Icon: FunctionComponent<IconProps> = ({\n  children,\n  className,\n  height,\n  width,\n  x,\n  y,\n}) => (\n  <svg\n    className={classNames('Icon', className)}\n    viewBox={`${x || 0} ${y || 0} ${width} ${height}`}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    {children}\n  </svg>\n)\n","export const VERSION = '0.1.0'\n\nexport const RECENTLY_WATCHED_THRESHOLD = new Date()\nRECENTLY_WATCHED_THRESHOLD.setMonth(RECENTLY_WATCHED_THRESHOLD.getMonth() - 3)\n\nexport const FALLBACK_BACKDROP_URL = '/fallback_backdrop.png'\nexport const FALLBACK_COVER_URL = '/fallback_cover.png'\n","export class APIError extends Error {\n  status: number\n\n  constructor(status: number, message: string) {\n    super(message)\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, APIError)\n    }\n\n    this.name = 'APIError'\n    this.status = status\n  }\n}\n","import { ProviderKind } from '../types/providers/Provider'\n\nexport class AuthenticationFailure extends Error {\n  provider: ProviderKind\n\n  constructor(provider: ProviderKind) {\n    super()\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, AuthenticationFailure)\n    }\n\n    this.name = 'AuthenticationFailure'\n    this.provider = provider\n  }\n}\n","import { File } from '../types/files/File'\n\nexport class CannotFindFileError extends Error {\n  file: File\n\n  constructor(file: File) {\n    super()\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CannotFindFileError)\n    }\n\n    this.name = 'CannotFindFileError'\n    this.file = file\n  }\n}\n","import { Provider } from '../types/providers/Provider'\n\nexport class ProviderAlreadyExists extends Error {\n  provider: Provider\n\n  constructor(provider: Provider) {\n    super()\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, ProviderAlreadyExists)\n    }\n\n    this.name = 'ProviderAlreadyExists'\n    this.provider = provider\n  }\n}\n","import { AppDispatch, RootState } from '../store'\nimport {\n  authHandleRedirect,\n  setupAuthHandleRedirect,\n} from '../store/auth/thunks'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AuthResponse } from '../services/auth/types'\nimport { RedirectCacheOrigin } from '../store/auth/types'\nimport { handledRedirect } from '../store/auth/actions'\nimport { load } from '../store/ui/thunks'\nimport useAsyncEffect from 'use-async-effect'\nimport { useEffect } from 'react'\n\nexport const useAuthRedirect = () => {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const redirectCache = useSelector(\n    (state: RootState) => state.auth.redirectCache,\n  )\n\n  useEffect(() => {\n    if (\n      redirectCache === undefined ||\n      redirectCache.origin !== RedirectCacheOrigin.Login\n    )\n      return\n    dispatch(load(authHandleRedirect(redirectCache)))\n    dispatch(handledRedirect())\n  }, [])\n}\n\nexport const useSetupAuthRedirect = (\n  callback: (response: AuthResponse | undefined) => void,\n) => {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const redirectCache = useSelector(\n    (state: RootState) => state.auth.redirectCache,\n  )\n\n  useAsyncEffect(async () => {\n    if (\n      redirectCache === undefined ||\n      redirectCache.origin !== RedirectCacheOrigin.Setup\n    )\n      return\n    const response = await dispatch(\n      load(setupAuthHandleRedirect(redirectCache)),\n    )\n    dispatch(handledRedirect())\n    callback(response)\n  }, [])\n}\n","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nvar arr = [];\nvar each = arr.forEach;\nvar slice = arr.slice;\nexport function defaults(obj) {\n  each.call(slice.call(arguments, 1), function (source) {\n    if (source) {\n      for (var prop in source) {\n        if (obj[prop] === undefined) obj[prop] = source[prop];\n      }\n    }\n  });\n  return obj;\n}\nexport function hasXMLHttpRequest() {\n  return typeof XMLHttpRequest === 'function' || (typeof XMLHttpRequest === \"undefined\" ? \"undefined\" : _typeof(XMLHttpRequest)) === 'object';\n}\nfunction isPromise(maybePromise) {\n  return !!maybePromise && typeof maybePromise.then === 'function';\n}\nexport function makePromise(maybePromise) {\n  if (isPromise(maybePromise)) {\n    return maybePromise;\n  }\n  return Promise.resolve(maybePromise);\n}","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nimport { defaults, hasXMLHttpRequest } from './utils.js';\nimport * as fetchNode from './getFetch.cjs';\nvar fetchApi;\nif (typeof fetch === 'function') {\n  if (typeof global !== 'undefined' && global.fetch) {\n    fetchApi = global.fetch;\n  } else if (typeof window !== 'undefined' && window.fetch) {\n    fetchApi = window.fetch;\n  } else {\n    fetchApi = fetch;\n  }\n}\nvar XmlHttpRequestApi;\nif (hasXMLHttpRequest()) {\n  if (typeof global !== 'undefined' && global.XMLHttpRequest) {\n    XmlHttpRequestApi = global.XMLHttpRequest;\n  } else if (typeof window !== 'undefined' && window.XMLHttpRequest) {\n    XmlHttpRequestApi = window.XMLHttpRequest;\n  }\n}\nvar ActiveXObjectApi;\nif (typeof ActiveXObject === 'function') {\n  if (typeof global !== 'undefined' && global.ActiveXObject) {\n    ActiveXObjectApi = global.ActiveXObject;\n  } else if (typeof window !== 'undefined' && window.ActiveXObject) {\n    ActiveXObjectApi = window.ActiveXObject;\n  }\n}\nif (!fetchApi && fetchNode && !XmlHttpRequestApi && !ActiveXObjectApi) fetchApi = fetchNode.default || fetchNode;\nif (typeof fetchApi !== 'function') fetchApi = undefined;\nvar addQueryString = function addQueryString(url, params) {\n  if (params && _typeof(params) === 'object') {\n    var queryString = '';\n    for (var paramName in params) {\n      queryString += '&' + encodeURIComponent(paramName) + '=' + encodeURIComponent(params[paramName]);\n    }\n    if (!queryString) return url;\n    url = url + (url.indexOf('?') !== -1 ? '&' : '?') + queryString.slice(1);\n  }\n  return url;\n};\nvar fetchIt = function fetchIt(url, fetchOptions, callback) {\n  var resolver = function resolver(response) {\n    if (!response.ok) return callback(response.statusText || 'Error', {\n      status: response.status\n    });\n    response.text().then(function (data) {\n      callback(null, {\n        status: response.status,\n        data: data\n      });\n    }).catch(callback);\n  };\n  if (typeof fetch === 'function') {\n    fetch(url, fetchOptions).then(resolver).catch(callback);\n  } else {\n    fetchApi(url, fetchOptions).then(resolver).catch(callback);\n  }\n};\nvar omitFetchOptions = false;\nvar requestWithFetch = function requestWithFetch(options, url, payload, callback) {\n  if (options.queryStringParams) {\n    url = addQueryString(url, options.queryStringParams);\n  }\n  var headers = defaults({}, typeof options.customHeaders === 'function' ? options.customHeaders() : options.customHeaders);\n  if (payload) headers['Content-Type'] = 'application/json';\n  var reqOptions = typeof options.requestOptions === 'function' ? options.requestOptions(payload) : options.requestOptions;\n  var fetchOptions = defaults({\n    method: payload ? 'POST' : 'GET',\n    body: payload ? options.stringify(payload) : undefined,\n    headers: headers\n  }, omitFetchOptions ? {} : reqOptions);\n  try {\n    fetchIt(url, fetchOptions, callback);\n  } catch (e) {\n    if (!reqOptions || Object.keys(reqOptions).length === 0 || !e.message || e.message.indexOf('not implemented') < 0) {\n      return callback(e);\n    }\n    try {\n      Object.keys(reqOptions).forEach(function (opt) {\n        delete fetchOptions[opt];\n      });\n      fetchIt(url, fetchOptions, callback);\n      omitFetchOptions = true;\n    } catch (err) {\n      callback(err);\n    }\n  }\n};\nvar requestWithXmlHttpRequest = function requestWithXmlHttpRequest(options, url, payload, callback) {\n  if (payload && _typeof(payload) === 'object') {\n    payload = addQueryString('', payload).slice(1);\n  }\n  if (options.queryStringParams) {\n    url = addQueryString(url, options.queryStringParams);\n  }\n  try {\n    var x;\n    if (XmlHttpRequestApi) {\n      x = new XmlHttpRequestApi();\n    } else {\n      x = new ActiveXObjectApi('MSXML2.XMLHTTP.3.0');\n    }\n    x.open(payload ? 'POST' : 'GET', url, 1);\n    if (!options.crossDomain) {\n      x.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n    }\n    x.withCredentials = !!options.withCredentials;\n    if (payload) {\n      x.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n    if (x.overrideMimeType) {\n      x.overrideMimeType('application/json');\n    }\n    var h = options.customHeaders;\n    h = typeof h === 'function' ? h() : h;\n    if (h) {\n      for (var i in h) {\n        x.setRequestHeader(i, h[i]);\n      }\n    }\n    x.onreadystatechange = function () {\n      x.readyState > 3 && callback(x.status >= 400 ? x.statusText : null, {\n        status: x.status,\n        data: x.responseText\n      });\n    };\n    x.send(payload);\n  } catch (e) {\n    console && console.log(e);\n  }\n};\nvar request = function request(options, url, payload, callback) {\n  if (typeof payload === 'function') {\n    callback = payload;\n    payload = undefined;\n  }\n  callback = callback || function () {};\n  if (fetchApi && url.indexOf('file:') !== 0) {\n    return requestWithFetch(options, url, payload, callback);\n  }\n  if (hasXMLHttpRequest() || typeof ActiveXObject === 'function') {\n    return requestWithXmlHttpRequest(options, url, payload, callback);\n  }\n  callback(new Error('No fetch and no xhr implementation found!'));\n};\nexport default request;","function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nimport { defaults, makePromise } from './utils.js';\nimport request from './request.js';\nvar getDefaults = function getDefaults() {\n  return {\n    loadPath: '/locales/{{lng}}/{{ns}}.json',\n    addPath: '/locales/add/{{lng}}/{{ns}}',\n    parse: function parse(data) {\n      return JSON.parse(data);\n    },\n    stringify: JSON.stringify,\n    parsePayload: function parsePayload(namespace, key, fallbackValue) {\n      return _defineProperty({}, key, fallbackValue || '');\n    },\n    parseLoadPayload: function parseLoadPayload(languages, namespaces) {\n      return undefined;\n    },\n    request: request,\n    reloadInterval: typeof window !== 'undefined' ? false : 60 * 60 * 1000,\n    customHeaders: {},\n    queryStringParams: {},\n    crossDomain: false,\n    withCredentials: false,\n    overrideMimeType: false,\n    requestOptions: {\n      mode: 'cors',\n      credentials: 'same-origin',\n      cache: 'default'\n    }\n  };\n};\nvar Backend = function () {\n  function Backend(services) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var allOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    _classCallCheck(this, Backend);\n    this.services = services;\n    this.options = options;\n    this.allOptions = allOptions;\n    this.type = 'backend';\n    this.init(services, options, allOptions);\n  }\n  _createClass(Backend, [{\n    key: \"init\",\n    value: function init(services) {\n      var _this = this;\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var allOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      this.services = services;\n      this.options = defaults(options, this.options || {}, getDefaults());\n      this.allOptions = allOptions;\n      if (this.services && this.options.reloadInterval) {\n        setInterval(function () {\n          return _this.reload();\n        }, this.options.reloadInterval);\n      }\n    }\n  }, {\n    key: \"readMulti\",\n    value: function readMulti(languages, namespaces, callback) {\n      this._readAny(languages, languages, namespaces, namespaces, callback);\n    }\n  }, {\n    key: \"read\",\n    value: function read(language, namespace, callback) {\n      this._readAny([language], language, [namespace], namespace, callback);\n    }\n  }, {\n    key: \"_readAny\",\n    value: function _readAny(languages, loadUrlLanguages, namespaces, loadUrlNamespaces, callback) {\n      var _this2 = this;\n      var loadPath = this.options.loadPath;\n      if (typeof this.options.loadPath === 'function') {\n        loadPath = this.options.loadPath(languages, namespaces);\n      }\n      loadPath = makePromise(loadPath);\n      loadPath.then(function (resolvedLoadPath) {\n        if (!resolvedLoadPath) return callback(null, {});\n        var url = _this2.services.interpolator.interpolate(resolvedLoadPath, {\n          lng: languages.join('+'),\n          ns: namespaces.join('+')\n        });\n        _this2.loadUrl(url, callback, loadUrlLanguages, loadUrlNamespaces);\n      });\n    }\n  }, {\n    key: \"loadUrl\",\n    value: function loadUrl(url, callback, languages, namespaces) {\n      var _this3 = this;\n      var lng = typeof languages === 'string' ? [languages] : languages;\n      var ns = typeof namespaces === 'string' ? [namespaces] : namespaces;\n      var payload = this.options.parseLoadPayload(lng, ns);\n      this.options.request(this.options, url, payload, function (err, res) {\n        if (res && (res.status >= 500 && res.status < 600 || !res.status)) return callback('failed loading ' + url + '; status code: ' + res.status, true);\n        if (res && res.status >= 400 && res.status < 500) return callback('failed loading ' + url + '; status code: ' + res.status, false);\n        if (!res && err && err.message && err.message.indexOf('Failed to fetch') > -1) return callback('failed loading ' + url + ': ' + err.message, true);\n        if (err) return callback(err, false);\n        var ret, parseErr;\n        try {\n          if (typeof res.data === 'string') {\n            ret = _this3.options.parse(res.data, languages, namespaces);\n          } else {\n            ret = res.data;\n          }\n        } catch (e) {\n          parseErr = 'failed parsing ' + url + ' to json';\n        }\n        if (parseErr) return callback(parseErr, false);\n        callback(null, ret);\n      });\n    }\n  }, {\n    key: \"create\",\n    value: function create(languages, namespace, key, fallbackValue, callback) {\n      var _this4 = this;\n      if (!this.options.addPath) return;\n      if (typeof languages === 'string') languages = [languages];\n      var payload = this.options.parsePayload(namespace, key, fallbackValue);\n      var finished = 0;\n      var dataArray = [];\n      var resArray = [];\n      languages.forEach(function (lng) {\n        var addPath = _this4.options.addPath;\n        if (typeof _this4.options.addPath === 'function') {\n          addPath = _this4.options.addPath(lng, namespace);\n        }\n        var url = _this4.services.interpolator.interpolate(addPath, {\n          lng: lng,\n          ns: namespace\n        });\n        _this4.options.request(_this4.options, url, payload, function (data, res) {\n          finished += 1;\n          dataArray.push(data);\n          resArray.push(res);\n          if (finished === languages.length) {\n            if (typeof callback === 'function') callback(dataArray, resArray);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"reload\",\n    value: function reload() {\n      var _this5 = this;\n      var _this$services = this.services,\n        backendConnector = _this$services.backendConnector,\n        languageUtils = _this$services.languageUtils,\n        logger = _this$services.logger;\n      var currentLanguage = backendConnector.language;\n      if (currentLanguage && currentLanguage.toLowerCase() === 'cimode') return;\n      var toLoad = [];\n      var append = function append(lng) {\n        var lngs = languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(function (l) {\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n      append(currentLanguage);\n      if (this.allOptions.preload) this.allOptions.preload.forEach(function (l) {\n        return append(l);\n      });\n      toLoad.forEach(function (lng) {\n        _this5.allOptions.ns.forEach(function (ns) {\n          backendConnector.read(lng, ns, 'read', null, null, function (err, data) {\n            if (err) logger.warn(\"loading namespace \".concat(ns, \" for language \").concat(lng, \" failed\"), err);\n            if (!err && data) logger.log(\"loaded namespace \".concat(ns, \" for language \").concat(lng), data);\n            backendConnector.loaded(\"\".concat(lng, \"|\").concat(ns), err, data);\n          });\n        });\n      });\n    }\n  }]);\n  return Backend;\n}();\nBackend.type = 'backend';\nexport default Backend;","import _classCallCheck from '@babel/runtime/helpers/esm/classCallCheck';\nimport _createClass from '@babel/runtime/helpers/esm/createClass';\n\nvar arr = [];\nvar each = arr.forEach;\nvar slice = arr.slice;\nfunction defaults(obj) {\n  each.call(slice.call(arguments, 1), function (source) {\n    if (source) {\n      for (var prop in source) {\n        if (obj[prop] === undefined) obj[prop] = source[prop];\n      }\n    }\n  });\n  return obj;\n}\n\n// eslint-disable-next-line no-control-regex\nvar fieldContentRegExp = /^[\\u0009\\u0020-\\u007e\\u0080-\\u00ff]+$/;\nvar serializeCookie = function serializeCookie(name, val, options) {\n  var opt = options || {};\n  opt.path = opt.path || '/';\n  var value = encodeURIComponent(val);\n  var str = \"\".concat(name, \"=\").concat(value);\n  if (opt.maxAge > 0) {\n    var maxAge = opt.maxAge - 0;\n    if (Number.isNaN(maxAge)) throw new Error('maxAge should be a Number');\n    str += \"; Max-Age=\".concat(Math.floor(maxAge));\n  }\n  if (opt.domain) {\n    if (!fieldContentRegExp.test(opt.domain)) {\n      throw new TypeError('option domain is invalid');\n    }\n    str += \"; Domain=\".concat(opt.domain);\n  }\n  if (opt.path) {\n    if (!fieldContentRegExp.test(opt.path)) {\n      throw new TypeError('option path is invalid');\n    }\n    str += \"; Path=\".concat(opt.path);\n  }\n  if (opt.expires) {\n    if (typeof opt.expires.toUTCString !== 'function') {\n      throw new TypeError('option expires is invalid');\n    }\n    str += \"; Expires=\".concat(opt.expires.toUTCString());\n  }\n  if (opt.httpOnly) str += '; HttpOnly';\n  if (opt.secure) str += '; Secure';\n  if (opt.sameSite) {\n    var sameSite = typeof opt.sameSite === 'string' ? opt.sameSite.toLowerCase() : opt.sameSite;\n    switch (sameSite) {\n      case true:\n        str += '; SameSite=Strict';\n        break;\n      case 'lax':\n        str += '; SameSite=Lax';\n        break;\n      case 'strict':\n        str += '; SameSite=Strict';\n        break;\n      case 'none':\n        str += '; SameSite=None';\n        break;\n      default:\n        throw new TypeError('option sameSite is invalid');\n    }\n  }\n  return str;\n};\nvar cookie = {\n  create: function create(name, value, minutes, domain) {\n    var cookieOptions = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n      path: '/',\n      sameSite: 'strict'\n    };\n    if (minutes) {\n      cookieOptions.expires = new Date();\n      cookieOptions.expires.setTime(cookieOptions.expires.getTime() + minutes * 60 * 1000);\n    }\n    if (domain) cookieOptions.domain = domain;\n    document.cookie = serializeCookie(name, encodeURIComponent(value), cookieOptions);\n  },\n  read: function read(name) {\n    var nameEQ = \"\".concat(name, \"=\");\n    var ca = document.cookie.split(';');\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n      while (c.charAt(0) === ' ') {\n        c = c.substring(1, c.length);\n      }\n      if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length, c.length);\n    }\n    return null;\n  },\n  remove: function remove(name) {\n    this.create(name, '', -1);\n  }\n};\nvar cookie$1 = {\n  name: 'cookie',\n  lookup: function lookup(options) {\n    var found;\n    if (options.lookupCookie && typeof document !== 'undefined') {\n      var c = cookie.read(options.lookupCookie);\n      if (c) found = c;\n    }\n    return found;\n  },\n  cacheUserLanguage: function cacheUserLanguage(lng, options) {\n    if (options.lookupCookie && typeof document !== 'undefined') {\n      cookie.create(options.lookupCookie, lng, options.cookieMinutes, options.cookieDomain, options.cookieOptions);\n    }\n  }\n};\n\nvar querystring = {\n  name: 'querystring',\n  lookup: function lookup(options) {\n    var found;\n    if (typeof window !== 'undefined') {\n      var search = window.location.search;\n      if (!window.location.search && window.location.hash && window.location.hash.indexOf('?') > -1) {\n        search = window.location.hash.substring(window.location.hash.indexOf('?'));\n      }\n      var query = search.substring(1);\n      var params = query.split('&');\n      for (var i = 0; i < params.length; i++) {\n        var pos = params[i].indexOf('=');\n        if (pos > 0) {\n          var key = params[i].substring(0, pos);\n          if (key === options.lookupQuerystring) {\n            found = params[i].substring(pos + 1);\n          }\n        }\n      }\n    }\n    return found;\n  }\n};\n\nvar hasLocalStorageSupport = null;\nvar localStorageAvailable = function localStorageAvailable() {\n  if (hasLocalStorageSupport !== null) return hasLocalStorageSupport;\n  try {\n    hasLocalStorageSupport = window !== 'undefined' && window.localStorage !== null;\n    var testKey = 'i18next.translate.boo';\n    window.localStorage.setItem(testKey, 'foo');\n    window.localStorage.removeItem(testKey);\n  } catch (e) {\n    hasLocalStorageSupport = false;\n  }\n  return hasLocalStorageSupport;\n};\nvar localStorage = {\n  name: 'localStorage',\n  lookup: function lookup(options) {\n    var found;\n    if (options.lookupLocalStorage && localStorageAvailable()) {\n      var lng = window.localStorage.getItem(options.lookupLocalStorage);\n      if (lng) found = lng;\n    }\n    return found;\n  },\n  cacheUserLanguage: function cacheUserLanguage(lng, options) {\n    if (options.lookupLocalStorage && localStorageAvailable()) {\n      window.localStorage.setItem(options.lookupLocalStorage, lng);\n    }\n  }\n};\n\nvar hasSessionStorageSupport = null;\nvar sessionStorageAvailable = function sessionStorageAvailable() {\n  if (hasSessionStorageSupport !== null) return hasSessionStorageSupport;\n  try {\n    hasSessionStorageSupport = window !== 'undefined' && window.sessionStorage !== null;\n    var testKey = 'i18next.translate.boo';\n    window.sessionStorage.setItem(testKey, 'foo');\n    window.sessionStorage.removeItem(testKey);\n  } catch (e) {\n    hasSessionStorageSupport = false;\n  }\n  return hasSessionStorageSupport;\n};\nvar sessionStorage = {\n  name: 'sessionStorage',\n  lookup: function lookup(options) {\n    var found;\n    if (options.lookupSessionStorage && sessionStorageAvailable()) {\n      var lng = window.sessionStorage.getItem(options.lookupSessionStorage);\n      if (lng) found = lng;\n    }\n    return found;\n  },\n  cacheUserLanguage: function cacheUserLanguage(lng, options) {\n    if (options.lookupSessionStorage && sessionStorageAvailable()) {\n      window.sessionStorage.setItem(options.lookupSessionStorage, lng);\n    }\n  }\n};\n\nvar navigator$1 = {\n  name: 'navigator',\n  lookup: function lookup(options) {\n    var found = [];\n    if (typeof navigator !== 'undefined') {\n      if (navigator.languages) {\n        // chrome only; not an array, so can't use .push.apply instead of iterating\n        for (var i = 0; i < navigator.languages.length; i++) {\n          found.push(navigator.languages[i]);\n        }\n      }\n      if (navigator.userLanguage) {\n        found.push(navigator.userLanguage);\n      }\n      if (navigator.language) {\n        found.push(navigator.language);\n      }\n    }\n    return found.length > 0 ? found : undefined;\n  }\n};\n\nvar htmlTag = {\n  name: 'htmlTag',\n  lookup: function lookup(options) {\n    var found;\n    var htmlTag = options.htmlTag || (typeof document !== 'undefined' ? document.documentElement : null);\n    if (htmlTag && typeof htmlTag.getAttribute === 'function') {\n      found = htmlTag.getAttribute('lang');\n    }\n    return found;\n  }\n};\n\nvar path = {\n  name: 'path',\n  lookup: function lookup(options) {\n    var found;\n    if (typeof window !== 'undefined') {\n      var language = window.location.pathname.match(/\\/([a-zA-Z-]*)/g);\n      if (language instanceof Array) {\n        if (typeof options.lookupFromPathIndex === 'number') {\n          if (typeof language[options.lookupFromPathIndex] !== 'string') {\n            return undefined;\n          }\n          found = language[options.lookupFromPathIndex].replace('/', '');\n        } else {\n          found = language[0].replace('/', '');\n        }\n      }\n    }\n    return found;\n  }\n};\n\nvar subdomain = {\n  name: 'subdomain',\n  lookup: function lookup(options) {\n    // If given get the subdomain index else 1\n    var lookupFromSubdomainIndex = typeof options.lookupFromSubdomainIndex === 'number' ? options.lookupFromSubdomainIndex + 1 : 1;\n    // get all matches if window.location. is existing\n    // first item of match is the match itself and the second is the first group macht which sould be the first subdomain match\n    // is the hostname no public domain get the or option of localhost\n    var language = typeof window !== 'undefined' && window.location && window.location.hostname && window.location.hostname.match(/^(\\w{2,5})\\.(([a-z0-9-]{1,63}\\.[a-z]{2,6})|localhost)/i);\n\n    // if there is no match (null) return undefined\n    if (!language) return undefined;\n    // return the given group match\n    return language[lookupFromSubdomainIndex];\n  }\n};\n\nfunction getDefaults() {\n  return {\n    order: ['querystring', 'cookie', 'localStorage', 'sessionStorage', 'navigator', 'htmlTag'],\n    lookupQuerystring: 'lng',\n    lookupCookie: 'i18next',\n    lookupLocalStorage: 'i18nextLng',\n    lookupSessionStorage: 'i18nextLng',\n    // cache user language\n    caches: ['localStorage'],\n    excludeCacheFor: ['cimode'],\n    // cookieMinutes: 10,\n    // cookieDomain: 'myDomain'\n\n    convertDetectedLanguage: function convertDetectedLanguage(l) {\n      return l;\n    }\n  };\n}\nvar Browser = /*#__PURE__*/function () {\n  function Browser(services) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, Browser);\n    this.type = 'languageDetector';\n    this.detectors = {};\n    this.init(services, options);\n  }\n  _createClass(Browser, [{\n    key: \"init\",\n    value: function init(services) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var i18nOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      this.services = services || {\n        languageUtils: {}\n      }; // this way the language detector can be used without i18next\n      this.options = defaults(options, this.options || {}, getDefaults());\n      if (typeof this.options.convertDetectedLanguage === 'string' && this.options.convertDetectedLanguage.indexOf('15897') > -1) {\n        this.options.convertDetectedLanguage = function (l) {\n          return l.replace('-', '_');\n        };\n      }\n\n      // backwards compatibility\n      if (this.options.lookupFromUrlIndex) this.options.lookupFromPathIndex = this.options.lookupFromUrlIndex;\n      this.i18nOptions = i18nOptions;\n      this.addDetector(cookie$1);\n      this.addDetector(querystring);\n      this.addDetector(localStorage);\n      this.addDetector(sessionStorage);\n      this.addDetector(navigator$1);\n      this.addDetector(htmlTag);\n      this.addDetector(path);\n      this.addDetector(subdomain);\n    }\n  }, {\n    key: \"addDetector\",\n    value: function addDetector(detector) {\n      this.detectors[detector.name] = detector;\n    }\n  }, {\n    key: \"detect\",\n    value: function detect(detectionOrder) {\n      var _this = this;\n      if (!detectionOrder) detectionOrder = this.options.order;\n      var detected = [];\n      detectionOrder.forEach(function (detectorName) {\n        if (_this.detectors[detectorName]) {\n          var lookup = _this.detectors[detectorName].lookup(_this.options);\n          if (lookup && typeof lookup === 'string') lookup = [lookup];\n          if (lookup) detected = detected.concat(lookup);\n        }\n      });\n      detected = detected.map(function (d) {\n        return _this.options.convertDetectedLanguage(d);\n      });\n      if (this.services.languageUtils.getBestMatchFromCodes) return detected; // new i18next v19.5.0\n      return detected.length > 0 ? detected[0] : null; // a little backward compatibility\n    }\n  }, {\n    key: \"cacheUserLanguage\",\n    value: function cacheUserLanguage(lng, caches) {\n      var _this2 = this;\n      if (!caches) caches = this.options.caches;\n      if (!caches) return;\n      if (this.options.excludeCacheFor && this.options.excludeCacheFor.indexOf(lng) > -1) return;\n      caches.forEach(function (cacheName) {\n        if (_this2.detectors[cacheName]) _this2.detectors[cacheName].cacheUserLanguage(lng, _this2.options);\n      });\n    }\n  }]);\n  return Browser;\n}();\nBrowser.type = 'languageDetector';\n\nexport { Browser as default };\n","import HttpApi from 'i18next-http-backend'\nimport LanguageDetector from 'i18next-browser-languagedetector'\nimport de from './locales/de/translation.json'\nimport en from './locales/en/translation.json'\nimport i18next from 'i18next'\nimport { initReactI18next } from 'react-i18next'\n\nconst DE = 'de'\nconst EN = 'en'\nexport const LANGUAGES = [DE, EN]\n\nconst resources = {\n  [DE]: {\n    translation: de,\n  },\n  [EN]: {\n    translation: en,\n  },\n}\n\ni18next\n  .use(initReactI18next)\n  .use(HttpApi)\n  .use(LanguageDetector)\n  .init({\n    resources,\n    fallbackLng: EN,\n    supportedLngs: LANGUAGES,\n    keySeparator: false,\n    nsSeparator: false,\n    interpolation: {\n      escapeValue: false,\n    },\n    debug: process.env.NODE_ENV === 'development',\n  })\n","export const buildItemId = (tmdbId: number) => `TMDb@${tmdbId}`\n\nconst parametrize = (str: string) => str.toLowerCase().replace(/\\s/g, '+')\n\nexport const buildTrailerUrl = (title: string) =>\n  'https://www.youtube.com/results?search_query=' +\n  `${parametrize(title)}+official+trailer`\n","import {\n  CastMember,\n  CrewMember,\n  Gender,\n  Job,\n} from '../../../types/items/Person'\nimport {\n  CastResponse,\n  CrewResponse,\n  MovieCreditsResponse,\n  MovieDetailsResponse,\n  TVEpisodeResponse,\n  TVSeasonCreditsResponse,\n  TVSeasonDetailsResponse,\n  TVShowDetailsResponse,\n} from './types'\nimport { Episode, EpisodeLike } from '../../../types/items/Episode'\nimport { Movie, MovieLike } from '../../../types/items/Movie'\nimport { Season, SeasonLike } from '../../../types/items/Season'\nimport { Show, ShowLike } from '../../../types/items/Show'\nimport { buildItemId, buildTrailerUrl } from '../util'\nimport { notUndefined, parseDateToISOString } from '../../../util'\nimport { ItemKind } from '../../../types/items/Item'\n\n// https://developers.themoviedb.org/3/getting-started/images\nexport const buildTMDbImageUrl = (path: string, size = 'original') =>\n  `https://image.tmdb.org/t/p/${size}${path}`\n\nexport const buildEpisode = (\n  showId: string,\n  seasonId: string,\n  { seasonNumber, showTmdbId, sources, captions, usage }: EpisodeLike,\n  {\n    air_date: airDate,\n    crew,\n    episode_number: number,\n    guest_stars: guestStars,\n    name: title,\n    overview: summary,\n    id: tmdbId,\n    still_path: stillPath,\n  }: TVEpisodeResponse,\n): Episode => ({\n  kind: ItemKind.Episode,\n  id: buildItemId(tmdbId),\n  tmdbId,\n  number,\n  title,\n  seasonId,\n  seasonNumber,\n  showId,\n  showTmdbId,\n  summary,\n  airDate: parseDateToISOString(airDate),\n  stillPath,\n  guestStars: guestStars.map(buildCastMember),\n  crew: crew.map(buildCrewMember).filter(notUndefined),\n  sources,\n  captions,\n  usage,\n})\n\nexport const buildMovie = (\n  { sources, captions, usage }: MovieLike,\n  {\n    adult: isAdult,\n    backdrop_path: backdropPath,\n    budget,\n    homepage,\n    id: tmdbId,\n    overview: summary,\n    poster_path: posterPath,\n    release_date: releaseDate,\n    revenue,\n    runtime: duration,\n    title,\n  }: MovieDetailsResponse,\n  { cast, crew }: MovieCreditsResponse,\n): Movie => ({\n  kind: ItemKind.Movie,\n  id: buildItemId(tmdbId),\n  tmdbId,\n  title,\n  summary,\n  duration,\n  releaseDate: parseDateToISOString(releaseDate),\n  isAdult,\n  budget,\n  revenue,\n  homepage,\n  posterPath,\n  backdropPath,\n  trailerUrl: buildTrailerUrl(title),\n  cast: cast.map(buildCastMember),\n  crew: crew.map(buildCrewMember).filter(notUndefined),\n  sources,\n  captions,\n  usage,\n})\n\nconst buildGender = (gender: number | undefined): Gender => {\n  switch (gender) {\n    case 0:\n      return Gender.Unknown\n    case 1:\n      return Gender.Female\n    case 2:\n      return Gender.Male\n    default:\n      return Gender.Unknown\n  }\n}\n\nconst buildJob = (job?: string): Job | undefined => {\n  if (job === undefined) return Job.Acting\n\n  if (Object.values(Job).includes(job as Job)) return job as Job\n}\n\nexport const buildCastMember = ({\n  character,\n  gender: rawGender,\n  id: tmdbId,\n  name: title,\n  profile_path: posterPath,\n}: CastResponse): CastMember => {\n  const gender = buildGender(rawGender)\n  const job = buildJob()\n\n  return {\n    kind: ItemKind.Person,\n    id: buildItemId(tmdbId),\n    tmdbId,\n    title,\n    gender,\n    posterPath,\n    job,\n    character,\n  }\n}\n\nexport const buildCrewMember = ({\n  department,\n  gender: rawGender,\n  id: tmdbId,\n  job: rawJob,\n  name: title,\n  profile_path: posterPath,\n}: CrewResponse): CrewMember | undefined => {\n  const gender = buildGender(rawGender)\n  const job = buildJob(rawJob)\n  if (job === undefined) return\n\n  return {\n    kind: ItemKind.Person,\n    id: buildItemId(tmdbId),\n    tmdbId,\n    title,\n    gender,\n    posterPath,\n    job,\n    department,\n  }\n}\n\nexport const buildSeason = (\n  { id: showId, title: showTitle, backdropPath: showBackdropPath }: Show,\n  { showTmdbId, usage }: SeasonLike,\n  {\n    air_date: airDate,\n    id: tmdbId,\n    name: title,\n    overview: summary,\n    poster_path: posterPath,\n    season_number: number,\n    episodes,\n  }: TVSeasonDetailsResponse,\n  { cast, crew }: TVSeasonCreditsResponse,\n): Season => ({\n  kind: ItemKind.Season,\n  id: buildItemId(tmdbId),\n  tmdbId,\n  number,\n  title,\n  showId,\n  showTmdbId,\n  showTitle,\n  showBackdropPath,\n  summary,\n  airDate: parseDateToISOString(airDate),\n  posterPath,\n  trailerUrl: buildTrailerUrl(`${showTitle} season ${number}`),\n  episodes: episodes.map((episode) => episode.episode_number),\n  cast: cast.map(buildCastMember),\n  crew: crew.map(buildCrewMember).filter(notUndefined),\n  usage,\n})\n\nexport const buildShow = (\n  { usage }: ShowLike,\n  {\n    backdrop_path: backdropPath,\n    episode_run_time: episodeRunTime,\n    first_air_date: firstAirDate,\n    homepage,\n    id: tmdbId,\n    last_air_date: lastAirDate,\n    name: title,\n    overview: summary,\n    poster_path: posterPath,\n    seasons,\n  }: TVShowDetailsResponse,\n): Show => ({\n  kind: ItemKind.Show,\n  id: buildItemId(tmdbId),\n  tmdbId,\n  title,\n  summary,\n  episodeRunTime,\n  firstAirDate: parseDateToISOString(firstAirDate),\n  lastAirDate: parseDateToISOString(lastAirDate),\n  homepage,\n  posterPath,\n  backdropPath,\n  usage,\n  seasons: seasons.map((season) => season.season_number),\n})\n","import {\n  AuthActionTypes,\n  EXPECT_LOGIN_REDIRECT,\n  EXPECT_SETUP_REDIRECT,\n  HANDLED_REDIRECT,\n  REMOVE_PROVIDER,\n  UPDATE_PROVIDER,\n  UPDATE_VERSION,\n} from './types'\nimport {\n  Provider,\n  ProviderKindWithRedirect,\n  ProviderWithRedirect,\n} from '../../types/providers/Provider'\n\nexport const expectLoginRedirect = (\n  provider: ProviderWithRedirect,\n): AuthActionTypes => ({\n  type: EXPECT_LOGIN_REDIRECT,\n  payload: {\n    provider,\n  },\n})\n\nexport const expectSetupRedirect = (\n  kind: ProviderKindWithRedirect,\n): AuthActionTypes => ({\n  type: EXPECT_SETUP_REDIRECT,\n  payload: {\n    kind,\n  },\n})\n\nexport const handledRedirect = (): AuthActionTypes => ({\n  type: HANDLED_REDIRECT,\n})\n\nexport const updateProvider = (provider: Provider): AuthActionTypes => ({\n  type: UPDATE_PROVIDER,\n  payload: {\n    provider,\n  },\n})\n\nexport const updateVersion = (version: string): AuthActionTypes => ({\n  type: UPDATE_VERSION,\n  payload: { version },\n})\n\nexport const removeProvider = (id: string): AuthActionTypes => ({\n  type: REMOVE_PROVIDER,\n  payload: { id },\n})\n","import { AuthState } from './types'\n\nexport const providerSelector = (id: string) => (state: AuthState) =>\n  state.providers[id]\n\nexport const providersSelector = (state: AuthState) =>\n  Object.keys(state.providers).map((id) => state.providers[id]!)\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Logger } from \"@azure/msal-common\";\nimport {\n    BrowserConfiguration,\n    buildConfiguration,\n    Configuration,\n} from \"../config/Configuration\";\nimport { version, name } from \"../packageMetadata\";\n\n/**\n * Base class for operating context\n * Operating contexts are contexts in which MSAL.js is being run\n * More than one operating context may be available at a time\n * It's important from a logging and telemetry point of view for us to be able to identify the operating context.\n * For example: Some operating contexts will pre-cache tokens impacting performance telemetry\n */\nexport abstract class BaseOperatingContext {\n    protected logger: Logger;\n    protected config: BrowserConfiguration;\n    protected available: boolean;\n    protected browserEnvironment: boolean;\n\n    constructor(config: Configuration) {\n        /*\n         * If loaded in an environment where window is not available,\n         * set internal flag to false so that further requests fail.\n         * This is to support server-side rendering environments.\n         */\n        this.browserEnvironment = typeof window !== \"undefined\";\n\n        this.config = buildConfiguration(config, this.browserEnvironment);\n        this.logger = new Logger(\n            this.config.system.loggerOptions,\n            name,\n            version\n        );\n        this.available = false;\n    }\n\n    /**\n     * returns the name of the module containing the API controller associated with this operating context\n     */\n    abstract getModuleName(): string;\n\n    /**\n     * returns the string identifier of this operating context\n     */\n    abstract getId(): string;\n\n    /**\n     * returns a boolean indicating whether this operating context is present\n     */\n    abstract initialize(): Promise<boolean>;\n\n    /**\n     * Return the MSAL config\n     * @returns BrowserConfiguration\n     */\n    getConfig(): BrowserConfiguration {\n        return this.config;\n    }\n\n    /**\n     * Returns the MSAL Logger\n     * @returns Logger\n     */\n    getLogger(): Logger {\n        return this.logger;\n    }\n\n    isAvailable(): boolean {\n        return this.available;\n    }\n\n    isBrowserEnvironment(): boolean {\n        return this.browserEnvironment;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BaseOperatingContext } from \"./BaseOperatingContext\";\n\nexport class TeamsAppOperatingContext extends BaseOperatingContext {\n    /*\n     * TODO: Once we have determine the bundling code return here to specify the name of the bundle\n     * containing the implementation for this operating context\n     */\n    static readonly MODULE_NAME: string = \"\";\n\n    /**\n     * Unique identifier for the operating context\n     */\n    static readonly ID: string = \"TeamsAppOperatingContext\";\n\n    /**\n     * Return the module name.  Intended for use with import() to enable dynamic import\n     * of the implementation associated with this operating context\n     * @returns\n     */\n    getModuleName(): string {\n        return TeamsAppOperatingContext.MODULE_NAME;\n    }\n    /**\n     * Returns the unique identifier for this operating context\n     * @returns string\n     */\n    getId(): string {\n        return TeamsAppOperatingContext.ID;\n    }\n\n    /**\n     * Checks whether the operating context is available.\n     * Confirms that the code is running a browser rather.  This is required.\n     * @returns Promise<boolean> indicating whether this operating context is currently available.\n     */\n    async initialize(): Promise<boolean> {\n        /*\n         * TODO: Add implementation to check for presence of inject MetaOSHub JavaScript interface\n         * TODO: Make pre-flight token request to ensure that App is eligible to use Nested App Auth\n         */\n        return false;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BaseOperatingContext } from \"./BaseOperatingContext\";\n\nexport class StandardOperatingContext extends BaseOperatingContext {\n    /*\n     * TODO: Once we have determine the bundling code return here to specify the name of the bundle\n     * containing the implementation for this operating context\n     */\n    static readonly MODULE_NAME: string = \"\";\n\n    /**\n     * Unique identifier for the operating context\n     */\n    static readonly ID: string = \"StandardOperatingContext\";\n\n    /**\n     * Return the module name.  Intended for use with import() to enable dynamic import\n     * of the implementation associated with this operating context\n     * @returns\n     */\n    getModuleName(): string {\n        return StandardOperatingContext.MODULE_NAME;\n    }\n    /**\n     * Returns the unique identifier for this operating context\n     * @returns string\n     */\n    getId(): string {\n        return StandardOperatingContext.ID;\n    }\n\n    /**\n     * Checks whether the operating context is available.\n     * Confirms that the code is running a browser rather.  This is required.\n     * @returns Promise<boolean> indicating whether this operating context is currently available.\n     */\n    async initialize(): Promise<boolean> {\n        this.available = typeof window !== \"undefined\";\n        return this.available;\n        /*\n         * NOTE: The standard context is available as long as there is a window.  If/when we split out WAM from Browser\n         * We can move the current contents of the initialize method to here and verify that the WAM extension is available\n         */\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { TeamsAppOperatingContext } from \"../operatingcontext/TeamsAppOperatingContext\";\nimport { StandardOperatingContext } from \"../operatingcontext/StandardOperatingContext\";\nimport { IController } from \"./IController\";\nimport { Logger } from \"@azure/msal-common\";\nimport { Configuration } from \"../config/Configuration\";\nimport { version, name } from \"../packageMetadata\";\n\nexport class ControllerFactory {\n    protected config: Configuration;\n    protected logger: Logger;\n\n    constructor(config: Configuration) {\n        this.config = config;\n        const loggerOptions = {\n            loggerCallback: undefined,\n            piiLoggingEnabled: false,\n            logLevel: undefined,\n            correlationId: undefined,\n        };\n        this.logger = new Logger(loggerOptions, name, version);\n    }\n\n    async createController(): Promise<IController> {\n        const standard = new StandardOperatingContext(this.config);\n        const metaOS = new TeamsAppOperatingContext(this.config);\n\n        const operatingContexts = [standard.initialize(), metaOS.initialize()];\n\n        return Promise.all(operatingContexts).then(async () => {\n            if (metaOS.isAvailable()) {\n                /*\n                 * pull down metaos module\n                 * create associated controller\n                 */\n                // return await StandardController.createController(standard);\n                const controller = await import(\"./StandardController\");\n                return await controller.StandardController.createController(\n                    standard\n                );\n            } else if (standard.isAvailable()) {\n                const controller = await import(\"./StandardController\");\n                return await controller.StandardController.createController(\n                    standard\n                );\n            }\n\n            throw new Error(\"No controller found.\");\n        });\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ITokenCache } from \"../cache/ITokenCache\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { WrapperSKU } from \"../utils/BrowserConstants\";\nimport { IPublicClientApplication } from \"./IPublicClientApplication\";\nimport { IController } from \"../controllers/IController\";\nimport {\n    PerformanceCallbackFunction,\n    AccountInfo,\n    AccountFilter,\n    Logger,\n} from \"@azure/msal-common\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { ControllerFactory } from \"../controllers/ControllerFactory\";\nimport { StandardController } from \"../controllers/StandardController\";\nimport { BrowserConfiguration, Configuration } from \"../config/Configuration\";\nimport { StandardOperatingContext } from \"../operatingcontext/StandardOperatingContext\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { EventCallbackFunction } from \"../event/EventMessage\";\nimport { ClearCacheRequest } from \"../request/ClearCacheRequest\";\n\n/**\n * The PublicClientApplication class is the object exposed by the library to perform authentication and authorization functions in Single Page Applications\n * to obtain JWT tokens as described in the OAuth 2.0 Authorization Code Flow with PKCE specification.\n */\nexport class PublicClientApplication implements IPublicClientApplication {\n    protected controller: IController;\n\n    public static async createPublicClientApplication(\n        configuration: Configuration\n    ): Promise<IPublicClientApplication> {\n        const factory = new ControllerFactory(configuration);\n        const controller = await factory.createController();\n        const pca = new PublicClientApplication(configuration, controller);\n\n        return pca;\n    }\n\n    /**\n     * @constructor\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\n     *\n     * Important attributes in the Configuration object for auth are:\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\n     * - authority: the authority URL for your application.\n     * - redirect_uri: the uri of your application registered in the portal.\n     *\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\n     *\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\n     * Full B2C functionality will be available in this library in future versions.\n     *\n     * @param configuration Object for the MSAL PublicClientApplication instance\n     * @param IController Optional parameter to explictly set the controller. (Will be removed when we remove public constructor)\n     */\n    public constructor(configuration: Configuration, controller?: IController) {\n        if (controller) {\n            this.controller = controller;\n        } else {\n            const standardOperatingContext = new StandardOperatingContext(\n                configuration\n            );\n            this.controller = new StandardController(standardOperatingContext);\n        }\n    }\n\n    /**\n     * Initializer function to perform async startup tasks such as connecting to WAM extension\n     */\n    async initialize(): Promise<void> {\n        return this.controller.initialize();\n    }\n\n    /**\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async acquireTokenPopup(\n        request: PopupRequest\n    ): Promise<AuthenticationResult> {\n        return this.controller.acquireTokenPopup(request);\n    }\n\n    /**\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\n     * the page, so any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    acquireTokenRedirect(request: RedirectRequest): Promise<void> {\n        return this.controller.acquireTokenRedirect(request);\n    }\n\n    /**\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\n     *\n     * @param {@link (SilentRequest:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthenticationResult} object\n     */\n    acquireTokenSilent(\n        silentRequest: SilentRequest\n    ): Promise<AuthenticationResult> {\n        return this.controller.acquireTokenSilent(silentRequest);\n    }\n\n    /**\n     * This function redeems an authorization code (passed as code) from the eSTS token endpoint.\n     * This authorization code should be acquired server-side using a confidential client to acquire a spa_code.\n     * This API is not indended for normal authorization code acquisition and redemption.\n     *\n     * Redemption of this authorization code will not require PKCE, as it was acquired by a confidential client.\n     *\n     * @param request {@link AuthorizationCodeRequest}\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    acquireTokenByCode(\n        request: AuthorizationCodeRequest\n    ): Promise<AuthenticationResult> {\n        return this.controller.acquireTokenByCode(request);\n    }\n\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback: EventCallbackFunction): string | null {\n        return this.controller.addEventCallback(callback);\n    }\n\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId: string): void {\n        return this.controller.removeEventCallback(callbackId);\n    }\n\n    /**\n     * Registers a callback to receive performance events.\n     *\n     * @param {PerformanceCallbackFunction} callback\n     * @returns {string}\n     */\n    addPerformanceCallback(callback: PerformanceCallbackFunction): string {\n        return this.controller.addPerformanceCallback(callback);\n    }\n\n    /**\n     * Removes a callback registered with addPerformanceCallback.\n     *\n     * @param {string} callbackId\n     * @returns {boolean}\n     */\n    removePerformanceCallback(callbackId: string): boolean {\n        return this.controller.removePerformanceCallback(callbackId);\n    }\n\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    enableAccountStorageEvents(): void {\n        this.controller.enableAccountStorageEvents();\n    }\n\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    disableAccountStorageEvents(): void {\n        this.controller.disableAccountStorageEvents();\n    }\n\n    /**\n     * Returns the first account found in the cache that matches the account filter passed in.\n     * @param accountFilter\n     * @returns The first account found in the cache matching the provided filter or null if no account could be found.\n     */\n    getAccount(accountFilter: AccountFilter): AccountInfo | null {\n        return this.controller.getAccount(accountFilter);\n    }\n\n    /**\n     * Returns the signed in account matching homeAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param homeAccountId\n     * @returns The account object stored in MSAL\n     * @deprecated - Use getAccount instead\n     */\n    getAccountByHomeId(homeAccountId: string): AccountInfo | null {\n        return this.controller.getAccountByHomeId(homeAccountId);\n    }\n\n    /**\n     * Returns the signed in account matching localAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param localAccountId\n     * @returns The account object stored in MSAL\n     * @deprecated - Use getAccount instead\n     */\n    getAccountByLocalId(localId: string): AccountInfo | null {\n        return this.controller.getAccountByLocalId(localId);\n    }\n\n    /**\n     * Returns the signed in account matching username.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found.\n     * This API is provided for convenience but getAccountById should be used for best reliability\n     * @param userName\n     * @returns The account object stored in MSAL\n     * @deprecated - Use getAccount instead\n     */\n    getAccountByUsername(userName: string): AccountInfo | null {\n        return this.controller.getAccountByUsername(userName);\n    }\n\n    /**\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\n     * @returns Array of AccountInfo objects in cache\n     */\n    getAllAccounts(accountFilter?: AccountFilter): AccountInfo[] {\n        return this.controller.getAllAccounts(accountFilter);\n    }\n\n    /**\n     * Event handler function which allows users to fire events after the PublicClientApplication object\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\n     * auth flows.\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\n     */\n    handleRedirectPromise(\n        hash?: string | undefined\n    ): Promise<AuthenticationResult | null> {\n        return this.controller.handleRedirectPromise(hash);\n    }\n\n    /**\n     * Use when initiating the login process via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    loginPopup(\n        request?: PopupRequest | undefined\n    ): Promise<AuthenticationResult> {\n        return this.controller.loginPopup(request);\n    }\n\n    /**\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\n     * any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    loginRedirect(request?: RedirectRequest | undefined): Promise<void> {\n        return this.controller.loginRedirect(request);\n    }\n\n    /**\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\n     * @param logoutRequest\n     * @deprecated\n     */\n    logout(logoutRequest?: EndSessionRequest): Promise<void> {\n        return this.controller.logout(logoutRequest);\n    }\n\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    logoutRedirect(logoutRequest?: EndSessionRequest): Promise<void> {\n        return this.controller.logoutRedirect(logoutRequest);\n    }\n\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest\n     */\n    logoutPopup(logoutRequest?: EndSessionRequest): Promise<void> {\n        return this.controller.logoutPopup(logoutRequest);\n    }\n\n    /**\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\n     * - Any browser using a form of Intelligent Tracking Prevention\n     * - If there is not an established session with the service\n     *\n     * In these cases, the request must be done inside a popup or full frame redirect.\n     *\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\n     *\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\n     * you session on the server still exists.\n     * @param request {@link SsoSilentRequest}\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    ssoSilent(request: SsoSilentRequest): Promise<AuthenticationResult> {\n        return this.controller.ssoSilent(request);\n    }\n\n    /**\n     * Gets the token cache for the application.\n     */\n    getTokenCache(): ITokenCache {\n        return this.controller.getTokenCache();\n    }\n\n    /**\n     * Returns the logger instance\n     */\n    getLogger(): Logger {\n        return this.controller.getLogger();\n    }\n\n    /**\n     * Replaces the default logger set in configurations with new Logger with new configurations\n     * @param logger Logger instance\n     */\n    setLogger(logger: Logger): void {\n        this.controller.setLogger(logger);\n    }\n\n    /**\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\n     * @param account\n     */\n    setActiveAccount(account: AccountInfo | null): void {\n        this.controller.setActiveAccount(account);\n    }\n\n    /**\n     * Gets the currently active account\n     */\n    getActiveAccount(): AccountInfo | null {\n        return this.controller.getActiveAccount();\n    }\n\n    /**\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\n     * @param sku\n     * @param version\n     */\n    initializeWrapperLibrary(sku: WrapperSKU, version: string): void {\n        return this.controller.initializeWrapperLibrary(sku, version);\n    }\n\n    /**\n     * Sets navigation client\n     * @param navigationClient\n     */\n    setNavigationClient(navigationClient: INavigationClient): void {\n        this.controller.setNavigationClient(navigationClient);\n    }\n\n    /**\n     * Returns the configuration object\n     * @internal\n     */\n    getConfiguration(): BrowserConfiguration {\n        return this.controller.getConfiguration();\n    }\n\n    /**\n     * Hydrates cache with the tokens and account in the AuthenticationResult object\n     * @param result\n     * @param request - The request object that was used to obtain the AuthenticationResult\n     * @returns\n     */\n    async hydrateCache(\n        result: AuthenticationResult,\n        request:\n            | SilentRequest\n            | SsoSilentRequest\n            | RedirectRequest\n            | PopupRequest\n    ): Promise<void> {\n        return this.controller.hydrateCache(result, request);\n    }\n\n    /**\n     * Clears tokens and account from the browser cache.\n     * @param logoutRequest\n     */\n    clearCache(logoutRequest?: ClearCacheRequest): Promise<void> {\n        return this.controller.clearCache(logoutRequest);\n    }\n}\n","import { ProviderKind } from '../../types/providers/Provider'\n\nexport const buildAuthId = (kind: ProviderKind, id: string) => `${kind}@${id}`\n","import {\n  AccountInfo,\n  InteractionRequiredAuthError,\n  PublicClientApplication,\n} from '@azure/msal-browser'\nimport { AuthenticationFailure } from '../../errors/AuthenticationFailure'\nimport { OneDrive } from '../../types/providers/OneDrive'\nimport { OneDriveAuthResponse } from './types'\nimport { ProviderKind } from '../../types/providers/Provider'\nimport { buildAuthId } from './util'\nimport { isMobile } from 'react-device-detect'\n\nconst CLIENT_ID = process.env.REACT_APP_MICROSOFT_CLIENT_ID!\nconst SCOPES = ['user.read', 'files.read.all']\n\nconst buildAuthResponse = (\n  accessToken: string,\n  account: AccountInfo,\n  expiresOn: Date,\n): OneDriveAuthResponse => ({\n  kind: ProviderKind.OneDrive,\n  accessToken: { token: accessToken, validUntil: expiresOn.toISOString() },\n  id: buildAuthId(ProviderKind.OneDrive, account.username),\n  name: account.username,\n  account,\n})\n\nconst silentLogIn = async (\n  app: PublicClientApplication,\n  account: AccountInfo,\n): Promise<OneDriveAuthResponse> => {\n  const {\n    accessToken,\n    account: newAccount,\n    expiresOn,\n  } = await app.acquireTokenSilent({\n    scopes: SCOPES,\n    account,\n  })\n  if (!newAccount || !expiresOn)\n    throw new AuthenticationFailure(ProviderKind.OneDrive)\n  return buildAuthResponse(accessToken, newAccount, expiresOn)\n}\n\nconst popupLogIn = async (\n  app: PublicClientApplication,\n): Promise<OneDriveAuthResponse> => {\n  const { account } = await app.loginPopup({\n    scopes: SCOPES,\n  })\n  if (!account) throw new AuthenticationFailure(ProviderKind.OneDrive)\n  return silentLogIn(app, account)\n}\n\nconst redirectLogIn = (app: PublicClientApplication) =>\n  app.loginRedirect({\n    scopes: SCOPES,\n  })\n\nconst interactiveLogIn = async (\n  app: PublicClientApplication,\n  onRedirect: () => void,\n) => {\n  if (isMobile) {\n    onRedirect()\n    return redirectLogIn(app)\n  }\n  return await popupLogIn(app)\n}\n\nconst performAuth = async (\n  app: PublicClientApplication,\n  account: AccountInfo | undefined,\n  onRedirect: () => void,\n): Promise<OneDriveAuthResponse | void> => {\n  if (account === undefined) return await interactiveLogIn(app, onRedirect)\n\n  try {\n    return await silentLogIn(app, account)\n  } catch (error: unknown) {\n    if (error instanceof InteractionRequiredAuthError)\n      return await interactiveLogIn(app, onRedirect)\n    else throw error\n  }\n}\n\nexport const auth = async (\n  provider: OneDrive | undefined,\n  onRedirect: () => void,\n): Promise<OneDriveAuthResponse | void> => {\n  if (\n    provider !== undefined &&\n    new Date(provider.accessToken.validUntil) > new Date()\n  )\n    return provider\n\n  const app = new PublicClientApplication({\n    auth: {\n      clientId: CLIENT_ID,\n    },\n  })\n\n  try {\n    return await performAuth(app, provider?.account, onRedirect)\n  } catch (error: unknown) {\n    throw new AuthenticationFailure(ProviderKind.OneDrive)\n  }\n}\n\nexport const authHandleRedirect = async (): Promise<OneDriveAuthResponse> => {\n  const app = new PublicClientApplication({\n    auth: {\n      clientId: CLIENT_ID,\n    },\n  })\n  const response = await app.handleRedirectPromise()\n  if (!response?.account) throw new AuthenticationFailure(ProviderKind.OneDrive)\n  return silentLogIn(app, response.account)\n}\n","import { FTPAuthResponse, FTPAuthSetup } from './types'\nimport { AuthenticationFailure } from '../../errors/AuthenticationFailure'\nimport { ProviderKind } from '../../types/providers/Provider'\nimport { buildAuthId } from './util'\n// import { getClient } from '../drives/FTP/api'\n\nexport const auth = async (\n  provider: FTPAuthSetup,\n): Promise<FTPAuthResponse> => {\n  try {\n    // await getClient(\n    //   provider.host,\n    //   provider.port,\n    //   provider.username,\n    //   provider.password,\n    //   provider.secure,\n    // )\n    return {\n      ...provider,\n      id: buildAuthId(ProviderKind.FTP, `${provider.host}:${provider.port}`),\n    }\n  } catch (error: unknown) {\n    throw new AuthenticationFailure(ProviderKind.FTP)\n  }\n}\n","import { AuthResponse, AuthSetup } from '../../services/auth/types'\nimport { LoginRedirectCache, SetupRedirectCache } from './types'\nimport {\n  Provider,\n  ProviderKind,\n  ProviderKindWithRedirect,\n  ProviderWithRedirect,\n} from '../../types/providers/Provider'\nimport {\n  expectLoginRedirect,\n  expectSetupRedirect,\n  updateProvider,\n} from './actions'\nimport {\n  auth as oneDriveAuthCall,\n  authHandleRedirect as oneDriveAuthHandleRedirectCall,\n} from '../../services/auth/OneDrive'\nimport { AppThunk } from '../index'\nimport { ProviderAlreadyExists } from '../../errors/ProviderAlreadyExists'\nimport { auth as ftpAuthCall } from '../../services/auth/FTP'\nimport { providersSelector } from './selectors'\n\nconst authHandleProvider = (\n  provider: Provider,\n  onRedirect: (provider: ProviderWithRedirect) => () => void,\n): Promise<AuthResponse | void> => {\n  switch (provider.kind) {\n    case ProviderKind.FTP:\n      return ftpAuthCall(provider)\n    case ProviderKind.OneDrive:\n      return oneDriveAuthCall(provider, onRedirect(provider))\n  }\n}\n\nconst setupAuthHandleProvider = (\n  config: AuthSetup,\n  onRedirect: (kind: ProviderKindWithRedirect) => () => void,\n): Promise<AuthResponse | void> => {\n  switch (config.kind) {\n    case ProviderKind.FTP:\n      return ftpAuthCall(config)\n    case ProviderKind.OneDrive:\n      return oneDriveAuthCall(undefined, onRedirect(ProviderKind.OneDrive))\n  }\n}\n\nconst authHandleRedirectHandleProvider = (\n  kind: ProviderKindWithRedirect,\n): Promise<AuthResponse> => {\n  switch (kind) {\n    case ProviderKind.OneDrive:\n      return oneDriveAuthHandleRedirectCall()\n  }\n}\n\nconst authHandleResponse =\n  (provider: Provider, response: AuthResponse): AppThunk<Promise<Provider>> =>\n  async (dispatch) => {\n    const updatedProvider = {\n      ...response,\n      moviesPath: provider.moviesPath,\n      showsPath: provider.showsPath,\n    }\n    dispatch(updateProvider(updatedProvider))\n    return updatedProvider\n  }\n\nexport const auth =\n  (provider: Provider): AppThunk<Promise<Provider | undefined>> =>\n  async (dispatch) => {\n    const response = await authHandleProvider(\n      provider,\n      (provider) => () => dispatch(expectLoginRedirect(provider)),\n    )\n    if (response === undefined) return\n    return dispatch(authHandleResponse(provider, response))\n  }\n\nconst setupAuthHandleResponse =\n  (\n    kind: ProviderKind,\n    response: AuthResponse,\n  ): AppThunk<Promise<AuthResponse>> =>\n  async (_, getState) => {\n    const { auth } = getState()\n    const provider = providersSelector(auth).find(\n      (provider) => provider.kind === kind && provider.name === response.name,\n    )\n    if (provider !== undefined) throw new ProviderAlreadyExists(provider)\n    return response\n  }\n\nexport const setupAuth =\n  (config: AuthSetup): AppThunk<Promise<AuthResponse | undefined>> =>\n  async (dispatch) => {\n    const response = await setupAuthHandleProvider(\n      config,\n      (kind) => () => dispatch(expectSetupRedirect(kind)),\n    )\n    if (response === undefined) return\n    return dispatch(setupAuthHandleResponse(config.kind, response))\n  }\n\nexport const authHandleRedirect =\n  (cache: LoginRedirectCache): AppThunk<Promise<Provider>> =>\n  async (dispatch) => {\n    const response = await authHandleRedirectHandleProvider(cache.provider.kind)\n    return dispatch(authHandleResponse(cache.provider, response))\n  }\n\nexport const setupAuthHandleRedirect =\n  (cache: SetupRedirectCache): AppThunk<Promise<AuthResponse>> =>\n  async (dispatch) => {\n    const response = await authHandleRedirectHandleProvider(cache.kind)\n    return dispatch(setupAuthHandleResponse(cache.kind, response))\n  }\n","import {\n  Provider,\n  ProviderKindWithRedirect,\n  ProviderWithRedirect,\n} from '../../types/providers/Provider'\n\nexport const EXPECT_LOGIN_REDIRECT = 'EXPECT_LOGIN_REDIRECT'\nexport const EXPECT_SETUP_REDIRECT = 'EXPECT_SETUP_REDIRECT'\nexport const HANDLED_REDIRECT = 'HANDLED_REDIRECT'\nexport const UPDATE_PROVIDER = 'UPDATE_PROVIDER'\nexport const UPDATE_VERSION = 'UPDATE_VERSION'\nexport const REMOVE_PROVIDER = 'REMOVE_PROVIDER'\n\nexport enum RedirectCacheOrigin {\n  Login,\n  Setup,\n}\n\nexport type LoginRedirectCache = {\n  origin: typeof RedirectCacheOrigin.Login\n  provider: ProviderWithRedirect\n}\n\nexport type SetupRedirectCache = {\n  origin: typeof RedirectCacheOrigin.Setup\n  kind: ProviderKindWithRedirect\n}\n\nexport type RedirectCache = LoginRedirectCache | SetupRedirectCache\n\nexport interface AuthState {\n  providers: {\n    [id: string]: Provider | undefined\n  }\n  redirectCache: RedirectCache | undefined\n  version: string\n}\n\ninterface ExpectLoginRedirectAction {\n  type: typeof EXPECT_LOGIN_REDIRECT\n  payload: {\n    provider: ProviderWithRedirect\n  }\n}\n\ninterface ExpectSetupRedirectAction {\n  type: typeof EXPECT_SETUP_REDIRECT\n  payload: {\n    kind: ProviderKindWithRedirect\n  }\n}\n\ninterface HandledRedirectAction {\n  type: typeof HANDLED_REDIRECT\n}\n\ninterface UpdateProviderAction {\n  type: typeof UPDATE_PROVIDER\n  payload: {\n    provider: Provider\n  }\n}\n\ninterface UpdateVersionAction {\n  type: typeof UPDATE_VERSION\n  payload: {\n    version: string\n  }\n}\n\ninterface RemoveProviderAction {\n  type: typeof REMOVE_PROVIDER\n  payload: {\n    id: string\n  }\n}\n\nexport type AuthActionTypes =\n  | ExpectLoginRedirectAction\n  | ExpectSetupRedirectAction\n  | HandledRedirectAction\n  | UpdateProviderAction\n  | UpdateVersionAction\n  | RemoveProviderAction\n","import { Episode } from '../../types/items/Episode'\n\nexport const UPDATE_EPISODE = 'UPDATE_EPISODE'\nexport const REMOVE_EPISODE = 'REMOVE_EPISODE'\n\nexport interface EpisodesState {\n  [id: string]: Episode | undefined\n}\n\ninterface UpdateEpisodeAction {\n  type: typeof UPDATE_EPISODE\n  payload: {\n    episode: Episode\n  }\n}\n\ninterface RemoveEpisodeAction {\n  type: typeof REMOVE_EPISODE\n  payload: {\n    id: string\n  }\n}\n\nexport type EpisodesActionTypes = UpdateEpisodeAction | RemoveEpisodeAction\n","import { Movie } from '../../types/items/Movie'\n\nexport const UPDATE_MOVIE = 'UPDATE_MOVIE'\nexport const REMOVE_MOVIE = 'REMOVE_MOVIE'\n\nexport interface MoviesState {\n  [id: string]: Movie | undefined\n}\n\ninterface UpdateMovieAction {\n  type: typeof UPDATE_MOVIE\n  payload: {\n    movie: Movie\n  }\n}\n\ninterface RemoveMovieAction {\n  type: typeof REMOVE_MOVIE\n  payload: {\n    id: string\n  }\n}\n\nexport type MoviesActionTypes = UpdateMovieAction | RemoveMovieAction\n","export const ADD_PERSON = 'ADD_PERSON'\nexport const RESET_PEOPLE = 'RESET_PEOPLE'\n\nexport interface PeopleState {\n  ids: string[]\n}\n\ninterface AddPersonAction {\n  type: typeof ADD_PERSON\n  payload: {\n    id: string\n  }\n}\n\ninterface ResetPeopleAction {\n  type: typeof RESET_PEOPLE\n}\n\nexport type PeopleActionTypes = AddPersonAction | ResetPeopleAction\n","import { Season } from '../../types/items/Season'\n\nexport const UPDATE_SEASON = 'UPDATE_SEASON'\nexport const REMOVE_SEASON = 'REMOVE_SEASON'\n\nexport interface SeasonsState {\n  [id: string]: Season | undefined\n}\n\ninterface UpdateSeasonAction {\n  type: typeof UPDATE_SEASON\n  payload: {\n    season: Season\n  }\n}\n\ninterface RemoveSeasonAction {\n  type: typeof REMOVE_SEASON\n  payload: {\n    id: string\n  }\n}\n\nexport type SeasonsActionTypes = UpdateSeasonAction | RemoveSeasonAction\n","import { Show } from '../../types/items/Show'\n\nexport const UPDATE_SHOW = 'UPDATE_SHOW'\nexport const REMOVE_SHOW = 'REMOVE_SHOW'\n\nexport interface ShowsState {\n  [id: string]: Show | undefined\n}\n\ninterface UpdateShowAction {\n  type: typeof UPDATE_SHOW\n  payload: {\n    show: Show\n  }\n}\n\ninterface RemoveShowAction {\n  type: typeof REMOVE_SHOW\n  payload: {\n    id: string\n  }\n}\n\nexport type ShowsActionTypes = UpdateShowAction | RemoveShowAction\n","import {\n  ADD_NOTIFICATION,\n  ASYNC_BEGIN,\n  ASYNC_END,\n  REMOVE_NOTIFICATION,\n  UIActionTypes,\n} from './types'\nimport { Notification } from '../../types/Notification'\n\nexport const asyncBegin = (): UIActionTypes => ({\n  type: ASYNC_BEGIN,\n})\n\nexport const asyncEnd = (): UIActionTypes => ({\n  type: ASYNC_END,\n})\n\nexport const addNotification = (notification: Notification): UIActionTypes => ({\n  type: ADD_NOTIFICATION,\n  payload: { notification },\n})\n\nexport const removeNotification = (\n  notification: Notification,\n): UIActionTypes => ({\n  type: REMOVE_NOTIFICATION,\n  payload: { notification },\n})\n","import { addNotification, asyncBegin, asyncEnd } from './actions'\nimport { AppThunk } from '../index'\nimport { handleError } from '../../errors'\n\nexport const load =\n  <ReturnType>(\n    fn: AppThunk<Promise<ReturnType>>,\n  ): AppThunk<Promise<ReturnType | undefined>> =>\n  async (dispatch) => {\n    dispatch(asyncBegin())\n\n    let result: ReturnType | undefined\n    try {\n      result = await dispatch(fn)\n    } catch (error: unknown) {\n      console.error(error) // eslint-disable-line no-console\n      if (error instanceof Error) {\n        dispatch(addNotification(handleError(error)))\n      }\n    }\n\n    dispatch(asyncEnd())\n\n    return result\n  }\n","import { Notification, NotificationKind } from '../types/Notification'\nimport { APIError } from './APIError'\nimport { AuthenticationFailure } from './AuthenticationFailure'\nimport { CannotFindFileError } from './CannotFindFileError'\nimport { ProviderAlreadyExists } from './ProviderAlreadyExists'\n\nexport const handleError = (error: Error): Notification => {\n  if (error instanceof APIError) {\n    return {\n      kind: NotificationKind.APIError,\n      status: error.status,\n      message: error.message,\n    }\n  } else if (error instanceof AuthenticationFailure) {\n    return {\n      kind: NotificationKind.AuthenticationFailure,\n      provider: error.provider,\n    }\n  } else if (error instanceof CannotFindFileError) {\n    return { kind: NotificationKind.CannotFindFile, file: error.file }\n  } else if (error instanceof ProviderAlreadyExists) {\n    return {\n      kind: NotificationKind.ProviderAlreadyExists,\n      provider: error.provider,\n    }\n  } else {\n    return { kind: NotificationKind.GenericError, error }\n  }\n}\n","import { Notification } from '../../types/Notification'\n\nexport const ASYNC_BEGIN = 'ASYNC_BEGIN'\nexport const ASYNC_END = 'ASYNC_END'\nexport const ADD_NOTIFICATION = 'ADD_NOTIFICATION'\nexport const REMOVE_NOTIFICATION = 'REMOVE_NOTIFICATION'\n\nexport interface UIState {\n  isLoading: boolean\n  notifications: Notification[]\n}\n\ninterface AsyncBeginAction {\n  type: typeof ASYNC_BEGIN\n}\n\ninterface AsyncEndAction {\n  type: typeof ASYNC_END\n}\n\ninterface AddNotificationAction {\n  type: typeof ADD_NOTIFICATION\n  payload: {\n    notification: Notification\n  }\n}\n\ninterface RemoveNotificationAction {\n  type: typeof REMOVE_NOTIFICATION\n  payload: {\n    notification: Notification\n  }\n}\n\nexport type UIActionTypes =\n  | AsyncBeginAction\n  | AsyncEndAction\n  | AddNotificationAction\n  | RemoveNotificationAction\n","import { Provider, ProviderKind } from './providers/Provider'\nimport { File } from './files/File'\n\nexport enum NotificationKind {\n  APIError,\n  AuthenticationFailure,\n  CannotFindFile,\n  GenericError,\n  ProviderAlreadyExists,\n}\n\nexport interface APIError {\n  kind: NotificationKind.APIError\n  status: number\n  message: string | undefined\n}\n\nexport interface AuthenticationFailure {\n  kind: NotificationKind.AuthenticationFailure\n  provider: ProviderKind\n}\n\nexport interface CannotFindFile {\n  kind: NotificationKind.CannotFindFile\n  file: File\n}\n\nexport interface GenericError {\n  kind: NotificationKind.GenericError\n  error: Error\n}\n\nexport interface ProviderAlreadyExists {\n  kind: NotificationKind.ProviderAlreadyExists\n  provider: Provider\n}\n\nexport type Notification =\n  | APIError\n  | AuthenticationFailure\n  | CannotFindFile\n  | GenericError\n  | ProviderAlreadyExists\n","import { FileKind, IFile } from './File'\nimport {\n  IFTPFileProvider,\n  IOneDriveFileProvider,\n  VideoProvider,\n} from './FileProvider'\n\nexport const MP4_EXTENSION = 'mp4'\nexport const M4V_EXTENSION = 'm4v'\nexport const MKV_EXTENSION = 'mkv'\nexport const WEBM_EXTENSION = 'webm'\n\nexport type VideoType =\n  | typeof MP4_EXTENSION\n  | typeof M4V_EXTENSION\n  | typeof MKV_EXTENSION\n  | typeof WEBM_EXTENSION\n\nexport interface Video extends IFile<VideoProvider> {\n  kind: typeof FileKind.Video\n  type: VideoType\n}\n\nexport type FTPVideo = IFTPFileProvider\n\nexport interface OneDriveVideo extends IOneDriveFileProvider {\n  bitrate: number\n  duration: number\n  height: number\n  width: number\n  audioChannels: number\n  audioFormat: string\n  fourCC: string\n  frameRate: number\n}\n","import { AccPerson, Person } from './Person'\nimport { Episode, EpisodeLike } from './Episode'\nimport { Movie, MovieLike } from './Movie'\nimport { Season, SeasonLike } from './Season'\nimport { Show, ShowLike } from './Show'\nimport { Caption } from '../files/Caption'\nimport { Video } from '../files/Video'\n\nexport enum ItemKind {\n  Episode,\n  Movie,\n  Person,\n  Season,\n  Show,\n}\n\nexport interface Usage {\n  lastWatched: string | undefined\n  progress: number | undefined\n}\n\nexport interface IItem {\n  kind: ItemKind\n  id: string\n  tmdbId: number\n}\n\nexport interface IMediaItem extends IItem {\n  usage: Usage\n}\n\nexport interface IWatchableMediaItem extends IMediaItem {\n  sources: Video[]\n  captions: Caption[]\n}\n\nexport type Item = Episode | Movie | Person | AccPerson | Season | Show\n\nexport type ItemLike = Item | EpisodeLike | MovieLike | SeasonLike | ShowLike\n","import { IItem, ItemKind } from './Item'\n\nexport enum Gender {\n  Female,\n  Male,\n  Unknown,\n}\n\nexport enum Job {\n  Acting = 'Acting',\n  Casting = 'Casting',\n  CostumeDesign = 'Costume Design',\n  Director = 'Director',\n  DirectorOfPhotography = 'Director of Photography',\n  ExecutiveProducer = 'Executive Producer',\n  Editor = 'Editor',\n  OriginalMusicComposer = 'Original Music Composer',\n  Producer = 'Producer',\n  Screenplay = 'Screenplay',\n  SoundDesigner = 'Sound Designer',\n  UnitProductionManager = 'Unit Production Manager',\n  Writer = 'Writer',\n}\n\ninterface IPerson extends IItem {\n  kind: typeof ItemKind.Person\n  title: string\n  gender: Gender\n  posterPath: string | undefined\n}\n\nexport interface AccPerson extends IPerson {\n  characters: string[]\n  jobs: Job[] | undefined\n}\n\nexport interface Person extends IPerson {\n  job: Job | undefined\n}\n\nexport interface CastMember extends Person {\n  character: string\n}\n\nexport interface CrewMember extends Person {\n  department: string\n}\n","import { FTP } from './FTP'\nimport { OneDrive } from './OneDrive'\n\nexport enum ProviderKind {\n  FTP,\n  OneDrive,\n}\n\nexport type ProviderKindWithRedirect = ProviderKind.OneDrive\n\nexport const PROVIDER_KINDS = [ProviderKind.OneDrive, ProviderKind.FTP]\nexport const DISABLED_PROVIDER_KINDS = [ProviderKind.FTP]\n\nexport interface IProvider {\n  kind: ProviderKind\n  id: string\n  name: string\n  moviesPath: string | undefined\n  showsPath: string | undefined\n}\n\nexport type Provider = FTP | OneDrive\n\nexport type ProviderWithRedirect = Provider & { kind: ProviderKindWithRedirect }\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const FTPIcon = () => (\n  <Icon className=\"ftp\" x={-3} y={-3} width={38} height={38}>\n    <title>FTP</title>\n    <path\n      d=\"M31,18H1a1,1,0,0,0-1,1V29a1,1,0,0,0,1,1H31a1,1,0,0,0,1-1V19A1,1,0,0,0,31,18ZM12,25H5V23h7Zm14,0a1,1,0,1,1,1-1A1,1,0,0,1,26,25Z\"\n      fill=\"#ffffff\"\n    ></path>\n    <path\n      d=\"M31,2H1A1,1,0,0,0,0,3V13a1,1,0,0,0,1,1H4v3H6V14H26v3h2V14h3a1,1,0,0,0,1-1V3A1,1,0,0,0,31,2ZM12,9H5V7h7ZM25,8a1,1,0,1,1,1,1A1,1,0,0,1,25,8Z\"\n      fill=\"#ffffff\"\n    ></path>\n  </Icon>\n)\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const OneDriveIcon = () => (\n  <Icon className=\"onedrive\" x={46} y={55} width={420} height={420}>\n    <title>OneDrive</title>\n    <path\n      fill=\"#ffffff\"\n      d=\"M187.086,257.178C195.2,215.782,232.1,184.2,275.5,184.2a90.068,90.068,0,0,1,67.023,29.858,75.786,75.786,0,0,1,21.951-3.221h.121A89.982,89.982,0,0,0,194.871,180.31a64.544,64.544,0,0,0-94.64,71.96,56.825,56.825,0,0,0,2.629,113.591h33.975a69.824,69.824,0,0,1,50.251-108.683ZM466,336.292a44.781,44.781,0,0,1-44.783,44.783h-226.6a54.43,54.43,0,1,1,0-108.859,55.073,55.073,0,0,1,6.266.379A74.656,74.656,0,0,1,337.454,232.6a61.279,61.279,0,0,1,88.4,55.053c0,1.375-.114,2.719-.205,4.078A44.787,44.787,0,0,1,466,336.292Z\"\n    />\n  </Icon>\n)\n","import { FALLBACK_BACKDROP_URL, FALLBACK_COVER_URL } from './constants'\nimport { FileProvider, VideoProvider } from './types/files/FileProvider'\nimport { Gender, Job } from './types/items/Person'\nimport { IMediaItem, Item, ItemKind } from './types/items/Item'\nimport { M4V_EXTENSION, MP4_EXTENSION, Video } from './types/files/Video'\nimport { Provider, ProviderKind } from './types/providers/Provider'\nimport { Caption } from './types/files/Caption'\nimport { FTPIcon } from './components/icons/Nucleo/FTPIcon'\nimport ISO6391 from 'iso-639-1'\nimport { OneDriveIcon } from './components/icons/Nucleo/OneDriveIcon'\nimport React from 'react'\nimport { TFunction } from 'i18next'\nimport { buildTMDbImageUrl } from './services/databases/TMDb/util'\n\nexport const notUndefined = <T extends unknown>(x: T | undefined): x is T =>\n  x !== undefined\n\nexport const isInProgress = (item: IMediaItem) =>\n  item.usage.progress !== undefined && item.usage.progress != 0\n\nexport const wasRecentlyWatched = (item: IMediaItem, thresh: Date) =>\n  !isInProgress(item) &&\n  item.usage.lastWatched !== undefined &&\n  new Date(item.usage.lastWatched) > thresh\n\nexport const sortByNumber = <T extends unknown>(\n  items: T[],\n  getAttr: (item: T) => number,\n) => items.sort((a, b) => getAttr(a) - getAttr(b))\n\nexport const sortByLastWatched = <T extends IMediaItem>(items: T[]) =>\n  sortByNumber(items, (item) =>\n    item.usage.lastWatched !== undefined\n      ? -new Date(item.usage.lastWatched).getTime()\n      : 0,\n  )\n\nexport const sortAlphabetically = <T extends unknown>(\n  items: T[],\n  getAttr: (item: T) => string,\n) => items.sort((a, b) => (getAttr(a) < getAttr(b) ? -1 : 1))\n\nexport const splitHoursAndMinutes = (t: TFunction, duration: number) => {\n  const hours = Math.floor(duration / 60)\n  const minutes = duration % 60\n\n  return (\n    <>\n      {hours > 0 && hours + t('h')}\n      {hours !== 0 && minutes !== 0 ? ' ' : ''}\n      {minutes > 0 && minutes + t('m')}\n    </>\n  )\n}\n\nexport const buildBackdropUrl = (backdropPath: string | undefined) =>\n  backdropPath ? buildTMDbImageUrl(backdropPath) : FALLBACK_BACKDROP_URL\n\nexport const buildCoverUrl = (posterPath: string | undefined) =>\n  posterPath ? buildTMDbImageUrl(posterPath) : FALLBACK_COVER_URL\n\nexport const buildItemUrl = (item: Item): string => {\n  switch (item.kind) {\n    case ItemKind.Episode:\n      return `/app/seasons/${item.seasonId}`\n    case ItemKind.Movie:\n      return `/app/movies/${item.id}`\n    case ItemKind.Person:\n      return `/app/people/${item.id}`\n    case ItemKind.Season:\n      return `/app/seasons/${item.id}`\n    case ItemKind.Show:\n      return `/app/shows/${item.id}`\n  }\n}\n\nexport const buildFileDownloadUrl = (\n  provider: Provider,\n  file: FileProvider,\n): string => {\n  switch (file.kind) {\n    case ProviderKind.FTP:\n      if (provider.kind !== ProviderKind.FTP)\n        throw new Error(\n          'Internal error: attempted to determine download URL with the wrong provider.',\n        )\n      return `ftp://${provider.username}:${provider.password}@${provider.host}:${provider.port}/${file.path}/${file.fileName}`\n    case ProviderKind.OneDrive:\n      return file.downloadUrl\n  }\n}\n\nexport const buildVideoType = (file: Video): string => {\n  switch (file.type) {\n    case M4V_EXTENSION:\n      return MP4_EXTENSION\n    default:\n      return file.type\n  }\n}\n\nexport const buildVideoSize = (file: VideoProvider): number | undefined => {\n  switch (file.kind) {\n    case ProviderKind.FTP:\n      return undefined\n    case ProviderKind.OneDrive:\n      return file.height\n  }\n}\n\nexport const buildCaptionSrcLang = (caption: Caption): string =>\n  ISO6391.getCode(caption.name)\n\nexport const buildProviderKindName = (\n  t: TFunction,\n  kind: ProviderKind,\n): string => {\n  switch (kind) {\n    case ProviderKind.FTP:\n      return t('FTP Server')\n    case ProviderKind.OneDrive:\n      return t('OneDrive')\n  }\n}\n\nexport const buildProviderIcon = (kind: ProviderKind): JSX.Element => {\n  switch (kind) {\n    case ProviderKind.FTP:\n      return <FTPIcon />\n    case ProviderKind.OneDrive:\n      return <OneDriveIcon />\n  }\n}\n\nexport const buildJobTitle = (\n  t: TFunction,\n  job: Job | undefined,\n  gender: Gender,\n): string => {\n  if (job === undefined) return t('Unknown')\n  if (gender === Gender.Male) return t(`JOB [M] ${job}`)\n  return t(`JOB [F] ${job}`)\n}\n\nexport const buildCommitId = (sha: string) => sha.substring(0, 7)\n\nexport const parseDateToISOString = (date: string) => {\n  try {\n    return new Date(date).toISOString()\n  } catch (error: unknown) {\n    console.error(error) // eslint-disable-line no-console\n    return undefined\n  }\n}\n","import './SoundWaveIcon.scss'\nimport { Icon } from './Icon'\nimport React from 'react'\n\nexport const SoundWaveIcon = () => (\n  <Icon className=\"SoundWave\" width={1704.01} height={1653.92}>\n    <defs>\n      <style>{`.cls-1,.cls-2{fill:none;stroke:#ff2fc1;stroke-miterlimit:10;}.cls-1{stroke-width:200px;}.cls-2{stroke-width:250px;}`}</style>\n    </defs>\n    <title>Plaain</title>\n    <g id=\"Layer_2\" data-name=\"Layer 2\">\n      <g id=\"Layer_1-2\" data-name=\"Layer 1\">\n        <path className=\"cls-1 USOQBrWX_0\" d=\"M1782.69,418\"></path>\n        <path\n          className=\"cls-2 USOQBrWX_1\"\n          d=\"M104.1,1202.51c184.48,277.54,285.43,342.7,342.94,323.23,171.43-58,12.92-887.15,146.05-917C628,601,693.91,681.44,825.78,842.41c120.88,147.54,205.58,274.72,275.7,258.17,23.24-5.49,47.24-38,19-470.06-17.29-265-42.4-499,1.49-505.44l.5-.06a5.54,5.54,0,0,1,.84,0c32.94,2.1,216.4,317,216.4,317,48.91,83.57,136.81,186.52,307.88,272.95\"\n        ></path>\n      </g>\n    </g>\n    <style data-made-with=\"vivus-instant\">{`.USOQBrWX_0{stroke-dasharray:0 2;stroke-dashoffset:1;animation:USOQBrWX_draw_0 950ms ease-in-out 0ms infinite,USOQBrWX_fade 950ms linear 0ms infinite;}.USOQBrWX_1{stroke-dasharray:3975 3977;stroke-dashoffset:3976;animation:USOQBrWX_draw_1 950ms ease-in-out 0ms infinite,USOQBrWX_fade 950ms linear 0ms infinite;}@keyframes USOQBrWX_draw{100%{stroke-dashoffset:0;}}@keyframes USOQBrWX_fade{0%{stroke-opacity:1;}78.94736842105263%{stroke-opacity:1;}100%{stroke-opacity:0;}}@keyframes USOQBrWX_draw_0{0%{stroke-dashoffset: 1}52.63157894736842%{ stroke-dashoffset: 0;}100%{ stroke-dashoffset: 0;}}@keyframes USOQBrWX_draw_1{26.31578947368421%{stroke-dashoffset: 3976}78.94736842105263%{ stroke-dashoffset: 0;}100%{ stroke-dashoffset: 0;}}`}</style>\n  </Icon>\n)\n","import './Loading.scss'\nimport React from 'react'\nimport { SoundWaveIcon } from '../components/icons/SoundWaveIcon'\n\nexport const Loading = () => (\n  <div className=\"Loading\">\n    <div className=\"Loading__wrapper\">\n      <SoundWaveIcon />\n    </div>\n  </div>\n)\n","import './NotFound.scss'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\n\nexport const NotFound = () => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"NotFound\">\n      <h2>{t('You want to get lost?')}</h2>\n      <p>\n        <Trans>\n          This path went astray... If you do want to get lost, we recommend{' '}\n          <a\n            href=\"https://www.imdb.com/title/tt6969502/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Get Lost!\n          </a>{' '}\n          by Mirjam de With.\n        </Trans>\n      </p>\n      <p>\n        <Trans>\n          If all you&apos;re looking for is to get back on track: you can{' '}\n          <Link to=\"/app\">find home this way</Link>.\n        </Trans>\n      </p>\n    </div>\n  )\n}\n","////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Actions represent the type of change to a location value.\n */\nexport enum Action {\n  /**\n   * A POP indicates a change to an arbitrary index in the history stack, such\n   * as a back or forward navigation. It does not describe the direction of the\n   * navigation, only that the current index changed.\n   *\n   * Note: This is the default action for newly created history objects.\n   */\n  Pop = \"POP\",\n\n  /**\n   * A PUSH indicates a new entry being added to the history stack, such as when\n   * a link is clicked and a new page loads. When this happens, all subsequent\n   * entries in the stack are lost.\n   */\n  Push = \"PUSH\",\n\n  /**\n   * A REPLACE indicates the entry at the current index in the history stack\n   * being replaced by a new one.\n   */\n  Replace = \"REPLACE\",\n}\n\n/**\n * The pathname, search, and hash values of a URL.\n */\nexport interface Path {\n  /**\n   * A URL pathname, beginning with a /.\n   */\n  pathname: string;\n\n  /**\n   * A URL search string, beginning with a ?.\n   */\n  search: string;\n\n  /**\n   * A URL fragment identifier, beginning with a #.\n   */\n  hash: string;\n}\n\n// TODO: (v7) Change the Location generic default from `any` to `unknown` and\n// remove Remix `useLocation` wrapper.\n\n/**\n * An entry in a history stack. A location contains information about the\n * URL path, as well as possibly some arbitrary state and a key.\n */\nexport interface Location<State = any> extends Path {\n  /**\n   * A value of arbitrary data associated with this location.\n   */\n  state: State;\n\n  /**\n   * A unique string associated with this location. May be used to safely store\n   * and retrieve data in some other storage API, like `localStorage`.\n   *\n   * Note: This value is always \"default\" on the initial location.\n   */\n  key: string;\n}\n\n/**\n * A change to the current location.\n */\nexport interface Update {\n  /**\n   * The action that triggered the change.\n   */\n  action: Action;\n\n  /**\n   * The new location.\n   */\n  location: Location;\n\n  /**\n   * The delta between this location and the former location in the history stack\n   */\n  delta: number | null;\n}\n\n/**\n * A function that receives notifications about location changes.\n */\nexport interface Listener {\n  (update: Update): void;\n}\n\n/**\n * Describes a location that is the destination of some navigation, either via\n * `history.push` or `history.replace`. This may be either a URL or the pieces\n * of a URL path.\n */\nexport type To = string | Partial<Path>;\n\n/**\n * A history is an interface to the navigation stack. The history serves as the\n * source of truth for the current location, as well as provides a set of\n * methods that may be used to change it.\n *\n * It is similar to the DOM's `window.history` object, but with a smaller, more\n * focused API.\n */\nexport interface History {\n  /**\n   * The last action that modified the current location. This will always be\n   * Action.Pop when a history instance is first created. This value is mutable.\n   */\n  readonly action: Action;\n\n  /**\n   * The current location. This value is mutable.\n   */\n  readonly location: Location;\n\n  /**\n   * Returns a valid href for the given `to` value that may be used as\n   * the value of an <a href> attribute.\n   *\n   * @param to - The destination URL\n   */\n  createHref(to: To): string;\n\n  /**\n   * Returns a URL for the given `to` value\n   *\n   * @param to - The destination URL\n   */\n  createURL(to: To): URL;\n\n  /**\n   * Encode a location the same way window.history would do (no-op for memory\n   * history) so we ensure our PUSH/REPLACE navigations for data routers\n   * behave the same as POP\n   *\n   * @param to Unencoded path\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * Pushes a new location onto the history stack, increasing its length by one.\n   * If there were any entries in the stack after the current one, they are\n   * lost.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  push(to: To, state?: any): void;\n\n  /**\n   * Replaces the current location in the history stack with a new one.  The\n   * location that was replaced will no longer be available.\n   *\n   * @param to - The new URL\n   * @param state - Data to associate with the new location\n   */\n  replace(to: To, state?: any): void;\n\n  /**\n   * Navigates `n` entries backward/forward in the history stack relative to the\n   * current index. For example, a \"back\" navigation would use go(-1).\n   *\n   * @param delta - The delta in the stack index\n   */\n  go(delta: number): void;\n\n  /**\n   * Sets up a listener that will be called whenever the current location\n   * changes.\n   *\n   * @param listener - A function that will be called when the location changes\n   * @returns unlisten - A function that may be used to stop listening\n   */\n  listen(listener: Listener): () => void;\n}\n\ntype HistoryState = {\n  usr: any;\n  key?: string;\n  idx: number;\n};\n\nconst PopStateEventType = \"popstate\";\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Memory History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A user-supplied object that describes a location. Used when providing\n * entries to `createMemoryHistory` via its `initialEntries` option.\n */\nexport type InitialEntry = string | Partial<Location>;\n\nexport type MemoryHistoryOptions = {\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  v5Compat?: boolean;\n};\n\n/**\n * A memory history stores locations in memory. This is useful in stateful\n * environments where there is no web browser, such as node tests or React\n * Native.\n */\nexport interface MemoryHistory extends History {\n  /**\n   * The current index in the history stack.\n   */\n  readonly index: number;\n}\n\n/**\n * Memory history stores the current location in memory. It is designed for use\n * in stateful non-browser environments like tests and React Native.\n */\nexport function createMemoryHistory(\n  options: MemoryHistoryOptions = {}\n): MemoryHistory {\n  let { initialEntries = [\"/\"], initialIndex, v5Compat = false } = options;\n  let entries: Location[]; // Declare so we can access from createMemoryLocation\n  entries = initialEntries.map((entry, index) =>\n    createMemoryLocation(\n      entry,\n      typeof entry === \"string\" ? null : entry.state,\n      index === 0 ? \"default\" : undefined\n    )\n  );\n  let index = clampIndex(\n    initialIndex == null ? entries.length - 1 : initialIndex\n  );\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  function clampIndex(n: number): number {\n    return Math.min(Math.max(n, 0), entries.length - 1);\n  }\n  function getCurrentLocation(): Location {\n    return entries[index];\n  }\n  function createMemoryLocation(\n    to: To,\n    state: any = null,\n    key?: string\n  ): Location {\n    let location = createLocation(\n      entries ? getCurrentLocation().pathname : \"/\",\n      to,\n      state,\n      key\n    );\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in memory history: ${JSON.stringify(\n        to\n      )}`\n    );\n    return location;\n  }\n\n  function createHref(to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  let history: MemoryHistory = {\n    get index() {\n      return index;\n    },\n    get action() {\n      return action;\n    },\n    get location() {\n      return getCurrentLocation();\n    },\n    createHref,\n    createURL(to) {\n      return new URL(createHref(to), \"http://localhost\");\n    },\n    encodeLocation(to: To) {\n      let path = typeof to === \"string\" ? parsePath(to) : to;\n      return {\n        pathname: path.pathname || \"\",\n        search: path.search || \"\",\n        hash: path.hash || \"\",\n      };\n    },\n    push(to, state) {\n      action = Action.Push;\n      let nextLocation = createMemoryLocation(to, state);\n      index += 1;\n      entries.splice(index, entries.length, nextLocation);\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 1 });\n      }\n    },\n    replace(to, state) {\n      action = Action.Replace;\n      let nextLocation = createMemoryLocation(to, state);\n      entries[index] = nextLocation;\n      if (v5Compat && listener) {\n        listener({ action, location: nextLocation, delta: 0 });\n      }\n    },\n    go(delta) {\n      action = Action.Pop;\n      let nextIndex = clampIndex(index + delta);\n      let nextLocation = entries[nextIndex];\n      index = nextIndex;\n      if (listener) {\n        listener({ action, location: nextLocation, delta });\n      }\n    },\n    listen(fn: Listener) {\n      listener = fn;\n      return () => {\n        listener = null;\n      };\n    },\n  };\n\n  return history;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Browser History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A browser history stores the current location in regular URLs in a web\n * browser environment. This is the standard for most web apps and provides the\n * cleanest URLs the browser's address bar.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#browserhistory\n */\nexport interface BrowserHistory extends UrlHistory {}\n\nexport type BrowserHistoryOptions = UrlHistoryOptions;\n\n/**\n * Browser history stores the location in regular URLs. This is the standard for\n * most web apps, but it requires some configuration on the server to ensure you\n * serve the same app at multiple URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createbrowserhistory\n */\nexport function createBrowserHistory(\n  options: BrowserHistoryOptions = {}\n): BrowserHistory {\n  function createBrowserLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let { pathname, search, hash } = window.location;\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createBrowserHref(window: Window, to: To) {\n    return typeof to === \"string\" ? to : createPath(to);\n  }\n\n  return getUrlBasedHistory(\n    createBrowserLocation,\n    createBrowserHref,\n    null,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hash History\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A hash history stores the current location in the fragment identifier portion\n * of the URL in a web browser environment.\n *\n * This is ideal for apps that do not control the server for some reason\n * (because the fragment identifier is never sent to the server), including some\n * shared hosting environments that do not provide fine-grained controls over\n * which pages are served at which URLs.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#hashhistory\n */\nexport interface HashHistory extends UrlHistory {}\n\nexport type HashHistoryOptions = UrlHistoryOptions;\n\n/**\n * Hash history stores the location in window.location.hash. This makes it ideal\n * for situations where you don't want to send the location to the server for\n * some reason, either because you do cannot configure it or the URL space is\n * reserved for something else.\n *\n * @see https://github.com/remix-run/history/tree/main/docs/api-reference.md#createhashhistory\n */\nexport function createHashHistory(\n  options: HashHistoryOptions = {}\n): HashHistory {\n  function createHashLocation(\n    window: Window,\n    globalHistory: Window[\"history\"]\n  ) {\n    let {\n      pathname = \"/\",\n      search = \"\",\n      hash = \"\",\n    } = parsePath(window.location.hash.substr(1));\n\n    // Hash URL should always have a leading / just like window.location.pathname\n    // does, so if an app ends up at a route like /#something then we add a\n    // leading slash so all of our path-matching behaves the same as if it would\n    // in a browser router.  This is particularly important when there exists a\n    // root splat route (<Route path=\"*\">) since that matches internally against\n    // \"/*\" and we'd expect /#something to 404 in a hash router app.\n    if (!pathname.startsWith(\"/\") && !pathname.startsWith(\".\")) {\n      pathname = \"/\" + pathname;\n    }\n\n    return createLocation(\n      \"\",\n      { pathname, search, hash },\n      // state defaults to `null` because `window.history.state` does\n      (globalHistory.state && globalHistory.state.usr) || null,\n      (globalHistory.state && globalHistory.state.key) || \"default\"\n    );\n  }\n\n  function createHashHref(window: Window, to: To) {\n    let base = window.document.querySelector(\"base\");\n    let href = \"\";\n\n    if (base && base.getAttribute(\"href\")) {\n      let url = window.location.href;\n      let hashIndex = url.indexOf(\"#\");\n      href = hashIndex === -1 ? url : url.slice(0, hashIndex);\n    }\n\n    return href + \"#\" + (typeof to === \"string\" ? to : createPath(to));\n  }\n\n  function validateHashLocation(location: Location, to: To) {\n    warning(\n      location.pathname.charAt(0) === \"/\",\n      `relative pathnames are not supported in hash history.push(${JSON.stringify(\n        to\n      )})`\n    );\n  }\n\n  return getUrlBasedHistory(\n    createHashLocation,\n    createHashHref,\n    validateHashLocation,\n    options\n  );\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region UTILS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @private\n */\nexport function invariant(value: boolean, message?: string): asserts value;\nexport function invariant<T>(\n  value: T | null | undefined,\n  message?: string\n): asserts value is T;\nexport function invariant(value: any, message?: string) {\n  if (value === false || value === null || typeof value === \"undefined\") {\n    throw new Error(message);\n  }\n}\n\nexport function warning(cond: any, message: string) {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging history!\n      //\n      // This error is thrown as a convenience, so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\nfunction createKey() {\n  return Math.random().toString(36).substr(2, 8);\n}\n\n/**\n * For browser-based histories, we combine the state and key into an object\n */\nfunction getHistoryState(location: Location, index: number): HistoryState {\n  return {\n    usr: location.state,\n    key: location.key,\n    idx: index,\n  };\n}\n\n/**\n * Creates a Location object with a unique key from the given Path\n */\nexport function createLocation(\n  current: string | Location,\n  to: To,\n  state: any = null,\n  key?: string\n): Readonly<Location> {\n  let location: Readonly<Location> = {\n    pathname: typeof current === \"string\" ? current : current.pathname,\n    search: \"\",\n    hash: \"\",\n    ...(typeof to === \"string\" ? parsePath(to) : to),\n    state,\n    // TODO: This could be cleaned up.  push/replace should probably just take\n    // full Locations now and avoid the need to run through this flow at all\n    // But that's a pretty big refactor to the current test suite so going to\n    // keep as is for the time being and just let any incoming keys take precedence\n    key: (to && (to as Location).key) || key || createKey(),\n  };\n  return location;\n}\n\n/**\n * Creates a string URL path from the given pathname, search, and hash components.\n */\nexport function createPath({\n  pathname = \"/\",\n  search = \"\",\n  hash = \"\",\n}: Partial<Path>) {\n  if (search && search !== \"?\")\n    pathname += search.charAt(0) === \"?\" ? search : \"?\" + search;\n  if (hash && hash !== \"#\")\n    pathname += hash.charAt(0) === \"#\" ? hash : \"#\" + hash;\n  return pathname;\n}\n\n/**\n * Parses a string URL path into its separate pathname, search, and hash components.\n */\nexport function parsePath(path: string): Partial<Path> {\n  let parsedPath: Partial<Path> = {};\n\n  if (path) {\n    let hashIndex = path.indexOf(\"#\");\n    if (hashIndex >= 0) {\n      parsedPath.hash = path.substr(hashIndex);\n      path = path.substr(0, hashIndex);\n    }\n\n    let searchIndex = path.indexOf(\"?\");\n    if (searchIndex >= 0) {\n      parsedPath.search = path.substr(searchIndex);\n      path = path.substr(0, searchIndex);\n    }\n\n    if (path) {\n      parsedPath.pathname = path;\n    }\n  }\n\n  return parsedPath;\n}\n\nexport interface UrlHistory extends History {}\n\nexport type UrlHistoryOptions = {\n  window?: Window;\n  v5Compat?: boolean;\n};\n\nfunction getUrlBasedHistory(\n  getLocation: (window: Window, globalHistory: Window[\"history\"]) => Location,\n  createHref: (window: Window, to: To) => string,\n  validateLocation: ((location: Location, to: To) => void) | null,\n  options: UrlHistoryOptions = {}\n): UrlHistory {\n  let { window = document.defaultView!, v5Compat = false } = options;\n  let globalHistory = window.history;\n  let action = Action.Pop;\n  let listener: Listener | null = null;\n\n  let index = getIndex()!;\n  // Index should only be null when we initialize. If not, it's because the\n  // user called history.pushState or history.replaceState directly, in which\n  // case we should log a warning as it will result in bugs.\n  if (index == null) {\n    index = 0;\n    globalHistory.replaceState({ ...globalHistory.state, idx: index }, \"\");\n  }\n\n  function getIndex(): number {\n    let state = globalHistory.state || { idx: null };\n    return state.idx;\n  }\n\n  function handlePop() {\n    action = Action.Pop;\n    let nextIndex = getIndex();\n    let delta = nextIndex == null ? null : nextIndex - index;\n    index = nextIndex;\n    if (listener) {\n      listener({ action, location: history.location, delta });\n    }\n  }\n\n  function push(to: To, state?: any) {\n    action = Action.Push;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex() + 1;\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n\n    // try...catch because iOS limits us to 100 pushState calls :/\n    try {\n      globalHistory.pushState(historyState, \"\", url);\n    } catch (error) {\n      // If the exception is because `state` can't be serialized, let that throw\n      // outwards just like a replace call would so the dev knows the cause\n      // https://html.spec.whatwg.org/multipage/nav-history-apis.html#shared-history-push/replace-state-steps\n      // https://html.spec.whatwg.org/multipage/structured-data.html#structuredserializeinternal\n      if (error instanceof DOMException && error.name === \"DataCloneError\") {\n        throw error;\n      }\n      // They are going to lose state here, but there is no real\n      // way to warn them about it since the page will refresh...\n      window.location.assign(url);\n    }\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 1 });\n    }\n  }\n\n  function replace(to: To, state?: any) {\n    action = Action.Replace;\n    let location = createLocation(history.location, to, state);\n    if (validateLocation) validateLocation(location, to);\n\n    index = getIndex();\n    let historyState = getHistoryState(location, index);\n    let url = history.createHref(location);\n    globalHistory.replaceState(historyState, \"\", url);\n\n    if (v5Compat && listener) {\n      listener({ action, location: history.location, delta: 0 });\n    }\n  }\n\n  function createURL(to: To): URL {\n    // window.location.origin is \"null\" (the literal string value) in Firefox\n    // under certain conditions, notably when serving from a local HTML file\n    // See https://bugzilla.mozilla.org/show_bug.cgi?id=878297\n    let base =\n      window.location.origin !== \"null\"\n        ? window.location.origin\n        : window.location.href;\n\n    let href = typeof to === \"string\" ? to : createPath(to);\n    invariant(\n      base,\n      `No window.location.(origin|href) available to create URL for href: ${href}`\n    );\n    return new URL(href, base);\n  }\n\n  let history: History = {\n    get action() {\n      return action;\n    },\n    get location() {\n      return getLocation(window, globalHistory);\n    },\n    listen(fn: Listener) {\n      if (listener) {\n        throw new Error(\"A history only accepts one active listener\");\n      }\n      window.addEventListener(PopStateEventType, handlePop);\n      listener = fn;\n\n      return () => {\n        window.removeEventListener(PopStateEventType, handlePop);\n        listener = null;\n      };\n    },\n    createHref(to) {\n      return createHref(window, to);\n    },\n    createURL,\n    encodeLocation(to) {\n      // Encode a Location the same way window.location would\n      let url = createURL(to);\n      return {\n        pathname: url.pathname,\n        search: url.search,\n        hash: url.hash,\n      };\n    },\n    push,\n    replace,\n    go(n) {\n      return globalHistory.go(n);\n    },\n  };\n\n  return history;\n}\n\n//#endregion\n","import type { Location, Path, To } from \"./history\";\nimport { invariant, parsePath, warning } from \"./history\";\n\n/**\n * Map of routeId -> data returned from a loader/action/error\n */\nexport interface RouteData {\n  [routeId: string]: any;\n}\n\nexport enum ResultType {\n  data = \"data\",\n  deferred = \"deferred\",\n  redirect = \"redirect\",\n  error = \"error\",\n}\n\n/**\n * Successful result from a loader or action\n */\nexport interface SuccessResult {\n  type: ResultType.data;\n  data: any;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Successful defer() result from a loader or action\n */\nexport interface DeferredResult {\n  type: ResultType.deferred;\n  deferredData: DeferredData;\n  statusCode?: number;\n  headers?: Headers;\n}\n\n/**\n * Redirect result from a loader or action\n */\nexport interface RedirectResult {\n  type: ResultType.redirect;\n  status: number;\n  location: string;\n  revalidate: boolean;\n  reloadDocument?: boolean;\n}\n\n/**\n * Unsuccessful result from a loader or action\n */\nexport interface ErrorResult {\n  type: ResultType.error;\n  error: any;\n  headers?: Headers;\n}\n\n/**\n * Result from a loader or action - potentially successful or unsuccessful\n */\nexport type DataResult =\n  | SuccessResult\n  | DeferredResult\n  | RedirectResult\n  | ErrorResult;\n\ntype LowerCaseFormMethod = \"get\" | \"post\" | \"put\" | \"patch\" | \"delete\";\ntype UpperCaseFormMethod = Uppercase<LowerCaseFormMethod>;\n\n/**\n * Users can specify either lowercase or uppercase form methods on <Form>,\n * useSubmit(), <fetcher.Form>, etc.\n */\nexport type HTMLFormMethod = LowerCaseFormMethod | UpperCaseFormMethod;\n\n/**\n * Active navigation/fetcher form methods are exposed in lowercase on the\n * RouterState\n */\nexport type FormMethod = LowerCaseFormMethod;\nexport type MutationFormMethod = Exclude<FormMethod, \"get\">;\n\n/**\n * In v7, active navigation/fetcher form methods are exposed in uppercase on the\n * RouterState.  This is to align with the normalization done via fetch().\n */\nexport type V7_FormMethod = UpperCaseFormMethod;\nexport type V7_MutationFormMethod = Exclude<V7_FormMethod, \"GET\">;\n\nexport type FormEncType =\n  | \"application/x-www-form-urlencoded\"\n  | \"multipart/form-data\"\n  | \"application/json\"\n  | \"text/plain\";\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\n/**\n * @private\n * Internal interface to pass around for action submissions, not intended for\n * external consumption\n */\nexport type Submission =\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: FormData;\n      json: undefined;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: JsonValue;\n      text: undefined;\n    }\n  | {\n      formMethod: FormMethod | V7_FormMethod;\n      formAction: string;\n      formEncType: FormEncType;\n      formData: undefined;\n      json: undefined;\n      text: string;\n    };\n\n/**\n * @private\n * Arguments passed to route loader/action functions.  Same for now but we keep\n * this as a private implementation detail in case they diverge in the future.\n */\ninterface DataFunctionArgs<Context> {\n  request: Request;\n  params: Params;\n  context?: Context;\n}\n\n// TODO: (v7) Change the defaults from any to unknown in and remove Remix wrappers:\n//   ActionFunction, ActionFunctionArgs, LoaderFunction, LoaderFunctionArgs\n//   Also, make them a type alias instead of an interface\n\n/**\n * Arguments passed to loader functions\n */\nexport interface LoaderFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Arguments passed to action functions\n */\nexport interface ActionFunctionArgs<Context = any>\n  extends DataFunctionArgs<Context> {}\n\n/**\n * Loaders and actions can return anything except `undefined` (`null` is a\n * valid return value if there is no data to return).  Responses are preferred\n * and will ease any future migration to Remix\n */\ntype DataFunctionValue = Response | NonNullable<unknown> | null;\n\n/**\n * Route loader function signature\n */\nexport interface LoaderFunction<Context = any> {\n  (args: LoaderFunctionArgs<Context>):\n    | Promise<DataFunctionValue>\n    | DataFunctionValue;\n}\n\n/**\n * Route action function signature\n */\nexport interface ActionFunction<Context = any> {\n  (args: ActionFunctionArgs<Context>):\n    | Promise<DataFunctionValue>\n    | DataFunctionValue;\n}\n\n/**\n * Arguments passed to shouldRevalidate function\n */\nexport interface ShouldRevalidateFunctionArgs {\n  currentUrl: URL;\n  currentParams: AgnosticDataRouteMatch[\"params\"];\n  nextUrl: URL;\n  nextParams: AgnosticDataRouteMatch[\"params\"];\n  formMethod?: Submission[\"formMethod\"];\n  formAction?: Submission[\"formAction\"];\n  formEncType?: Submission[\"formEncType\"];\n  text?: Submission[\"text\"];\n  formData?: Submission[\"formData\"];\n  json?: Submission[\"json\"];\n  actionResult?: any;\n  defaultShouldRevalidate: boolean;\n}\n\n/**\n * Route shouldRevalidate function signature.  This runs after any submission\n * (navigation or fetcher), so we flatten the navigation/fetcher submission\n * onto the arguments.  It shouldn't matter whether it came from a navigation\n * or a fetcher, what really matters is the URLs and the formData since loaders\n * have to re-run based on the data models that were potentially mutated.\n */\nexport interface ShouldRevalidateFunction {\n  (args: ShouldRevalidateFunctionArgs): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set `hasErrorBoundary`\n * from the framework-aware `errorElement` prop\n *\n * @deprecated Use `mapRouteProperties` instead\n */\nexport interface DetectErrorBoundaryFunction {\n  (route: AgnosticRouteObject): boolean;\n}\n\n/**\n * Function provided by the framework-aware layers to set any framework-specific\n * properties from framework-agnostic properties\n */\nexport interface MapRoutePropertiesFunction {\n  (route: AgnosticRouteObject): {\n    hasErrorBoundary: boolean;\n  } & Record<string, any>;\n}\n\n/**\n * Keys we cannot change from within a lazy() function. We spread all other keys\n * onto the route. Either they're meaningful to the router, or they'll get\n * ignored.\n */\nexport type ImmutableRouteKey =\n  | \"lazy\"\n  | \"caseSensitive\"\n  | \"path\"\n  | \"id\"\n  | \"index\"\n  | \"children\";\n\nexport const immutableRouteKeys = new Set<ImmutableRouteKey>([\n  \"lazy\",\n  \"caseSensitive\",\n  \"path\",\n  \"id\",\n  \"index\",\n  \"children\",\n]);\n\ntype RequireOne<T, Key = keyof T> = Exclude<\n  {\n    [K in keyof T]: K extends Key ? Omit<T, K> & Required<Pick<T, K>> : never;\n  }[keyof T],\n  undefined\n>;\n\n/**\n * lazy() function to load a route definition, which can add non-matching\n * related properties to a route\n */\nexport interface LazyRouteFunction<R extends AgnosticRouteObject> {\n  (): Promise<RequireOne<Omit<R, ImmutableRouteKey>>>;\n}\n\n/**\n * Base RouteObject with common props shared by all types of routes\n */\ntype AgnosticBaseRouteObject = {\n  caseSensitive?: boolean;\n  path?: string;\n  id?: string;\n  loader?: LoaderFunction;\n  action?: ActionFunction;\n  hasErrorBoundary?: boolean;\n  shouldRevalidate?: ShouldRevalidateFunction;\n  handle?: any;\n  lazy?: LazyRouteFunction<AgnosticBaseRouteObject>;\n};\n\n/**\n * Index routes must not have children\n */\nexport type AgnosticIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: undefined;\n  index: true;\n};\n\n/**\n * Non-index routes may have children, but cannot have index\n */\nexport type AgnosticNonIndexRouteObject = AgnosticBaseRouteObject & {\n  children?: AgnosticRouteObject[];\n  index?: false;\n};\n\n/**\n * A route object represents a logical route, with (optionally) its child\n * routes organized in a tree-like structure.\n */\nexport type AgnosticRouteObject =\n  | AgnosticIndexRouteObject\n  | AgnosticNonIndexRouteObject;\n\nexport type AgnosticDataIndexRouteObject = AgnosticIndexRouteObject & {\n  id: string;\n};\n\nexport type AgnosticDataNonIndexRouteObject = AgnosticNonIndexRouteObject & {\n  children?: AgnosticDataRouteObject[];\n  id: string;\n};\n\n/**\n * A data route object, which is just a RouteObject with a required unique ID\n */\nexport type AgnosticDataRouteObject =\n  | AgnosticDataIndexRouteObject\n  | AgnosticDataNonIndexRouteObject;\n\nexport type RouteManifest = Record<string, AgnosticDataRouteObject | undefined>;\n\n// Recursive helper for finding path parameters in the absence of wildcards\ntype _PathParam<Path extends string> =\n  // split path into individual path segments\n  Path extends `${infer L}/${infer R}`\n    ? _PathParam<L> | _PathParam<R>\n    : // find params after `:`\n    Path extends `:${infer Param}`\n    ? Param extends `${infer Optional}?`\n      ? Optional\n      : Param\n    : // otherwise, there aren't any params present\n      never;\n\n/**\n * Examples:\n * \"/a/b/*\" -> \"*\"\n * \":a\" -> \"a\"\n * \"/a/:b\" -> \"b\"\n * \"/a/blahblahblah:b\" -> \"b\"\n * \"/:a/:b\" -> \"a\" | \"b\"\n * \"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\"\n */\ntype PathParam<Path extends string> =\n  // check if path is just a wildcard\n  Path extends \"*\" | \"/*\"\n    ? \"*\"\n    : // look for wildcard at the end of the path\n    Path extends `${infer Rest}/*`\n    ? \"*\" | _PathParam<Rest>\n    : // look for params in the absence of wildcards\n      _PathParam<Path>;\n\n// Attempt to parse the given string segment. If it fails, then just return the\n// plain string type as a default fallback. Otherwise, return the union of the\n// parsed string literals that were referenced as dynamic segments in the route.\nexport type ParamParseKey<Segment extends string> =\n  // if you could not find path params, fallback to `string`\n  [PathParam<Segment>] extends [never] ? string : PathParam<Segment>;\n\n/**\n * The parameters that were parsed from the URL path.\n */\nexport type Params<Key extends string = string> = {\n  readonly [key in Key]: string | undefined;\n};\n\n/**\n * A RouteMatch contains info about how a route matched a URL.\n */\nexport interface AgnosticRouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The route object that was used to match.\n   */\n  route: RouteObjectType;\n}\n\nexport interface AgnosticDataRouteMatch\n  extends AgnosticRouteMatch<string, AgnosticDataRouteObject> {}\n\nfunction isIndexRoute(\n  route: AgnosticRouteObject\n): route is AgnosticIndexRouteObject {\n  return route.index === true;\n}\n\n// Walk the route tree generating unique IDs where necessary, so we are working\n// solely with AgnosticDataRouteObject's within the Router\nexport function convertRoutesToDataRoutes(\n  routes: AgnosticRouteObject[],\n  mapRouteProperties: MapRoutePropertiesFunction,\n  parentPath: number[] = [],\n  manifest: RouteManifest = {}\n): AgnosticDataRouteObject[] {\n  return routes.map((route, index) => {\n    let treePath = [...parentPath, index];\n    let id = typeof route.id === \"string\" ? route.id : treePath.join(\"-\");\n    invariant(\n      route.index !== true || !route.children,\n      `Cannot specify children on an index route`\n    );\n    invariant(\n      !manifest[id],\n      `Found a route id collision on id \"${id}\".  Route ` +\n        \"id's must be globally unique within Data Router usages\"\n    );\n\n    if (isIndexRoute(route)) {\n      let indexRoute: AgnosticDataIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n      };\n      manifest[id] = indexRoute;\n      return indexRoute;\n    } else {\n      let pathOrLayoutRoute: AgnosticDataNonIndexRouteObject = {\n        ...route,\n        ...mapRouteProperties(route),\n        id,\n        children: undefined,\n      };\n      manifest[id] = pathOrLayoutRoute;\n\n      if (route.children) {\n        pathOrLayoutRoute.children = convertRoutesToDataRoutes(\n          route.children,\n          mapRouteProperties,\n          treePath,\n          manifest\n        );\n      }\n\n      return pathOrLayoutRoute;\n    }\n  });\n}\n\n/**\n * Matches the given routes to a location and returns the match data.\n *\n * @see https://reactrouter.com/utils/match-routes\n */\nexport function matchRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  locationArg: Partial<Location> | string,\n  basename = \"/\"\n): AgnosticRouteMatch<string, RouteObjectType>[] | null {\n  let location =\n    typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n  let pathname = stripBasename(location.pathname || \"/\", basename);\n\n  if (pathname == null) {\n    return null;\n  }\n\n  let branches = flattenRoutes(routes);\n  rankRouteBranches(branches);\n\n  let matches = null;\n  for (let i = 0; matches == null && i < branches.length; ++i) {\n    matches = matchRouteBranch<string, RouteObjectType>(\n      branches[i],\n      // Incoming pathnames are generally encoded from either window.location\n      // or from router.navigate, but we want to match against the unencoded\n      // paths in the route definitions.  Memory router locations won't be\n      // encoded here but there also shouldn't be anything to decode so this\n      // should be a safe operation.  This avoids needing matchRoutes to be\n      // history-aware.\n      safelyDecodeURI(pathname)\n    );\n  }\n\n  return matches;\n}\n\nexport interface UIMatch<Data = unknown, Handle = unknown> {\n  id: string;\n  pathname: string;\n  params: AgnosticRouteMatch[\"params\"];\n  data: Data;\n  handle: Handle;\n}\n\nexport function convertRouteMatchToUiMatch(\n  match: AgnosticDataRouteMatch,\n  loaderData: RouteData\n): UIMatch {\n  let { route, pathname, params } = match;\n  return {\n    id: route.id,\n    pathname,\n    params,\n    data: loaderData[route.id],\n    handle: route.handle,\n  };\n}\n\ninterface RouteMeta<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  relativePath: string;\n  caseSensitive: boolean;\n  childrenIndex: number;\n  route: RouteObjectType;\n}\n\ninterface RouteBranch<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n> {\n  path: string;\n  score: number;\n  routesMeta: RouteMeta<RouteObjectType>[];\n}\n\nfunction flattenRoutes<\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  routes: RouteObjectType[],\n  branches: RouteBranch<RouteObjectType>[] = [],\n  parentsMeta: RouteMeta<RouteObjectType>[] = [],\n  parentPath = \"\"\n): RouteBranch<RouteObjectType>[] {\n  let flattenRoute = (\n    route: RouteObjectType,\n    index: number,\n    relativePath?: string\n  ) => {\n    let meta: RouteMeta<RouteObjectType> = {\n      relativePath:\n        relativePath === undefined ? route.path || \"\" : relativePath,\n      caseSensitive: route.caseSensitive === true,\n      childrenIndex: index,\n      route,\n    };\n\n    if (meta.relativePath.startsWith(\"/\")) {\n      invariant(\n        meta.relativePath.startsWith(parentPath),\n        `Absolute route path \"${meta.relativePath}\" nested under path ` +\n          `\"${parentPath}\" is not valid. An absolute child route path ` +\n          `must start with the combined path of all its parent routes.`\n      );\n\n      meta.relativePath = meta.relativePath.slice(parentPath.length);\n    }\n\n    let path = joinPaths([parentPath, meta.relativePath]);\n    let routesMeta = parentsMeta.concat(meta);\n\n    // Add the children before adding this route to the array, so we traverse the\n    // route tree depth-first and child routes appear before their parents in\n    // the \"flattened\" version.\n    if (route.children && route.children.length > 0) {\n      invariant(\n        // Our types know better, but runtime JS may not!\n        // @ts-expect-error\n        route.index !== true,\n        `Index routes must not have child routes. Please remove ` +\n          `all child routes from route path \"${path}\".`\n      );\n\n      flattenRoutes(route.children, branches, routesMeta, path);\n    }\n\n    // Routes without a path shouldn't ever match by themselves unless they are\n    // index routes, so don't add them to the list of possible branches.\n    if (route.path == null && !route.index) {\n      return;\n    }\n\n    branches.push({\n      path,\n      score: computeScore(path, route.index),\n      routesMeta,\n    });\n  };\n  routes.forEach((route, index) => {\n    // coarse-grain check for optional params\n    if (route.path === \"\" || !route.path?.includes(\"?\")) {\n      flattenRoute(route, index);\n    } else {\n      for (let exploded of explodeOptionalSegments(route.path)) {\n        flattenRoute(route, index, exploded);\n      }\n    }\n  });\n\n  return branches;\n}\n\n/**\n * Computes all combinations of optional path segments for a given path,\n * excluding combinations that are ambiguous and of lower priority.\n *\n * For example, `/one/:two?/three/:four?/:five?` explodes to:\n * - `/one/three`\n * - `/one/:two/three`\n * - `/one/three/:four`\n * - `/one/three/:five`\n * - `/one/:two/three/:four`\n * - `/one/:two/three/:five`\n * - `/one/three/:four/:five`\n * - `/one/:two/three/:four/:five`\n */\nfunction explodeOptionalSegments(path: string): string[] {\n  let segments = path.split(\"/\");\n  if (segments.length === 0) return [];\n\n  let [first, ...rest] = segments;\n\n  // Optional path segments are denoted by a trailing `?`\n  let isOptional = first.endsWith(\"?\");\n  // Compute the corresponding required segment: `foo?` -> `foo`\n  let required = first.replace(/\\?$/, \"\");\n\n  if (rest.length === 0) {\n    // Intepret empty string as omitting an optional segment\n    // `[\"one\", \"\", \"three\"]` corresponds to omitting `:two` from `/one/:two?/three` -> `/one/three`\n    return isOptional ? [required, \"\"] : [required];\n  }\n\n  let restExploded = explodeOptionalSegments(rest.join(\"/\"));\n\n  let result: string[] = [];\n\n  // All child paths with the prefix.  Do this for all children before the\n  // optional version for all children, so we get consistent ordering where the\n  // parent optional aspect is preferred as required.  Otherwise, we can get\n  // child sections interspersed where deeper optional segments are higher than\n  // parent optional segments, where for example, /:two would explode _earlier_\n  // then /:one.  By always including the parent as required _for all children_\n  // first, we avoid this issue\n  result.push(\n    ...restExploded.map((subpath) =>\n      subpath === \"\" ? required : [required, subpath].join(\"/\")\n    )\n  );\n\n  // Then, if this is an optional value, add all child versions without\n  if (isOptional) {\n    result.push(...restExploded);\n  }\n\n  // for absolute paths, ensure `/` instead of empty segment\n  return result.map((exploded) =>\n    path.startsWith(\"/\") && exploded === \"\" ? \"/\" : exploded\n  );\n}\n\nfunction rankRouteBranches(branches: RouteBranch[]): void {\n  branches.sort((a, b) =>\n    a.score !== b.score\n      ? b.score - a.score // Higher score first\n      : compareIndexes(\n          a.routesMeta.map((meta) => meta.childrenIndex),\n          b.routesMeta.map((meta) => meta.childrenIndex)\n        )\n  );\n}\n\nconst paramRe = /^:\\w+$/;\nconst dynamicSegmentValue = 3;\nconst indexRouteValue = 2;\nconst emptySegmentValue = 1;\nconst staticSegmentValue = 10;\nconst splatPenalty = -2;\nconst isSplat = (s: string) => s === \"*\";\n\nfunction computeScore(path: string, index: boolean | undefined): number {\n  let segments = path.split(\"/\");\n  let initialScore = segments.length;\n  if (segments.some(isSplat)) {\n    initialScore += splatPenalty;\n  }\n\n  if (index) {\n    initialScore += indexRouteValue;\n  }\n\n  return segments\n    .filter((s) => !isSplat(s))\n    .reduce(\n      (score, segment) =>\n        score +\n        (paramRe.test(segment)\n          ? dynamicSegmentValue\n          : segment === \"\"\n          ? emptySegmentValue\n          : staticSegmentValue),\n      initialScore\n    );\n}\n\nfunction compareIndexes(a: number[], b: number[]): number {\n  let siblings =\n    a.length === b.length && a.slice(0, -1).every((n, i) => n === b[i]);\n\n  return siblings\n    ? // If two routes are siblings, we should try to match the earlier sibling\n      // first. This allows people to have fine-grained control over the matching\n      // behavior by simply putting routes with identical paths in the order they\n      // want them tried.\n      a[a.length - 1] - b[b.length - 1]\n    : // Otherwise, it doesn't really make sense to rank non-siblings by index,\n      // so they sort equally.\n      0;\n}\n\nfunction matchRouteBranch<\n  ParamKey extends string = string,\n  RouteObjectType extends AgnosticRouteObject = AgnosticRouteObject\n>(\n  branch: RouteBranch<RouteObjectType>,\n  pathname: string\n): AgnosticRouteMatch<ParamKey, RouteObjectType>[] | null {\n  let { routesMeta } = branch;\n\n  let matchedParams = {};\n  let matchedPathname = \"/\";\n  let matches: AgnosticRouteMatch<ParamKey, RouteObjectType>[] = [];\n  for (let i = 0; i < routesMeta.length; ++i) {\n    let meta = routesMeta[i];\n    let end = i === routesMeta.length - 1;\n    let remainingPathname =\n      matchedPathname === \"/\"\n        ? pathname\n        : pathname.slice(matchedPathname.length) || \"/\";\n    let match = matchPath(\n      { path: meta.relativePath, caseSensitive: meta.caseSensitive, end },\n      remainingPathname\n    );\n\n    if (!match) return null;\n\n    Object.assign(matchedParams, match.params);\n\n    let route = meta.route;\n\n    matches.push({\n      // TODO: Can this as be avoided?\n      params: matchedParams as Params<ParamKey>,\n      pathname: joinPaths([matchedPathname, match.pathname]),\n      pathnameBase: normalizePathname(\n        joinPaths([matchedPathname, match.pathnameBase])\n      ),\n      route,\n    });\n\n    if (match.pathnameBase !== \"/\") {\n      matchedPathname = joinPaths([matchedPathname, match.pathnameBase]);\n    }\n  }\n\n  return matches;\n}\n\n/**\n * Returns a path with params interpolated.\n *\n * @see https://reactrouter.com/utils/generate-path\n */\nexport function generatePath<Path extends string>(\n  originalPath: Path,\n  params: {\n    [key in PathParam<Path>]: string | null;\n  } = {} as any\n): string {\n  let path: string = originalPath;\n  if (path.endsWith(\"*\") && path !== \"*\" && !path.endsWith(\"/*\")) {\n    warning(\n      false,\n      `Route path \"${path}\" will be treated as if it were ` +\n        `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n        `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n        `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n    );\n    path = path.replace(/\\*$/, \"/*\") as Path;\n  }\n\n  // ensure `/` is added at the beginning if the path is absolute\n  const prefix = path.startsWith(\"/\") ? \"/\" : \"\";\n\n  const stringify = (p: any) =>\n    p == null ? \"\" : typeof p === \"string\" ? p : String(p);\n\n  const segments = path\n    .split(/\\/+/)\n    .map((segment, index, array) => {\n      const isLastSegment = index === array.length - 1;\n\n      // only apply the splat if it's the last segment\n      if (isLastSegment && segment === \"*\") {\n        const star = \"*\" as PathParam<Path>;\n        // Apply the splat\n        return stringify(params[star]);\n      }\n\n      const keyMatch = segment.match(/^:(\\w+)(\\??)$/);\n      if (keyMatch) {\n        const [, key, optional] = keyMatch;\n        let param = params[key as PathParam<Path>];\n        invariant(optional === \"?\" || param != null, `Missing \":${key}\" param`);\n        return stringify(param);\n      }\n\n      // Remove any optional markers from optional static segments\n      return segment.replace(/\\?$/g, \"\");\n    })\n    // Remove empty segments\n    .filter((segment) => !!segment);\n\n  return prefix + segments.join(\"/\");\n}\n\n/**\n * A PathPattern is used to match on some portion of a URL pathname.\n */\nexport interface PathPattern<Path extends string = string> {\n  /**\n   * A string to match against a URL pathname. May contain `:id`-style segments\n   * to indicate placeholders for dynamic parameters. May also end with `/*` to\n   * indicate matching the rest of the URL pathname.\n   */\n  path: Path;\n  /**\n   * Should be `true` if the static portions of the `path` should be matched in\n   * the same case.\n   */\n  caseSensitive?: boolean;\n  /**\n   * Should be `true` if this pattern should match the entire URL pathname.\n   */\n  end?: boolean;\n}\n\n/**\n * A PathMatch contains info about how a PathPattern matched on a URL pathname.\n */\nexport interface PathMatch<ParamKey extends string = string> {\n  /**\n   * The names and values of dynamic parameters in the URL.\n   */\n  params: Params<ParamKey>;\n  /**\n   * The portion of the URL pathname that was matched.\n   */\n  pathname: string;\n  /**\n   * The portion of the URL pathname that was matched before child routes.\n   */\n  pathnameBase: string;\n  /**\n   * The pattern that was used to match.\n   */\n  pattern: PathPattern;\n}\n\ntype Mutable<T> = {\n  -readonly [P in keyof T]: T[P];\n};\n\n/**\n * Performs pattern matching on a URL pathname and returns information about\n * the match.\n *\n * @see https://reactrouter.com/utils/match-path\n */\nexport function matchPath<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(\n  pattern: PathPattern<Path> | Path,\n  pathname: string\n): PathMatch<ParamKey> | null {\n  if (typeof pattern === \"string\") {\n    pattern = { path: pattern, caseSensitive: false, end: true };\n  }\n\n  let [matcher, paramNames] = compilePath(\n    pattern.path,\n    pattern.caseSensitive,\n    pattern.end\n  );\n\n  let match = pathname.match(matcher);\n  if (!match) return null;\n\n  let matchedPathname = match[0];\n  let pathnameBase = matchedPathname.replace(/(.)\\/+$/, \"$1\");\n  let captureGroups = match.slice(1);\n  let params: Params = paramNames.reduce<Mutable<Params>>(\n    (memo, paramName, index) => {\n      // We need to compute the pathnameBase here using the raw splat value\n      // instead of using params[\"*\"] later because it will be decoded then\n      if (paramName === \"*\") {\n        let splatValue = captureGroups[index] || \"\";\n        pathnameBase = matchedPathname\n          .slice(0, matchedPathname.length - splatValue.length)\n          .replace(/(.)\\/+$/, \"$1\");\n      }\n\n      memo[paramName] = safelyDecodeURIComponent(\n        captureGroups[index] || \"\",\n        paramName\n      );\n      return memo;\n    },\n    {}\n  );\n\n  return {\n    params,\n    pathname: matchedPathname,\n    pathnameBase,\n    pattern,\n  };\n}\n\nfunction compilePath(\n  path: string,\n  caseSensitive = false,\n  end = true\n): [RegExp, string[]] {\n  warning(\n    path === \"*\" || !path.endsWith(\"*\") || path.endsWith(\"/*\"),\n    `Route path \"${path}\" will be treated as if it were ` +\n      `\"${path.replace(/\\*$/, \"/*\")}\" because the \\`*\\` character must ` +\n      `always follow a \\`/\\` in the pattern. To get rid of this warning, ` +\n      `please change the route path to \"${path.replace(/\\*$/, \"/*\")}\".`\n  );\n\n  let paramNames: string[] = [];\n  let regexpSource =\n    \"^\" +\n    path\n      .replace(/\\/*\\*?$/, \"\") // Ignore trailing / and /*, we'll handle it below\n      .replace(/^\\/*/, \"/\") // Make sure it has a leading /\n      .replace(/[\\\\.*+^$?{}|()[\\]]/g, \"\\\\$&\") // Escape special regex chars\n      .replace(/\\/:(\\w+)/g, (_: string, paramName: string) => {\n        paramNames.push(paramName);\n        return \"/([^\\\\/]+)\";\n      });\n\n  if (path.endsWith(\"*\")) {\n    paramNames.push(\"*\");\n    regexpSource +=\n      path === \"*\" || path === \"/*\"\n        ? \"(.*)$\" // Already matched the initial /, just match the rest\n        : \"(?:\\\\/(.+)|\\\\/*)$\"; // Don't include the / in params[\"*\"]\n  } else if (end) {\n    // When matching to the end, ignore trailing slashes\n    regexpSource += \"\\\\/*$\";\n  } else if (path !== \"\" && path !== \"/\") {\n    // If our path is non-empty and contains anything beyond an initial slash,\n    // then we have _some_ form of path in our regex, so we should expect to\n    // match only if we find the end of this path segment.  Look for an optional\n    // non-captured trailing slash (to match a portion of the URL) or the end\n    // of the path (if we've matched to the end).  We used to do this with a\n    // word boundary but that gives false positives on routes like\n    // /user-preferences since `-` counts as a word boundary.\n    regexpSource += \"(?:(?=\\\\/|$))\";\n  } else {\n    // Nothing to match for \"\" or \"/\"\n  }\n\n  let matcher = new RegExp(regexpSource, caseSensitive ? undefined : \"i\");\n\n  return [matcher, paramNames];\n}\n\nfunction safelyDecodeURI(value: string) {\n  try {\n    return decodeURI(value);\n  } catch (error) {\n    warning(\n      false,\n      `The URL path \"${value}\" could not be decoded because it is is a ` +\n        `malformed URL segment. This is probably due to a bad percent ` +\n        `encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\nfunction safelyDecodeURIComponent(value: string, paramName: string) {\n  try {\n    return decodeURIComponent(value);\n  } catch (error) {\n    warning(\n      false,\n      `The value for the URL param \"${paramName}\" will not be decoded because` +\n        ` the string \"${value}\" is a malformed URL segment. This is probably` +\n        ` due to a bad percent encoding (${error}).`\n    );\n\n    return value;\n  }\n}\n\n/**\n * @private\n */\nexport function stripBasename(\n  pathname: string,\n  basename: string\n): string | null {\n  if (basename === \"/\") return pathname;\n\n  if (!pathname.toLowerCase().startsWith(basename.toLowerCase())) {\n    return null;\n  }\n\n  // We want to leave trailing slash behavior in the user's control, so if they\n  // specify a basename with a trailing slash, we should support it\n  let startIndex = basename.endsWith(\"/\")\n    ? basename.length - 1\n    : basename.length;\n  let nextChar = pathname.charAt(startIndex);\n  if (nextChar && nextChar !== \"/\") {\n    // pathname does not start with basename/\n    return null;\n  }\n\n  return pathname.slice(startIndex) || \"/\";\n}\n\n/**\n * Returns a resolved path object relative to the given pathname.\n *\n * @see https://reactrouter.com/utils/resolve-path\n */\nexport function resolvePath(to: To, fromPathname = \"/\"): Path {\n  let {\n    pathname: toPathname,\n    search = \"\",\n    hash = \"\",\n  } = typeof to === \"string\" ? parsePath(to) : to;\n\n  let pathname = toPathname\n    ? toPathname.startsWith(\"/\")\n      ? toPathname\n      : resolvePathname(toPathname, fromPathname)\n    : fromPathname;\n\n  return {\n    pathname,\n    search: normalizeSearch(search),\n    hash: normalizeHash(hash),\n  };\n}\n\nfunction resolvePathname(relativePath: string, fromPathname: string): string {\n  let segments = fromPathname.replace(/\\/+$/, \"\").split(\"/\");\n  let relativeSegments = relativePath.split(\"/\");\n\n  relativeSegments.forEach((segment) => {\n    if (segment === \"..\") {\n      // Keep the root \"\" segment so the pathname starts at /\n      if (segments.length > 1) segments.pop();\n    } else if (segment !== \".\") {\n      segments.push(segment);\n    }\n  });\n\n  return segments.length > 1 ? segments.join(\"/\") : \"/\";\n}\n\nfunction getInvalidPathError(\n  char: string,\n  field: string,\n  dest: string,\n  path: Partial<Path>\n) {\n  return (\n    `Cannot include a '${char}' character in a manually specified ` +\n    `\\`to.${field}\\` field [${JSON.stringify(\n      path\n    )}].  Please separate it out to the ` +\n    `\\`to.${dest}\\` field. Alternatively you may provide the full path as ` +\n    `a string in <Link to=\"...\"> and the router will parse it for you.`\n  );\n}\n\n/**\n * @private\n *\n * When processing relative navigation we want to ignore ancestor routes that\n * do not contribute to the path, such that index/pathless layout routes don't\n * interfere.\n *\n * For example, when moving a route element into an index route and/or a\n * pathless layout route, relative link behavior contained within should stay\n * the same.  Both of the following examples should link back to the root:\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\" element={<Link to=\"..\"}>\n *   </Route>\n *\n *   <Route path=\"/\">\n *     <Route path=\"accounts\">\n *       <Route element={<AccountsLayout />}>       // <-- Does not contribute\n *         <Route index element={<Link to=\"..\"} />  // <-- Does not contribute\n *       </Route\n *     </Route>\n *   </Route>\n */\nexport function getPathContributingMatches<\n  T extends AgnosticRouteMatch = AgnosticRouteMatch\n>(matches: T[]) {\n  return matches.filter(\n    (match, index) =>\n      index === 0 || (match.route.path && match.route.path.length > 0)\n  );\n}\n\n/**\n * @private\n */\nexport function resolveTo(\n  toArg: To,\n  routePathnames: string[],\n  locationPathname: string,\n  isPathRelative = false\n): Path {\n  let to: Partial<Path>;\n  if (typeof toArg === \"string\") {\n    to = parsePath(toArg);\n  } else {\n    to = { ...toArg };\n\n    invariant(\n      !to.pathname || !to.pathname.includes(\"?\"),\n      getInvalidPathError(\"?\", \"pathname\", \"search\", to)\n    );\n    invariant(\n      !to.pathname || !to.pathname.includes(\"#\"),\n      getInvalidPathError(\"#\", \"pathname\", \"hash\", to)\n    );\n    invariant(\n      !to.search || !to.search.includes(\"#\"),\n      getInvalidPathError(\"#\", \"search\", \"hash\", to)\n    );\n  }\n\n  let isEmptyPath = toArg === \"\" || to.pathname === \"\";\n  let toPathname = isEmptyPath ? \"/\" : to.pathname;\n\n  let from: string;\n\n  // Routing is relative to the current pathname if explicitly requested.\n  //\n  // If a pathname is explicitly provided in `to`, it should be relative to the\n  // route context. This is explained in `Note on `<Link to>` values` in our\n  // migration guide from v5 as a means of disambiguation between `to` values\n  // that begin with `/` and those that do not. However, this is problematic for\n  // `to` values that do not provide a pathname. `to` can simply be a search or\n  // hash string, in which case we should assume that the navigation is relative\n  // to the current location's pathname and *not* the route pathname.\n  if (isPathRelative || toPathname == null) {\n    from = locationPathname;\n  } else {\n    let routePathnameIndex = routePathnames.length - 1;\n\n    if (toPathname.startsWith(\"..\")) {\n      let toSegments = toPathname.split(\"/\");\n\n      // Each leading .. segment means \"go up one route\" instead of \"go up one\n      // URL segment\".  This is a key difference from how <a href> works and a\n      // major reason we call this a \"to\" value instead of a \"href\".\n      while (toSegments[0] === \"..\") {\n        toSegments.shift();\n        routePathnameIndex -= 1;\n      }\n\n      to.pathname = toSegments.join(\"/\");\n    }\n\n    // If there are more \"..\" segments than parent routes, resolve relative to\n    // the root / URL.\n    from = routePathnameIndex >= 0 ? routePathnames[routePathnameIndex] : \"/\";\n  }\n\n  let path = resolvePath(to, from);\n\n  // Ensure the pathname has a trailing slash if the original \"to\" had one\n  let hasExplicitTrailingSlash =\n    toPathname && toPathname !== \"/\" && toPathname.endsWith(\"/\");\n  // Or if this was a link to the current path which has a trailing slash\n  let hasCurrentTrailingSlash =\n    (isEmptyPath || toPathname === \".\") && locationPathname.endsWith(\"/\");\n  if (\n    !path.pathname.endsWith(\"/\") &&\n    (hasExplicitTrailingSlash || hasCurrentTrailingSlash)\n  ) {\n    path.pathname += \"/\";\n  }\n\n  return path;\n}\n\n/**\n * @private\n */\nexport function getToPathname(to: To): string | undefined {\n  // Empty strings should be treated the same as / paths\n  return to === \"\" || (to as Path).pathname === \"\"\n    ? \"/\"\n    : typeof to === \"string\"\n    ? parsePath(to).pathname\n    : to.pathname;\n}\n\n/**\n * @private\n */\nexport const joinPaths = (paths: string[]): string =>\n  paths.join(\"/\").replace(/\\/\\/+/g, \"/\");\n\n/**\n * @private\n */\nexport const normalizePathname = (pathname: string): string =>\n  pathname.replace(/\\/+$/, \"\").replace(/^\\/*/, \"/\");\n\n/**\n * @private\n */\nexport const normalizeSearch = (search: string): string =>\n  !search || search === \"?\"\n    ? \"\"\n    : search.startsWith(\"?\")\n    ? search\n    : \"?\" + search;\n\n/**\n * @private\n */\nexport const normalizeHash = (hash: string): string =>\n  !hash || hash === \"#\" ? \"\" : hash.startsWith(\"#\") ? hash : \"#\" + hash;\n\nexport type JsonFunction = <Data>(\n  data: Data,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * This is a shortcut for creating `application/json` responses. Converts `data`\n * to JSON and sets the `Content-Type` header.\n */\nexport const json: JsonFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  let headers = new Headers(responseInit.headers);\n  if (!headers.has(\"Content-Type\")) {\n    headers.set(\"Content-Type\", \"application/json; charset=utf-8\");\n  }\n\n  return new Response(JSON.stringify(data), {\n    ...responseInit,\n    headers,\n  });\n};\n\nexport interface TrackedPromise extends Promise<any> {\n  _tracked?: boolean;\n  _data?: any;\n  _error?: any;\n}\n\nexport class AbortedDeferredError extends Error {}\n\nexport class DeferredData {\n  private pendingKeysSet: Set<string> = new Set<string>();\n  private controller: AbortController;\n  private abortPromise: Promise<void>;\n  private unlistenAbortSignal: () => void;\n  private subscribers: Set<(aborted: boolean, settledKey?: string) => void> =\n    new Set();\n  data: Record<string, unknown>;\n  init?: ResponseInit;\n  deferredKeys: string[] = [];\n\n  constructor(data: Record<string, unknown>, responseInit?: ResponseInit) {\n    invariant(\n      data && typeof data === \"object\" && !Array.isArray(data),\n      \"defer() only accepts plain objects\"\n    );\n\n    // Set up an AbortController + Promise we can race against to exit early\n    // cancellation\n    let reject: (e: AbortedDeferredError) => void;\n    this.abortPromise = new Promise((_, r) => (reject = r));\n    this.controller = new AbortController();\n    let onAbort = () =>\n      reject(new AbortedDeferredError(\"Deferred data aborted\"));\n    this.unlistenAbortSignal = () =>\n      this.controller.signal.removeEventListener(\"abort\", onAbort);\n    this.controller.signal.addEventListener(\"abort\", onAbort);\n\n    this.data = Object.entries(data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: this.trackPromise(key, value),\n        }),\n      {}\n    );\n\n    if (this.done) {\n      // All incoming values were resolved\n      this.unlistenAbortSignal();\n    }\n\n    this.init = responseInit;\n  }\n\n  private trackPromise(\n    key: string,\n    value: Promise<unknown> | unknown\n  ): TrackedPromise | unknown {\n    if (!(value instanceof Promise)) {\n      return value;\n    }\n\n    this.deferredKeys.push(key);\n    this.pendingKeysSet.add(key);\n\n    // We store a little wrapper promise that will be extended with\n    // _data/_error props upon resolve/reject\n    let promise: TrackedPromise = Promise.race([value, this.abortPromise]).then(\n      (data) => this.onSettle(promise, key, undefined, data as unknown),\n      (error) => this.onSettle(promise, key, error as unknown)\n    );\n\n    // Register rejection listeners to avoid uncaught promise rejections on\n    // errors or aborted deferred values\n    promise.catch(() => {});\n\n    Object.defineProperty(promise, \"_tracked\", { get: () => true });\n    return promise;\n  }\n\n  private onSettle(\n    promise: TrackedPromise,\n    key: string,\n    error: unknown,\n    data?: unknown\n  ): unknown {\n    if (\n      this.controller.signal.aborted &&\n      error instanceof AbortedDeferredError\n    ) {\n      this.unlistenAbortSignal();\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      return Promise.reject(error);\n    }\n\n    this.pendingKeysSet.delete(key);\n\n    if (this.done) {\n      // Nothing left to abort!\n      this.unlistenAbortSignal();\n    }\n\n    // If the promise was resolved/rejected with undefined, we'll throw an error as you\n    // should always resolve with a value or null\n    if (error === undefined && data === undefined) {\n      let undefinedError = new Error(\n        `Deferred data for key \"${key}\" resolved/rejected with \\`undefined\\`, ` +\n          `you must resolve/reject with a value or \\`null\\`.`\n      );\n      Object.defineProperty(promise, \"_error\", { get: () => undefinedError });\n      this.emit(false, key);\n      return Promise.reject(undefinedError);\n    }\n\n    if (data === undefined) {\n      Object.defineProperty(promise, \"_error\", { get: () => error });\n      this.emit(false, key);\n      return Promise.reject(error);\n    }\n\n    Object.defineProperty(promise, \"_data\", { get: () => data });\n    this.emit(false, key);\n    return data;\n  }\n\n  private emit(aborted: boolean, settledKey?: string) {\n    this.subscribers.forEach((subscriber) => subscriber(aborted, settledKey));\n  }\n\n  subscribe(fn: (aborted: boolean, settledKey?: string) => void) {\n    this.subscribers.add(fn);\n    return () => this.subscribers.delete(fn);\n  }\n\n  cancel() {\n    this.controller.abort();\n    this.pendingKeysSet.forEach((v, k) => this.pendingKeysSet.delete(k));\n    this.emit(true);\n  }\n\n  async resolveData(signal: AbortSignal) {\n    let aborted = false;\n    if (!this.done) {\n      let onAbort = () => this.cancel();\n      signal.addEventListener(\"abort\", onAbort);\n      aborted = await new Promise((resolve) => {\n        this.subscribe((aborted) => {\n          signal.removeEventListener(\"abort\", onAbort);\n          if (aborted || this.done) {\n            resolve(aborted);\n          }\n        });\n      });\n    }\n    return aborted;\n  }\n\n  get done() {\n    return this.pendingKeysSet.size === 0;\n  }\n\n  get unwrappedData() {\n    invariant(\n      this.data !== null && this.done,\n      \"Can only unwrap data on initialized and settled deferreds\"\n    );\n\n    return Object.entries(this.data).reduce(\n      (acc, [key, value]) =>\n        Object.assign(acc, {\n          [key]: unwrapTrackedPromise(value),\n        }),\n      {}\n    );\n  }\n\n  get pendingKeys() {\n    return Array.from(this.pendingKeysSet);\n  }\n}\n\nfunction isTrackedPromise(value: any): value is TrackedPromise {\n  return (\n    value instanceof Promise && (value as TrackedPromise)._tracked === true\n  );\n}\n\nfunction unwrapTrackedPromise(value: any) {\n  if (!isTrackedPromise(value)) {\n    return value;\n  }\n\n  if (value._error) {\n    throw value._error;\n  }\n  return value._data;\n}\n\nexport type DeferFunction = (\n  data: Record<string, unknown>,\n  init?: number | ResponseInit\n) => DeferredData;\n\nexport const defer: DeferFunction = (data, init = {}) => {\n  let responseInit = typeof init === \"number\" ? { status: init } : init;\n\n  return new DeferredData(data, responseInit);\n};\n\nexport type RedirectFunction = (\n  url: string,\n  init?: number | ResponseInit\n) => Response;\n\n/**\n * A redirect response. Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirect: RedirectFunction = (url, init = 302) => {\n  let responseInit = init;\n  if (typeof responseInit === \"number\") {\n    responseInit = { status: responseInit };\n  } else if (typeof responseInit.status === \"undefined\") {\n    responseInit.status = 302;\n  }\n\n  let headers = new Headers(responseInit.headers);\n  headers.set(\"Location\", url);\n\n  return new Response(null, {\n    ...responseInit,\n    headers,\n  });\n};\n\n/**\n * A redirect response that will force a document reload to the new location.\n * Sets the status code and the `Location` header.\n * Defaults to \"302 Found\".\n */\nexport const redirectDocument: RedirectFunction = (url, init) => {\n  let response = redirect(url, init);\n  response.headers.set(\"X-Remix-Reload-Document\", \"true\");\n  return response;\n};\n\n/**\n * @private\n * Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n */\nexport class ErrorResponseImpl {\n  status: number;\n  statusText: string;\n  data: any;\n  private error?: Error;\n  private internal: boolean;\n\n  constructor(\n    status: number,\n    statusText: string | undefined,\n    data: any,\n    internal = false\n  ) {\n    this.status = status;\n    this.statusText = statusText || \"\";\n    this.internal = internal;\n    if (data instanceof Error) {\n      this.data = data.toString();\n      this.error = data;\n    } else {\n      this.data = data;\n    }\n  }\n}\n\n// We don't want the class exported since usage of it at runtime is an\n// implementation detail, but we do want to export the shape so folks can\n// build their own abstractions around instances via isRouteErrorResponse()\nexport type ErrorResponse = InstanceType<typeof ErrorResponseImpl>;\n\n/**\n * Check if the given error is an ErrorResponse generated from a 4xx/5xx\n * Response thrown from an action/loader\n */\nexport function isRouteErrorResponse(error: any): error is ErrorResponse {\n  return (\n    error != null &&\n    typeof error.status === \"number\" &&\n    typeof error.statusText === \"string\" &&\n    typeof error.internal === \"boolean\" &&\n    \"data\" in error\n  );\n}\n","import type { History, Location, Path, To } from \"./history\";\nimport {\n  Action as HistoryAction,\n  createLocation,\n  createPath,\n  invariant,\n  parsePath,\n  warning,\n} from \"./history\";\nimport type {\n  ActionFunction,\n  AgnosticDataRouteMatch,\n  AgnosticDataRouteObject,\n  AgnosticRouteObject,\n  DataResult,\n  DeferredData,\n  DeferredResult,\n  DetectErrorBoundaryFunction,\n  ErrorResult,\n  FormEncType,\n  FormMethod,\n  HTMLFormMethod,\n  ImmutableRouteKey,\n  LoaderFunction,\n  MapRoutePropertiesFunction,\n  MutationFormMethod,\n  RedirectResult,\n  RouteData,\n  RouteManifest,\n  ShouldRevalidateFunctionArgs,\n  Submission,\n  SuccessResult,\n  UIMatch,\n  V7_FormMethod,\n  V7_MutationFormMethod,\n} from \"./utils\";\nimport {\n  ErrorResponseImpl,\n  ResultType,\n  convertRouteMatchToUiMatch,\n  convertRoutesToDataRoutes,\n  getPathContributingMatches,\n  immutableRouteKeys,\n  isRouteErrorResponse,\n  joinPaths,\n  matchRoutes,\n  resolveTo,\n  stripBasename,\n} from \"./utils\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Types and Constants\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * A Router instance manages all navigation and data loading/mutations\n */\nexport interface Router {\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the basename for the router\n   */\n  get basename(): RouterInit[\"basename\"];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the current state of the router\n   */\n  get state(): RouterState;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Return the routes for this router instance\n   */\n  get routes(): AgnosticDataRouteObject[];\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Initialize the router, including adding history listeners and kicking off\n   * initial data fetches.  Returns a function to cleanup listeners and abort\n   * any in-progress loads\n   */\n  initialize(): Router;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Subscribe to router.state updates\n   *\n   * @param fn function to call with the new state\n   */\n  subscribe(fn: RouterSubscriber): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Enable scroll restoration behavior in the router\n   *\n   * @param savedScrollPositions Object that will manage positions, in case\n   *                             it's being restored from sessionStorage\n   * @param getScrollPosition    Function to get the active Y scroll position\n   * @param getKey               Function to get the key to use for restoration\n   */\n  enableScrollRestoration(\n    savedScrollPositions: Record<string, number>,\n    getScrollPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ): () => void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Navigate forward/backward in the history stack\n   * @param to Delta to move in the history stack\n   */\n  navigate(to: number): Promise<void>;\n\n  /**\n   * Navigate to the given path\n   * @param to Path to navigate to\n   * @param opts Navigation options (method, submission, etc.)\n   */\n  navigate(to: To | null, opts?: RouterNavigateOptions): Promise<void>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a fetcher load/submission\n   *\n   * @param key     Fetcher key\n   * @param routeId Route that owns the fetcher\n   * @param href    href to fetch\n   * @param opts    Fetcher options, (method, submission, etc.)\n   */\n  fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Trigger a revalidation of all current route loaders and fetcher loads\n   */\n  revalidate(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to create an href for the given location\n   * @param location\n   */\n  createHref(location: Location | URL): string;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Utility function to URL encode a destination path according to the internal\n   * history implementation\n   * @param to\n   */\n  encodeLocation(to: To): Path;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get/create a fetcher for the given key\n   * @param key\n   */\n  getFetcher<TData = any>(key?: string): Fetcher<TData>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete the fetcher for a given key\n   * @param key\n   */\n  deleteFetcher(key?: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Cleanup listeners and abort any in-progress loads\n   */\n  dispose(): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Get a navigation blocker\n   * @param key The identifier for the blocker\n   * @param fn The blocker function implementation\n   */\n  getBlocker(key: string, fn: BlockerFunction): Blocker;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Delete a navigation blocker\n   * @param key The identifier for the blocker\n   */\n  deleteBlocker(key: string): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * HMR needs to pass in-flight route updates to React Router\n   * TODO: Replace this with granular route update APIs (addRoute, updateRoute, deleteRoute)\n   */\n  _internalSetRoutes(routes: AgnosticRouteObject[]): void;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal fetch AbortControllers accessed by unit tests\n   */\n  _internalFetchControllers: Map<string, AbortController>;\n\n  /**\n   * @internal\n   * PRIVATE - DO NOT USE\n   *\n   * Internal pending DeferredData instances accessed by unit tests\n   */\n  _internalActiveDeferreds: Map<string, DeferredData>;\n}\n\n/**\n * State maintained internally by the router.  During a navigation, all states\n * reflect the the \"old\" location unless otherwise noted.\n */\nexport interface RouterState {\n  /**\n   * The action of the most recent navigation\n   */\n  historyAction: HistoryAction;\n\n  /**\n   * The current location reflected by the router\n   */\n  location: Location;\n\n  /**\n   * The current set of route matches\n   */\n  matches: AgnosticDataRouteMatch[];\n\n  /**\n   * Tracks whether we've completed our initial data load\n   */\n  initialized: boolean;\n\n  /**\n   * Current scroll position we should start at for a new view\n   *  - number -> scroll position to restore to\n   *  - false -> do not restore scroll at all (used during submissions)\n   *  - null -> don't have a saved position, scroll to hash or top of page\n   */\n  restoreScrollPosition: number | false | null;\n\n  /**\n   * Indicate whether this navigation should skip resetting the scroll position\n   * if we are unable to restore the scroll position\n   */\n  preventScrollReset: boolean;\n\n  /**\n   * Tracks the state of the current navigation\n   */\n  navigation: Navigation;\n\n  /**\n   * Tracks any in-progress revalidations\n   */\n  revalidation: RevalidationState;\n\n  /**\n   * Data from the loaders for the current matches\n   */\n  loaderData: RouteData;\n\n  /**\n   * Data from the action for the current matches\n   */\n  actionData: RouteData | null;\n\n  /**\n   * Errors caught from loaders for the current matches\n   */\n  errors: RouteData | null;\n\n  /**\n   * Map of current fetchers\n   */\n  fetchers: Map<string, Fetcher>;\n\n  /**\n   * Map of current blockers\n   */\n  blockers: Map<string, Blocker>;\n}\n\n/**\n * Data that can be passed into hydrate a Router from SSR\n */\nexport type HydrationState = Partial<\n  Pick<RouterState, \"loaderData\" | \"actionData\" | \"errors\">\n>;\n\n/**\n * Future flags to toggle new feature behavior\n */\nexport interface FutureConfig {\n  v7_normalizeFormMethod: boolean;\n  v7_prependBasename: boolean;\n}\n\n/**\n * Initialization options for createRouter\n */\nexport interface RouterInit {\n  routes: AgnosticRouteObject[];\n  history: History;\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n  future?: Partial<FutureConfig>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\n/**\n * State returned from a server-side query() call\n */\nexport interface StaticHandlerContext {\n  basename: Router[\"basename\"];\n  location: RouterState[\"location\"];\n  matches: RouterState[\"matches\"];\n  loaderData: RouterState[\"loaderData\"];\n  actionData: RouterState[\"actionData\"];\n  errors: RouterState[\"errors\"];\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n  actionHeaders: Record<string, Headers>;\n  activeDeferreds: Record<string, DeferredData> | null;\n  _deepestRenderedBoundaryId?: string | null;\n}\n\n/**\n * A StaticHandler instance manages a singular SSR navigation/fetch event\n */\nexport interface StaticHandler {\n  dataRoutes: AgnosticDataRouteObject[];\n  query(\n    request: Request,\n    opts?: { requestContext?: unknown }\n  ): Promise<StaticHandlerContext | Response>;\n  queryRoute(\n    request: Request,\n    opts?: { routeId?: string; requestContext?: unknown }\n  ): Promise<any>;\n}\n\n/**\n * Subscriber function signature for changes to router state\n */\nexport interface RouterSubscriber {\n  (state: RouterState): void;\n}\n\n/**\n * Function signature for determining the key to be used in scroll restoration\n * for a given location\n */\nexport interface GetScrollRestorationKeyFunction {\n  (location: Location, matches: UIMatch[]): string | null;\n}\n\n/**\n * Function signature for determining the current scroll position\n */\nexport interface GetScrollPositionFunction {\n  (): number;\n}\n\nexport type RelativeRoutingType = \"route\" | \"path\";\n\n// Allowed for any navigation or fetch\ntype BaseNavigateOrFetchOptions = {\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n};\n\n// Only allowed for navigations\ntype BaseNavigateOptions = BaseNavigateOrFetchOptions & {\n  replace?: boolean;\n  state?: any;\n  fromRouteId?: string;\n};\n\n// Only allowed for submission navigations\ntype BaseSubmissionOptions = {\n  formMethod?: HTMLFormMethod;\n  formEncType?: FormEncType;\n} & (\n  | { formData: FormData; body?: undefined }\n  | { formData?: undefined; body: any }\n);\n\n/**\n * Options for a navigate() call for a normal (non-submission) navigation\n */\ntype LinkNavigateOptions = BaseNavigateOptions;\n\n/**\n * Options for a navigate() call for a submission navigation\n */\ntype SubmissionNavigateOptions = BaseNavigateOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to navigate() for a navigation\n */\nexport type RouterNavigateOptions =\n  | LinkNavigateOptions\n  | SubmissionNavigateOptions;\n\n/**\n * Options for a fetch() load\n */\ntype LoadFetchOptions = BaseNavigateOrFetchOptions;\n\n/**\n * Options for a fetch() submission\n */\ntype SubmitFetchOptions = BaseNavigateOrFetchOptions & BaseSubmissionOptions;\n\n/**\n * Options to pass to fetch()\n */\nexport type RouterFetchOptions = LoadFetchOptions | SubmitFetchOptions;\n\n/**\n * Potential states for state.navigation\n */\nexport type NavigationStates = {\n  Idle: {\n    state: \"idle\";\n    location: undefined;\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    formData: undefined;\n    json: undefined;\n    text: undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    location: Location;\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    text: Submission[\"text\"];\n  };\n};\n\nexport type Navigation = NavigationStates[keyof NavigationStates];\n\nexport type RevalidationState = \"idle\" | \"loading\";\n\n/**\n * Potential states for fetchers\n */\ntype FetcherStates<TData = any> = {\n  Idle: {\n    state: \"idle\";\n    formMethod: undefined;\n    formAction: undefined;\n    formEncType: undefined;\n    text: undefined;\n    formData: undefined;\n    json: undefined;\n    data: TData | undefined;\n  };\n  Loading: {\n    state: \"loading\";\n    formMethod: Submission[\"formMethod\"] | undefined;\n    formAction: Submission[\"formAction\"] | undefined;\n    formEncType: Submission[\"formEncType\"] | undefined;\n    text: Submission[\"text\"] | undefined;\n    formData: Submission[\"formData\"] | undefined;\n    json: Submission[\"json\"] | undefined;\n    data: TData | undefined;\n  };\n  Submitting: {\n    state: \"submitting\";\n    formMethod: Submission[\"formMethod\"];\n    formAction: Submission[\"formAction\"];\n    formEncType: Submission[\"formEncType\"];\n    text: Submission[\"text\"];\n    formData: Submission[\"formData\"];\n    json: Submission[\"json\"];\n    data: TData | undefined;\n  };\n};\n\nexport type Fetcher<TData = any> =\n  FetcherStates<TData>[keyof FetcherStates<TData>];\n\ninterface BlockerBlocked {\n  state: \"blocked\";\n  reset(): void;\n  proceed(): void;\n  location: Location;\n}\n\ninterface BlockerUnblocked {\n  state: \"unblocked\";\n  reset: undefined;\n  proceed: undefined;\n  location: undefined;\n}\n\ninterface BlockerProceeding {\n  state: \"proceeding\";\n  reset: undefined;\n  proceed: undefined;\n  location: Location;\n}\n\nexport type Blocker = BlockerUnblocked | BlockerBlocked | BlockerProceeding;\n\nexport type BlockerFunction = (args: {\n  currentLocation: Location;\n  nextLocation: Location;\n  historyAction: HistoryAction;\n}) => boolean;\n\ninterface ShortCircuitable {\n  /**\n   * startNavigation does not need to complete the navigation because we\n   * redirected or got interrupted\n   */\n  shortCircuited?: boolean;\n}\n\ninterface HandleActionResult extends ShortCircuitable {\n  /**\n   * Error thrown from the current action, keyed by the route containing the\n   * error boundary to render the error.  To be committed to the state after\n   * loaders have completed\n   */\n  pendingActionError?: RouteData;\n  /**\n   * Data returned from the current action, keyed by the route owning the action.\n   * To be committed to the state after loaders have completed\n   */\n  pendingActionData?: RouteData;\n}\n\ninterface HandleLoadersResult extends ShortCircuitable {\n  /**\n   * loaderData returned from the current set of loaders\n   */\n  loaderData?: RouterState[\"loaderData\"];\n  /**\n   * errors thrown from the current set of loaders\n   */\n  errors?: RouterState[\"errors\"];\n}\n\n/**\n * Cached info for active fetcher.load() instances so they can participate\n * in revalidation\n */\ninterface FetchLoadMatch {\n  routeId: string;\n  path: string;\n}\n\n/**\n * Identified fetcher.load() calls that need to be revalidated\n */\ninterface RevalidatingFetcher extends FetchLoadMatch {\n  key: string;\n  match: AgnosticDataRouteMatch | null;\n  matches: AgnosticDataRouteMatch[] | null;\n  controller: AbortController | null;\n}\n\n/**\n * Wrapper object to allow us to throw any response out from callLoaderOrAction\n * for queryRouter while preserving whether or not it was thrown or returned\n * from the loader/action\n */\ninterface QueryRouteResponse {\n  type: ResultType.data | ResultType.error;\n  response: Response;\n}\n\nconst validMutationMethodsArr: MutationFormMethod[] = [\n  \"post\",\n  \"put\",\n  \"patch\",\n  \"delete\",\n];\nconst validMutationMethods = new Set<MutationFormMethod>(\n  validMutationMethodsArr\n);\n\nconst validRequestMethodsArr: FormMethod[] = [\n  \"get\",\n  ...validMutationMethodsArr,\n];\nconst validRequestMethods = new Set<FormMethod>(validRequestMethodsArr);\n\nconst redirectStatusCodes = new Set([301, 302, 303, 307, 308]);\nconst redirectPreserveMethodStatusCodes = new Set([307, 308]);\n\nexport const IDLE_NAVIGATION: NavigationStates[\"Idle\"] = {\n  state: \"idle\",\n  location: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_FETCHER: FetcherStates[\"Idle\"] = {\n  state: \"idle\",\n  data: undefined,\n  formMethod: undefined,\n  formAction: undefined,\n  formEncType: undefined,\n  formData: undefined,\n  json: undefined,\n  text: undefined,\n};\n\nexport const IDLE_BLOCKER: BlockerUnblocked = {\n  state: \"unblocked\",\n  proceed: undefined,\n  reset: undefined,\n  location: undefined,\n};\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\nconst defaultMapRouteProperties: MapRoutePropertiesFunction = (route) => ({\n  hasErrorBoundary: Boolean(route.hasErrorBoundary),\n});\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createRouter\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Create a router and listen to history POP navigations\n */\nexport function createRouter(init: RouterInit): Router {\n  const routerWindow = init.window\n    ? init.window\n    : typeof window !== \"undefined\"\n    ? window\n    : undefined;\n  const isBrowser =\n    typeof routerWindow !== \"undefined\" &&\n    typeof routerWindow.document !== \"undefined\" &&\n    typeof routerWindow.document.createElement !== \"undefined\";\n  const isServer = !isBrowser;\n\n  invariant(\n    init.routes.length > 0,\n    \"You must provide a non-empty routes array to createRouter\"\n  );\n\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (init.mapRouteProperties) {\n    mapRouteProperties = init.mapRouteProperties;\n  } else if (init.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = init.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  // Routes keyed by ID\n  let manifest: RouteManifest = {};\n  // Routes in tree format for matching\n  let dataRoutes = convertRoutesToDataRoutes(\n    init.routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n  let inFlightDataRoutes: AgnosticDataRouteObject[] | undefined;\n  let basename = init.basename || \"/\";\n  // Config driven behavior flags\n  let future: FutureConfig = {\n    v7_normalizeFormMethod: false,\n    v7_prependBasename: false,\n    ...init.future,\n  };\n  // Cleanup function for history\n  let unlistenHistory: (() => void) | null = null;\n  // Externally-provided functions to call on all state changes\n  let subscribers = new Set<RouterSubscriber>();\n  // Externally-provided object to hold scroll restoration locations during routing\n  let savedScrollPositions: Record<string, number> | null = null;\n  // Externally-provided function to get scroll restoration keys\n  let getScrollRestorationKey: GetScrollRestorationKeyFunction | null = null;\n  // Externally-provided function to get current scroll position\n  let getScrollPosition: GetScrollPositionFunction | null = null;\n  // One-time flag to control the initial hydration scroll restoration.  Because\n  // we don't get the saved positions from <ScrollRestoration /> until _after_\n  // the initial render, we need to manually trigger a separate updateState to\n  // send along the restoreScrollPosition\n  // Set to true if we have `hydrationData` since we assume we were SSR'd and that\n  // SSR did the initial scroll restoration.\n  let initialScrollRestored = init.hydrationData != null;\n\n  let initialMatches = matchRoutes(dataRoutes, init.history.location, basename);\n  let initialErrors: RouteData | null = null;\n\n  if (initialMatches == null) {\n    // If we do not match a user-provided-route, fall back to the root\n    // to allow the error boundary to take over\n    let error = getInternalRouterError(404, {\n      pathname: init.history.location.pathname,\n    });\n    let { matches, route } = getShortCircuitMatches(dataRoutes);\n    initialMatches = matches;\n    initialErrors = { [route.id]: error };\n  }\n\n  let initialized =\n    // All initialMatches need to be loaded before we're ready.  If we have lazy\n    // functions around still then we'll need to run them in initialize()\n    !initialMatches.some((m) => m.route.lazy) &&\n    // And we have to either have no loaders or have been provided hydrationData\n    (!initialMatches.some((m) => m.route.loader) || init.hydrationData != null);\n\n  let router: Router;\n  let state: RouterState = {\n    historyAction: init.history.action,\n    location: init.history.location,\n    matches: initialMatches,\n    initialized,\n    navigation: IDLE_NAVIGATION,\n    // Don't restore on initial updateState() if we were SSR'd\n    restoreScrollPosition: init.hydrationData != null ? false : null,\n    preventScrollReset: false,\n    revalidation: \"idle\",\n    loaderData: (init.hydrationData && init.hydrationData.loaderData) || {},\n    actionData: (init.hydrationData && init.hydrationData.actionData) || null,\n    errors: (init.hydrationData && init.hydrationData.errors) || initialErrors,\n    fetchers: new Map(),\n    blockers: new Map(),\n  };\n\n  // -- Stateful internal variables to manage navigations --\n  // Current navigation in progress (to be committed in completeNavigation)\n  let pendingAction: HistoryAction = HistoryAction.Pop;\n\n  // Should the current navigation prevent the scroll reset if scroll cannot\n  // be restored?\n  let pendingPreventScrollReset = false;\n\n  // AbortController for the active navigation\n  let pendingNavigationController: AbortController | null;\n\n  // We use this to avoid touching history in completeNavigation if a\n  // revalidation is entirely uninterrupted\n  let isUninterruptedRevalidation = false;\n\n  // Use this internal flag to force revalidation of all loaders:\n  //  - submissions (completed or interrupted)\n  //  - useRevalidator()\n  //  - X-Remix-Revalidate (from redirect)\n  let isRevalidationRequired = false;\n\n  // Use this internal array to capture routes that require revalidation due\n  // to a cancelled deferred on action submission\n  let cancelledDeferredRoutes: string[] = [];\n\n  // Use this internal array to capture fetcher loads that were cancelled by an\n  // action navigation and require revalidation\n  let cancelledFetcherLoads: string[] = [];\n\n  // AbortControllers for any in-flight fetchers\n  let fetchControllers = new Map<string, AbortController>();\n\n  // Track loads based on the order in which they started\n  let incrementingLoadId = 0;\n\n  // Track the outstanding pending navigation data load to be compared against\n  // the globally incrementing load when a fetcher load lands after a completed\n  // navigation\n  let pendingNavigationLoadId = -1;\n\n  // Fetchers that triggered data reloads as a result of their actions\n  let fetchReloadIds = new Map<string, number>();\n\n  // Fetchers that triggered redirect navigations\n  let fetchRedirectIds = new Set<string>();\n\n  // Most recent href/match for fetcher.load calls for fetchers\n  let fetchLoadMatches = new Map<string, FetchLoadMatch>();\n\n  // Store DeferredData instances for active route matches.  When a\n  // route loader returns defer() we stick one in here.  Then, when a nested\n  // promise resolves we update loaderData.  If a new navigation starts we\n  // cancel active deferreds for eliminated routes.\n  let activeDeferreds = new Map<string, DeferredData>();\n\n  // Store blocker functions in a separate Map outside of router state since\n  // we don't need to update UI state if they change\n  let blockerFunctions = new Map<string, BlockerFunction>();\n\n  // Flag to ignore the next history update, so we can revert the URL change on\n  // a POP navigation that was blocked by the user without touching router state\n  let ignoreNextHistoryUpdate = false;\n\n  // Initialize the router, all side effects should be kicked off from here.\n  // Implemented as a Fluent API for ease of:\n  //   let router = createRouter(init).initialize();\n  function initialize() {\n    // If history informs us of a POP navigation, start the navigation but do not update\n    // state.  We'll update our own state once the navigation completes\n    unlistenHistory = init.history.listen(\n      ({ action: historyAction, location, delta }) => {\n        // Ignore this event if it was just us resetting the URL from a\n        // blocked POP navigation\n        if (ignoreNextHistoryUpdate) {\n          ignoreNextHistoryUpdate = false;\n          return;\n        }\n\n        warning(\n          blockerFunctions.size === 0 || delta != null,\n          \"You are trying to use a blocker on a POP navigation to a location \" +\n            \"that was not created by @remix-run/router. This will fail silently in \" +\n            \"production. This can happen if you are navigating outside the router \" +\n            \"via `window.history.pushState`/`window.location.hash` instead of using \" +\n            \"router navigation APIs.  This can also happen if you are using \" +\n            \"createHashRouter and the user manually changes the URL.\"\n        );\n\n        let blockerKey = shouldBlockNavigation({\n          currentLocation: state.location,\n          nextLocation: location,\n          historyAction,\n        });\n\n        if (blockerKey && delta != null) {\n          // Restore the URL to match the current UI, but don't update router state\n          ignoreNextHistoryUpdate = true;\n          init.history.go(delta * -1);\n\n          // Put the blocker into a blocked state\n          updateBlocker(blockerKey, {\n            state: \"blocked\",\n            location,\n            proceed() {\n              updateBlocker(blockerKey!, {\n                state: \"proceeding\",\n                proceed: undefined,\n                reset: undefined,\n                location,\n              });\n              // Re-do the same POP navigation we just blocked\n              init.history.go(delta);\n            },\n            reset() {\n              let blockers = new Map(state.blockers);\n              blockers.set(blockerKey!, IDLE_BLOCKER);\n              updateState({ blockers });\n            },\n          });\n          return;\n        }\n\n        return startNavigation(historyAction, location);\n      }\n    );\n\n    // Kick off initial data load if needed.  Use Pop to avoid modifying history\n    // Note we don't do any handling of lazy here.  For SPA's it'll get handled\n    // in the normal navigation flow.  For SSR it's expected that lazy modules are\n    // resolved prior to router creation since we can't go into a fallbackElement\n    // UI for SSR'd apps\n    if (!state.initialized) {\n      startNavigation(HistoryAction.Pop, state.location);\n    }\n\n    return router;\n  }\n\n  // Clean up a router and it's side effects\n  function dispose() {\n    if (unlistenHistory) {\n      unlistenHistory();\n    }\n    subscribers.clear();\n    pendingNavigationController && pendingNavigationController.abort();\n    state.fetchers.forEach((_, key) => deleteFetcher(key));\n    state.blockers.forEach((_, key) => deleteBlocker(key));\n  }\n\n  // Subscribe to state updates for the router\n  function subscribe(fn: RouterSubscriber) {\n    subscribers.add(fn);\n    return () => subscribers.delete(fn);\n  }\n\n  // Update our state and notify the calling context of the change\n  function updateState(newState: Partial<RouterState>): void {\n    state = {\n      ...state,\n      ...newState,\n    };\n    subscribers.forEach((subscriber) => subscriber(state));\n  }\n\n  // Complete a navigation returning the state.navigation back to the IDLE_NAVIGATION\n  // and setting state.[historyAction/location/matches] to the new route.\n  // - Location is a required param\n  // - Navigation will always be set to IDLE_NAVIGATION\n  // - Can pass any other state in newState\n  function completeNavigation(\n    location: Location,\n    newState: Partial<Omit<RouterState, \"action\" | \"location\" | \"navigation\">>\n  ): void {\n    // Deduce if we're in a loading/actionReload state:\n    // - We have committed actionData in the store\n    // - The current navigation was a mutation submission\n    // - We're past the submitting state and into the loading state\n    // - The location being loaded is not the result of a redirect\n    let isActionReload =\n      state.actionData != null &&\n      state.navigation.formMethod != null &&\n      isMutationMethod(state.navigation.formMethod) &&\n      state.navigation.state === \"loading\" &&\n      location.state?._isRedirect !== true;\n\n    let actionData: RouteData | null;\n    if (newState.actionData) {\n      if (Object.keys(newState.actionData).length > 0) {\n        actionData = newState.actionData;\n      } else {\n        // Empty actionData -> clear prior actionData due to an action error\n        actionData = null;\n      }\n    } else if (isActionReload) {\n      // Keep the current data if we're wrapping up the action reload\n      actionData = state.actionData;\n    } else {\n      // Clear actionData on any other completed navigations\n      actionData = null;\n    }\n\n    // Always preserve any existing loaderData from re-used routes\n    let loaderData = newState.loaderData\n      ? mergeLoaderData(\n          state.loaderData,\n          newState.loaderData,\n          newState.matches || [],\n          newState.errors\n        )\n      : state.loaderData;\n\n    // On a successful navigation we can assume we got through all blockers\n    // so we can start fresh\n    let blockers = state.blockers;\n    if (blockers.size > 0) {\n      blockers = new Map(blockers);\n      blockers.forEach((_, k) => blockers.set(k, IDLE_BLOCKER));\n    }\n\n    // Always respect the user flag.  Otherwise don't reset on mutation\n    // submission navigations unless they redirect\n    let preventScrollReset =\n      pendingPreventScrollReset === true ||\n      (state.navigation.formMethod != null &&\n        isMutationMethod(state.navigation.formMethod) &&\n        location.state?._isRedirect !== true);\n\n    if (inFlightDataRoutes) {\n      dataRoutes = inFlightDataRoutes;\n      inFlightDataRoutes = undefined;\n    }\n\n    if (isUninterruptedRevalidation) {\n      // If this was an uninterrupted revalidation then do not touch history\n    } else if (pendingAction === HistoryAction.Pop) {\n      // Do nothing for POP - URL has already been updated\n    } else if (pendingAction === HistoryAction.Push) {\n      init.history.push(location, location.state);\n    } else if (pendingAction === HistoryAction.Replace) {\n      init.history.replace(location, location.state);\n    }\n\n    updateState({\n      ...newState, // matches, errors, fetchers go through as-is\n      actionData,\n      loaderData,\n      historyAction: pendingAction,\n      location,\n      initialized: true,\n      navigation: IDLE_NAVIGATION,\n      revalidation: \"idle\",\n      restoreScrollPosition: getSavedScrollPosition(\n        location,\n        newState.matches || state.matches\n      ),\n      preventScrollReset,\n      blockers,\n    });\n\n    // Reset stateful navigation vars\n    pendingAction = HistoryAction.Pop;\n    pendingPreventScrollReset = false;\n    isUninterruptedRevalidation = false;\n    isRevalidationRequired = false;\n    cancelledDeferredRoutes = [];\n    cancelledFetcherLoads = [];\n  }\n\n  // Trigger a navigation event, which can either be a numerical POP or a PUSH\n  // replace with an optional submission\n  async function navigate(\n    to: number | To | null,\n    opts?: RouterNavigateOptions\n  ): Promise<void> {\n    if (typeof to === \"number\") {\n      init.history.go(to);\n      return;\n    }\n\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      to,\n      opts?.fromRouteId,\n      opts?.relative\n    );\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      false,\n      normalizedPath,\n      opts\n    );\n\n    let currentLocation = state.location;\n    let nextLocation = createLocation(state.location, path, opts && opts.state);\n\n    // When using navigate as a PUSH/REPLACE we aren't reading an already-encoded\n    // URL from window.location, so we need to encode it here so the behavior\n    // remains the same as POP and non-data-router usages.  new URL() does all\n    // the same encoding we'd get from a history.pushState/window.location read\n    // without having to touch history\n    nextLocation = {\n      ...nextLocation,\n      ...init.history.encodeLocation(nextLocation),\n    };\n\n    let userReplace = opts && opts.replace != null ? opts.replace : undefined;\n\n    let historyAction = HistoryAction.Push;\n\n    if (userReplace === true) {\n      historyAction = HistoryAction.Replace;\n    } else if (userReplace === false) {\n      // no-op\n    } else if (\n      submission != null &&\n      isMutationMethod(submission.formMethod) &&\n      submission.formAction === state.location.pathname + state.location.search\n    ) {\n      // By default on submissions to the current location we REPLACE so that\n      // users don't have to double-click the back button to get to the prior\n      // location.  If the user redirects to a different location from the\n      // action/loader this will be ignored and the redirect will be a PUSH\n      historyAction = HistoryAction.Replace;\n    }\n\n    let preventScrollReset =\n      opts && \"preventScrollReset\" in opts\n        ? opts.preventScrollReset === true\n        : undefined;\n\n    let blockerKey = shouldBlockNavigation({\n      currentLocation,\n      nextLocation,\n      historyAction,\n    });\n\n    if (blockerKey) {\n      // Put the blocker into a blocked state\n      updateBlocker(blockerKey, {\n        state: \"blocked\",\n        location: nextLocation,\n        proceed() {\n          updateBlocker(blockerKey!, {\n            state: \"proceeding\",\n            proceed: undefined,\n            reset: undefined,\n            location: nextLocation,\n          });\n          // Send the same navigation through\n          navigate(to, opts);\n        },\n        reset() {\n          let blockers = new Map(state.blockers);\n          blockers.set(blockerKey!, IDLE_BLOCKER);\n          updateState({ blockers });\n        },\n      });\n      return;\n    }\n\n    return await startNavigation(historyAction, nextLocation, {\n      submission,\n      // Send through the formData serialization error if we have one so we can\n      // render at the right error boundary after we match routes\n      pendingError: error,\n      preventScrollReset,\n      replace: opts && opts.replace,\n    });\n  }\n\n  // Revalidate all current loaders.  If a navigation is in progress or if this\n  // is interrupted by a navigation, allow this to \"succeed\" by calling all\n  // loaders during the next loader round\n  function revalidate() {\n    interruptActiveLoads();\n    updateState({ revalidation: \"loading\" });\n\n    // If we're currently submitting an action, we don't need to start a new\n    // navigation, we'll just let the follow up loader execution call all loaders\n    if (state.navigation.state === \"submitting\") {\n      return;\n    }\n\n    // If we're currently in an idle state, start a new navigation for the current\n    // action/location and mark it as uninterrupted, which will skip the history\n    // update in completeNavigation\n    if (state.navigation.state === \"idle\") {\n      startNavigation(state.historyAction, state.location, {\n        startUninterruptedRevalidation: true,\n      });\n      return;\n    }\n\n    // Otherwise, if we're currently in a loading state, just start a new\n    // navigation to the navigation.location but do not trigger an uninterrupted\n    // revalidation so that history correctly updates once the navigation completes\n    startNavigation(\n      pendingAction || state.historyAction,\n      state.navigation.location,\n      { overrideNavigation: state.navigation }\n    );\n  }\n\n  // Start a navigation to the given action/location.  Can optionally provide a\n  // overrideNavigation which will override the normalLoad in the case of a redirect\n  // navigation\n  async function startNavigation(\n    historyAction: HistoryAction,\n    location: Location,\n    opts?: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      overrideNavigation?: Navigation;\n      pendingError?: ErrorResponseImpl;\n      startUninterruptedRevalidation?: boolean;\n      preventScrollReset?: boolean;\n      replace?: boolean;\n    }\n  ): Promise<void> {\n    // Abort any in-progress navigations and start a new one. Unset any ongoing\n    // uninterrupted revalidations unless told otherwise, since we want this\n    // new navigation to update history normally\n    pendingNavigationController && pendingNavigationController.abort();\n    pendingNavigationController = null;\n    pendingAction = historyAction;\n    isUninterruptedRevalidation =\n      (opts && opts.startUninterruptedRevalidation) === true;\n\n    // Save the current scroll position every time we start a new navigation,\n    // and track whether we should reset scroll on completion\n    saveScrollPosition(state.location, state.matches);\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let loadingNavigation = opts && opts.overrideNavigation;\n    let matches = matchRoutes(routesToUse, location, basename);\n\n    // Short circuit with a 404 on the root error boundary if we match nothing\n    if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(routesToUse);\n      // Cancel all pending deferred on 404s since we don't keep any routes\n      cancelActiveDeferreds();\n      completeNavigation(location, {\n        matches: notFoundMatches,\n        loaderData: {},\n        errors: {\n          [route.id]: error,\n        },\n      });\n      return;\n    }\n\n    // Short circuit if it's only a hash change and not a revalidation or\n    // mutation submission.\n    //\n    // Ignore on initial page loads because since the initial load will always\n    // be \"same hash\".  For example, on /page#hash and submit a <Form method=\"post\">\n    // which will default to a navigation to /page\n    if (\n      state.initialized &&\n      !isRevalidationRequired &&\n      isHashChangeOnly(state.location, location) &&\n      !(opts && opts.submission && isMutationMethod(opts.submission.formMethod))\n    ) {\n      completeNavigation(location, { matches });\n      return;\n    }\n\n    // Create a controller/Request for this navigation\n    pendingNavigationController = new AbortController();\n    let request = createClientSideRequest(\n      init.history,\n      location,\n      pendingNavigationController.signal,\n      opts && opts.submission\n    );\n    let pendingActionData: RouteData | undefined;\n    let pendingError: RouteData | undefined;\n\n    if (opts && opts.pendingError) {\n      // If we have a pendingError, it means the user attempted a GET submission\n      // with binary FormData so assign here and skip to handleLoaders.  That\n      // way we handle calling loaders above the boundary etc.  It's not really\n      // different from an actionError in that sense.\n      pendingError = {\n        [findNearestBoundary(matches).route.id]: opts.pendingError,\n      };\n    } else if (\n      opts &&\n      opts.submission &&\n      isMutationMethod(opts.submission.formMethod)\n    ) {\n      // Call action if we received an action submission\n      let actionOutput = await handleAction(\n        request,\n        location,\n        opts.submission,\n        matches,\n        { replace: opts.replace }\n      );\n\n      if (actionOutput.shortCircuited) {\n        return;\n      }\n\n      pendingActionData = actionOutput.pendingActionData;\n      pendingError = actionOutput.pendingActionError;\n      loadingNavigation = getLoadingNavigation(location, opts.submission);\n\n      // Create a GET request for the loaders\n      request = new Request(request.url, { signal: request.signal });\n    }\n\n    // Call loaders\n    let { shortCircuited, loaderData, errors } = await handleLoaders(\n      request,\n      location,\n      matches,\n      loadingNavigation,\n      opts && opts.submission,\n      opts && opts.fetcherSubmission,\n      opts && opts.replace,\n      pendingActionData,\n      pendingError\n    );\n\n    if (shortCircuited) {\n      return;\n    }\n\n    // Clean up now that the action/loaders have completed.  Don't clean up if\n    // we short circuited because pendingNavigationController will have already\n    // been assigned to a new controller for the next navigation\n    pendingNavigationController = null;\n\n    completeNavigation(location, {\n      matches,\n      ...(pendingActionData ? { actionData: pendingActionData } : {}),\n      loaderData,\n      errors,\n    });\n  }\n\n  // Call the action matched by the leaf route for this navigation and handle\n  // redirects/errors\n  async function handleAction(\n    request: Request,\n    location: Location,\n    submission: Submission,\n    matches: AgnosticDataRouteMatch[],\n    opts: { replace?: boolean } = {}\n  ): Promise<HandleActionResult> {\n    interruptActiveLoads();\n\n    // Put us in a submitting state\n    let navigation = getSubmittingNavigation(location, submission);\n    updateState({ navigation });\n\n    // Call our action and get the result\n    let result: DataResult;\n    let actionMatch = getTargetMatch(matches, location);\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      result = {\n        type: ResultType.error,\n        error: getInternalRouterError(405, {\n          method: request.method,\n          pathname: location.pathname,\n          routeId: actionMatch.route.id,\n        }),\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename\n      );\n\n      if (request.signal.aborted) {\n        return { shortCircuited: true };\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      let replace: boolean;\n      if (opts && opts.replace != null) {\n        replace = opts.replace;\n      } else {\n        // If the user didn't explicity indicate replace behavior, replace if\n        // we redirected to the exact same location we're currently at to avoid\n        // double back-buttons\n        replace =\n          result.location === state.location.pathname + state.location.search;\n      }\n      await startRedirectNavigation(state, result, { submission, replace });\n      return { shortCircuited: true };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n\n      // By default, all submissions are REPLACE navigations, but if the\n      // action threw an error that'll be rendered in an errorElement, we fall\n      // back to PUSH so that the user can use the back button to get back to\n      // the pre-submission form location to try again\n      if ((opts && opts.replace) !== true) {\n        pendingAction = HistoryAction.Push;\n      }\n\n      return {\n        // Send back an empty object we can use to clear out any prior actionData\n        pendingActionData: {},\n        pendingActionError: { [boundaryMatch.route.id]: result.error },\n      };\n    }\n\n    if (isDeferredResult(result)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    return {\n      pendingActionData: { [actionMatch.route.id]: result.data },\n    };\n  }\n\n  // Call all applicable loaders for the given matches, handling redirects,\n  // errors, etc.\n  async function handleLoaders(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    overrideNavigation?: Navigation,\n    submission?: Submission,\n    fetcherSubmission?: Submission,\n    replace?: boolean,\n    pendingActionData?: RouteData,\n    pendingError?: RouteData\n  ): Promise<HandleLoadersResult> {\n    // Figure out the right navigation we want to use for data loading\n    let loadingNavigation =\n      overrideNavigation || getLoadingNavigation(location, submission);\n\n    // If this was a redirect from an action we don't have a \"submission\" but\n    // we have it on the loading navigation so use that if available\n    let activeSubmission =\n      submission ||\n      fetcherSubmission ||\n      getSubmissionFromNavigation(loadingNavigation);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      activeSubmission,\n      location,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      pendingActionData,\n      pendingError\n    );\n\n    // Cancel pending deferreds for no-longer-matched routes or routes we're\n    // about to reload.  Note that if this is an action reload we would have\n    // already cancelled all pending deferreds so this would be a no-op\n    cancelActiveDeferreds(\n      (routeId) =>\n        !(matches && matches.some((m) => m.route.id === routeId)) ||\n        (matchesToLoad && matchesToLoad.some((m) => m.route.id === routeId))\n    );\n\n    pendingNavigationLoadId = ++incrementingLoadId;\n\n    // Short circuit if we have no loaders to run\n    if (matchesToLoad.length === 0 && revalidatingFetchers.length === 0) {\n      let updatedFetchers = markFetchRedirectsDone();\n      completeNavigation(location, {\n        matches,\n        loaderData: {},\n        // Commit pending error if we're short circuiting\n        errors: pendingError || null,\n        ...(pendingActionData ? { actionData: pendingActionData } : {}),\n        ...(updatedFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n      });\n      return { shortCircuited: true };\n    }\n\n    // If this is an uninterrupted revalidation, we remain in our current idle\n    // state.  If not, we need to switch to our loading state and load data,\n    // preserving any new action data or existing action data (in the case of\n    // a revalidation interrupting an actionReload)\n    if (!isUninterruptedRevalidation) {\n      revalidatingFetchers.forEach((rf) => {\n        let fetcher = state.fetchers.get(rf.key);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          fetcher ? fetcher.data : undefined\n        );\n        state.fetchers.set(rf.key, revalidatingFetcher);\n      });\n      let actionData = pendingActionData || state.actionData;\n      updateState({\n        navigation: loadingNavigation,\n        ...(actionData\n          ? Object.keys(actionData).length === 0\n            ? { actionData: null }\n            : { actionData }\n          : {}),\n        ...(revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n    }\n\n    revalidatingFetchers.forEach((rf) => {\n      if (fetchControllers.has(rf.key)) {\n        abortFetcher(rf.key);\n      }\n      if (rf.controller) {\n        // Fetchers use an independent AbortController so that aborting a fetcher\n        // (via deleteFetcher) does not abort the triggering navigation that\n        // triggered the revalidation\n        fetchControllers.set(rf.key, rf.controller);\n      }\n    });\n\n    // Proxy navigation abort through to revalidation fetchers\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((f) => abortFetcher(f.key));\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.addEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        request\n      );\n\n    if (request.signal.aborted) {\n      return { shortCircuited: true };\n    }\n\n    // Clean up _after_ loaders have completed.  Don't clean up if we short\n    // circuited because fetchControllers would have been aborted and\n    // reassigned to new controllers for the next navigation\n    if (pendingNavigationController) {\n      pendingNavigationController.signal.removeEventListener(\n        \"abort\",\n        abortPendingFetchRevalidations\n      );\n    }\n    revalidatingFetchers.forEach((rf) => fetchControllers.delete(rf.key));\n\n    // If any loaders returned a redirect Response, start a new REPLACE navigation\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      await startRedirectNavigation(state, redirect.result, { replace });\n      return { shortCircuited: true };\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      matches,\n      matchesToLoad,\n      loaderResults,\n      pendingError,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Wire up subscribers to update loaderData as promises settle\n    activeDeferreds.forEach((deferredData, routeId) => {\n      deferredData.subscribe((aborted) => {\n        // Note: No need to updateState here since the TrackedPromise on\n        // loaderData is stable across resolve/reject\n        // Remove this instance if we were aborted or if promises have settled\n        if (aborted || deferredData.done) {\n          activeDeferreds.delete(routeId);\n        }\n      });\n    });\n\n    let updatedFetchers = markFetchRedirectsDone();\n    let didAbortFetchLoads = abortStaleFetchLoads(pendingNavigationLoadId);\n    let shouldUpdateFetchers =\n      updatedFetchers || didAbortFetchLoads || revalidatingFetchers.length > 0;\n\n    return {\n      loaderData,\n      errors,\n      ...(shouldUpdateFetchers ? { fetchers: new Map(state.fetchers) } : {}),\n    };\n  }\n\n  function getFetcher<TData = any>(key: string): Fetcher<TData> {\n    return state.fetchers.get(key) || IDLE_FETCHER;\n  }\n\n  // Trigger a fetcher load/submit for the given fetcher key\n  function fetch(\n    key: string,\n    routeId: string,\n    href: string | null,\n    opts?: RouterFetchOptions\n  ) {\n    if (isServer) {\n      throw new Error(\n        \"router.fetch() was called during the server render, but it shouldn't be. \" +\n          \"You are likely calling a useFetcher() method in the body of your component. \" +\n          \"Try moving it to a useEffect or a callback.\"\n      );\n    }\n\n    if (fetchControllers.has(key)) abortFetcher(key);\n\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let normalizedPath = normalizeTo(\n      state.location,\n      state.matches,\n      basename,\n      future.v7_prependBasename,\n      href,\n      routeId,\n      opts?.relative\n    );\n    let matches = matchRoutes(routesToUse, normalizedPath, basename);\n\n    if (!matches) {\n      setFetcherError(\n        key,\n        routeId,\n        getInternalRouterError(404, { pathname: normalizedPath })\n      );\n      return;\n    }\n\n    let { path, submission, error } = normalizeNavigateOptions(\n      future.v7_normalizeFormMethod,\n      true,\n      normalizedPath,\n      opts\n    );\n\n    if (error) {\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    let match = getTargetMatch(matches, path);\n\n    pendingPreventScrollReset = (opts && opts.preventScrollReset) === true;\n\n    if (submission && isMutationMethod(submission.formMethod)) {\n      handleFetcherAction(key, routeId, path, match, matches, submission);\n      return;\n    }\n\n    // Store off the match so we can call it's shouldRevalidate on subsequent\n    // revalidations\n    fetchLoadMatches.set(key, { routeId, path });\n    handleFetcherLoader(key, routeId, path, match, matches, submission);\n  }\n\n  // Call the action for the matched fetcher.submit(), and then handle redirects,\n  // errors, and revalidation\n  async function handleFetcherAction(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    requestMatches: AgnosticDataRouteMatch[],\n    submission: Submission\n  ) {\n    interruptActiveLoads();\n    fetchLoadMatches.delete(key);\n\n    if (!match.route.action && !match.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: submission.formMethod,\n        pathname: path,\n        routeId: routeId,\n      });\n      setFetcherError(key, routeId, error);\n      return;\n    }\n\n    // Put this fetcher into it's submitting state\n    let existingFetcher = state.fetchers.get(key);\n    let fetcher = getSubmittingFetcher(submission, existingFetcher);\n    state.fetchers.set(key, fetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the action for the fetcher\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal,\n      submission\n    );\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let actionResult = await callLoaderOrAction(\n      \"action\",\n      fetchRequest,\n      match,\n      requestMatches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    if (fetchRequest.signal.aborted) {\n      // We can delete this so long as we weren't aborted by ou our own fetcher\n      // re-submit which would have put _new_ controller is in fetchControllers\n      if (fetchControllers.get(key) === abortController) {\n        fetchControllers.delete(key);\n      }\n      return;\n    }\n\n    if (isRedirectResult(actionResult)) {\n      fetchControllers.delete(key);\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our action started, so that\n        // should take precedence over this redirect navigation.  We already\n        // set isRevalidationRequired so all loaders for the new route should\n        // fire unless opted out via shouldRevalidate\n        let doneFetcher = getDoneFetcher(undefined);\n        state.fetchers.set(key, doneFetcher);\n        updateState({ fetchers: new Map(state.fetchers) });\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        let loadingFetcher = getLoadingFetcher(submission);\n        state.fetchers.set(key, loadingFetcher);\n        updateState({ fetchers: new Map(state.fetchers) });\n\n        return startRedirectNavigation(state, actionResult, {\n          fetcherSubmission: submission,\n        });\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(actionResult)) {\n      setFetcherError(key, routeId, actionResult.error);\n      return;\n    }\n\n    if (isDeferredResult(actionResult)) {\n      throw getInternalRouterError(400, { type: \"defer-action\" });\n    }\n\n    // Start the data load for current matches, or the next location if we're\n    // in the middle of a navigation\n    let nextLocation = state.navigation.location || state.location;\n    let revalidationRequest = createClientSideRequest(\n      init.history,\n      nextLocation,\n      abortController.signal\n    );\n    let routesToUse = inFlightDataRoutes || dataRoutes;\n    let matches =\n      state.navigation.state !== \"idle\"\n        ? matchRoutes(routesToUse, state.navigation.location, basename)\n        : state.matches;\n\n    invariant(matches, \"Didn't find any matches after fetcher action\");\n\n    let loadId = ++incrementingLoadId;\n    fetchReloadIds.set(key, loadId);\n\n    let loadFetcher = getLoadingFetcher(submission, actionResult.data);\n    state.fetchers.set(key, loadFetcher);\n\n    let [matchesToLoad, revalidatingFetchers] = getMatchesToLoad(\n      init.history,\n      state,\n      matches,\n      submission,\n      nextLocation,\n      isRevalidationRequired,\n      cancelledDeferredRoutes,\n      cancelledFetcherLoads,\n      fetchLoadMatches,\n      fetchRedirectIds,\n      routesToUse,\n      basename,\n      { [match.route.id]: actionResult.data },\n      undefined // No need to send through errors since we short circuit above\n    );\n\n    // Put all revalidating fetchers into the loading state, except for the\n    // current fetcher which we want to keep in it's current loading state which\n    // contains it's action submission info + action data\n    revalidatingFetchers\n      .filter((rf) => rf.key !== key)\n      .forEach((rf) => {\n        let staleKey = rf.key;\n        let existingFetcher = state.fetchers.get(staleKey);\n        let revalidatingFetcher = getLoadingFetcher(\n          undefined,\n          existingFetcher ? existingFetcher.data : undefined\n        );\n        state.fetchers.set(staleKey, revalidatingFetcher);\n        if (fetchControllers.has(staleKey)) {\n          abortFetcher(staleKey);\n        }\n        if (rf.controller) {\n          fetchControllers.set(staleKey, rf.controller);\n        }\n      });\n\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    let abortPendingFetchRevalidations = () =>\n      revalidatingFetchers.forEach((rf) => abortFetcher(rf.key));\n\n    abortController.signal.addEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    let { results, loaderResults, fetcherResults } =\n      await callLoadersAndMaybeResolveData(\n        state.matches,\n        matches,\n        matchesToLoad,\n        revalidatingFetchers,\n        revalidationRequest\n      );\n\n    if (abortController.signal.aborted) {\n      return;\n    }\n\n    abortController.signal.removeEventListener(\n      \"abort\",\n      abortPendingFetchRevalidations\n    );\n\n    fetchReloadIds.delete(key);\n    fetchControllers.delete(key);\n    revalidatingFetchers.forEach((r) => fetchControllers.delete(r.key));\n\n    let redirect = findRedirect(results);\n    if (redirect) {\n      if (redirect.idx >= matchesToLoad.length) {\n        // If this redirect came from a fetcher make sure we mark it in\n        // fetchRedirectIds so it doesn't get revalidated on the next set of\n        // loader executions\n        let fetcherKey =\n          revalidatingFetchers[redirect.idx - matchesToLoad.length].key;\n        fetchRedirectIds.add(fetcherKey);\n      }\n      return startRedirectNavigation(state, redirect.result);\n    }\n\n    // Process and commit output from loaders\n    let { loaderData, errors } = processLoaderData(\n      state,\n      state.matches,\n      matchesToLoad,\n      loaderResults,\n      undefined,\n      revalidatingFetchers,\n      fetcherResults,\n      activeDeferreds\n    );\n\n    // Since we let revalidations complete even if the submitting fetcher was\n    // deleted, only put it back to idle if it hasn't been deleted\n    if (state.fetchers.has(key)) {\n      let doneFetcher = getDoneFetcher(actionResult.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n\n    let didAbortFetchLoads = abortStaleFetchLoads(loadId);\n\n    // If we are currently in a navigation loading state and this fetcher is\n    // more recent than the navigation, we want the newer data so abort the\n    // navigation and complete it with the fetcher data\n    if (\n      state.navigation.state === \"loading\" &&\n      loadId > pendingNavigationLoadId\n    ) {\n      invariant(pendingAction, \"Expected pending action\");\n      pendingNavigationController && pendingNavigationController.abort();\n\n      completeNavigation(state.navigation.location, {\n        matches,\n        loaderData,\n        errors,\n        fetchers: new Map(state.fetchers),\n      });\n    } else {\n      // otherwise just update with the fetcher data, preserving any existing\n      // loaderData for loaders that did not need to reload.  We have to\n      // manually merge here since we aren't going through completeNavigation\n      updateState({\n        errors,\n        loaderData: mergeLoaderData(\n          state.loaderData,\n          loaderData,\n          matches,\n          errors\n        ),\n        ...(didAbortFetchLoads || revalidatingFetchers.length > 0\n          ? { fetchers: new Map(state.fetchers) }\n          : {}),\n      });\n      isRevalidationRequired = false;\n    }\n  }\n\n  // Call the matched loader for fetcher.load(), handling redirects, errors, etc.\n  async function handleFetcherLoader(\n    key: string,\n    routeId: string,\n    path: string,\n    match: AgnosticDataRouteMatch,\n    matches: AgnosticDataRouteMatch[],\n    submission?: Submission\n  ) {\n    let existingFetcher = state.fetchers.get(key);\n    // Put this fetcher into it's loading state\n    let loadingFetcher = getLoadingFetcher(\n      submission,\n      existingFetcher ? existingFetcher.data : undefined\n    );\n    state.fetchers.set(key, loadingFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n\n    // Call the loader for this fetcher route match\n    let abortController = new AbortController();\n    let fetchRequest = createClientSideRequest(\n      init.history,\n      path,\n      abortController.signal\n    );\n    fetchControllers.set(key, abortController);\n\n    let originatingLoadId = incrementingLoadId;\n    let result: DataResult = await callLoaderOrAction(\n      \"loader\",\n      fetchRequest,\n      match,\n      matches,\n      manifest,\n      mapRouteProperties,\n      basename\n    );\n\n    // Deferred isn't supported for fetcher loads, await everything and treat it\n    // as a normal load.  resolveDeferredData will return undefined if this\n    // fetcher gets aborted, so we just leave result untouched and short circuit\n    // below if that happens\n    if (isDeferredResult(result)) {\n      result =\n        (await resolveDeferredData(result, fetchRequest.signal, true)) ||\n        result;\n    }\n\n    // We can delete this so long as we weren't aborted by our our own fetcher\n    // re-load which would have put _new_ controller is in fetchControllers\n    if (fetchControllers.get(key) === abortController) {\n      fetchControllers.delete(key);\n    }\n\n    if (fetchRequest.signal.aborted) {\n      return;\n    }\n\n    // If the loader threw a redirect Response, start a new REPLACE navigation\n    if (isRedirectResult(result)) {\n      if (pendingNavigationLoadId > originatingLoadId) {\n        // A new navigation was kicked off after our loader started, so that\n        // should take precedence over this redirect navigation\n        let doneFetcher = getDoneFetcher(undefined);\n        state.fetchers.set(key, doneFetcher);\n        updateState({ fetchers: new Map(state.fetchers) });\n        return;\n      } else {\n        fetchRedirectIds.add(key);\n        await startRedirectNavigation(state, result);\n        return;\n      }\n    }\n\n    // Process any non-redirect errors thrown\n    if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, routeId);\n      state.fetchers.delete(key);\n      // TODO: In remix, this would reset to IDLE_NAVIGATION if it was a catch -\n      // do we need to behave any differently with our non-redirect errors?\n      // What if it was a non-redirect Response?\n      updateState({\n        fetchers: new Map(state.fetchers),\n        errors: {\n          [boundaryMatch.route.id]: result.error,\n        },\n      });\n      return;\n    }\n\n    invariant(!isDeferredResult(result), \"Unhandled fetcher deferred data\");\n\n    // Put the fetcher back into an idle state\n    let doneFetcher = getDoneFetcher(result.data);\n    state.fetchers.set(key, doneFetcher);\n    updateState({ fetchers: new Map(state.fetchers) });\n  }\n\n  /**\n   * Utility function to handle redirects returned from an action or loader.\n   * Normally, a redirect \"replaces\" the navigation that triggered it.  So, for\n   * example:\n   *\n   *  - user is on /a\n   *  - user clicks a link to /b\n   *  - loader for /b redirects to /c\n   *\n   * In a non-JS app the browser would track the in-flight navigation to /b and\n   * then replace it with /c when it encountered the redirect response.  In\n   * the end it would only ever update the URL bar with /c.\n   *\n   * In client-side routing using pushState/replaceState, we aim to emulate\n   * this behavior and we also do not update history until the end of the\n   * navigation (including processed redirects).  This means that we never\n   * actually touch history until we've processed redirects, so we just use\n   * the history action from the original navigation (PUSH or REPLACE).\n   */\n  async function startRedirectNavigation(\n    state: RouterState,\n    redirect: RedirectResult,\n    {\n      submission,\n      fetcherSubmission,\n      replace,\n    }: {\n      submission?: Submission;\n      fetcherSubmission?: Submission;\n      replace?: boolean;\n    } = {}\n  ) {\n    if (redirect.revalidate) {\n      isRevalidationRequired = true;\n    }\n\n    let redirectLocation = createLocation(state.location, redirect.location, {\n      _isRedirect: true,\n    });\n    invariant(\n      redirectLocation,\n      \"Expected a location on the redirect navigation\"\n    );\n\n    if (isBrowser) {\n      let isDocumentReload = false;\n\n      if (redirect.reloadDocument) {\n        // Hard reload if the response contained X-Remix-Reload-Document\n        isDocumentReload = true;\n      } else if (ABSOLUTE_URL_REGEX.test(redirect.location)) {\n        const url = init.history.createURL(redirect.location);\n        isDocumentReload =\n          // Hard reload if it's an absolute URL to a new origin\n          url.origin !== routerWindow.location.origin ||\n          // Hard reload if it's an absolute URL that does not match our basename\n          stripBasename(url.pathname, basename) == null;\n      }\n\n      if (isDocumentReload) {\n        if (replace) {\n          routerWindow.location.replace(redirect.location);\n        } else {\n          routerWindow.location.assign(redirect.location);\n        }\n        return;\n      }\n    }\n\n    // There's no need to abort on redirects, since we don't detect the\n    // redirect until the action/loaders have settled\n    pendingNavigationController = null;\n\n    let redirectHistoryAction =\n      replace === true ? HistoryAction.Replace : HistoryAction.Push;\n\n    // Use the incoming submission if provided, fallback on the active one in\n    // state.navigation\n    let { formMethod, formAction, formEncType } = state.navigation;\n    if (\n      !submission &&\n      !fetcherSubmission &&\n      formMethod &&\n      formAction &&\n      formEncType\n    ) {\n      submission = getSubmissionFromNavigation(state.navigation);\n    }\n\n    // If this was a 307/308 submission we want to preserve the HTTP method and\n    // re-submit the GET/POST/PUT/PATCH/DELETE as a submission navigation to the\n    // redirected location\n    let activeSubmission = submission || fetcherSubmission;\n    if (\n      redirectPreserveMethodStatusCodes.has(redirect.status) &&\n      activeSubmission &&\n      isMutationMethod(activeSubmission.formMethod)\n    ) {\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        submission: {\n          ...activeSubmission,\n          formAction: redirect.location,\n        },\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    } else {\n      // If we have a navigation submission, we will preserve it through the\n      // redirect navigation\n      let overrideNavigation = getLoadingNavigation(\n        redirectLocation,\n        submission\n      );\n      await startNavigation(redirectHistoryAction, redirectLocation, {\n        overrideNavigation,\n        // Send fetcher submissions through for shouldRevalidate\n        fetcherSubmission,\n        // Preserve this flag across redirects\n        preventScrollReset: pendingPreventScrollReset,\n      });\n    }\n  }\n\n  async function callLoadersAndMaybeResolveData(\n    currentMatches: AgnosticDataRouteMatch[],\n    matches: AgnosticDataRouteMatch[],\n    matchesToLoad: AgnosticDataRouteMatch[],\n    fetchersToLoad: RevalidatingFetcher[],\n    request: Request\n  ) {\n    // Call all navigation loaders and revalidating fetcher loaders in parallel,\n    // then slice off the results into separate arrays so we can handle them\n    // accordingly\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename\n        )\n      ),\n      ...fetchersToLoad.map((f) => {\n        if (f.matches && f.match && f.controller) {\n          return callLoaderOrAction(\n            \"loader\",\n            createClientSideRequest(init.history, f.path, f.controller.signal),\n            f.match,\n            f.matches,\n            manifest,\n            mapRouteProperties,\n            basename\n          );\n        } else {\n          let error: ErrorResult = {\n            type: ResultType.error,\n            error: getInternalRouterError(404, { pathname: f.path }),\n          };\n          return error;\n        }\n      }),\n    ]);\n    let loaderResults = results.slice(0, matchesToLoad.length);\n    let fetcherResults = results.slice(matchesToLoad.length);\n\n    await Promise.all([\n      resolveDeferredResults(\n        currentMatches,\n        matchesToLoad,\n        loaderResults,\n        loaderResults.map(() => request.signal),\n        false,\n        state.loaderData\n      ),\n      resolveDeferredResults(\n        currentMatches,\n        fetchersToLoad.map((f) => f.match),\n        fetcherResults,\n        fetchersToLoad.map((f) => (f.controller ? f.controller.signal : null)),\n        true\n      ),\n    ]);\n\n    return { results, loaderResults, fetcherResults };\n  }\n\n  function interruptActiveLoads() {\n    // Every interruption triggers a revalidation\n    isRevalidationRequired = true;\n\n    // Cancel pending route-level deferreds and mark cancelled routes for\n    // revalidation\n    cancelledDeferredRoutes.push(...cancelActiveDeferreds());\n\n    // Abort in-flight fetcher loads\n    fetchLoadMatches.forEach((_, key) => {\n      if (fetchControllers.has(key)) {\n        cancelledFetcherLoads.push(key);\n        abortFetcher(key);\n      }\n    });\n  }\n\n  function setFetcherError(key: string, routeId: string, error: any) {\n    let boundaryMatch = findNearestBoundary(state.matches, routeId);\n    deleteFetcher(key);\n    updateState({\n      errors: {\n        [boundaryMatch.route.id]: error,\n      },\n      fetchers: new Map(state.fetchers),\n    });\n  }\n\n  function deleteFetcher(key: string): void {\n    let fetcher = state.fetchers.get(key);\n    // Don't abort the controller if this is a deletion of a fetcher.submit()\n    // in it's loading phase since - we don't want to abort the corresponding\n    // revalidation and want them to complete and land\n    if (\n      fetchControllers.has(key) &&\n      !(fetcher && fetcher.state === \"loading\" && fetchReloadIds.has(key))\n    ) {\n      abortFetcher(key);\n    }\n    fetchLoadMatches.delete(key);\n    fetchReloadIds.delete(key);\n    fetchRedirectIds.delete(key);\n    state.fetchers.delete(key);\n  }\n\n  function abortFetcher(key: string) {\n    let controller = fetchControllers.get(key);\n    invariant(controller, `Expected fetch controller: ${key}`);\n    controller.abort();\n    fetchControllers.delete(key);\n  }\n\n  function markFetchersDone(keys: string[]) {\n    for (let key of keys) {\n      let fetcher = getFetcher(key);\n      let doneFetcher = getDoneFetcher(fetcher.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  function markFetchRedirectsDone(): boolean {\n    let doneKeys = [];\n    let updatedFetchers = false;\n    for (let key of fetchRedirectIds) {\n      let fetcher = state.fetchers.get(key);\n      invariant(fetcher, `Expected fetcher: ${key}`);\n      if (fetcher.state === \"loading\") {\n        fetchRedirectIds.delete(key);\n        doneKeys.push(key);\n        updatedFetchers = true;\n      }\n    }\n    markFetchersDone(doneKeys);\n    return updatedFetchers;\n  }\n\n  function abortStaleFetchLoads(landedId: number): boolean {\n    let yeetedKeys = [];\n    for (let [key, id] of fetchReloadIds) {\n      if (id < landedId) {\n        let fetcher = state.fetchers.get(key);\n        invariant(fetcher, `Expected fetcher: ${key}`);\n        if (fetcher.state === \"loading\") {\n          abortFetcher(key);\n          fetchReloadIds.delete(key);\n          yeetedKeys.push(key);\n        }\n      }\n    }\n    markFetchersDone(yeetedKeys);\n    return yeetedKeys.length > 0;\n  }\n\n  function getBlocker(key: string, fn: BlockerFunction) {\n    let blocker: Blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    if (blockerFunctions.get(key) !== fn) {\n      blockerFunctions.set(key, fn);\n    }\n\n    return blocker;\n  }\n\n  function deleteBlocker(key: string) {\n    state.blockers.delete(key);\n    blockerFunctions.delete(key);\n  }\n\n  // Utility function to update blockers, ensuring valid state transitions\n  function updateBlocker(key: string, newBlocker: Blocker) {\n    let blocker = state.blockers.get(key) || IDLE_BLOCKER;\n\n    // Poor mans state machine :)\n    // https://mermaid.live/edit#pako:eNqVkc9OwzAMxl8l8nnjAYrEtDIOHEBIgwvKJTReGy3_lDpIqO27k6awMG0XcrLlnz87nwdonESogKXXBuE79rq75XZO3-yHds0RJVuv70YrPlUrCEe2HfrORS3rubqZfuhtpg5C9wk5tZ4VKcRUq88q9Z8RS0-48cE1iHJkL0ugbHuFLus9L6spZy8nX9MP2CNdomVaposqu3fGayT8T8-jJQwhepo_UtpgBQaDEUom04dZhAN1aJBDlUKJBxE1ceB2Smj0Mln-IBW5AFU2dwUiktt_2Qaq2dBfaKdEup85UV7Yd-dKjlnkabl2Pvr0DTkTreM\n    invariant(\n      (blocker.state === \"unblocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"blocked\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"proceeding\") ||\n        (blocker.state === \"blocked\" && newBlocker.state === \"unblocked\") ||\n        (blocker.state === \"proceeding\" && newBlocker.state === \"unblocked\"),\n      `Invalid blocker state transition: ${blocker.state} -> ${newBlocker.state}`\n    );\n\n    let blockers = new Map(state.blockers);\n    blockers.set(key, newBlocker);\n    updateState({ blockers });\n  }\n\n  function shouldBlockNavigation({\n    currentLocation,\n    nextLocation,\n    historyAction,\n  }: {\n    currentLocation: Location;\n    nextLocation: Location;\n    historyAction: HistoryAction;\n  }): string | undefined {\n    if (blockerFunctions.size === 0) {\n      return;\n    }\n\n    // We ony support a single active blocker at the moment since we don't have\n    // any compelling use cases for multi-blocker yet\n    if (blockerFunctions.size > 1) {\n      warning(false, \"A router only supports one blocker at a time\");\n    }\n\n    let entries = Array.from(blockerFunctions.entries());\n    let [blockerKey, blockerFunction] = entries[entries.length - 1];\n    let blocker = state.blockers.get(blockerKey);\n\n    if (blocker && blocker.state === \"proceeding\") {\n      // If the blocker is currently proceeding, we don't need to re-check\n      // it and can let this navigation continue\n      return;\n    }\n\n    // At this point, we know we're unblocked/blocked so we need to check the\n    // user-provided blocker function\n    if (blockerFunction({ currentLocation, nextLocation, historyAction })) {\n      return blockerKey;\n    }\n  }\n\n  function cancelActiveDeferreds(\n    predicate?: (routeId: string) => boolean\n  ): string[] {\n    let cancelledRouteIds: string[] = [];\n    activeDeferreds.forEach((dfd, routeId) => {\n      if (!predicate || predicate(routeId)) {\n        // Cancel the deferred - but do not remove from activeDeferreds here -\n        // we rely on the subscribers to do that so our tests can assert proper\n        // cleanup via _internalActiveDeferreds\n        dfd.cancel();\n        cancelledRouteIds.push(routeId);\n        activeDeferreds.delete(routeId);\n      }\n    });\n    return cancelledRouteIds;\n  }\n\n  // Opt in to capturing and reporting scroll positions during navigations,\n  // used by the <ScrollRestoration> component\n  function enableScrollRestoration(\n    positions: Record<string, number>,\n    getPosition: GetScrollPositionFunction,\n    getKey?: GetScrollRestorationKeyFunction\n  ) {\n    savedScrollPositions = positions;\n    getScrollPosition = getPosition;\n    getScrollRestorationKey = getKey || null;\n\n    // Perform initial hydration scroll restoration, since we miss the boat on\n    // the initial updateState() because we've not yet rendered <ScrollRestoration/>\n    // and therefore have no savedScrollPositions available\n    if (!initialScrollRestored && state.navigation === IDLE_NAVIGATION) {\n      initialScrollRestored = true;\n      let y = getSavedScrollPosition(state.location, state.matches);\n      if (y != null) {\n        updateState({ restoreScrollPosition: y });\n      }\n    }\n\n    return () => {\n      savedScrollPositions = null;\n      getScrollPosition = null;\n      getScrollRestorationKey = null;\n    };\n  }\n\n  function getScrollKey(location: Location, matches: AgnosticDataRouteMatch[]) {\n    if (getScrollRestorationKey) {\n      let key = getScrollRestorationKey(\n        location,\n        matches.map((m) => convertRouteMatchToUiMatch(m, state.loaderData))\n      );\n      return key || location.key;\n    }\n    return location.key;\n  }\n\n  function saveScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): void {\n    if (savedScrollPositions && getScrollPosition) {\n      let key = getScrollKey(location, matches);\n      savedScrollPositions[key] = getScrollPosition();\n    }\n  }\n\n  function getSavedScrollPosition(\n    location: Location,\n    matches: AgnosticDataRouteMatch[]\n  ): number | null {\n    if (savedScrollPositions) {\n      let key = getScrollKey(location, matches);\n      let y = savedScrollPositions[key];\n      if (typeof y === \"number\") {\n        return y;\n      }\n    }\n    return null;\n  }\n\n  function _internalSetRoutes(newRoutes: AgnosticDataRouteObject[]) {\n    manifest = {};\n    inFlightDataRoutes = convertRoutesToDataRoutes(\n      newRoutes,\n      mapRouteProperties,\n      undefined,\n      manifest\n    );\n  }\n\n  router = {\n    get basename() {\n      return basename;\n    },\n    get state() {\n      return state;\n    },\n    get routes() {\n      return dataRoutes;\n    },\n    initialize,\n    subscribe,\n    enableScrollRestoration,\n    navigate,\n    fetch,\n    revalidate,\n    // Passthrough to history-aware createHref used by useHref so we get proper\n    // hash-aware URLs in DOM paths\n    createHref: (to: To) => init.history.createHref(to),\n    encodeLocation: (to: To) => init.history.encodeLocation(to),\n    getFetcher,\n    deleteFetcher,\n    dispose,\n    getBlocker,\n    deleteBlocker,\n    _internalFetchControllers: fetchControllers,\n    _internalActiveDeferreds: activeDeferreds,\n    // TODO: Remove setRoutes, it's temporary to avoid dealing with\n    // updating the tree while validating the update algorithm.\n    _internalSetRoutes,\n  };\n\n  return router;\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region createStaticHandler\n////////////////////////////////////////////////////////////////////////////////\n\nexport const UNSAFE_DEFERRED_SYMBOL = Symbol(\"deferred\");\n\nexport interface CreateStaticHandlerOptions {\n  basename?: string;\n  /**\n   * @deprecated Use `mapRouteProperties` instead\n   */\n  detectErrorBoundary?: DetectErrorBoundaryFunction;\n  mapRouteProperties?: MapRoutePropertiesFunction;\n}\n\nexport function createStaticHandler(\n  routes: AgnosticRouteObject[],\n  opts?: CreateStaticHandlerOptions\n): StaticHandler {\n  invariant(\n    routes.length > 0,\n    \"You must provide a non-empty routes array to createStaticHandler\"\n  );\n\n  let manifest: RouteManifest = {};\n  let basename = (opts ? opts.basename : null) || \"/\";\n  let mapRouteProperties: MapRoutePropertiesFunction;\n  if (opts?.mapRouteProperties) {\n    mapRouteProperties = opts.mapRouteProperties;\n  } else if (opts?.detectErrorBoundary) {\n    // If they are still using the deprecated version, wrap it with the new API\n    let detectErrorBoundary = opts.detectErrorBoundary;\n    mapRouteProperties = (route) => ({\n      hasErrorBoundary: detectErrorBoundary(route),\n    });\n  } else {\n    mapRouteProperties = defaultMapRouteProperties;\n  }\n\n  let dataRoutes = convertRoutesToDataRoutes(\n    routes,\n    mapRouteProperties,\n    undefined,\n    manifest\n  );\n\n  /**\n   * The query() method is intended for document requests, in which we want to\n   * call an optional action and potentially multiple loaders for all nested\n   * routes.  It returns a StaticHandlerContext object, which is very similar\n   * to the router state (location, loaderData, actionData, errors, etc.) and\n   * also adds SSR-specific information such as the statusCode and headers\n   * from action/loaders Responses.\n   *\n   * It _should_ never throw and should report all errors through the\n   * returned context.errors object, properly associating errors to their error\n   * boundary.  Additionally, it tracks _deepestRenderedBoundaryId which can be\n   * used to emulate React error boundaries during SSr by performing a second\n   * pass only down to the boundaryId.\n   *\n   * The one exception where we do not return a StaticHandlerContext is when a\n   * redirect response is returned or thrown from any action/loader.  We\n   * propagate that out and return the raw Response so the HTTP server can\n   * return it directly.\n   */\n  async function query(\n    request: Request,\n    { requestContext }: { requestContext?: unknown } = {}\n  ): Promise<StaticHandlerContext | Response> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\") {\n      let error = getInternalRouterError(405, { method });\n      let { matches: methodNotAllowedMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: methodNotAllowedMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    } else if (!matches) {\n      let error = getInternalRouterError(404, { pathname: location.pathname });\n      let { matches: notFoundMatches, route } =\n        getShortCircuitMatches(dataRoutes);\n      return {\n        basename,\n        location,\n        matches: notFoundMatches,\n        loaderData: {},\n        actionData: null,\n        errors: {\n          [route.id]: error,\n        },\n        statusCode: error.status,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let result = await queryImpl(request, location, matches, requestContext);\n    if (isResponse(result)) {\n      return result;\n    }\n\n    // When returning StaticHandlerContext, we patch back in the location here\n    // since we need it for React Context.  But this helps keep our submit and\n    // loadRouteData operating on a Request instead of a Location\n    return { location, basename, ...result };\n  }\n\n  /**\n   * The queryRoute() method is intended for targeted route requests, either\n   * for fetch ?_data requests or resource route requests.  In this case, we\n   * are only ever calling a single action or loader, and we are returning the\n   * returned value directly.  In most cases, this will be a Response returned\n   * from the action/loader, but it may be a primitive or other value as well -\n   * and in such cases the calling context should handle that accordingly.\n   *\n   * We do respect the throw/return differentiation, so if an action/loader\n   * throws, then this method will throw the value.  This is important so we\n   * can do proper boundary identification in Remix where a thrown Response\n   * must go to the Catch Boundary but a returned Response is happy-path.\n   *\n   * One thing to note is that any Router-initiated Errors that make sense\n   * to associate with a status code will be thrown as an ErrorResponse\n   * instance which include the raw Error, such that the calling context can\n   * serialize the error as they see fit while including the proper response\n   * code.  Examples here are 404 and 405 errors that occur prior to reaching\n   * any user-defined loaders.\n   */\n  async function queryRoute(\n    request: Request,\n    {\n      routeId,\n      requestContext,\n    }: { requestContext?: unknown; routeId?: string } = {}\n  ): Promise<any> {\n    let url = new URL(request.url);\n    let method = request.method;\n    let location = createLocation(\"\", createPath(url), null, \"default\");\n    let matches = matchRoutes(dataRoutes, location, basename);\n\n    // SSR supports HEAD requests while SPA doesn't\n    if (!isValidMethod(method) && method !== \"HEAD\" && method !== \"OPTIONS\") {\n      throw getInternalRouterError(405, { method });\n    } else if (!matches) {\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let match = routeId\n      ? matches.find((m) => m.route.id === routeId)\n      : getTargetMatch(matches, location);\n\n    if (routeId && !match) {\n      throw getInternalRouterError(403, {\n        pathname: location.pathname,\n        routeId,\n      });\n    } else if (!match) {\n      // This should never hit I don't think?\n      throw getInternalRouterError(404, { pathname: location.pathname });\n    }\n\n    let result = await queryImpl(\n      request,\n      location,\n      matches,\n      requestContext,\n      match\n    );\n    if (isResponse(result)) {\n      return result;\n    }\n\n    let error = result.errors ? Object.values(result.errors)[0] : undefined;\n    if (error !== undefined) {\n      // If we got back result.errors, that means the loader/action threw\n      // _something_ that wasn't a Response, but it's not guaranteed/required\n      // to be an `instanceof Error` either, so we have to use throw here to\n      // preserve the \"error\" state outside of queryImpl.\n      throw error;\n    }\n\n    // Pick off the right state value to return\n    if (result.actionData) {\n      return Object.values(result.actionData)[0];\n    }\n\n    if (result.loaderData) {\n      let data = Object.values(result.loaderData)[0];\n      if (result.activeDeferreds?.[match.route.id]) {\n        data[UNSAFE_DEFERRED_SYMBOL] = result.activeDeferreds[match.route.id];\n      }\n      return data;\n    }\n\n    return undefined;\n  }\n\n  async function queryImpl(\n    request: Request,\n    location: Location,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    invariant(\n      request.signal,\n      \"query()/queryRoute() requests must contain an AbortController signal\"\n    );\n\n    try {\n      if (isMutationMethod(request.method.toLowerCase())) {\n        let result = await submit(\n          request,\n          matches,\n          routeMatch || getTargetMatch(matches, location),\n          requestContext,\n          routeMatch != null\n        );\n        return result;\n      }\n\n      let result = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        routeMatch\n      );\n      return isResponse(result)\n        ? result\n        : {\n            ...result,\n            actionData: null,\n            actionHeaders: {},\n          };\n    } catch (e) {\n      // If the user threw/returned a Response in callLoaderOrAction, we throw\n      // it to bail out and then return or throw here based on whether the user\n      // returned or threw\n      if (isQueryRouteResponse(e)) {\n        if (e.type === ResultType.error) {\n          throw e.response;\n        }\n        return e.response;\n      }\n      // Redirects are always returned since they don't propagate to catch\n      // boundaries\n      if (isRedirectResponse(e)) {\n        return e;\n      }\n      throw e;\n    }\n  }\n\n  async function submit(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    actionMatch: AgnosticDataRouteMatch,\n    requestContext: unknown,\n    isRouteRequest: boolean\n  ): Promise<Omit<StaticHandlerContext, \"location\" | \"basename\"> | Response> {\n    let result: DataResult;\n\n    if (!actionMatch.route.action && !actionMatch.route.lazy) {\n      let error = getInternalRouterError(405, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: actionMatch.route.id,\n      });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    } else {\n      result = await callLoaderOrAction(\n        \"action\",\n        request,\n        actionMatch,\n        matches,\n        manifest,\n        mapRouteProperties,\n        basename,\n        { isStaticRequest: true, isRouteRequest, requestContext }\n      );\n\n      if (request.signal.aborted) {\n        let method = isRouteRequest ? \"queryRoute\" : \"query\";\n        throw new Error(\n          `${method}() call aborted: ${request.method} ${request.url}`\n        );\n      }\n    }\n\n    if (isRedirectResult(result)) {\n      // Uhhhh - this should never happen, we should always throw these from\n      // callLoaderOrAction, but the type narrowing here keeps TS happy and we\n      // can get back on the \"throw all redirect responses\" train here should\n      // this ever happen :/\n      throw new Response(null, {\n        status: result.status,\n        headers: {\n          Location: result.location,\n        },\n      });\n    }\n\n    if (isDeferredResult(result)) {\n      let error = getInternalRouterError(400, { type: \"defer-action\" });\n      if (isRouteRequest) {\n        throw error;\n      }\n      result = {\n        type: ResultType.error,\n        error,\n      };\n    }\n\n    if (isRouteRequest) {\n      // Note: This should only be non-Response values if we get here, since\n      // isRouteRequest should throw any Response received in callLoaderOrAction\n      if (isErrorResult(result)) {\n        throw result.error;\n      }\n\n      return {\n        matches: [actionMatch],\n        loaderData: {},\n        actionData: { [actionMatch.route.id]: result.data },\n        errors: null,\n        // Note: statusCode + headers are unused here since queryRoute will\n        // return the raw Response or value\n        statusCode: 200,\n        loaderHeaders: {},\n        actionHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    if (isErrorResult(result)) {\n      // Store off the pending error - we use it to determine which loaders\n      // to call and will commit it when we complete the navigation\n      let boundaryMatch = findNearestBoundary(matches, actionMatch.route.id);\n      let context = await loadRouteData(\n        request,\n        matches,\n        requestContext,\n        undefined,\n        {\n          [boundaryMatch.route.id]: result.error,\n        }\n      );\n\n      // action status codes take precedence over loader status codes\n      return {\n        ...context,\n        statusCode: isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500,\n        actionData: null,\n        actionHeaders: {\n          ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n        },\n      };\n    }\n\n    // Create a GET request for the loaders\n    let loaderRequest = new Request(request.url, {\n      headers: request.headers,\n      redirect: request.redirect,\n      signal: request.signal,\n    });\n    let context = await loadRouteData(loaderRequest, matches, requestContext);\n\n    return {\n      ...context,\n      // action status codes take precedence over loader status codes\n      ...(result.statusCode ? { statusCode: result.statusCode } : {}),\n      actionData: {\n        [actionMatch.route.id]: result.data,\n      },\n      actionHeaders: {\n        ...(result.headers ? { [actionMatch.route.id]: result.headers } : {}),\n      },\n    };\n  }\n\n  async function loadRouteData(\n    request: Request,\n    matches: AgnosticDataRouteMatch[],\n    requestContext: unknown,\n    routeMatch?: AgnosticDataRouteMatch,\n    pendingActionError?: RouteData\n  ): Promise<\n    | Omit<\n        StaticHandlerContext,\n        \"location\" | \"basename\" | \"actionData\" | \"actionHeaders\"\n      >\n    | Response\n  > {\n    let isRouteRequest = routeMatch != null;\n\n    // Short circuit if we have no loaders to run (queryRoute())\n    if (\n      isRouteRequest &&\n      !routeMatch?.route.loader &&\n      !routeMatch?.route.lazy\n    ) {\n      throw getInternalRouterError(400, {\n        method: request.method,\n        pathname: new URL(request.url).pathname,\n        routeId: routeMatch?.route.id,\n      });\n    }\n\n    let requestMatches = routeMatch\n      ? [routeMatch]\n      : getLoaderMatchesUntilBoundary(\n          matches,\n          Object.keys(pendingActionError || {})[0]\n        );\n    let matchesToLoad = requestMatches.filter(\n      (m) => m.route.loader || m.route.lazy\n    );\n\n    // Short circuit if we have no loaders to run (query())\n    if (matchesToLoad.length === 0) {\n      return {\n        matches,\n        // Add a null for all matched routes for proper revalidation on the client\n        loaderData: matches.reduce(\n          (acc, m) => Object.assign(acc, { [m.route.id]: null }),\n          {}\n        ),\n        errors: pendingActionError || null,\n        statusCode: 200,\n        loaderHeaders: {},\n        activeDeferreds: null,\n      };\n    }\n\n    let results = await Promise.all([\n      ...matchesToLoad.map((match) =>\n        callLoaderOrAction(\n          \"loader\",\n          request,\n          match,\n          matches,\n          manifest,\n          mapRouteProperties,\n          basename,\n          { isStaticRequest: true, isRouteRequest, requestContext }\n        )\n      ),\n    ]);\n\n    if (request.signal.aborted) {\n      let method = isRouteRequest ? \"queryRoute\" : \"query\";\n      throw new Error(\n        `${method}() call aborted: ${request.method} ${request.url}`\n      );\n    }\n\n    // Process and commit output from loaders\n    let activeDeferreds = new Map<string, DeferredData>();\n    let context = processRouteLoaderData(\n      matches,\n      matchesToLoad,\n      results,\n      pendingActionError,\n      activeDeferreds\n    );\n\n    // Add a null for any non-loader matches for proper revalidation on the client\n    let executedLoaders = new Set<string>(\n      matchesToLoad.map((match) => match.route.id)\n    );\n    matches.forEach((match) => {\n      if (!executedLoaders.has(match.route.id)) {\n        context.loaderData[match.route.id] = null;\n      }\n    });\n\n    return {\n      ...context,\n      matches,\n      activeDeferreds:\n        activeDeferreds.size > 0\n          ? Object.fromEntries(activeDeferreds.entries())\n          : null,\n    };\n  }\n\n  return {\n    dataRoutes,\n    query,\n    queryRoute,\n  };\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Helpers\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Given an existing StaticHandlerContext and an error thrown at render time,\n * provide an updated StaticHandlerContext suitable for a second SSR render\n */\nexport function getStaticContextFromError(\n  routes: AgnosticDataRouteObject[],\n  context: StaticHandlerContext,\n  error: any\n) {\n  let newContext: StaticHandlerContext = {\n    ...context,\n    statusCode: 500,\n    errors: {\n      [context._deepestRenderedBoundaryId || routes[0].id]: error,\n    },\n  };\n  return newContext;\n}\n\nfunction isSubmissionNavigation(\n  opts: RouterNavigateOptions\n): opts is SubmissionNavigateOptions {\n  return (\n    opts != null &&\n    ((\"formData\" in opts && opts.formData != null) ||\n      (\"body\" in opts && opts.body !== undefined))\n  );\n}\n\nfunction normalizeTo(\n  location: Path,\n  matches: AgnosticDataRouteMatch[],\n  basename: string,\n  prependBasename: boolean,\n  to: To | null,\n  fromRouteId?: string,\n  relative?: RelativeRoutingType\n) {\n  let contextualMatches: AgnosticDataRouteMatch[];\n  let activeRouteMatch: AgnosticDataRouteMatch | undefined;\n  if (fromRouteId != null && relative !== \"path\") {\n    // Grab matches up to the calling route so our route-relative logic is\n    // relative to the correct source route.  When using relative:path,\n    // fromRouteId is ignored since that is always relative to the current\n    // location path\n    contextualMatches = [];\n    for (let match of matches) {\n      contextualMatches.push(match);\n      if (match.route.id === fromRouteId) {\n        activeRouteMatch = match;\n        break;\n      }\n    }\n  } else {\n    contextualMatches = matches;\n    activeRouteMatch = matches[matches.length - 1];\n  }\n\n  // Resolve the relative path\n  let path = resolveTo(\n    to ? to : \".\",\n    getPathContributingMatches(contextualMatches).map((m) => m.pathnameBase),\n    stripBasename(location.pathname, basename) || location.pathname,\n    relative === \"path\"\n  );\n\n  // When `to` is not specified we inherit search/hash from the current\n  // location, unlike when to=\".\" and we just inherit the path.\n  // See https://github.com/remix-run/remix/issues/927\n  if (to == null) {\n    path.search = location.search;\n    path.hash = location.hash;\n  }\n\n  // Add an ?index param for matched index routes if we don't already have one\n  if (\n    (to == null || to === \"\" || to === \".\") &&\n    activeRouteMatch &&\n    activeRouteMatch.route.index &&\n    !hasNakedIndexQuery(path.search)\n  ) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname.  If\n  // this is a root navigation, then just use the raw basename which allows\n  // the basename to have full control over the presence of a trailing slash\n  // on root actions\n  if (prependBasename && basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\n// Normalize navigation options by converting formMethod=GET formData objects to\n// URLSearchParams so they behave identically to links with query params\nfunction normalizeNavigateOptions(\n  normalizeFormMethod: boolean,\n  isFetcher: boolean,\n  path: string,\n  opts?: RouterNavigateOptions\n): {\n  path: string;\n  submission?: Submission;\n  error?: ErrorResponseImpl;\n} {\n  // Return location verbatim on non-submission navigations\n  if (!opts || !isSubmissionNavigation(opts)) {\n    return { path };\n  }\n\n  if (opts.formMethod && !isValidMethod(opts.formMethod)) {\n    return {\n      path,\n      error: getInternalRouterError(405, { method: opts.formMethod }),\n    };\n  }\n\n  let getInvalidBodyError = () => ({\n    path,\n    error: getInternalRouterError(400, { type: \"invalid-body\" }),\n  });\n\n  // Create a Submission on non-GET navigations\n  let rawFormMethod = opts.formMethod || \"get\";\n  let formMethod = normalizeFormMethod\n    ? (rawFormMethod.toUpperCase() as V7_FormMethod)\n    : (rawFormMethod.toLowerCase() as FormMethod);\n  let formAction = stripHashFromPath(path);\n\n  if (opts.body !== undefined) {\n    if (opts.formEncType === \"text/plain\") {\n      // text only support POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      let text =\n        typeof opts.body === \"string\"\n          ? opts.body\n          : opts.body instanceof FormData ||\n            opts.body instanceof URLSearchParams\n          ? // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#plain-text-form-data\n            Array.from(opts.body.entries()).reduce(\n              (acc, [name, value]) => `${acc}${name}=${value}\\n`,\n              \"\"\n            )\n          : String(opts.body);\n\n      return {\n        path,\n        submission: {\n          formMethod,\n          formAction,\n          formEncType: opts.formEncType,\n          formData: undefined,\n          json: undefined,\n          text,\n        },\n      };\n    } else if (opts.formEncType === \"application/json\") {\n      // json only supports POST/PUT/PATCH/DELETE submissions\n      if (!isMutationMethod(formMethod)) {\n        return getInvalidBodyError();\n      }\n\n      try {\n        let json =\n          typeof opts.body === \"string\" ? JSON.parse(opts.body) : opts.body;\n\n        return {\n          path,\n          submission: {\n            formMethod,\n            formAction,\n            formEncType: opts.formEncType,\n            formData: undefined,\n            json,\n            text: undefined,\n          },\n        };\n      } catch (e) {\n        return getInvalidBodyError();\n      }\n    }\n  }\n\n  invariant(\n    typeof FormData === \"function\",\n    \"FormData is not available in this environment\"\n  );\n\n  let searchParams: URLSearchParams;\n  let formData: FormData;\n\n  if (opts.formData) {\n    searchParams = convertFormDataToSearchParams(opts.formData);\n    formData = opts.formData;\n  } else if (opts.body instanceof FormData) {\n    searchParams = convertFormDataToSearchParams(opts.body);\n    formData = opts.body;\n  } else if (opts.body instanceof URLSearchParams) {\n    searchParams = opts.body;\n    formData = convertSearchParamsToFormData(searchParams);\n  } else if (opts.body == null) {\n    searchParams = new URLSearchParams();\n    formData = new FormData();\n  } else {\n    try {\n      searchParams = new URLSearchParams(opts.body);\n      formData = convertSearchParamsToFormData(searchParams);\n    } catch (e) {\n      return getInvalidBodyError();\n    }\n  }\n\n  let submission: Submission = {\n    formMethod,\n    formAction,\n    formEncType:\n      (opts && opts.formEncType) || \"application/x-www-form-urlencoded\",\n    formData,\n    json: undefined,\n    text: undefined,\n  };\n\n  if (isMutationMethod(submission.formMethod)) {\n    return { path, submission };\n  }\n\n  // Flatten submission onto URLSearchParams for GET submissions\n  let parsedPath = parsePath(path);\n  // On GET navigation submissions we can drop the ?index param from the\n  // resulting location since all loaders will run.  But fetcher GET submissions\n  // only run a single loader so we need to preserve any incoming ?index params\n  if (isFetcher && parsedPath.search && hasNakedIndexQuery(parsedPath.search)) {\n    searchParams.append(\"index\", \"\");\n  }\n  parsedPath.search = `?${searchParams}`;\n\n  return { path: createPath(parsedPath), submission };\n}\n\n// Filter out all routes below any caught error as they aren't going to\n// render so we don't need to load them\nfunction getLoaderMatchesUntilBoundary(\n  matches: AgnosticDataRouteMatch[],\n  boundaryId?: string\n) {\n  let boundaryMatches = matches;\n  if (boundaryId) {\n    let index = matches.findIndex((m) => m.route.id === boundaryId);\n    if (index >= 0) {\n      boundaryMatches = matches.slice(0, index);\n    }\n  }\n  return boundaryMatches;\n}\n\nfunction getMatchesToLoad(\n  history: History,\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  submission: Submission | undefined,\n  location: Location,\n  isRevalidationRequired: boolean,\n  cancelledDeferredRoutes: string[],\n  cancelledFetcherLoads: string[],\n  fetchLoadMatches: Map<string, FetchLoadMatch>,\n  fetchRedirectIds: Set<string>,\n  routesToUse: AgnosticDataRouteObject[],\n  basename: string | undefined,\n  pendingActionData?: RouteData,\n  pendingError?: RouteData\n): [AgnosticDataRouteMatch[], RevalidatingFetcher[]] {\n  let actionResult = pendingError\n    ? Object.values(pendingError)[0]\n    : pendingActionData\n    ? Object.values(pendingActionData)[0]\n    : undefined;\n\n  let currentUrl = history.createURL(state.location);\n  let nextUrl = history.createURL(location);\n\n  // Pick navigation matches that are net-new or qualify for revalidation\n  let boundaryId = pendingError ? Object.keys(pendingError)[0] : undefined;\n  let boundaryMatches = getLoaderMatchesUntilBoundary(matches, boundaryId);\n\n  let navigationMatches = boundaryMatches.filter((match, index) => {\n    if (match.route.lazy) {\n      // We haven't loaded this route yet so we don't know if it's got a loader!\n      return true;\n    }\n    if (match.route.loader == null) {\n      return false;\n    }\n\n    // Always call the loader on new route instances and pending defer cancellations\n    if (\n      isNewLoader(state.loaderData, state.matches[index], match) ||\n      cancelledDeferredRoutes.some((id) => id === match.route.id)\n    ) {\n      return true;\n    }\n\n    // This is the default implementation for when we revalidate.  If the route\n    // provides it's own implementation, then we give them full control but\n    // provide this value so they can leverage it if needed after they check\n    // their own specific use cases\n    let currentRouteMatch = state.matches[index];\n    let nextRouteMatch = match;\n\n    return shouldRevalidateLoader(match, {\n      currentUrl,\n      currentParams: currentRouteMatch.params,\n      nextUrl,\n      nextParams: nextRouteMatch.params,\n      ...submission,\n      actionResult,\n      defaultShouldRevalidate:\n        // Forced revalidation due to submission, useRevalidator, or X-Remix-Revalidate\n        isRevalidationRequired ||\n        // Clicked the same link, resubmitted a GET form\n        currentUrl.pathname + currentUrl.search ===\n          nextUrl.pathname + nextUrl.search ||\n        // Search params affect all loaders\n        currentUrl.search !== nextUrl.search ||\n        isNewRouteInstance(currentRouteMatch, nextRouteMatch),\n    });\n  });\n\n  // Pick fetcher.loads that need to be revalidated\n  let revalidatingFetchers: RevalidatingFetcher[] = [];\n  fetchLoadMatches.forEach((f, key) => {\n    // Don't revalidate if fetcher won't be present in the subsequent render\n    if (!matches.some((m) => m.route.id === f.routeId)) {\n      return;\n    }\n\n    let fetcherMatches = matchRoutes(routesToUse, f.path, basename);\n\n    // If the fetcher path no longer matches, push it in with null matches so\n    // we can trigger a 404 in callLoadersAndMaybeResolveData.  Note this is\n    // currently only a use-case for Remix HMR where the route tree can change\n    // at runtime and remove a route previously loaded via a fetcher\n    if (!fetcherMatches) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: null,\n        match: null,\n        controller: null,\n      });\n      return;\n    }\n\n    // Revalidating fetchers are decoupled from the route matches since they\n    // load from a static href.  They revalidate based on explicit revalidation\n    // (submission, useRevalidator, or X-Remix-Revalidate)\n    let fetcher = state.fetchers.get(key);\n    let fetcherMatch = getTargetMatch(fetcherMatches, f.path);\n\n    let shouldRevalidate = false;\n    if (fetchRedirectIds.has(key)) {\n      // Never trigger a revalidation of an actively redirecting fetcher\n      shouldRevalidate = false;\n    } else if (cancelledFetcherLoads.includes(key)) {\n      // Always revalidate if the fetcher was cancelled\n      shouldRevalidate = true;\n    } else if (\n      fetcher &&\n      fetcher.state !== \"idle\" &&\n      fetcher.data === undefined\n    ) {\n      // If the fetcher hasn't ever completed loading yet, then this isn't a\n      // revalidation, it would just be a brand new load if an explicit\n      // revalidation is required\n      shouldRevalidate = isRevalidationRequired;\n    } else {\n      // Otherwise fall back on any user-defined shouldRevalidate, defaulting\n      // to explicit revalidations only\n      shouldRevalidate = shouldRevalidateLoader(fetcherMatch, {\n        currentUrl,\n        currentParams: state.matches[state.matches.length - 1].params,\n        nextUrl,\n        nextParams: matches[matches.length - 1].params,\n        ...submission,\n        actionResult,\n        defaultShouldRevalidate: isRevalidationRequired,\n      });\n    }\n\n    if (shouldRevalidate) {\n      revalidatingFetchers.push({\n        key,\n        routeId: f.routeId,\n        path: f.path,\n        matches: fetcherMatches,\n        match: fetcherMatch,\n        controller: new AbortController(),\n      });\n    }\n  });\n\n  return [navigationMatches, revalidatingFetchers];\n}\n\nfunction isNewLoader(\n  currentLoaderData: RouteData,\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let isNew =\n    // [a] -> [a, b]\n    !currentMatch ||\n    // [a, b] -> [a, c]\n    match.route.id !== currentMatch.route.id;\n\n  // Handle the case that we don't have data for a re-used route, potentially\n  // from a prior error or from a cancelled pending deferred\n  let isMissingData = currentLoaderData[match.route.id] === undefined;\n\n  // Always load if this is a net-new route or we don't yet have data\n  return isNew || isMissingData;\n}\n\nfunction isNewRouteInstance(\n  currentMatch: AgnosticDataRouteMatch,\n  match: AgnosticDataRouteMatch\n) {\n  let currentPath = currentMatch.route.path;\n  return (\n    // param change for this match, /users/123 -> /users/456\n    currentMatch.pathname !== match.pathname ||\n    // splat param changed, which is not present in match.path\n    // e.g. /files/images/avatar.jpg -> files/finances.xls\n    (currentPath != null &&\n      currentPath.endsWith(\"*\") &&\n      currentMatch.params[\"*\"] !== match.params[\"*\"])\n  );\n}\n\nfunction shouldRevalidateLoader(\n  loaderMatch: AgnosticDataRouteMatch,\n  arg: ShouldRevalidateFunctionArgs\n) {\n  if (loaderMatch.route.shouldRevalidate) {\n    let routeChoice = loaderMatch.route.shouldRevalidate(arg);\n    if (typeof routeChoice === \"boolean\") {\n      return routeChoice;\n    }\n  }\n\n  return arg.defaultShouldRevalidate;\n}\n\n/**\n * Execute route.lazy() methods to lazily load route modules (loader, action,\n * shouldRevalidate) and update the routeManifest in place which shares objects\n * with dataRoutes so those get updated as well.\n */\nasync function loadLazyRouteModule(\n  route: AgnosticDataRouteObject,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  manifest: RouteManifest\n) {\n  if (!route.lazy) {\n    return;\n  }\n\n  let lazyRoute = await route.lazy();\n\n  // If the lazy route function was executed and removed by another parallel\n  // call then we can return - first lazy() to finish wins because the return\n  // value of lazy is expected to be static\n  if (!route.lazy) {\n    return;\n  }\n\n  let routeToUpdate = manifest[route.id];\n  invariant(routeToUpdate, \"No route found in manifest\");\n\n  // Update the route in place.  This should be safe because there's no way\n  // we could yet be sitting on this route as we can't get there without\n  // resolving lazy() first.\n  //\n  // This is different than the HMR \"update\" use-case where we may actively be\n  // on the route being updated.  The main concern boils down to \"does this\n  // mutation affect any ongoing navigations or any current state.matches\n  // values?\".  If not, it should be safe to update in place.\n  let routeUpdates: Record<string, any> = {};\n  for (let lazyRouteProperty in lazyRoute) {\n    let staticRouteValue =\n      routeToUpdate[lazyRouteProperty as keyof typeof routeToUpdate];\n\n    let isPropertyStaticallyDefined =\n      staticRouteValue !== undefined &&\n      // This property isn't static since it should always be updated based\n      // on the route updates\n      lazyRouteProperty !== \"hasErrorBoundary\";\n\n    warning(\n      !isPropertyStaticallyDefined,\n      `Route \"${routeToUpdate.id}\" has a static property \"${lazyRouteProperty}\" ` +\n        `defined but its lazy function is also returning a value for this property. ` +\n        `The lazy route property \"${lazyRouteProperty}\" will be ignored.`\n    );\n\n    if (\n      !isPropertyStaticallyDefined &&\n      !immutableRouteKeys.has(lazyRouteProperty as ImmutableRouteKey)\n    ) {\n      routeUpdates[lazyRouteProperty] =\n        lazyRoute[lazyRouteProperty as keyof typeof lazyRoute];\n    }\n  }\n\n  // Mutate the route with the provided updates.  Do this first so we pass\n  // the updated version to mapRouteProperties\n  Object.assign(routeToUpdate, routeUpdates);\n\n  // Mutate the `hasErrorBoundary` property on the route based on the route\n  // updates and remove the `lazy` function so we don't resolve the lazy\n  // route again.\n  Object.assign(routeToUpdate, {\n    // To keep things framework agnostic, we use the provided\n    // `mapRouteProperties` (or wrapped `detectErrorBoundary`) function to\n    // set the framework-aware properties (`element`/`hasErrorBoundary`) since\n    // the logic will differ between frameworks.\n    ...mapRouteProperties(routeToUpdate),\n    lazy: undefined,\n  });\n}\n\nasync function callLoaderOrAction(\n  type: \"loader\" | \"action\",\n  request: Request,\n  match: AgnosticDataRouteMatch,\n  matches: AgnosticDataRouteMatch[],\n  manifest: RouteManifest,\n  mapRouteProperties: MapRoutePropertiesFunction,\n  basename: string,\n  opts: {\n    isStaticRequest?: boolean;\n    isRouteRequest?: boolean;\n    requestContext?: unknown;\n  } = {}\n): Promise<DataResult> {\n  let resultType;\n  let result;\n  let onReject: (() => void) | undefined;\n\n  let runHandler = (handler: ActionFunction | LoaderFunction) => {\n    // Setup a promise we can race against so that abort signals short circuit\n    let reject: () => void;\n    let abortPromise = new Promise((_, r) => (reject = r));\n    onReject = () => reject();\n    request.signal.addEventListener(\"abort\", onReject);\n    return Promise.race([\n      handler({\n        request,\n        params: match.params,\n        context: opts.requestContext,\n      }),\n      abortPromise,\n    ]);\n  };\n\n  try {\n    let handler = match.route[type];\n\n    if (match.route.lazy) {\n      if (handler) {\n        // Run statically defined handler in parallel with lazy()\n        let handlerError;\n        let values = await Promise.all([\n          // If the handler throws, don't let it immediately bubble out,\n          // since we need to let the lazy() execution finish so we know if this\n          // route has a boundary that can handle the error\n          runHandler(handler).catch((e) => {\n            handlerError = e;\n          }),\n          loadLazyRouteModule(match.route, mapRouteProperties, manifest),\n        ]);\n        if (handlerError) {\n          throw handlerError;\n        }\n        result = values[0];\n      } else {\n        // Load lazy route module, then run any returned handler\n        await loadLazyRouteModule(match.route, mapRouteProperties, manifest);\n\n        handler = match.route[type];\n        if (handler) {\n          // Handler still run even if we got interrupted to maintain consistency\n          // with un-abortable behavior of handler execution on non-lazy or\n          // previously-lazy-loaded routes\n          result = await runHandler(handler);\n        } else if (type === \"action\") {\n          let url = new URL(request.url);\n          let pathname = url.pathname + url.search;\n          throw getInternalRouterError(405, {\n            method: request.method,\n            pathname,\n            routeId: match.route.id,\n          });\n        } else {\n          // lazy() route has no loader to run.  Short circuit here so we don't\n          // hit the invariant below that errors on returning undefined.\n          return { type: ResultType.data, data: undefined };\n        }\n      }\n    } else if (!handler) {\n      let url = new URL(request.url);\n      let pathname = url.pathname + url.search;\n      throw getInternalRouterError(404, {\n        pathname,\n      });\n    } else {\n      result = await runHandler(handler);\n    }\n\n    invariant(\n      result !== undefined,\n      `You defined ${type === \"action\" ? \"an action\" : \"a loader\"} for route ` +\n        `\"${match.route.id}\" but didn't return anything from your \\`${type}\\` ` +\n        `function. Please return a value or \\`null\\`.`\n    );\n  } catch (e) {\n    resultType = ResultType.error;\n    result = e;\n  } finally {\n    if (onReject) {\n      request.signal.removeEventListener(\"abort\", onReject);\n    }\n  }\n\n  if (isResponse(result)) {\n    let status = result.status;\n\n    // Process redirects\n    if (redirectStatusCodes.has(status)) {\n      let location = result.headers.get(\"Location\");\n      invariant(\n        location,\n        \"Redirects returned/thrown from loaders/actions must have a Location header\"\n      );\n\n      // Support relative routing in internal redirects\n      if (!ABSOLUTE_URL_REGEX.test(location)) {\n        location = normalizeTo(\n          new URL(request.url),\n          matches.slice(0, matches.indexOf(match) + 1),\n          basename,\n          true,\n          location\n        );\n      } else if (!opts.isStaticRequest) {\n        // Strip off the protocol+origin for same-origin + same-basename absolute\n        // redirects. If this is a static request, we can let it go back to the\n        // browser as-is\n        let currentUrl = new URL(request.url);\n        let url = location.startsWith(\"//\")\n          ? new URL(currentUrl.protocol + location)\n          : new URL(location);\n        let isSameBasename = stripBasename(url.pathname, basename) != null;\n        if (url.origin === currentUrl.origin && isSameBasename) {\n          location = url.pathname + url.search + url.hash;\n        }\n      }\n\n      // Don't process redirects in the router during static requests requests.\n      // Instead, throw the Response and let the server handle it with an HTTP\n      // redirect.  We also update the Location header in place in this flow so\n      // basename and relative routing is taken into account\n      if (opts.isStaticRequest) {\n        result.headers.set(\"Location\", location);\n        throw result;\n      }\n\n      return {\n        type: ResultType.redirect,\n        status,\n        location,\n        revalidate: result.headers.get(\"X-Remix-Revalidate\") !== null,\n        reloadDocument: result.headers.get(\"X-Remix-Reload-Document\") !== null,\n      };\n    }\n\n    // For SSR single-route requests, we want to hand Responses back directly\n    // without unwrapping.  We do this with the QueryRouteResponse wrapper\n    // interface so we can know whether it was returned or thrown\n    if (opts.isRouteRequest) {\n      let queryRouteResponse: QueryRouteResponse = {\n        type:\n          resultType === ResultType.error ? ResultType.error : ResultType.data,\n        response: result,\n      };\n      throw queryRouteResponse;\n    }\n\n    let data: any;\n    let contentType = result.headers.get(\"Content-Type\");\n    // Check between word boundaries instead of startsWith() due to the last\n    // paragraph of https://httpwg.org/specs/rfc9110.html#field.content-type\n    if (contentType && /\\bapplication\\/json\\b/.test(contentType)) {\n      data = await result.json();\n    } else {\n      data = await result.text();\n    }\n\n    if (resultType === ResultType.error) {\n      return {\n        type: resultType,\n        error: new ErrorResponseImpl(status, result.statusText, data),\n        headers: result.headers,\n      };\n    }\n\n    return {\n      type: ResultType.data,\n      data,\n      statusCode: result.status,\n      headers: result.headers,\n    };\n  }\n\n  if (resultType === ResultType.error) {\n    return { type: resultType, error: result };\n  }\n\n  if (isDeferredData(result)) {\n    return {\n      type: ResultType.deferred,\n      deferredData: result,\n      statusCode: result.init?.status,\n      headers: result.init?.headers && new Headers(result.init.headers),\n    };\n  }\n\n  return { type: ResultType.data, data: result };\n}\n\n// Utility method for creating the Request instances for loaders/actions during\n// client-side navigations and fetches.  During SSR we will always have a\n// Request instance from the static handler (query/queryRoute)\nfunction createClientSideRequest(\n  history: History,\n  location: string | Location,\n  signal: AbortSignal,\n  submission?: Submission\n): Request {\n  let url = history.createURL(stripHashFromPath(location)).toString();\n  let init: RequestInit = { signal };\n\n  if (submission && isMutationMethod(submission.formMethod)) {\n    let { formMethod, formEncType } = submission;\n    // Didn't think we needed this but it turns out unlike other methods, patch\n    // won't be properly normalized to uppercase and results in a 405 error.\n    // See: https://fetch.spec.whatwg.org/#concept-method\n    init.method = formMethod.toUpperCase();\n\n    if (formEncType === \"application/json\") {\n      init.headers = new Headers({ \"Content-Type\": formEncType });\n      init.body = JSON.stringify(submission.json);\n    } else if (formEncType === \"text/plain\") {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.text;\n    } else if (\n      formEncType === \"application/x-www-form-urlencoded\" &&\n      submission.formData\n    ) {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = convertFormDataToSearchParams(submission.formData);\n    } else {\n      // Content-Type is inferred (https://fetch.spec.whatwg.org/#dom-request)\n      init.body = submission.formData;\n    }\n  }\n\n  return new Request(url, init);\n}\n\nfunction convertFormDataToSearchParams(formData: FormData): URLSearchParams {\n  let searchParams = new URLSearchParams();\n\n  for (let [key, value] of formData.entries()) {\n    // https://html.spec.whatwg.org/multipage/form-control-infrastructure.html#converting-an-entry-list-to-a-list-of-name-value-pairs\n    searchParams.append(key, typeof value === \"string\" ? value : value.name);\n  }\n\n  return searchParams;\n}\n\nfunction convertSearchParamsToFormData(\n  searchParams: URLSearchParams\n): FormData {\n  let formData = new FormData();\n  for (let [key, value] of searchParams.entries()) {\n    formData.append(key, value);\n  }\n  return formData;\n}\n\nfunction processRouteLoaderData(\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors: RouterState[\"errors\"] | null;\n  statusCode: number;\n  loaderHeaders: Record<string, Headers>;\n} {\n  // Fill in loaderData/errors from our loaders\n  let loaderData: RouterState[\"loaderData\"] = {};\n  let errors: RouterState[\"errors\"] | null = null;\n  let statusCode: number | undefined;\n  let foundError = false;\n  let loaderHeaders: Record<string, Headers> = {};\n\n  // Process loader results into state.loaderData/state.errors\n  results.forEach((result, index) => {\n    let id = matchesToLoad[index].route.id;\n    invariant(\n      !isRedirectResult(result),\n      \"Cannot handle redirect results in processLoaderData\"\n    );\n    if (isErrorResult(result)) {\n      // Look upwards from the matched route for the closest ancestor\n      // error boundary, defaulting to the root match\n      let boundaryMatch = findNearestBoundary(matches, id);\n      let error = result.error;\n      // If we have a pending action error, we report it at the highest-route\n      // that throws a loader error, and then clear it out to indicate that\n      // it was consumed\n      if (pendingError) {\n        error = Object.values(pendingError)[0];\n        pendingError = undefined;\n      }\n\n      errors = errors || {};\n\n      // Prefer higher error values if lower errors bubble to the same boundary\n      if (errors[boundaryMatch.route.id] == null) {\n        errors[boundaryMatch.route.id] = error;\n      }\n\n      // Clear our any prior loaderData for the throwing route\n      loaderData[id] = undefined;\n\n      // Once we find our first (highest) error, we set the status code and\n      // prevent deeper status codes from overriding\n      if (!foundError) {\n        foundError = true;\n        statusCode = isRouteErrorResponse(result.error)\n          ? result.error.status\n          : 500;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    } else {\n      if (isDeferredResult(result)) {\n        activeDeferreds.set(id, result.deferredData);\n        loaderData[id] = result.deferredData.data;\n      } else {\n        loaderData[id] = result.data;\n      }\n\n      // Error status codes always override success status codes, but if all\n      // loaders are successful we take the deepest status code.\n      if (\n        result.statusCode != null &&\n        result.statusCode !== 200 &&\n        !foundError\n      ) {\n        statusCode = result.statusCode;\n      }\n      if (result.headers) {\n        loaderHeaders[id] = result.headers;\n      }\n    }\n  });\n\n  // If we didn't consume the pending action error (i.e., all loaders\n  // resolved), then consume it here.  Also clear out any loaderData for the\n  // throwing route\n  if (pendingError) {\n    errors = pendingError;\n    loaderData[Object.keys(pendingError)[0]] = undefined;\n  }\n\n  return {\n    loaderData,\n    errors,\n    statusCode: statusCode || 200,\n    loaderHeaders,\n  };\n}\n\nfunction processLoaderData(\n  state: RouterState,\n  matches: AgnosticDataRouteMatch[],\n  matchesToLoad: AgnosticDataRouteMatch[],\n  results: DataResult[],\n  pendingError: RouteData | undefined,\n  revalidatingFetchers: RevalidatingFetcher[],\n  fetcherResults: DataResult[],\n  activeDeferreds: Map<string, DeferredData>\n): {\n  loaderData: RouterState[\"loaderData\"];\n  errors?: RouterState[\"errors\"];\n} {\n  let { loaderData, errors } = processRouteLoaderData(\n    matches,\n    matchesToLoad,\n    results,\n    pendingError,\n    activeDeferreds\n  );\n\n  // Process results from our revalidating fetchers\n  for (let index = 0; index < revalidatingFetchers.length; index++) {\n    let { key, match, controller } = revalidatingFetchers[index];\n    invariant(\n      fetcherResults !== undefined && fetcherResults[index] !== undefined,\n      \"Did not find corresponding fetcher result\"\n    );\n    let result = fetcherResults[index];\n\n    // Process fetcher non-redirect errors\n    if (controller && controller.signal.aborted) {\n      // Nothing to do for aborted fetchers\n      continue;\n    } else if (isErrorResult(result)) {\n      let boundaryMatch = findNearestBoundary(state.matches, match?.route.id);\n      if (!(errors && errors[boundaryMatch.route.id])) {\n        errors = {\n          ...errors,\n          [boundaryMatch.route.id]: result.error,\n        };\n      }\n      state.fetchers.delete(key);\n    } else if (isRedirectResult(result)) {\n      // Should never get here, redirects should get processed above, but we\n      // keep this to type narrow to a success result in the else\n      invariant(false, \"Unhandled fetcher revalidation redirect\");\n    } else if (isDeferredResult(result)) {\n      // Should never get here, deferred data should be awaited for fetchers\n      // in resolveDeferredResults\n      invariant(false, \"Unhandled fetcher deferred data\");\n    } else {\n      let doneFetcher = getDoneFetcher(result.data);\n      state.fetchers.set(key, doneFetcher);\n    }\n  }\n\n  return { loaderData, errors };\n}\n\nfunction mergeLoaderData(\n  loaderData: RouteData,\n  newLoaderData: RouteData,\n  matches: AgnosticDataRouteMatch[],\n  errors: RouteData | null | undefined\n): RouteData {\n  let mergedLoaderData = { ...newLoaderData };\n  for (let match of matches) {\n    let id = match.route.id;\n    if (newLoaderData.hasOwnProperty(id)) {\n      if (newLoaderData[id] !== undefined) {\n        mergedLoaderData[id] = newLoaderData[id];\n      } else {\n        // No-op - this is so we ignore existing data if we have a key in the\n        // incoming object with an undefined value, which is how we unset a prior\n        // loaderData if we encounter a loader error\n      }\n    } else if (loaderData[id] !== undefined && match.route.loader) {\n      // Preserve existing keys not included in newLoaderData and where a loader\n      // wasn't removed by HMR\n      mergedLoaderData[id] = loaderData[id];\n    }\n\n    if (errors && errors.hasOwnProperty(id)) {\n      // Don't keep any loader data below the boundary\n      break;\n    }\n  }\n  return mergedLoaderData;\n}\n\n// Find the nearest error boundary, looking upwards from the leaf route (or the\n// route specified by routeId) for the closest ancestor error boundary,\n// defaulting to the root match\nfunction findNearestBoundary(\n  matches: AgnosticDataRouteMatch[],\n  routeId?: string\n): AgnosticDataRouteMatch {\n  let eligibleMatches = routeId\n    ? matches.slice(0, matches.findIndex((m) => m.route.id === routeId) + 1)\n    : [...matches];\n  return (\n    eligibleMatches.reverse().find((m) => m.route.hasErrorBoundary === true) ||\n    matches[0]\n  );\n}\n\nfunction getShortCircuitMatches(routes: AgnosticDataRouteObject[]): {\n  matches: AgnosticDataRouteMatch[];\n  route: AgnosticDataRouteObject;\n} {\n  // Prefer a root layout route if present, otherwise shim in a route object\n  let route = routes.find((r) => r.index || !r.path || r.path === \"/\") || {\n    id: `__shim-error-route__`,\n  };\n\n  return {\n    matches: [\n      {\n        params: {},\n        pathname: \"\",\n        pathnameBase: \"\",\n        route,\n      },\n    ],\n    route,\n  };\n}\n\nfunction getInternalRouterError(\n  status: number,\n  {\n    pathname,\n    routeId,\n    method,\n    type,\n  }: {\n    pathname?: string;\n    routeId?: string;\n    method?: string;\n    type?: \"defer-action\" | \"invalid-body\";\n  } = {}\n) {\n  let statusText = \"Unknown Server Error\";\n  let errorMessage = \"Unknown @remix-run/router error\";\n\n  if (status === 400) {\n    statusText = \"Bad Request\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method} request to \"${pathname}\" but ` +\n        `did not provide a \\`loader\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (type === \"defer-action\") {\n      errorMessage = \"defer() is not supported in actions\";\n    } else if (type === \"invalid-body\") {\n      errorMessage = \"Unable to encode submission body\";\n    }\n  } else if (status === 403) {\n    statusText = \"Forbidden\";\n    errorMessage = `Route \"${routeId}\" does not match URL \"${pathname}\"`;\n  } else if (status === 404) {\n    statusText = \"Not Found\";\n    errorMessage = `No route matches URL \"${pathname}\"`;\n  } else if (status === 405) {\n    statusText = \"Method Not Allowed\";\n    if (method && pathname && routeId) {\n      errorMessage =\n        `You made a ${method.toUpperCase()} request to \"${pathname}\" but ` +\n        `did not provide an \\`action\\` for route \"${routeId}\", ` +\n        `so there is no way to handle the request.`;\n    } else if (method) {\n      errorMessage = `Invalid request method \"${method.toUpperCase()}\"`;\n    }\n  }\n\n  return new ErrorResponseImpl(\n    status || 500,\n    statusText,\n    new Error(errorMessage),\n    true\n  );\n}\n\n// Find any returned redirect errors, starting from the lowest match\nfunction findRedirect(\n  results: DataResult[]\n): { result: RedirectResult; idx: number } | undefined {\n  for (let i = results.length - 1; i >= 0; i--) {\n    let result = results[i];\n    if (isRedirectResult(result)) {\n      return { result, idx: i };\n    }\n  }\n}\n\nfunction stripHashFromPath(path: To) {\n  let parsedPath = typeof path === \"string\" ? parsePath(path) : path;\n  return createPath({ ...parsedPath, hash: \"\" });\n}\n\nfunction isHashChangeOnly(a: Location, b: Location): boolean {\n  if (a.pathname !== b.pathname || a.search !== b.search) {\n    return false;\n  }\n\n  if (a.hash === \"\") {\n    // /page -> /page#hash\n    return b.hash !== \"\";\n  } else if (a.hash === b.hash) {\n    // /page#hash -> /page#hash\n    return true;\n  } else if (b.hash !== \"\") {\n    // /page#hash -> /page#other\n    return true;\n  }\n\n  // If the hash is removed the browser will re-perform a request to the server\n  // /page#hash -> /page\n  return false;\n}\n\nfunction isDeferredResult(result: DataResult): result is DeferredResult {\n  return result.type === ResultType.deferred;\n}\n\nfunction isErrorResult(result: DataResult): result is ErrorResult {\n  return result.type === ResultType.error;\n}\n\nfunction isRedirectResult(result?: DataResult): result is RedirectResult {\n  return (result && result.type) === ResultType.redirect;\n}\n\nexport function isDeferredData(value: any): value is DeferredData {\n  let deferred: DeferredData = value;\n  return (\n    deferred &&\n    typeof deferred === \"object\" &&\n    typeof deferred.data === \"object\" &&\n    typeof deferred.subscribe === \"function\" &&\n    typeof deferred.cancel === \"function\" &&\n    typeof deferred.resolveData === \"function\"\n  );\n}\n\nfunction isResponse(value: any): value is Response {\n  return (\n    value != null &&\n    typeof value.status === \"number\" &&\n    typeof value.statusText === \"string\" &&\n    typeof value.headers === \"object\" &&\n    typeof value.body !== \"undefined\"\n  );\n}\n\nfunction isRedirectResponse(result: any): result is Response {\n  if (!isResponse(result)) {\n    return false;\n  }\n\n  let status = result.status;\n  let location = result.headers.get(\"Location\");\n  return status >= 300 && status <= 399 && location != null;\n}\n\nfunction isQueryRouteResponse(obj: any): obj is QueryRouteResponse {\n  return (\n    obj &&\n    isResponse(obj.response) &&\n    (obj.type === ResultType.data || obj.type === ResultType.error)\n  );\n}\n\nfunction isValidMethod(method: string): method is FormMethod | V7_FormMethod {\n  return validRequestMethods.has(method.toLowerCase() as FormMethod);\n}\n\nfunction isMutationMethod(\n  method: string\n): method is MutationFormMethod | V7_MutationFormMethod {\n  return validMutationMethods.has(method.toLowerCase() as MutationFormMethod);\n}\n\nasync function resolveDeferredResults(\n  currentMatches: AgnosticDataRouteMatch[],\n  matchesToLoad: (AgnosticDataRouteMatch | null)[],\n  results: DataResult[],\n  signals: (AbortSignal | null)[],\n  isFetcher: boolean,\n  currentLoaderData?: RouteData\n) {\n  for (let index = 0; index < results.length; index++) {\n    let result = results[index];\n    let match = matchesToLoad[index];\n    // If we don't have a match, then we can have a deferred result to do\n    // anything with.  This is for revalidating fetchers where the route was\n    // removed during HMR\n    if (!match) {\n      continue;\n    }\n\n    let currentMatch = currentMatches.find(\n      (m) => m.route.id === match!.route.id\n    );\n    let isRevalidatingLoader =\n      currentMatch != null &&\n      !isNewRouteInstance(currentMatch, match) &&\n      (currentLoaderData && currentLoaderData[match.route.id]) !== undefined;\n\n    if (isDeferredResult(result) && (isFetcher || isRevalidatingLoader)) {\n      // Note: we do not have to touch activeDeferreds here since we race them\n      // against the signal in resolveDeferredData and they'll get aborted\n      // there if needed\n      let signal = signals[index];\n      invariant(\n        signal,\n        \"Expected an AbortSignal for revalidating fetcher deferred result\"\n      );\n      await resolveDeferredData(result, signal, isFetcher).then((result) => {\n        if (result) {\n          results[index] = result || results[index];\n        }\n      });\n    }\n  }\n}\n\nasync function resolveDeferredData(\n  result: DeferredResult,\n  signal: AbortSignal,\n  unwrap = false\n): Promise<SuccessResult | ErrorResult | undefined> {\n  let aborted = await result.deferredData.resolveData(signal);\n  if (aborted) {\n    return;\n  }\n\n  if (unwrap) {\n    try {\n      return {\n        type: ResultType.data,\n        data: result.deferredData.unwrappedData,\n      };\n    } catch (e) {\n      // Handle any TrackedPromise._error values encountered while unwrapping\n      return {\n        type: ResultType.error,\n        error: e,\n      };\n    }\n  }\n\n  return {\n    type: ResultType.data,\n    data: result.deferredData.data,\n  };\n}\n\nfunction hasNakedIndexQuery(search: string): boolean {\n  return new URLSearchParams(search).getAll(\"index\").some((v) => v === \"\");\n}\n\nfunction getTargetMatch(\n  matches: AgnosticDataRouteMatch[],\n  location: Location | string\n) {\n  let search =\n    typeof location === \"string\" ? parsePath(location).search : location.search;\n  if (\n    matches[matches.length - 1].route.index &&\n    hasNakedIndexQuery(search || \"\")\n  ) {\n    // Return the leaf index route when index is present\n    return matches[matches.length - 1];\n  }\n  // Otherwise grab the deepest \"path contributing\" match (ignoring index and\n  // pathless layout routes)\n  let pathMatches = getPathContributingMatches(matches);\n  return pathMatches[pathMatches.length - 1];\n}\n\nfunction getSubmissionFromNavigation(\n  navigation: Navigation\n): Submission | undefined {\n  let { formMethod, formAction, formEncType, text, formData, json } =\n    navigation;\n  if (!formMethod || !formAction || !formEncType) {\n    return;\n  }\n\n  if (text != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json: undefined,\n      text,\n    };\n  } else if (formData != null) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData,\n      json: undefined,\n      text: undefined,\n    };\n  } else if (json !== undefined) {\n    return {\n      formMethod,\n      formAction,\n      formEncType,\n      formData: undefined,\n      json,\n      text: undefined,\n    };\n  }\n}\n\nfunction getLoadingNavigation(\n  location: Location,\n  submission?: Submission\n): NavigationStates[\"Loading\"] {\n  if (submission) {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n    };\n    return navigation;\n  } else {\n    let navigation: NavigationStates[\"Loading\"] = {\n      state: \"loading\",\n      location,\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n    };\n    return navigation;\n  }\n}\n\nfunction getSubmittingNavigation(\n  location: Location,\n  submission: Submission\n): NavigationStates[\"Submitting\"] {\n  let navigation: NavigationStates[\"Submitting\"] = {\n    state: \"submitting\",\n    location,\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n  };\n  return navigation;\n}\n\nfunction getLoadingFetcher(\n  submission?: Submission,\n  data?: Fetcher[\"data\"]\n): FetcherStates[\"Loading\"] {\n  if (submission) {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: submission.formMethod,\n      formAction: submission.formAction,\n      formEncType: submission.formEncType,\n      formData: submission.formData,\n      json: submission.json,\n      text: submission.text,\n      data,\n    };\n    return fetcher;\n  } else {\n    let fetcher: FetcherStates[\"Loading\"] = {\n      state: \"loading\",\n      formMethod: undefined,\n      formAction: undefined,\n      formEncType: undefined,\n      formData: undefined,\n      json: undefined,\n      text: undefined,\n      data,\n    };\n    return fetcher;\n  }\n}\n\nfunction getSubmittingFetcher(\n  submission: Submission,\n  existingFetcher?: Fetcher\n): FetcherStates[\"Submitting\"] {\n  let fetcher: FetcherStates[\"Submitting\"] = {\n    state: \"submitting\",\n    formMethod: submission.formMethod,\n    formAction: submission.formAction,\n    formEncType: submission.formEncType,\n    formData: submission.formData,\n    json: submission.json,\n    text: submission.text,\n    data: existingFetcher ? existingFetcher.data : undefined,\n  };\n  return fetcher;\n}\n\nfunction getDoneFetcher(data: Fetcher[\"data\"]): FetcherStates[\"Idle\"] {\n  let fetcher: FetcherStates[\"Idle\"] = {\n    state: \"idle\",\n    formMethod: undefined,\n    formAction: undefined,\n    formEncType: undefined,\n    formData: undefined,\n    json: undefined,\n    text: undefined,\n    data,\n  };\n  return fetcher;\n}\n//#endregion\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","'use strict';\n\nvar reactIs = require('react-is');\n\n/**\n * Copyright 2015, Yahoo! Inc.\n * Copyrights licensed under the New BSD License. See the accompanying LICENSE file for terms.\n */\nvar REACT_STATICS = {\n  childContextTypes: true,\n  contextType: true,\n  contextTypes: true,\n  defaultProps: true,\n  displayName: true,\n  getDefaultProps: true,\n  getDerivedStateFromError: true,\n  getDerivedStateFromProps: true,\n  mixins: true,\n  propTypes: true,\n  type: true\n};\nvar KNOWN_STATICS = {\n  name: true,\n  length: true,\n  prototype: true,\n  caller: true,\n  callee: true,\n  arguments: true,\n  arity: true\n};\nvar FORWARD_REF_STATICS = {\n  '$$typeof': true,\n  render: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true\n};\nvar MEMO_STATICS = {\n  '$$typeof': true,\n  compare: true,\n  defaultProps: true,\n  displayName: true,\n  propTypes: true,\n  type: true\n};\nvar TYPE_STATICS = {};\nTYPE_STATICS[reactIs.ForwardRef] = FORWARD_REF_STATICS;\nTYPE_STATICS[reactIs.Memo] = MEMO_STATICS;\n\nfunction getStatics(component) {\n  // React v16.11 and below\n  if (reactIs.isMemo(component)) {\n    return MEMO_STATICS;\n  } // React v16.12 and above\n\n\n  return TYPE_STATICS[component['$$typeof']] || REACT_STATICS;\n}\n\nvar defineProperty = Object.defineProperty;\nvar getOwnPropertyNames = Object.getOwnPropertyNames;\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar getPrototypeOf = Object.getPrototypeOf;\nvar objectPrototype = Object.prototype;\nfunction hoistNonReactStatics(targetComponent, sourceComponent, blacklist) {\n  if (typeof sourceComponent !== 'string') {\n    // don't hoist over string (html) components\n    if (objectPrototype) {\n      var inheritedComponent = getPrototypeOf(sourceComponent);\n\n      if (inheritedComponent && inheritedComponent !== objectPrototype) {\n        hoistNonReactStatics(targetComponent, inheritedComponent, blacklist);\n      }\n    }\n\n    var keys = getOwnPropertyNames(sourceComponent);\n\n    if (getOwnPropertySymbols) {\n      keys = keys.concat(getOwnPropertySymbols(sourceComponent));\n    }\n\n    var targetStatics = getStatics(targetComponent);\n    var sourceStatics = getStatics(sourceComponent);\n\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i];\n\n      if (!KNOWN_STATICS[key] && !(blacklist && blacklist[key]) && !(sourceStatics && sourceStatics[key]) && !(targetStatics && targetStatics[key])) {\n        var descriptor = getOwnPropertyDescriptor(sourceComponent, key);\n\n        try {\n          // Avoid failures from read-only properties\n          defineProperty(targetComponent, key, descriptor);\n        } catch (e) {}\n      }\n    }\n  }\n\n  return targetComponent;\n}\n\nmodule.exports = hoistNonReactStatics;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar React = require('react');\nvar React__default = _interopDefault(React);\n\nvar UAParser = require('ua-parser-js/dist/ua-parser.min');\n\nvar ClientUAInstance = new UAParser();\nvar browser = ClientUAInstance.getBrowser();\nvar cpu = ClientUAInstance.getCPU();\nvar device = ClientUAInstance.getDevice();\nvar engine = ClientUAInstance.getEngine();\nvar os = ClientUAInstance.getOS();\nvar ua = ClientUAInstance.getUA();\nvar setUa = function setUa(userAgentString) {\n  return ClientUAInstance.setUA(userAgentString);\n};\nvar parseUserAgent = function parseUserAgent(userAgent) {\n  if (!userAgent) {\n    console.error('No userAgent string was provided');\n    return;\n  }\n\n  var UserAgentInstance = new UAParser(userAgent);\n  return {\n    UA: UserAgentInstance,\n    browser: UserAgentInstance.getBrowser(),\n    cpu: UserAgentInstance.getCPU(),\n    device: UserAgentInstance.getDevice(),\n    engine: UserAgentInstance.getEngine(),\n    os: UserAgentInstance.getOS(),\n    ua: UserAgentInstance.getUA(),\n    setUserAgent: function setUserAgent(userAgentString) {\n      return UserAgentInstance.setUA(userAgentString);\n    }\n  };\n};\n\nvar UAHelper = /*#__PURE__*/Object.freeze({\n  ClientUAInstance: ClientUAInstance,\n  browser: browser,\n  cpu: cpu,\n  device: device,\n  engine: engine,\n  os: os,\n  ua: ua,\n  setUa: setUa,\n  parseUserAgent: parseUserAgent\n});\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n\n    if (enumerableOnly) {\n      symbols = symbols.filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n      });\n    }\n\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nvar DeviceTypes = {\n  Mobile: 'mobile',\n  Tablet: 'tablet',\n  SmartTv: 'smarttv',\n  Console: 'console',\n  Wearable: 'wearable',\n  Embedded: 'embedded',\n  Browser: undefined\n};\nvar BrowserTypes = {\n  Chrome: 'Chrome',\n  Firefox: 'Firefox',\n  Opera: 'Opera',\n  Yandex: 'Yandex',\n  Safari: 'Safari',\n  InternetExplorer: 'Internet Explorer',\n  Edge: 'Edge',\n  Chromium: 'Chromium',\n  Ie: 'IE',\n  MobileSafari: 'Mobile Safari',\n  EdgeChromium: 'Edge Chromium',\n  MIUI: 'MIUI Browser',\n  SamsungBrowser: 'Samsung Browser'\n};\nvar OsTypes = {\n  IOS: 'iOS',\n  Android: 'Android',\n  WindowsPhone: 'Windows Phone',\n  Windows: 'Windows',\n  MAC_OS: 'Mac OS'\n};\nvar InitialDeviceTypes = {\n  isMobile: false,\n  isTablet: false,\n  isBrowser: false,\n  isSmartTV: false,\n  isConsole: false,\n  isWearable: false\n};\n\nvar checkDeviceType = function checkDeviceType(type) {\n  switch (type) {\n    case DeviceTypes.Mobile:\n      return {\n        isMobile: true\n      };\n\n    case DeviceTypes.Tablet:\n      return {\n        isTablet: true\n      };\n\n    case DeviceTypes.SmartTv:\n      return {\n        isSmartTV: true\n      };\n\n    case DeviceTypes.Console:\n      return {\n        isConsole: true\n      };\n\n    case DeviceTypes.Wearable:\n      return {\n        isWearable: true\n      };\n\n    case DeviceTypes.Browser:\n      return {\n        isBrowser: true\n      };\n\n    case DeviceTypes.Embedded:\n      return {\n        isEmbedded: true\n      };\n\n    default:\n      return InitialDeviceTypes;\n  }\n};\nvar setUserAgent = function setUserAgent(userAgent) {\n  return setUa(userAgent);\n};\nvar setDefaults = function setDefaults(p) {\n  var d = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'none';\n  return p ? p : d;\n};\nvar getNavigatorInstance = function getNavigatorInstance() {\n  if (typeof window !== 'undefined') {\n    if (window.navigator || navigator) {\n      return window.navigator || navigator;\n    }\n  }\n\n  return false;\n};\nvar isIOS13Check = function isIOS13Check(type) {\n  var nav = getNavigatorInstance();\n  return nav && nav.platform && (nav.platform.indexOf(type) !== -1 || nav.platform === 'MacIntel' && nav.maxTouchPoints > 1 && !window.MSStream);\n};\n\nvar browserPayload = function browserPayload(isBrowser, browser, engine, os, ua) {\n  return {\n    isBrowser: isBrowser,\n    browserMajorVersion: setDefaults(browser.major),\n    browserFullVersion: setDefaults(browser.version),\n    browserName: setDefaults(browser.name),\n    engineName: setDefaults(engine.name),\n    engineVersion: setDefaults(engine.version),\n    osName: setDefaults(os.name),\n    osVersion: setDefaults(os.version),\n    userAgent: setDefaults(ua)\n  };\n};\nvar mobilePayload = function mobilePayload(type, device, os, ua) {\n  return _objectSpread2({}, type, {\n    vendor: setDefaults(device.vendor),\n    model: setDefaults(device.model),\n    os: setDefaults(os.name),\n    osVersion: setDefaults(os.version),\n    ua: setDefaults(ua)\n  });\n};\nvar smartTvPayload = function smartTvPayload(isSmartTV, engine, os, ua) {\n  return {\n    isSmartTV: isSmartTV,\n    engineName: setDefaults(engine.name),\n    engineVersion: setDefaults(engine.version),\n    osName: setDefaults(os.name),\n    osVersion: setDefaults(os.version),\n    userAgent: setDefaults(ua)\n  };\n};\nvar consolePayload = function consolePayload(isConsole, engine, os, ua) {\n  return {\n    isConsole: isConsole,\n    engineName: setDefaults(engine.name),\n    engineVersion: setDefaults(engine.version),\n    osName: setDefaults(os.name),\n    osVersion: setDefaults(os.version),\n    userAgent: setDefaults(ua)\n  };\n};\nvar wearablePayload = function wearablePayload(isWearable, engine, os, ua) {\n  return {\n    isWearable: isWearable,\n    engineName: setDefaults(engine.name),\n    engineVersion: setDefaults(engine.version),\n    osName: setDefaults(os.name),\n    osVersion: setDefaults(os.version),\n    userAgent: setDefaults(ua)\n  };\n};\nvar embeddedPayload = function embeddedPayload(isEmbedded, device, engine, os, ua) {\n  return {\n    isEmbedded: isEmbedded,\n    vendor: setDefaults(device.vendor),\n    model: setDefaults(device.model),\n    engineName: setDefaults(engine.name),\n    engineVersion: setDefaults(engine.version),\n    osName: setDefaults(os.name),\n    osVersion: setDefaults(os.version),\n    userAgent: setDefaults(ua)\n  };\n};\n\nfunction deviceDetect(userAgent) {\n  var _ref = userAgent ? parseUserAgent(userAgent) : UAHelper,\n      device = _ref.device,\n      browser = _ref.browser,\n      engine = _ref.engine,\n      os = _ref.os,\n      ua = _ref.ua;\n\n  var type = checkDeviceType(device.type);\n  var isBrowser = type.isBrowser,\n      isMobile = type.isMobile,\n      isTablet = type.isTablet,\n      isSmartTV = type.isSmartTV,\n      isConsole = type.isConsole,\n      isWearable = type.isWearable,\n      isEmbedded = type.isEmbedded;\n\n  if (isBrowser) {\n    return browserPayload(isBrowser, browser, engine, os, ua);\n  }\n\n  if (isSmartTV) {\n    return smartTvPayload(isSmartTV, engine, os, ua);\n  }\n\n  if (isConsole) {\n    return consolePayload(isConsole, engine, os, ua);\n  }\n\n  if (isMobile) {\n    return mobilePayload(type, device, os, ua);\n  }\n\n  if (isTablet) {\n    return mobilePayload(type, device, os, ua);\n  }\n\n  if (isWearable) {\n    return wearablePayload(isWearable, engine, os, ua);\n  }\n\n  if (isEmbedded) {\n    return embeddedPayload(isEmbedded, device, engine, os, ua);\n  }\n}\n\nvar isMobileType = function isMobileType(_ref) {\n  var type = _ref.type;\n  return type === DeviceTypes.Mobile;\n};\nvar isTabletType = function isTabletType(_ref2) {\n  var type = _ref2.type;\n  return type === DeviceTypes.Tablet;\n};\nvar isMobileAndTabletType = function isMobileAndTabletType(_ref3) {\n  var type = _ref3.type;\n  return type === DeviceTypes.Mobile || type === DeviceTypes.Tablet;\n};\nvar isSmartTVType = function isSmartTVType(_ref4) {\n  var type = _ref4.type;\n  return type === DeviceTypes.SmartTv;\n};\nvar isBrowserType = function isBrowserType(_ref5) {\n  var type = _ref5.type;\n  return type === DeviceTypes.Browser;\n};\nvar isWearableType = function isWearableType(_ref6) {\n  var type = _ref6.type;\n  return type === DeviceTypes.Wearable;\n};\nvar isConsoleType = function isConsoleType(_ref7) {\n  var type = _ref7.type;\n  return type === DeviceTypes.Console;\n};\nvar isEmbeddedType = function isEmbeddedType(_ref8) {\n  var type = _ref8.type;\n  return type === DeviceTypes.Embedded;\n};\nvar getMobileVendor = function getMobileVendor(_ref9) {\n  var vendor = _ref9.vendor;\n  return setDefaults(vendor);\n};\nvar getMobileModel = function getMobileModel(_ref10) {\n  var model = _ref10.model;\n  return setDefaults(model);\n};\nvar getDeviceType = function getDeviceType(_ref11) {\n  var type = _ref11.type;\n  return setDefaults(type, 'browser');\n}; // os types\n\nvar isAndroidType = function isAndroidType(_ref12) {\n  var name = _ref12.name;\n  return name === OsTypes.Android;\n};\nvar isWindowsType = function isWindowsType(_ref13) {\n  var name = _ref13.name;\n  return name === OsTypes.Windows;\n};\nvar isMacOsType = function isMacOsType(_ref14) {\n  var name = _ref14.name;\n  return name === OsTypes.MAC_OS;\n};\nvar isWinPhoneType = function isWinPhoneType(_ref15) {\n  var name = _ref15.name;\n  return name === OsTypes.WindowsPhone;\n};\nvar isIOSType = function isIOSType(_ref16) {\n  var name = _ref16.name;\n  return name === OsTypes.IOS;\n};\nvar getOsVersion = function getOsVersion(_ref17) {\n  var version = _ref17.version;\n  return setDefaults(version);\n};\nvar getOsName = function getOsName(_ref18) {\n  var name = _ref18.name;\n  return setDefaults(name);\n}; // browser types\n\nvar isChromeType = function isChromeType(_ref19) {\n  var name = _ref19.name;\n  return name === BrowserTypes.Chrome;\n};\nvar isFirefoxType = function isFirefoxType(_ref20) {\n  var name = _ref20.name;\n  return name === BrowserTypes.Firefox;\n};\nvar isChromiumType = function isChromiumType(_ref21) {\n  var name = _ref21.name;\n  return name === BrowserTypes.Chromium;\n};\nvar isEdgeType = function isEdgeType(_ref22) {\n  var name = _ref22.name;\n  return name === BrowserTypes.Edge;\n};\nvar isYandexType = function isYandexType(_ref23) {\n  var name = _ref23.name;\n  return name === BrowserTypes.Yandex;\n};\nvar isSafariType = function isSafariType(_ref24) {\n  var name = _ref24.name;\n  return name === BrowserTypes.Safari || name === BrowserTypes.MobileSafari;\n};\nvar isMobileSafariType = function isMobileSafariType(_ref25) {\n  var name = _ref25.name;\n  return name === BrowserTypes.MobileSafari;\n};\nvar isOperaType = function isOperaType(_ref26) {\n  var name = _ref26.name;\n  return name === BrowserTypes.Opera;\n};\nvar isIEType = function isIEType(_ref27) {\n  var name = _ref27.name;\n  return name === BrowserTypes.InternetExplorer || name === BrowserTypes.Ie;\n};\nvar isMIUIType = function isMIUIType(_ref28) {\n  var name = _ref28.name;\n  return name === BrowserTypes.MIUI;\n};\nvar isSamsungBrowserType = function isSamsungBrowserType(_ref29) {\n  var name = _ref29.name;\n  return name === BrowserTypes.SamsungBrowser;\n};\nvar getBrowserFullVersion = function getBrowserFullVersion(_ref30) {\n  var version = _ref30.version;\n  return setDefaults(version);\n};\nvar getBrowserVersion = function getBrowserVersion(_ref31) {\n  var major = _ref31.major;\n  return setDefaults(major);\n};\nvar getBrowserName = function getBrowserName(_ref32) {\n  var name = _ref32.name;\n  return setDefaults(name);\n}; // engine types\n\nvar getEngineName = function getEngineName(_ref33) {\n  var name = _ref33.name;\n  return setDefaults(name);\n};\nvar getEngineVersion = function getEngineVersion(_ref34) {\n  var version = _ref34.version;\n  return setDefaults(version);\n};\nvar isElectronType = function isElectronType() {\n  var nav = getNavigatorInstance();\n  var ua = nav && nav.userAgent && nav.userAgent.toLowerCase();\n  return typeof ua === 'string' ? /electron/.test(ua) : false;\n};\nvar isEdgeChromiumType = function isEdgeChromiumType(ua) {\n  return typeof ua === 'string' && ua.indexOf('Edg/') !== -1;\n};\nvar getIOS13 = function getIOS13() {\n  var nav = getNavigatorInstance();\n  return nav && (/iPad|iPhone|iPod/.test(nav.platform) || nav.platform === 'MacIntel' && nav.maxTouchPoints > 1) && !window.MSStream;\n};\nvar getIPad13 = function getIPad13() {\n  return isIOS13Check('iPad');\n};\nvar getIphone13 = function getIphone13() {\n  return isIOS13Check('iPhone');\n};\nvar getIPod13 = function getIPod13() {\n  return isIOS13Check('iPod');\n};\nvar getUseragent = function getUseragent(userAg) {\n  return setDefaults(userAg);\n};\n\nfunction buildSelectorsObject(options) {\n  var _ref = options ? options : UAHelper,\n      device = _ref.device,\n      browser = _ref.browser,\n      os = _ref.os,\n      engine = _ref.engine,\n      ua = _ref.ua;\n\n  return {\n    isSmartTV: isSmartTVType(device),\n    isConsole: isConsoleType(device),\n    isWearable: isWearableType(device),\n    isEmbedded: isEmbeddedType(device),\n    isMobileSafari: isMobileSafariType(browser) || getIPad13(),\n    isChromium: isChromiumType(browser),\n    isMobile: isMobileAndTabletType(device) || getIPad13(),\n    isMobileOnly: isMobileType(device),\n    isTablet: isTabletType(device) || getIPad13(),\n    isBrowser: isBrowserType(device),\n    isDesktop: isBrowserType(device),\n    isAndroid: isAndroidType(os),\n    isWinPhone: isWinPhoneType(os),\n    isIOS: isIOSType(os) || getIPad13(),\n    isChrome: isChromeType(browser),\n    isFirefox: isFirefoxType(browser),\n    isSafari: isSafariType(browser),\n    isOpera: isOperaType(browser),\n    isIE: isIEType(browser),\n    osVersion: getOsVersion(os),\n    osName: getOsName(os),\n    fullBrowserVersion: getBrowserFullVersion(browser),\n    browserVersion: getBrowserVersion(browser),\n    browserName: getBrowserName(browser),\n    mobileVendor: getMobileVendor(device),\n    mobileModel: getMobileModel(device),\n    engineName: getEngineName(engine),\n    engineVersion: getEngineVersion(engine),\n    getUA: getUseragent(ua),\n    isEdge: isEdgeType(browser) || isEdgeChromiumType(ua),\n    isYandex: isYandexType(browser),\n    deviceType: getDeviceType(device),\n    isIOS13: getIOS13(),\n    isIPad13: getIPad13(),\n    isIPhone13: getIphone13(),\n    isIPod13: getIPod13(),\n    isElectron: isElectronType(),\n    isEdgeChromium: isEdgeChromiumType(ua),\n    isLegacyEdge: isEdgeType(browser) && !isEdgeChromiumType(ua),\n    isWindows: isWindowsType(os),\n    isMacOs: isMacOsType(os),\n    isMIUI: isMIUIType(browser),\n    isSamsungBrowser: isSamsungBrowserType(browser)\n  };\n}\n\nvar isSmartTV = isSmartTVType(device);\nvar isConsole = isConsoleType(device);\nvar isWearable = isWearableType(device);\nvar isEmbedded = isEmbeddedType(device);\nvar isMobileSafari = isMobileSafariType(browser) || getIPad13();\nvar isChromium = isChromiumType(browser);\nvar isMobile = isMobileAndTabletType(device) || getIPad13();\nvar isMobileOnly = isMobileType(device);\nvar isTablet = isTabletType(device) || getIPad13();\nvar isBrowser = isBrowserType(device);\nvar isDesktop = isBrowserType(device);\nvar isAndroid = isAndroidType(os);\nvar isWinPhone = isWinPhoneType(os);\nvar isIOS = isIOSType(os) || getIPad13();\nvar isChrome = isChromeType(browser);\nvar isFirefox = isFirefoxType(browser);\nvar isSafari = isSafariType(browser);\nvar isOpera = isOperaType(browser);\nvar isIE = isIEType(browser);\nvar osVersion = getOsVersion(os);\nvar osName = getOsName(os);\nvar fullBrowserVersion = getBrowserFullVersion(browser);\nvar browserVersion = getBrowserVersion(browser);\nvar browserName = getBrowserName(browser);\nvar mobileVendor = getMobileVendor(device);\nvar mobileModel = getMobileModel(device);\nvar engineName = getEngineName(engine);\nvar engineVersion = getEngineVersion(engine);\nvar getUA = getUseragent(ua);\nvar isEdge = isEdgeType(browser) || isEdgeChromiumType(ua);\nvar isYandex = isYandexType(browser);\nvar deviceType = getDeviceType(device);\nvar isIOS13 = getIOS13();\nvar isIPad13 = getIPad13();\nvar isIPhone13 = getIphone13();\nvar isIPod13 = getIPod13();\nvar isElectron = isElectronType();\nvar isEdgeChromium = isEdgeChromiumType(ua);\nvar isLegacyEdge = isEdgeType(browser) && !isEdgeChromiumType(ua);\nvar isWindows = isWindowsType(os);\nvar isMacOs = isMacOsType(os);\nvar isMIUI = isMIUIType(browser);\nvar isSamsungBrowser = isSamsungBrowserType(browser);\nvar getSelectorsByUserAgent = function getSelectorsByUserAgent(userAgent) {\n  if (!userAgent || typeof userAgent !== 'string') {\n    console.error('No valid user agent string was provided');\n    return;\n  }\n\n  var _UAHelper$parseUserAg = parseUserAgent(userAgent),\n      device = _UAHelper$parseUserAg.device,\n      browser = _UAHelper$parseUserAg.browser,\n      os = _UAHelper$parseUserAg.os,\n      engine = _UAHelper$parseUserAg.engine,\n      ua = _UAHelper$parseUserAg.ua;\n\n  return buildSelectorsObject({\n    device: device,\n    browser: browser,\n    os: os,\n    engine: engine,\n    ua: ua\n  });\n};\n\nvar AndroidView = function AndroidView(_ref) {\n  var renderWithFragment = _ref.renderWithFragment,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"renderWithFragment\", \"children\"]);\n\n  return isAndroid ? renderWithFragment ? React__default.createElement(React.Fragment, null, children) : React__default.createElement(\"div\", props, children) : null;\n};\nvar BrowserView = function BrowserView(_ref2) {\n  var renderWithFragment = _ref2.renderWithFragment,\n      children = _ref2.children,\n      props = _objectWithoutProperties(_ref2, [\"renderWithFragment\", \"children\"]);\n\n  return isBrowser ? renderWithFragment ? React__default.createElement(React.Fragment, null, children) : React__default.createElement(\"div\", props, children) : null;\n};\nvar IEView = function IEView(_ref3) {\n  var renderWithFragment = _ref3.renderWithFragment,\n      children = _ref3.children,\n      props = _objectWithoutProperties(_ref3, [\"renderWithFragment\", \"children\"]);\n\n  return isIE ? renderWithFragment ? React__default.createElement(React.Fragment, null, children) : React__default.createElement(\"div\", props, children) : null;\n};\nvar IOSView = function IOSView(_ref4) {\n  var renderWithFragment = _ref4.renderWithFragment,\n      children = _ref4.children,\n      props = _objectWithoutProperties(_ref4, [\"renderWithFragment\", \"children\"]);\n\n  return isIOS ? renderWithFragment ? React__default.createElement(React.Fragment, null, children) : React__default.createElement(\"div\", props, children) : null;\n};\nvar MobileView = function MobileView(_ref5) {\n  var renderWithFragment = _ref5.renderWithFragment,\n      children = _ref5.children,\n      props = _objectWithoutProperties(_ref5, [\"renderWithFragment\", \"children\"]);\n\n  return isMobile ? renderWithFragment ? React__default.createElement(React.Fragment, null, children) : React__default.createElement(\"div\", props, children) : null;\n};\nvar TabletView = function TabletView(_ref6) {\n  var renderWithFragment = _ref6.renderWithFragment,\n      children = _ref6.children,\n      props = _objectWithoutProperties(_ref6, [\"renderWithFragment\", \"children\"]);\n\n  return isTablet ? renderWithFragment ? React__default.createElement(React.Fragment, null, children) : React__default.createElement(\"div\", props, children) : null;\n};\nvar WinPhoneView = function WinPhoneView(_ref7) {\n  var renderWithFragment = _ref7.renderWithFragment,\n      children = _ref7.children,\n      props = _objectWithoutProperties(_ref7, [\"renderWithFragment\", \"children\"]);\n\n  return isWinPhone ? renderWithFragment ? React__default.createElement(React.Fragment, null, children) : React__default.createElement(\"div\", props, children) : null;\n};\nvar MobileOnlyView = function MobileOnlyView(_ref8) {\n  var renderWithFragment = _ref8.renderWithFragment,\n      children = _ref8.children,\n      viewClassName = _ref8.viewClassName,\n      style = _ref8.style,\n      props = _objectWithoutProperties(_ref8, [\"renderWithFragment\", \"children\", \"viewClassName\", \"style\"]);\n\n  return isMobileOnly ? renderWithFragment ? React__default.createElement(React.Fragment, null, children) : React__default.createElement(\"div\", props, children) : null;\n};\nvar SmartTVView = function SmartTVView(_ref9) {\n  var renderWithFragment = _ref9.renderWithFragment,\n      children = _ref9.children,\n      props = _objectWithoutProperties(_ref9, [\"renderWithFragment\", \"children\"]);\n\n  return isSmartTV ? renderWithFragment ? React__default.createElement(React.Fragment, null, children) : React__default.createElement(\"div\", props, children) : null;\n};\nvar ConsoleView = function ConsoleView(_ref10) {\n  var renderWithFragment = _ref10.renderWithFragment,\n      children = _ref10.children,\n      props = _objectWithoutProperties(_ref10, [\"renderWithFragment\", \"children\"]);\n\n  return isConsole ? renderWithFragment ? React__default.createElement(React.Fragment, null, children) : React__default.createElement(\"div\", props, children) : null;\n};\nvar WearableView = function WearableView(_ref11) {\n  var renderWithFragment = _ref11.renderWithFragment,\n      children = _ref11.children,\n      props = _objectWithoutProperties(_ref11, [\"renderWithFragment\", \"children\"]);\n\n  return isWearable ? renderWithFragment ? React__default.createElement(React.Fragment, null, children) : React__default.createElement(\"div\", props, children) : null;\n};\nvar CustomView = function CustomView(_ref12) {\n  var renderWithFragment = _ref12.renderWithFragment,\n      children = _ref12.children,\n      viewClassName = _ref12.viewClassName,\n      style = _ref12.style,\n      condition = _ref12.condition,\n      props = _objectWithoutProperties(_ref12, [\"renderWithFragment\", \"children\", \"viewClassName\", \"style\", \"condition\"]);\n\n  return condition ? renderWithFragment ? React__default.createElement(React.Fragment, null, children) : React__default.createElement(\"div\", props, children) : null;\n};\n\nfunction withOrientationChange(WrappedComponent) {\n  return /*#__PURE__*/function (_React$Component) {\n    _inherits(_class, _React$Component);\n\n    function _class(props) {\n      var _this;\n\n      _classCallCheck(this, _class);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(_class).call(this, props));\n      _this.isEventListenerAdded = false;\n      _this.handleOrientationChange = _this.handleOrientationChange.bind(_assertThisInitialized(_this));\n      _this.onOrientationChange = _this.onOrientationChange.bind(_assertThisInitialized(_this));\n      _this.onPageLoad = _this.onPageLoad.bind(_assertThisInitialized(_this));\n      _this.state = {\n        isLandscape: false,\n        isPortrait: false\n      };\n      return _this;\n    }\n\n    _createClass(_class, [{\n      key: \"handleOrientationChange\",\n      value: function handleOrientationChange() {\n        if (!this.isEventListenerAdded) {\n          this.isEventListenerAdded = true;\n        }\n\n        var orientation = window.innerWidth > window.innerHeight ? 90 : 0;\n        this.setState({\n          isPortrait: orientation === 0,\n          isLandscape: orientation === 90\n        });\n      }\n    }, {\n      key: \"onOrientationChange\",\n      value: function onOrientationChange() {\n        this.handleOrientationChange();\n      }\n    }, {\n      key: \"onPageLoad\",\n      value: function onPageLoad() {\n        this.handleOrientationChange();\n      }\n    }, {\n      key: \"componentDidMount\",\n      value: function componentDidMount() {\n        if ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) !== undefined && isMobile) {\n          if (!this.isEventListenerAdded) {\n            this.handleOrientationChange();\n            window.addEventListener(\"load\", this.onPageLoad, false);\n          } else {\n            window.removeEventListener(\"load\", this.onPageLoad, false);\n          }\n\n          window.addEventListener(\"resize\", this.onOrientationChange, false);\n        }\n      }\n    }, {\n      key: \"componentWillUnmount\",\n      value: function componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.onOrientationChange, false);\n      }\n    }, {\n      key: \"render\",\n      value: function render() {\n        return React__default.createElement(WrappedComponent, _extends({}, this.props, {\n          isLandscape: this.state.isLandscape,\n          isPortrait: this.state.isPortrait\n        }));\n      }\n    }]);\n\n    return _class;\n  }(React__default.Component);\n}\n\nfunction useMobileOrientation() {\n  var _useState = React.useState(function () {\n    var orientation = window.innerWidth > window.innerHeight ? 90 : 0;\n    return {\n      isPortrait: orientation === 0,\n      isLandscape: orientation === 90,\n      orientation: orientation === 0 ? 'portrait' : 'landscape'\n    };\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var handleOrientationChange = React.useCallback(function () {\n    var orientation = window.innerWidth > window.innerHeight ? 90 : 0;\n    var next = {\n      isPortrait: orientation === 0,\n      isLandscape: orientation === 90,\n      orientation: orientation === 0 ? 'portrait' : 'landscape'\n    };\n    state.orientation !== next.orientation && setState(next);\n  }, [state.orientation]);\n  React.useEffect(function () {\n    if ((typeof window === \"undefined\" ? \"undefined\" : _typeof(window)) !== undefined && isMobile) {\n      handleOrientationChange();\n      window.addEventListener(\"load\", handleOrientationChange, false);\n      window.addEventListener(\"resize\", handleOrientationChange, false);\n    }\n\n    return function () {\n      window.removeEventListener(\"resize\", handleOrientationChange, false);\n      window.removeEventListener(\"load\", handleOrientationChange, false);\n    };\n  }, [handleOrientationChange]);\n  return state;\n}\n\nfunction useDeviceData(userAgent) {\n  var hookUserAgent = userAgent ? userAgent : window.navigator.userAgent;\n  return parseUserAgent(hookUserAgent);\n}\n\nfunction useDeviceSelectors(userAgent) {\n  var hookUserAgent = userAgent ? userAgent : window.navigator.userAgent;\n  var deviceData = useDeviceData(hookUserAgent);\n  var selectors = buildSelectorsObject(deviceData);\n  return [selectors, deviceData];\n}\n\nexports.AndroidView = AndroidView;\nexports.BrowserTypes = BrowserTypes;\nexports.BrowserView = BrowserView;\nexports.ConsoleView = ConsoleView;\nexports.CustomView = CustomView;\nexports.IEView = IEView;\nexports.IOSView = IOSView;\nexports.MobileOnlyView = MobileOnlyView;\nexports.MobileView = MobileView;\nexports.OsTypes = OsTypes;\nexports.SmartTVView = SmartTVView;\nexports.TabletView = TabletView;\nexports.WearableView = WearableView;\nexports.WinPhoneView = WinPhoneView;\nexports.browserName = browserName;\nexports.browserVersion = browserVersion;\nexports.deviceDetect = deviceDetect;\nexports.deviceType = deviceType;\nexports.engineName = engineName;\nexports.engineVersion = engineVersion;\nexports.fullBrowserVersion = fullBrowserVersion;\nexports.getSelectorsByUserAgent = getSelectorsByUserAgent;\nexports.getUA = getUA;\nexports.isAndroid = isAndroid;\nexports.isBrowser = isBrowser;\nexports.isChrome = isChrome;\nexports.isChromium = isChromium;\nexports.isConsole = isConsole;\nexports.isDesktop = isDesktop;\nexports.isEdge = isEdge;\nexports.isEdgeChromium = isEdgeChromium;\nexports.isElectron = isElectron;\nexports.isEmbedded = isEmbedded;\nexports.isFirefox = isFirefox;\nexports.isIE = isIE;\nexports.isIOS = isIOS;\nexports.isIOS13 = isIOS13;\nexports.isIPad13 = isIPad13;\nexports.isIPhone13 = isIPhone13;\nexports.isIPod13 = isIPod13;\nexports.isLegacyEdge = isLegacyEdge;\nexports.isMIUI = isMIUI;\nexports.isMacOs = isMacOs;\nexports.isMobile = isMobile;\nexports.isMobileOnly = isMobileOnly;\nexports.isMobileSafari = isMobileSafari;\nexports.isOpera = isOpera;\nexports.isSafari = isSafari;\nexports.isSamsungBrowser = isSamsungBrowser;\nexports.isSmartTV = isSmartTV;\nexports.isTablet = isTablet;\nexports.isWearable = isWearable;\nexports.isWinPhone = isWinPhone;\nexports.isWindows = isWindows;\nexports.isYandex = isYandex;\nexports.mobileModel = mobileModel;\nexports.mobileVendor = mobileVendor;\nexports.osName = osName;\nexports.osVersion = osVersion;\nexports.parseUserAgent = parseUserAgent;\nexports.setUserAgent = setUserAgent;\nexports.useDeviceData = useDeviceData;\nexports.useDeviceSelectors = useDeviceSelectors;\nexports.useMobileOrientation = useMobileOrientation;\nexports.withOrientationChange = withOrientationChange;\n","/**\n * @license React\n * react-dom.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n/*\n Modernizr 3.0.0pre (Custom Build) | MIT\n*/\n'use strict';var aa=require(\"react\"),ca=require(\"scheduler\");function p(a){for(var b=\"https://reactjs.org/docs/error-decoder.html?invariant=\"+a,c=1;c<arguments.length;c++)b+=\"&args[]=\"+encodeURIComponent(arguments[c]);return\"Minified React error #\"+a+\"; visit \"+b+\" for the full message or use the non-minified dev environment for full errors and additional helpful warnings.\"}var da=new Set,ea={};function fa(a,b){ha(a,b);ha(a+\"Capture\",b)}\nfunction ha(a,b){ea[a]=b;for(a=0;a<b.length;a++)da.add(b[a])}\nvar ia=!(\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement),ja=Object.prototype.hasOwnProperty,ka=/^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$/,la=\n{},ma={};function oa(a){if(ja.call(ma,a))return!0;if(ja.call(la,a))return!1;if(ka.test(a))return ma[a]=!0;la[a]=!0;return!1}function pa(a,b,c,d){if(null!==c&&0===c.type)return!1;switch(typeof b){case \"function\":case \"symbol\":return!0;case \"boolean\":if(d)return!1;if(null!==c)return!c.acceptsBooleans;a=a.toLowerCase().slice(0,5);return\"data-\"!==a&&\"aria-\"!==a;default:return!1}}\nfunction qa(a,b,c,d){if(null===b||\"undefined\"===typeof b||pa(a,b,c,d))return!0;if(d)return!1;if(null!==c)switch(c.type){case 3:return!b;case 4:return!1===b;case 5:return isNaN(b);case 6:return isNaN(b)||1>b}return!1}function v(a,b,c,d,e,f,g){this.acceptsBooleans=2===b||3===b||4===b;this.attributeName=d;this.attributeNamespace=e;this.mustUseProperty=c;this.propertyName=a;this.type=b;this.sanitizeURL=f;this.removeEmptyString=g}var z={};\n\"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style\".split(\" \").forEach(function(a){z[a]=new v(a,0,!1,a,null,!1,!1)});[[\"acceptCharset\",\"accept-charset\"],[\"className\",\"class\"],[\"htmlFor\",\"for\"],[\"httpEquiv\",\"http-equiv\"]].forEach(function(a){var b=a[0];z[b]=new v(b,1,!1,a[1],null,!1,!1)});[\"contentEditable\",\"draggable\",\"spellCheck\",\"value\"].forEach(function(a){z[a]=new v(a,2,!1,a.toLowerCase(),null,!1,!1)});\n[\"autoReverse\",\"externalResourcesRequired\",\"focusable\",\"preserveAlpha\"].forEach(function(a){z[a]=new v(a,2,!1,a,null,!1,!1)});\"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope\".split(\" \").forEach(function(a){z[a]=new v(a,3,!1,a.toLowerCase(),null,!1,!1)});\n[\"checked\",\"multiple\",\"muted\",\"selected\"].forEach(function(a){z[a]=new v(a,3,!0,a,null,!1,!1)});[\"capture\",\"download\"].forEach(function(a){z[a]=new v(a,4,!1,a,null,!1,!1)});[\"cols\",\"rows\",\"size\",\"span\"].forEach(function(a){z[a]=new v(a,6,!1,a,null,!1,!1)});[\"rowSpan\",\"start\"].forEach(function(a){z[a]=new v(a,5,!1,a.toLowerCase(),null,!1,!1)});var ra=/[\\-:]([a-z])/g;function sa(a){return a[1].toUpperCase()}\n\"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height\".split(\" \").forEach(function(a){var b=a.replace(ra,\nsa);z[b]=new v(b,1,!1,a,null,!1,!1)});\"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type\".split(\" \").forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/1999/xlink\",!1,!1)});[\"xml:base\",\"xml:lang\",\"xml:space\"].forEach(function(a){var b=a.replace(ra,sa);z[b]=new v(b,1,!1,a,\"http://www.w3.org/XML/1998/namespace\",!1,!1)});[\"tabIndex\",\"crossOrigin\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!1,!1)});\nz.xlinkHref=new v(\"xlinkHref\",1,!1,\"xlink:href\",\"http://www.w3.org/1999/xlink\",!0,!1);[\"src\",\"href\",\"action\",\"formAction\"].forEach(function(a){z[a]=new v(a,1,!1,a.toLowerCase(),null,!0,!0)});\nfunction ta(a,b,c,d){var e=z.hasOwnProperty(b)?z[b]:null;if(null!==e?0!==e.type:d||!(2<b.length)||\"o\"!==b[0]&&\"O\"!==b[0]||\"n\"!==b[1]&&\"N\"!==b[1])qa(b,c,e,d)&&(c=null),d||null===e?oa(b)&&(null===c?a.removeAttribute(b):a.setAttribute(b,\"\"+c)):e.mustUseProperty?a[e.propertyName]=null===c?3===e.type?!1:\"\":c:(b=e.attributeName,d=e.attributeNamespace,null===c?a.removeAttribute(b):(e=e.type,c=3===e||4===e&&!0===c?\"\":\"\"+c,d?a.setAttributeNS(d,b,c):a.setAttribute(b,c)))}\nvar ua=aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,va=Symbol.for(\"react.element\"),wa=Symbol.for(\"react.portal\"),ya=Symbol.for(\"react.fragment\"),za=Symbol.for(\"react.strict_mode\"),Aa=Symbol.for(\"react.profiler\"),Ba=Symbol.for(\"react.provider\"),Ca=Symbol.for(\"react.context\"),Da=Symbol.for(\"react.forward_ref\"),Ea=Symbol.for(\"react.suspense\"),Fa=Symbol.for(\"react.suspense_list\"),Ga=Symbol.for(\"react.memo\"),Ha=Symbol.for(\"react.lazy\");Symbol.for(\"react.scope\");Symbol.for(\"react.debug_trace_mode\");\nvar Ia=Symbol.for(\"react.offscreen\");Symbol.for(\"react.legacy_hidden\");Symbol.for(\"react.cache\");Symbol.for(\"react.tracing_marker\");var Ja=Symbol.iterator;function Ka(a){if(null===a||\"object\"!==typeof a)return null;a=Ja&&a[Ja]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}var A=Object.assign,La;function Ma(a){if(void 0===La)try{throw Error();}catch(c){var b=c.stack.trim().match(/\\n( *(at )?)/);La=b&&b[1]||\"\"}return\"\\n\"+La+a}var Na=!1;\nfunction Oa(a,b){if(!a||Na)return\"\";Na=!0;var c=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(b)if(b=function(){throw Error();},Object.defineProperty(b.prototype,\"props\",{set:function(){throw Error();}}),\"object\"===typeof Reflect&&Reflect.construct){try{Reflect.construct(b,[])}catch(l){var d=l}Reflect.construct(a,[],b)}else{try{b.call()}catch(l){d=l}a.call(b.prototype)}else{try{throw Error();}catch(l){d=l}a()}}catch(l){if(l&&d&&\"string\"===typeof l.stack){for(var e=l.stack.split(\"\\n\"),\nf=d.stack.split(\"\\n\"),g=e.length-1,h=f.length-1;1<=g&&0<=h&&e[g]!==f[h];)h--;for(;1<=g&&0<=h;g--,h--)if(e[g]!==f[h]){if(1!==g||1!==h){do if(g--,h--,0>h||e[g]!==f[h]){var k=\"\\n\"+e[g].replace(\" at new \",\" at \");a.displayName&&k.includes(\"<anonymous>\")&&(k=k.replace(\"<anonymous>\",a.displayName));return k}while(1<=g&&0<=h)}break}}}finally{Na=!1,Error.prepareStackTrace=c}return(a=a?a.displayName||a.name:\"\")?Ma(a):\"\"}\nfunction Pa(a){switch(a.tag){case 5:return Ma(a.type);case 16:return Ma(\"Lazy\");case 13:return Ma(\"Suspense\");case 19:return Ma(\"SuspenseList\");case 0:case 2:case 15:return a=Oa(a.type,!1),a;case 11:return a=Oa(a.type.render,!1),a;case 1:return a=Oa(a.type,!0),a;default:return\"\"}}\nfunction Qa(a){if(null==a)return null;if(\"function\"===typeof a)return a.displayName||a.name||null;if(\"string\"===typeof a)return a;switch(a){case ya:return\"Fragment\";case wa:return\"Portal\";case Aa:return\"Profiler\";case za:return\"StrictMode\";case Ea:return\"Suspense\";case Fa:return\"SuspenseList\"}if(\"object\"===typeof a)switch(a.$$typeof){case Ca:return(a.displayName||\"Context\")+\".Consumer\";case Ba:return(a._context.displayName||\"Context\")+\".Provider\";case Da:var b=a.render;a=a.displayName;a||(a=b.displayName||\nb.name||\"\",a=\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");return a;case Ga:return b=a.displayName||null,null!==b?b:Qa(a.type)||\"Memo\";case Ha:b=a._payload;a=a._init;try{return Qa(a(b))}catch(c){}}return null}\nfunction Ra(a){var b=a.type;switch(a.tag){case 24:return\"Cache\";case 9:return(b.displayName||\"Context\")+\".Consumer\";case 10:return(b._context.displayName||\"Context\")+\".Provider\";case 18:return\"DehydratedFragment\";case 11:return a=b.render,a=a.displayName||a.name||\"\",b.displayName||(\"\"!==a?\"ForwardRef(\"+a+\")\":\"ForwardRef\");case 7:return\"Fragment\";case 5:return b;case 4:return\"Portal\";case 3:return\"Root\";case 6:return\"Text\";case 16:return Qa(b);case 8:return b===za?\"StrictMode\":\"Mode\";case 22:return\"Offscreen\";\ncase 12:return\"Profiler\";case 21:return\"Scope\";case 13:return\"Suspense\";case 19:return\"SuspenseList\";case 25:return\"TracingMarker\";case 1:case 0:case 17:case 2:case 14:case 15:if(\"function\"===typeof b)return b.displayName||b.name||null;if(\"string\"===typeof b)return b}return null}function Sa(a){switch(typeof a){case \"boolean\":case \"number\":case \"string\":case \"undefined\":return a;case \"object\":return a;default:return\"\"}}\nfunction Ta(a){var b=a.type;return(a=a.nodeName)&&\"input\"===a.toLowerCase()&&(\"checkbox\"===b||\"radio\"===b)}\nfunction Ua(a){var b=Ta(a)?\"checked\":\"value\",c=Object.getOwnPropertyDescriptor(a.constructor.prototype,b),d=\"\"+a[b];if(!a.hasOwnProperty(b)&&\"undefined\"!==typeof c&&\"function\"===typeof c.get&&\"function\"===typeof c.set){var e=c.get,f=c.set;Object.defineProperty(a,b,{configurable:!0,get:function(){return e.call(this)},set:function(a){d=\"\"+a;f.call(this,a)}});Object.defineProperty(a,b,{enumerable:c.enumerable});return{getValue:function(){return d},setValue:function(a){d=\"\"+a},stopTracking:function(){a._valueTracker=\nnull;delete a[b]}}}}function Va(a){a._valueTracker||(a._valueTracker=Ua(a))}function Wa(a){if(!a)return!1;var b=a._valueTracker;if(!b)return!0;var c=b.getValue();var d=\"\";a&&(d=Ta(a)?a.checked?\"true\":\"false\":a.value);a=d;return a!==c?(b.setValue(a),!0):!1}function Xa(a){a=a||(\"undefined\"!==typeof document?document:void 0);if(\"undefined\"===typeof a)return null;try{return a.activeElement||a.body}catch(b){return a.body}}\nfunction Ya(a,b){var c=b.checked;return A({},b,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=c?c:a._wrapperState.initialChecked})}function Za(a,b){var c=null==b.defaultValue?\"\":b.defaultValue,d=null!=b.checked?b.checked:b.defaultChecked;c=Sa(null!=b.value?b.value:c);a._wrapperState={initialChecked:d,initialValue:c,controlled:\"checkbox\"===b.type||\"radio\"===b.type?null!=b.checked:null!=b.value}}function ab(a,b){b=b.checked;null!=b&&ta(a,\"checked\",b,!1)}\nfunction bb(a,b){ab(a,b);var c=Sa(b.value),d=b.type;if(null!=c)if(\"number\"===d){if(0===c&&\"\"===a.value||a.value!=c)a.value=\"\"+c}else a.value!==\"\"+c&&(a.value=\"\"+c);else if(\"submit\"===d||\"reset\"===d){a.removeAttribute(\"value\");return}b.hasOwnProperty(\"value\")?cb(a,b.type,c):b.hasOwnProperty(\"defaultValue\")&&cb(a,b.type,Sa(b.defaultValue));null==b.checked&&null!=b.defaultChecked&&(a.defaultChecked=!!b.defaultChecked)}\nfunction db(a,b,c){if(b.hasOwnProperty(\"value\")||b.hasOwnProperty(\"defaultValue\")){var d=b.type;if(!(\"submit\"!==d&&\"reset\"!==d||void 0!==b.value&&null!==b.value))return;b=\"\"+a._wrapperState.initialValue;c||b===a.value||(a.value=b);a.defaultValue=b}c=a.name;\"\"!==c&&(a.name=\"\");a.defaultChecked=!!a._wrapperState.initialChecked;\"\"!==c&&(a.name=c)}\nfunction cb(a,b,c){if(\"number\"!==b||Xa(a.ownerDocument)!==a)null==c?a.defaultValue=\"\"+a._wrapperState.initialValue:a.defaultValue!==\"\"+c&&(a.defaultValue=\"\"+c)}var eb=Array.isArray;\nfunction fb(a,b,c,d){a=a.options;if(b){b={};for(var e=0;e<c.length;e++)b[\"$\"+c[e]]=!0;for(c=0;c<a.length;c++)e=b.hasOwnProperty(\"$\"+a[c].value),a[c].selected!==e&&(a[c].selected=e),e&&d&&(a[c].defaultSelected=!0)}else{c=\"\"+Sa(c);b=null;for(e=0;e<a.length;e++){if(a[e].value===c){a[e].selected=!0;d&&(a[e].defaultSelected=!0);return}null!==b||a[e].disabled||(b=a[e])}null!==b&&(b.selected=!0)}}\nfunction gb(a,b){if(null!=b.dangerouslySetInnerHTML)throw Error(p(91));return A({},b,{value:void 0,defaultValue:void 0,children:\"\"+a._wrapperState.initialValue})}function hb(a,b){var c=b.value;if(null==c){c=b.children;b=b.defaultValue;if(null!=c){if(null!=b)throw Error(p(92));if(eb(c)){if(1<c.length)throw Error(p(93));c=c[0]}b=c}null==b&&(b=\"\");c=b}a._wrapperState={initialValue:Sa(c)}}\nfunction ib(a,b){var c=Sa(b.value),d=Sa(b.defaultValue);null!=c&&(c=\"\"+c,c!==a.value&&(a.value=c),null==b.defaultValue&&a.defaultValue!==c&&(a.defaultValue=c));null!=d&&(a.defaultValue=\"\"+d)}function jb(a){var b=a.textContent;b===a._wrapperState.initialValue&&\"\"!==b&&null!==b&&(a.value=b)}function kb(a){switch(a){case \"svg\":return\"http://www.w3.org/2000/svg\";case \"math\":return\"http://www.w3.org/1998/Math/MathML\";default:return\"http://www.w3.org/1999/xhtml\"}}\nfunction lb(a,b){return null==a||\"http://www.w3.org/1999/xhtml\"===a?kb(b):\"http://www.w3.org/2000/svg\"===a&&\"foreignObject\"===b?\"http://www.w3.org/1999/xhtml\":a}\nvar mb,nb=function(a){return\"undefined\"!==typeof MSApp&&MSApp.execUnsafeLocalFunction?function(b,c,d,e){MSApp.execUnsafeLocalFunction(function(){return a(b,c,d,e)})}:a}(function(a,b){if(\"http://www.w3.org/2000/svg\"!==a.namespaceURI||\"innerHTML\"in a)a.innerHTML=b;else{mb=mb||document.createElement(\"div\");mb.innerHTML=\"<svg>\"+b.valueOf().toString()+\"</svg>\";for(b=mb.firstChild;a.firstChild;)a.removeChild(a.firstChild);for(;b.firstChild;)a.appendChild(b.firstChild)}});\nfunction ob(a,b){if(b){var c=a.firstChild;if(c&&c===a.lastChild&&3===c.nodeType){c.nodeValue=b;return}}a.textContent=b}\nvar pb={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,\nzoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},qb=[\"Webkit\",\"ms\",\"Moz\",\"O\"];Object.keys(pb).forEach(function(a){qb.forEach(function(b){b=b+a.charAt(0).toUpperCase()+a.substring(1);pb[b]=pb[a]})});function rb(a,b,c){return null==b||\"boolean\"===typeof b||\"\"===b?\"\":c||\"number\"!==typeof b||0===b||pb.hasOwnProperty(a)&&pb[a]?(\"\"+b).trim():b+\"px\"}\nfunction sb(a,b){a=a.style;for(var c in b)if(b.hasOwnProperty(c)){var d=0===c.indexOf(\"--\"),e=rb(c,b[c],d);\"float\"===c&&(c=\"cssFloat\");d?a.setProperty(c,e):a[c]=e}}var tb=A({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});\nfunction ub(a,b){if(b){if(tb[a]&&(null!=b.children||null!=b.dangerouslySetInnerHTML))throw Error(p(137,a));if(null!=b.dangerouslySetInnerHTML){if(null!=b.children)throw Error(p(60));if(\"object\"!==typeof b.dangerouslySetInnerHTML||!(\"__html\"in b.dangerouslySetInnerHTML))throw Error(p(61));}if(null!=b.style&&\"object\"!==typeof b.style)throw Error(p(62));}}\nfunction vb(a,b){if(-1===a.indexOf(\"-\"))return\"string\"===typeof b.is;switch(a){case \"annotation-xml\":case \"color-profile\":case \"font-face\":case \"font-face-src\":case \"font-face-uri\":case \"font-face-format\":case \"font-face-name\":case \"missing-glyph\":return!1;default:return!0}}var wb=null;function xb(a){a=a.target||a.srcElement||window;a.correspondingUseElement&&(a=a.correspondingUseElement);return 3===a.nodeType?a.parentNode:a}var yb=null,zb=null,Ab=null;\nfunction Bb(a){if(a=Cb(a)){if(\"function\"!==typeof yb)throw Error(p(280));var b=a.stateNode;b&&(b=Db(b),yb(a.stateNode,a.type,b))}}function Eb(a){zb?Ab?Ab.push(a):Ab=[a]:zb=a}function Fb(){if(zb){var a=zb,b=Ab;Ab=zb=null;Bb(a);if(b)for(a=0;a<b.length;a++)Bb(b[a])}}function Gb(a,b){return a(b)}function Hb(){}var Ib=!1;function Jb(a,b,c){if(Ib)return a(b,c);Ib=!0;try{return Gb(a,b,c)}finally{if(Ib=!1,null!==zb||null!==Ab)Hb(),Fb()}}\nfunction Kb(a,b){var c=a.stateNode;if(null===c)return null;var d=Db(c);if(null===d)return null;c=d[b];a:switch(b){case \"onClick\":case \"onClickCapture\":case \"onDoubleClick\":case \"onDoubleClickCapture\":case \"onMouseDown\":case \"onMouseDownCapture\":case \"onMouseMove\":case \"onMouseMoveCapture\":case \"onMouseUp\":case \"onMouseUpCapture\":case \"onMouseEnter\":(d=!d.disabled)||(a=a.type,d=!(\"button\"===a||\"input\"===a||\"select\"===a||\"textarea\"===a));a=!d;break a;default:a=!1}if(a)return null;if(c&&\"function\"!==\ntypeof c)throw Error(p(231,b,typeof c));return c}var Lb=!1;if(ia)try{var Mb={};Object.defineProperty(Mb,\"passive\",{get:function(){Lb=!0}});window.addEventListener(\"test\",Mb,Mb);window.removeEventListener(\"test\",Mb,Mb)}catch(a){Lb=!1}function Nb(a,b,c,d,e,f,g,h,k){var l=Array.prototype.slice.call(arguments,3);try{b.apply(c,l)}catch(m){this.onError(m)}}var Ob=!1,Pb=null,Qb=!1,Rb=null,Sb={onError:function(a){Ob=!0;Pb=a}};function Tb(a,b,c,d,e,f,g,h,k){Ob=!1;Pb=null;Nb.apply(Sb,arguments)}\nfunction Ub(a,b,c,d,e,f,g,h,k){Tb.apply(this,arguments);if(Ob){if(Ob){var l=Pb;Ob=!1;Pb=null}else throw Error(p(198));Qb||(Qb=!0,Rb=l)}}function Vb(a){var b=a,c=a;if(a.alternate)for(;b.return;)b=b.return;else{a=b;do b=a,0!==(b.flags&4098)&&(c=b.return),a=b.return;while(a)}return 3===b.tag?c:null}function Wb(a){if(13===a.tag){var b=a.memoizedState;null===b&&(a=a.alternate,null!==a&&(b=a.memoizedState));if(null!==b)return b.dehydrated}return null}function Xb(a){if(Vb(a)!==a)throw Error(p(188));}\nfunction Yb(a){var b=a.alternate;if(!b){b=Vb(a);if(null===b)throw Error(p(188));return b!==a?null:a}for(var c=a,d=b;;){var e=c.return;if(null===e)break;var f=e.alternate;if(null===f){d=e.return;if(null!==d){c=d;continue}break}if(e.child===f.child){for(f=e.child;f;){if(f===c)return Xb(e),a;if(f===d)return Xb(e),b;f=f.sibling}throw Error(p(188));}if(c.return!==d.return)c=e,d=f;else{for(var g=!1,h=e.child;h;){if(h===c){g=!0;c=e;d=f;break}if(h===d){g=!0;d=e;c=f;break}h=h.sibling}if(!g){for(h=f.child;h;){if(h===\nc){g=!0;c=f;d=e;break}if(h===d){g=!0;d=f;c=e;break}h=h.sibling}if(!g)throw Error(p(189));}}if(c.alternate!==d)throw Error(p(190));}if(3!==c.tag)throw Error(p(188));return c.stateNode.current===c?a:b}function Zb(a){a=Yb(a);return null!==a?$b(a):null}function $b(a){if(5===a.tag||6===a.tag)return a;for(a=a.child;null!==a;){var b=$b(a);if(null!==b)return b;a=a.sibling}return null}\nvar ac=ca.unstable_scheduleCallback,bc=ca.unstable_cancelCallback,cc=ca.unstable_shouldYield,dc=ca.unstable_requestPaint,B=ca.unstable_now,ec=ca.unstable_getCurrentPriorityLevel,fc=ca.unstable_ImmediatePriority,gc=ca.unstable_UserBlockingPriority,hc=ca.unstable_NormalPriority,ic=ca.unstable_LowPriority,jc=ca.unstable_IdlePriority,kc=null,lc=null;function mc(a){if(lc&&\"function\"===typeof lc.onCommitFiberRoot)try{lc.onCommitFiberRoot(kc,a,void 0,128===(a.current.flags&128))}catch(b){}}\nvar oc=Math.clz32?Math.clz32:nc,pc=Math.log,qc=Math.LN2;function nc(a){a>>>=0;return 0===a?32:31-(pc(a)/qc|0)|0}var rc=64,sc=4194304;\nfunction tc(a){switch(a&-a){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return a&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return a&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;\ndefault:return a}}function uc(a,b){var c=a.pendingLanes;if(0===c)return 0;var d=0,e=a.suspendedLanes,f=a.pingedLanes,g=c&268435455;if(0!==g){var h=g&~e;0!==h?d=tc(h):(f&=g,0!==f&&(d=tc(f)))}else g=c&~e,0!==g?d=tc(g):0!==f&&(d=tc(f));if(0===d)return 0;if(0!==b&&b!==d&&0===(b&e)&&(e=d&-d,f=b&-b,e>=f||16===e&&0!==(f&4194240)))return b;0!==(d&4)&&(d|=c&16);b=a.entangledLanes;if(0!==b)for(a=a.entanglements,b&=d;0<b;)c=31-oc(b),e=1<<c,d|=a[c],b&=~e;return d}\nfunction vc(a,b){switch(a){case 1:case 2:case 4:return b+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return b+5E3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}\nfunction wc(a,b){for(var c=a.suspendedLanes,d=a.pingedLanes,e=a.expirationTimes,f=a.pendingLanes;0<f;){var g=31-oc(f),h=1<<g,k=e[g];if(-1===k){if(0===(h&c)||0!==(h&d))e[g]=vc(h,b)}else k<=b&&(a.expiredLanes|=h);f&=~h}}function xc(a){a=a.pendingLanes&-1073741825;return 0!==a?a:a&1073741824?1073741824:0}function yc(){var a=rc;rc<<=1;0===(rc&4194240)&&(rc=64);return a}function zc(a){for(var b=[],c=0;31>c;c++)b.push(a);return b}\nfunction Ac(a,b,c){a.pendingLanes|=b;536870912!==b&&(a.suspendedLanes=0,a.pingedLanes=0);a=a.eventTimes;b=31-oc(b);a[b]=c}function Bc(a,b){var c=a.pendingLanes&~b;a.pendingLanes=b;a.suspendedLanes=0;a.pingedLanes=0;a.expiredLanes&=b;a.mutableReadLanes&=b;a.entangledLanes&=b;b=a.entanglements;var d=a.eventTimes;for(a=a.expirationTimes;0<c;){var e=31-oc(c),f=1<<e;b[e]=0;d[e]=-1;a[e]=-1;c&=~f}}\nfunction Cc(a,b){var c=a.entangledLanes|=b;for(a=a.entanglements;c;){var d=31-oc(c),e=1<<d;e&b|a[d]&b&&(a[d]|=b);c&=~e}}var C=0;function Dc(a){a&=-a;return 1<a?4<a?0!==(a&268435455)?16:536870912:4:1}var Ec,Fc,Gc,Hc,Ic,Jc=!1,Kc=[],Lc=null,Mc=null,Nc=null,Oc=new Map,Pc=new Map,Qc=[],Rc=\"mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit\".split(\" \");\nfunction Sc(a,b){switch(a){case \"focusin\":case \"focusout\":Lc=null;break;case \"dragenter\":case \"dragleave\":Mc=null;break;case \"mouseover\":case \"mouseout\":Nc=null;break;case \"pointerover\":case \"pointerout\":Oc.delete(b.pointerId);break;case \"gotpointercapture\":case \"lostpointercapture\":Pc.delete(b.pointerId)}}\nfunction Tc(a,b,c,d,e,f){if(null===a||a.nativeEvent!==f)return a={blockedOn:b,domEventName:c,eventSystemFlags:d,nativeEvent:f,targetContainers:[e]},null!==b&&(b=Cb(b),null!==b&&Fc(b)),a;a.eventSystemFlags|=d;b=a.targetContainers;null!==e&&-1===b.indexOf(e)&&b.push(e);return a}\nfunction Uc(a,b,c,d,e){switch(b){case \"focusin\":return Lc=Tc(Lc,a,b,c,d,e),!0;case \"dragenter\":return Mc=Tc(Mc,a,b,c,d,e),!0;case \"mouseover\":return Nc=Tc(Nc,a,b,c,d,e),!0;case \"pointerover\":var f=e.pointerId;Oc.set(f,Tc(Oc.get(f)||null,a,b,c,d,e));return!0;case \"gotpointercapture\":return f=e.pointerId,Pc.set(f,Tc(Pc.get(f)||null,a,b,c,d,e)),!0}return!1}\nfunction Vc(a){var b=Wc(a.target);if(null!==b){var c=Vb(b);if(null!==c)if(b=c.tag,13===b){if(b=Wb(c),null!==b){a.blockedOn=b;Ic(a.priority,function(){Gc(c)});return}}else if(3===b&&c.stateNode.current.memoizedState.isDehydrated){a.blockedOn=3===c.tag?c.stateNode.containerInfo:null;return}}a.blockedOn=null}\nfunction Xc(a){if(null!==a.blockedOn)return!1;for(var b=a.targetContainers;0<b.length;){var c=Yc(a.domEventName,a.eventSystemFlags,b[0],a.nativeEvent);if(null===c){c=a.nativeEvent;var d=new c.constructor(c.type,c);wb=d;c.target.dispatchEvent(d);wb=null}else return b=Cb(c),null!==b&&Fc(b),a.blockedOn=c,!1;b.shift()}return!0}function Zc(a,b,c){Xc(a)&&c.delete(b)}function $c(){Jc=!1;null!==Lc&&Xc(Lc)&&(Lc=null);null!==Mc&&Xc(Mc)&&(Mc=null);null!==Nc&&Xc(Nc)&&(Nc=null);Oc.forEach(Zc);Pc.forEach(Zc)}\nfunction ad(a,b){a.blockedOn===b&&(a.blockedOn=null,Jc||(Jc=!0,ca.unstable_scheduleCallback(ca.unstable_NormalPriority,$c)))}\nfunction bd(a){function b(b){return ad(b,a)}if(0<Kc.length){ad(Kc[0],a);for(var c=1;c<Kc.length;c++){var d=Kc[c];d.blockedOn===a&&(d.blockedOn=null)}}null!==Lc&&ad(Lc,a);null!==Mc&&ad(Mc,a);null!==Nc&&ad(Nc,a);Oc.forEach(b);Pc.forEach(b);for(c=0;c<Qc.length;c++)d=Qc[c],d.blockedOn===a&&(d.blockedOn=null);for(;0<Qc.length&&(c=Qc[0],null===c.blockedOn);)Vc(c),null===c.blockedOn&&Qc.shift()}var cd=ua.ReactCurrentBatchConfig,dd=!0;\nfunction ed(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=1,fd(a,b,c,d)}finally{C=e,cd.transition=f}}function gd(a,b,c,d){var e=C,f=cd.transition;cd.transition=null;try{C=4,fd(a,b,c,d)}finally{C=e,cd.transition=f}}\nfunction fd(a,b,c,d){if(dd){var e=Yc(a,b,c,d);if(null===e)hd(a,b,d,id,c),Sc(a,d);else if(Uc(e,a,b,c,d))d.stopPropagation();else if(Sc(a,d),b&4&&-1<Rc.indexOf(a)){for(;null!==e;){var f=Cb(e);null!==f&&Ec(f);f=Yc(a,b,c,d);null===f&&hd(a,b,d,id,c);if(f===e)break;e=f}null!==e&&d.stopPropagation()}else hd(a,b,d,null,c)}}var id=null;\nfunction Yc(a,b,c,d){id=null;a=xb(d);a=Wc(a);if(null!==a)if(b=Vb(a),null===b)a=null;else if(c=b.tag,13===c){a=Wb(b);if(null!==a)return a;a=null}else if(3===c){if(b.stateNode.current.memoizedState.isDehydrated)return 3===b.tag?b.stateNode.containerInfo:null;a=null}else b!==a&&(a=null);id=a;return null}\nfunction jd(a){switch(a){case \"cancel\":case \"click\":case \"close\":case \"contextmenu\":case \"copy\":case \"cut\":case \"auxclick\":case \"dblclick\":case \"dragend\":case \"dragstart\":case \"drop\":case \"focusin\":case \"focusout\":case \"input\":case \"invalid\":case \"keydown\":case \"keypress\":case \"keyup\":case \"mousedown\":case \"mouseup\":case \"paste\":case \"pause\":case \"play\":case \"pointercancel\":case \"pointerdown\":case \"pointerup\":case \"ratechange\":case \"reset\":case \"resize\":case \"seeked\":case \"submit\":case \"touchcancel\":case \"touchend\":case \"touchstart\":case \"volumechange\":case \"change\":case \"selectionchange\":case \"textInput\":case \"compositionstart\":case \"compositionend\":case \"compositionupdate\":case \"beforeblur\":case \"afterblur\":case \"beforeinput\":case \"blur\":case \"fullscreenchange\":case \"focus\":case \"hashchange\":case \"popstate\":case \"select\":case \"selectstart\":return 1;case \"drag\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"mousemove\":case \"mouseout\":case \"mouseover\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"scroll\":case \"toggle\":case \"touchmove\":case \"wheel\":case \"mouseenter\":case \"mouseleave\":case \"pointerenter\":case \"pointerleave\":return 4;\ncase \"message\":switch(ec()){case fc:return 1;case gc:return 4;case hc:case ic:return 16;case jc:return 536870912;default:return 16}default:return 16}}var kd=null,ld=null,md=null;function nd(){if(md)return md;var a,b=ld,c=b.length,d,e=\"value\"in kd?kd.value:kd.textContent,f=e.length;for(a=0;a<c&&b[a]===e[a];a++);var g=c-a;for(d=1;d<=g&&b[c-d]===e[f-d];d++);return md=e.slice(a,1<d?1-d:void 0)}\nfunction od(a){var b=a.keyCode;\"charCode\"in a?(a=a.charCode,0===a&&13===b&&(a=13)):a=b;10===a&&(a=13);return 32<=a||13===a?a:0}function pd(){return!0}function qd(){return!1}\nfunction rd(a){function b(b,d,e,f,g){this._reactName=b;this._targetInst=e;this.type=d;this.nativeEvent=f;this.target=g;this.currentTarget=null;for(var c in a)a.hasOwnProperty(c)&&(b=a[c],this[c]=b?b(f):f[c]);this.isDefaultPrevented=(null!=f.defaultPrevented?f.defaultPrevented:!1===f.returnValue)?pd:qd;this.isPropagationStopped=qd;return this}A(b.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():\"unknown\"!==typeof a.returnValue&&\n(a.returnValue=!1),this.isDefaultPrevented=pd)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():\"unknown\"!==typeof a.cancelBubble&&(a.cancelBubble=!0),this.isPropagationStopped=pd)},persist:function(){},isPersistent:pd});return b}\nvar sd={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(a){return a.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},td=rd(sd),ud=A({},sd,{view:0,detail:0}),vd=rd(ud),wd,xd,yd,Ad=A({},ud,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:zd,button:0,buttons:0,relatedTarget:function(a){return void 0===a.relatedTarget?a.fromElement===a.srcElement?a.toElement:a.fromElement:a.relatedTarget},movementX:function(a){if(\"movementX\"in\na)return a.movementX;a!==yd&&(yd&&\"mousemove\"===a.type?(wd=a.screenX-yd.screenX,xd=a.screenY-yd.screenY):xd=wd=0,yd=a);return wd},movementY:function(a){return\"movementY\"in a?a.movementY:xd}}),Bd=rd(Ad),Cd=A({},Ad,{dataTransfer:0}),Dd=rd(Cd),Ed=A({},ud,{relatedTarget:0}),Fd=rd(Ed),Gd=A({},sd,{animationName:0,elapsedTime:0,pseudoElement:0}),Hd=rd(Gd),Id=A({},sd,{clipboardData:function(a){return\"clipboardData\"in a?a.clipboardData:window.clipboardData}}),Jd=rd(Id),Kd=A({},sd,{data:0}),Ld=rd(Kd),Md={Esc:\"Escape\",\nSpacebar:\" \",Left:\"ArrowLeft\",Up:\"ArrowUp\",Right:\"ArrowRight\",Down:\"ArrowDown\",Del:\"Delete\",Win:\"OS\",Menu:\"ContextMenu\",Apps:\"ContextMenu\",Scroll:\"ScrollLock\",MozPrintableKey:\"Unidentified\"},Nd={8:\"Backspace\",9:\"Tab\",12:\"Clear\",13:\"Enter\",16:\"Shift\",17:\"Control\",18:\"Alt\",19:\"Pause\",20:\"CapsLock\",27:\"Escape\",32:\" \",33:\"PageUp\",34:\"PageDown\",35:\"End\",36:\"Home\",37:\"ArrowLeft\",38:\"ArrowUp\",39:\"ArrowRight\",40:\"ArrowDown\",45:\"Insert\",46:\"Delete\",112:\"F1\",113:\"F2\",114:\"F3\",115:\"F4\",116:\"F5\",117:\"F6\",118:\"F7\",\n119:\"F8\",120:\"F9\",121:\"F10\",122:\"F11\",123:\"F12\",144:\"NumLock\",145:\"ScrollLock\",224:\"Meta\"},Od={Alt:\"altKey\",Control:\"ctrlKey\",Meta:\"metaKey\",Shift:\"shiftKey\"};function Pd(a){var b=this.nativeEvent;return b.getModifierState?b.getModifierState(a):(a=Od[a])?!!b[a]:!1}function zd(){return Pd}\nvar Qd=A({},ud,{key:function(a){if(a.key){var b=Md[a.key]||a.key;if(\"Unidentified\"!==b)return b}return\"keypress\"===a.type?(a=od(a),13===a?\"Enter\":String.fromCharCode(a)):\"keydown\"===a.type||\"keyup\"===a.type?Nd[a.keyCode]||\"Unidentified\":\"\"},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:zd,charCode:function(a){return\"keypress\"===a.type?od(a):0},keyCode:function(a){return\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0},which:function(a){return\"keypress\"===\na.type?od(a):\"keydown\"===a.type||\"keyup\"===a.type?a.keyCode:0}}),Rd=rd(Qd),Sd=A({},Ad,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Td=rd(Sd),Ud=A({},ud,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:zd}),Vd=rd(Ud),Wd=A({},sd,{propertyName:0,elapsedTime:0,pseudoElement:0}),Xd=rd(Wd),Yd=A({},Ad,{deltaX:function(a){return\"deltaX\"in a?a.deltaX:\"wheelDeltaX\"in a?-a.wheelDeltaX:0},\ndeltaY:function(a){return\"deltaY\"in a?a.deltaY:\"wheelDeltaY\"in a?-a.wheelDeltaY:\"wheelDelta\"in a?-a.wheelDelta:0},deltaZ:0,deltaMode:0}),Zd=rd(Yd),$d=[9,13,27,32],ae=ia&&\"CompositionEvent\"in window,be=null;ia&&\"documentMode\"in document&&(be=document.documentMode);var ce=ia&&\"TextEvent\"in window&&!be,de=ia&&(!ae||be&&8<be&&11>=be),ee=String.fromCharCode(32),fe=!1;\nfunction ge(a,b){switch(a){case \"keyup\":return-1!==$d.indexOf(b.keyCode);case \"keydown\":return 229!==b.keyCode;case \"keypress\":case \"mousedown\":case \"focusout\":return!0;default:return!1}}function he(a){a=a.detail;return\"object\"===typeof a&&\"data\"in a?a.data:null}var ie=!1;function je(a,b){switch(a){case \"compositionend\":return he(b);case \"keypress\":if(32!==b.which)return null;fe=!0;return ee;case \"textInput\":return a=b.data,a===ee&&fe?null:a;default:return null}}\nfunction ke(a,b){if(ie)return\"compositionend\"===a||!ae&&ge(a,b)?(a=nd(),md=ld=kd=null,ie=!1,a):null;switch(a){case \"paste\":return null;case \"keypress\":if(!(b.ctrlKey||b.altKey||b.metaKey)||b.ctrlKey&&b.altKey){if(b.char&&1<b.char.length)return b.char;if(b.which)return String.fromCharCode(b.which)}return null;case \"compositionend\":return de&&\"ko\"!==b.locale?null:b.data;default:return null}}\nvar le={color:!0,date:!0,datetime:!0,\"datetime-local\":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function me(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return\"input\"===b?!!le[a.type]:\"textarea\"===b?!0:!1}function ne(a,b,c,d){Eb(d);b=oe(b,\"onChange\");0<b.length&&(c=new td(\"onChange\",\"change\",null,c,d),a.push({event:c,listeners:b}))}var pe=null,qe=null;function re(a){se(a,0)}function te(a){var b=ue(a);if(Wa(b))return a}\nfunction ve(a,b){if(\"change\"===a)return b}var we=!1;if(ia){var xe;if(ia){var ye=\"oninput\"in document;if(!ye){var ze=document.createElement(\"div\");ze.setAttribute(\"oninput\",\"return;\");ye=\"function\"===typeof ze.oninput}xe=ye}else xe=!1;we=xe&&(!document.documentMode||9<document.documentMode)}function Ae(){pe&&(pe.detachEvent(\"onpropertychange\",Be),qe=pe=null)}function Be(a){if(\"value\"===a.propertyName&&te(qe)){var b=[];ne(b,qe,a,xb(a));Jb(re,b)}}\nfunction Ce(a,b,c){\"focusin\"===a?(Ae(),pe=b,qe=c,pe.attachEvent(\"onpropertychange\",Be)):\"focusout\"===a&&Ae()}function De(a){if(\"selectionchange\"===a||\"keyup\"===a||\"keydown\"===a)return te(qe)}function Ee(a,b){if(\"click\"===a)return te(b)}function Fe(a,b){if(\"input\"===a||\"change\"===a)return te(b)}function Ge(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var He=\"function\"===typeof Object.is?Object.is:Ge;\nfunction Ie(a,b){if(He(a,b))return!0;if(\"object\"!==typeof a||null===a||\"object\"!==typeof b||null===b)return!1;var c=Object.keys(a),d=Object.keys(b);if(c.length!==d.length)return!1;for(d=0;d<c.length;d++){var e=c[d];if(!ja.call(b,e)||!He(a[e],b[e]))return!1}return!0}function Je(a){for(;a&&a.firstChild;)a=a.firstChild;return a}\nfunction Ke(a,b){var c=Je(a);a=0;for(var d;c;){if(3===c.nodeType){d=a+c.textContent.length;if(a<=b&&d>=b)return{node:c,offset:b-a};a=d}a:{for(;c;){if(c.nextSibling){c=c.nextSibling;break a}c=c.parentNode}c=void 0}c=Je(c)}}function Le(a,b){return a&&b?a===b?!0:a&&3===a.nodeType?!1:b&&3===b.nodeType?Le(a,b.parentNode):\"contains\"in a?a.contains(b):a.compareDocumentPosition?!!(a.compareDocumentPosition(b)&16):!1:!1}\nfunction Me(){for(var a=window,b=Xa();b instanceof a.HTMLIFrameElement;){try{var c=\"string\"===typeof b.contentWindow.location.href}catch(d){c=!1}if(c)a=b.contentWindow;else break;b=Xa(a.document)}return b}function Ne(a){var b=a&&a.nodeName&&a.nodeName.toLowerCase();return b&&(\"input\"===b&&(\"text\"===a.type||\"search\"===a.type||\"tel\"===a.type||\"url\"===a.type||\"password\"===a.type)||\"textarea\"===b||\"true\"===a.contentEditable)}\nfunction Oe(a){var b=Me(),c=a.focusedElem,d=a.selectionRange;if(b!==c&&c&&c.ownerDocument&&Le(c.ownerDocument.documentElement,c)){if(null!==d&&Ne(c))if(b=d.start,a=d.end,void 0===a&&(a=b),\"selectionStart\"in c)c.selectionStart=b,c.selectionEnd=Math.min(a,c.value.length);else if(a=(b=c.ownerDocument||document)&&b.defaultView||window,a.getSelection){a=a.getSelection();var e=c.textContent.length,f=Math.min(d.start,e);d=void 0===d.end?f:Math.min(d.end,e);!a.extend&&f>d&&(e=d,d=f,f=e);e=Ke(c,f);var g=Ke(c,\nd);e&&g&&(1!==a.rangeCount||a.anchorNode!==e.node||a.anchorOffset!==e.offset||a.focusNode!==g.node||a.focusOffset!==g.offset)&&(b=b.createRange(),b.setStart(e.node,e.offset),a.removeAllRanges(),f>d?(a.addRange(b),a.extend(g.node,g.offset)):(b.setEnd(g.node,g.offset),a.addRange(b)))}b=[];for(a=c;a=a.parentNode;)1===a.nodeType&&b.push({element:a,left:a.scrollLeft,top:a.scrollTop});\"function\"===typeof c.focus&&c.focus();for(c=0;c<b.length;c++)a=b[c],a.element.scrollLeft=a.left,a.element.scrollTop=a.top}}\nvar Pe=ia&&\"documentMode\"in document&&11>=document.documentMode,Qe=null,Re=null,Se=null,Te=!1;\nfunction Ue(a,b,c){var d=c.window===c?c.document:9===c.nodeType?c:c.ownerDocument;Te||null==Qe||Qe!==Xa(d)||(d=Qe,\"selectionStart\"in d&&Ne(d)?d={start:d.selectionStart,end:d.selectionEnd}:(d=(d.ownerDocument&&d.ownerDocument.defaultView||window).getSelection(),d={anchorNode:d.anchorNode,anchorOffset:d.anchorOffset,focusNode:d.focusNode,focusOffset:d.focusOffset}),Se&&Ie(Se,d)||(Se=d,d=oe(Re,\"onSelect\"),0<d.length&&(b=new td(\"onSelect\",\"select\",null,b,c),a.push({event:b,listeners:d}),b.target=Qe)))}\nfunction Ve(a,b){var c={};c[a.toLowerCase()]=b.toLowerCase();c[\"Webkit\"+a]=\"webkit\"+b;c[\"Moz\"+a]=\"moz\"+b;return c}var We={animationend:Ve(\"Animation\",\"AnimationEnd\"),animationiteration:Ve(\"Animation\",\"AnimationIteration\"),animationstart:Ve(\"Animation\",\"AnimationStart\"),transitionend:Ve(\"Transition\",\"TransitionEnd\")},Xe={},Ye={};\nia&&(Ye=document.createElement(\"div\").style,\"AnimationEvent\"in window||(delete We.animationend.animation,delete We.animationiteration.animation,delete We.animationstart.animation),\"TransitionEvent\"in window||delete We.transitionend.transition);function Ze(a){if(Xe[a])return Xe[a];if(!We[a])return a;var b=We[a],c;for(c in b)if(b.hasOwnProperty(c)&&c in Ye)return Xe[a]=b[c];return a}var $e=Ze(\"animationend\"),af=Ze(\"animationiteration\"),bf=Ze(\"animationstart\"),cf=Ze(\"transitionend\"),df=new Map,ef=\"abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel\".split(\" \");\nfunction ff(a,b){df.set(a,b);fa(b,[a])}for(var gf=0;gf<ef.length;gf++){var hf=ef[gf],jf=hf.toLowerCase(),kf=hf[0].toUpperCase()+hf.slice(1);ff(jf,\"on\"+kf)}ff($e,\"onAnimationEnd\");ff(af,\"onAnimationIteration\");ff(bf,\"onAnimationStart\");ff(\"dblclick\",\"onDoubleClick\");ff(\"focusin\",\"onFocus\");ff(\"focusout\",\"onBlur\");ff(cf,\"onTransitionEnd\");ha(\"onMouseEnter\",[\"mouseout\",\"mouseover\"]);ha(\"onMouseLeave\",[\"mouseout\",\"mouseover\"]);ha(\"onPointerEnter\",[\"pointerout\",\"pointerover\"]);\nha(\"onPointerLeave\",[\"pointerout\",\"pointerover\"]);fa(\"onChange\",\"change click focusin focusout input keydown keyup selectionchange\".split(\" \"));fa(\"onSelect\",\"focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange\".split(\" \"));fa(\"onBeforeInput\",[\"compositionend\",\"keypress\",\"textInput\",\"paste\"]);fa(\"onCompositionEnd\",\"compositionend focusout keydown keypress keyup mousedown\".split(\" \"));fa(\"onCompositionStart\",\"compositionstart focusout keydown keypress keyup mousedown\".split(\" \"));\nfa(\"onCompositionUpdate\",\"compositionupdate focusout keydown keypress keyup mousedown\".split(\" \"));var lf=\"abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting\".split(\" \"),mf=new Set(\"cancel close invalid load scroll toggle\".split(\" \").concat(lf));\nfunction nf(a,b,c){var d=a.type||\"unknown-event\";a.currentTarget=c;Ub(d,b,void 0,a);a.currentTarget=null}\nfunction se(a,b){b=0!==(b&4);for(var c=0;c<a.length;c++){var d=a[c],e=d.event;d=d.listeners;a:{var f=void 0;if(b)for(var g=d.length-1;0<=g;g--){var h=d[g],k=h.instance,l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}else for(g=0;g<d.length;g++){h=d[g];k=h.instance;l=h.currentTarget;h=h.listener;if(k!==f&&e.isPropagationStopped())break a;nf(e,h,l);f=k}}}if(Qb)throw a=Rb,Qb=!1,Rb=null,a;}\nfunction D(a,b){var c=b[of];void 0===c&&(c=b[of]=new Set);var d=a+\"__bubble\";c.has(d)||(pf(b,a,2,!1),c.add(d))}function qf(a,b,c){var d=0;b&&(d|=4);pf(c,a,d,b)}var rf=\"_reactListening\"+Math.random().toString(36).slice(2);function sf(a){if(!a[rf]){a[rf]=!0;da.forEach(function(b){\"selectionchange\"!==b&&(mf.has(b)||qf(b,!1,a),qf(b,!0,a))});var b=9===a.nodeType?a:a.ownerDocument;null===b||b[rf]||(b[rf]=!0,qf(\"selectionchange\",!1,b))}}\nfunction pf(a,b,c,d){switch(jd(b)){case 1:var e=ed;break;case 4:e=gd;break;default:e=fd}c=e.bind(null,b,c,a);e=void 0;!Lb||\"touchstart\"!==b&&\"touchmove\"!==b&&\"wheel\"!==b||(e=!0);d?void 0!==e?a.addEventListener(b,c,{capture:!0,passive:e}):a.addEventListener(b,c,!0):void 0!==e?a.addEventListener(b,c,{passive:e}):a.addEventListener(b,c,!1)}\nfunction hd(a,b,c,d,e){var f=d;if(0===(b&1)&&0===(b&2)&&null!==d)a:for(;;){if(null===d)return;var g=d.tag;if(3===g||4===g){var h=d.stateNode.containerInfo;if(h===e||8===h.nodeType&&h.parentNode===e)break;if(4===g)for(g=d.return;null!==g;){var k=g.tag;if(3===k||4===k)if(k=g.stateNode.containerInfo,k===e||8===k.nodeType&&k.parentNode===e)return;g=g.return}for(;null!==h;){g=Wc(h);if(null===g)return;k=g.tag;if(5===k||6===k){d=f=g;continue a}h=h.parentNode}}d=d.return}Jb(function(){var d=f,e=xb(c),g=[];\na:{var h=df.get(a);if(void 0!==h){var k=td,n=a;switch(a){case \"keypress\":if(0===od(c))break a;case \"keydown\":case \"keyup\":k=Rd;break;case \"focusin\":n=\"focus\";k=Fd;break;case \"focusout\":n=\"blur\";k=Fd;break;case \"beforeblur\":case \"afterblur\":k=Fd;break;case \"click\":if(2===c.button)break a;case \"auxclick\":case \"dblclick\":case \"mousedown\":case \"mousemove\":case \"mouseup\":case \"mouseout\":case \"mouseover\":case \"contextmenu\":k=Bd;break;case \"drag\":case \"dragend\":case \"dragenter\":case \"dragexit\":case \"dragleave\":case \"dragover\":case \"dragstart\":case \"drop\":k=\nDd;break;case \"touchcancel\":case \"touchend\":case \"touchmove\":case \"touchstart\":k=Vd;break;case $e:case af:case bf:k=Hd;break;case cf:k=Xd;break;case \"scroll\":k=vd;break;case \"wheel\":k=Zd;break;case \"copy\":case \"cut\":case \"paste\":k=Jd;break;case \"gotpointercapture\":case \"lostpointercapture\":case \"pointercancel\":case \"pointerdown\":case \"pointermove\":case \"pointerout\":case \"pointerover\":case \"pointerup\":k=Td}var t=0!==(b&4),J=!t&&\"scroll\"===a,x=t?null!==h?h+\"Capture\":null:h;t=[];for(var w=d,u;null!==\nw;){u=w;var F=u.stateNode;5===u.tag&&null!==F&&(u=F,null!==x&&(F=Kb(w,x),null!=F&&t.push(tf(w,F,u))));if(J)break;w=w.return}0<t.length&&(h=new k(h,n,null,c,e),g.push({event:h,listeners:t}))}}if(0===(b&7)){a:{h=\"mouseover\"===a||\"pointerover\"===a;k=\"mouseout\"===a||\"pointerout\"===a;if(h&&c!==wb&&(n=c.relatedTarget||c.fromElement)&&(Wc(n)||n[uf]))break a;if(k||h){h=e.window===e?e:(h=e.ownerDocument)?h.defaultView||h.parentWindow:window;if(k){if(n=c.relatedTarget||c.toElement,k=d,n=n?Wc(n):null,null!==\nn&&(J=Vb(n),n!==J||5!==n.tag&&6!==n.tag))n=null}else k=null,n=d;if(k!==n){t=Bd;F=\"onMouseLeave\";x=\"onMouseEnter\";w=\"mouse\";if(\"pointerout\"===a||\"pointerover\"===a)t=Td,F=\"onPointerLeave\",x=\"onPointerEnter\",w=\"pointer\";J=null==k?h:ue(k);u=null==n?h:ue(n);h=new t(F,w+\"leave\",k,c,e);h.target=J;h.relatedTarget=u;F=null;Wc(e)===d&&(t=new t(x,w+\"enter\",n,c,e),t.target=u,t.relatedTarget=J,F=t);J=F;if(k&&n)b:{t=k;x=n;w=0;for(u=t;u;u=vf(u))w++;u=0;for(F=x;F;F=vf(F))u++;for(;0<w-u;)t=vf(t),w--;for(;0<u-w;)x=\nvf(x),u--;for(;w--;){if(t===x||null!==x&&t===x.alternate)break b;t=vf(t);x=vf(x)}t=null}else t=null;null!==k&&wf(g,h,k,t,!1);null!==n&&null!==J&&wf(g,J,n,t,!0)}}}a:{h=d?ue(d):window;k=h.nodeName&&h.nodeName.toLowerCase();if(\"select\"===k||\"input\"===k&&\"file\"===h.type)var na=ve;else if(me(h))if(we)na=Fe;else{na=De;var xa=Ce}else(k=h.nodeName)&&\"input\"===k.toLowerCase()&&(\"checkbox\"===h.type||\"radio\"===h.type)&&(na=Ee);if(na&&(na=na(a,d))){ne(g,na,c,e);break a}xa&&xa(a,h,d);\"focusout\"===a&&(xa=h._wrapperState)&&\nxa.controlled&&\"number\"===h.type&&cb(h,\"number\",h.value)}xa=d?ue(d):window;switch(a){case \"focusin\":if(me(xa)||\"true\"===xa.contentEditable)Qe=xa,Re=d,Se=null;break;case \"focusout\":Se=Re=Qe=null;break;case \"mousedown\":Te=!0;break;case \"contextmenu\":case \"mouseup\":case \"dragend\":Te=!1;Ue(g,c,e);break;case \"selectionchange\":if(Pe)break;case \"keydown\":case \"keyup\":Ue(g,c,e)}var $a;if(ae)b:{switch(a){case \"compositionstart\":var ba=\"onCompositionStart\";break b;case \"compositionend\":ba=\"onCompositionEnd\";\nbreak b;case \"compositionupdate\":ba=\"onCompositionUpdate\";break b}ba=void 0}else ie?ge(a,c)&&(ba=\"onCompositionEnd\"):\"keydown\"===a&&229===c.keyCode&&(ba=\"onCompositionStart\");ba&&(de&&\"ko\"!==c.locale&&(ie||\"onCompositionStart\"!==ba?\"onCompositionEnd\"===ba&&ie&&($a=nd()):(kd=e,ld=\"value\"in kd?kd.value:kd.textContent,ie=!0)),xa=oe(d,ba),0<xa.length&&(ba=new Ld(ba,a,null,c,e),g.push({event:ba,listeners:xa}),$a?ba.data=$a:($a=he(c),null!==$a&&(ba.data=$a))));if($a=ce?je(a,c):ke(a,c))d=oe(d,\"onBeforeInput\"),\n0<d.length&&(e=new Ld(\"onBeforeInput\",\"beforeinput\",null,c,e),g.push({event:e,listeners:d}),e.data=$a)}se(g,b)})}function tf(a,b,c){return{instance:a,listener:b,currentTarget:c}}function oe(a,b){for(var c=b+\"Capture\",d=[];null!==a;){var e=a,f=e.stateNode;5===e.tag&&null!==f&&(e=f,f=Kb(a,c),null!=f&&d.unshift(tf(a,f,e)),f=Kb(a,b),null!=f&&d.push(tf(a,f,e)));a=a.return}return d}function vf(a){if(null===a)return null;do a=a.return;while(a&&5!==a.tag);return a?a:null}\nfunction wf(a,b,c,d,e){for(var f=b._reactName,g=[];null!==c&&c!==d;){var h=c,k=h.alternate,l=h.stateNode;if(null!==k&&k===d)break;5===h.tag&&null!==l&&(h=l,e?(k=Kb(c,f),null!=k&&g.unshift(tf(c,k,h))):e||(k=Kb(c,f),null!=k&&g.push(tf(c,k,h))));c=c.return}0!==g.length&&a.push({event:b,listeners:g})}var xf=/\\r\\n?/g,yf=/\\u0000|\\uFFFD/g;function zf(a){return(\"string\"===typeof a?a:\"\"+a).replace(xf,\"\\n\").replace(yf,\"\")}function Af(a,b,c){b=zf(b);if(zf(a)!==b&&c)throw Error(p(425));}function Bf(){}\nvar Cf=null,Df=null;function Ef(a,b){return\"textarea\"===a||\"noscript\"===a||\"string\"===typeof b.children||\"number\"===typeof b.children||\"object\"===typeof b.dangerouslySetInnerHTML&&null!==b.dangerouslySetInnerHTML&&null!=b.dangerouslySetInnerHTML.__html}\nvar Ff=\"function\"===typeof setTimeout?setTimeout:void 0,Gf=\"function\"===typeof clearTimeout?clearTimeout:void 0,Hf=\"function\"===typeof Promise?Promise:void 0,Jf=\"function\"===typeof queueMicrotask?queueMicrotask:\"undefined\"!==typeof Hf?function(a){return Hf.resolve(null).then(a).catch(If)}:Ff;function If(a){setTimeout(function(){throw a;})}\nfunction Kf(a,b){var c=b,d=0;do{var e=c.nextSibling;a.removeChild(c);if(e&&8===e.nodeType)if(c=e.data,\"/$\"===c){if(0===d){a.removeChild(e);bd(b);return}d--}else\"$\"!==c&&\"$?\"!==c&&\"$!\"!==c||d++;c=e}while(c);bd(b)}function Lf(a){for(;null!=a;a=a.nextSibling){var b=a.nodeType;if(1===b||3===b)break;if(8===b){b=a.data;if(\"$\"===b||\"$!\"===b||\"$?\"===b)break;if(\"/$\"===b)return null}}return a}\nfunction Mf(a){a=a.previousSibling;for(var b=0;a;){if(8===a.nodeType){var c=a.data;if(\"$\"===c||\"$!\"===c||\"$?\"===c){if(0===b)return a;b--}else\"/$\"===c&&b++}a=a.previousSibling}return null}var Nf=Math.random().toString(36).slice(2),Of=\"__reactFiber$\"+Nf,Pf=\"__reactProps$\"+Nf,uf=\"__reactContainer$\"+Nf,of=\"__reactEvents$\"+Nf,Qf=\"__reactListeners$\"+Nf,Rf=\"__reactHandles$\"+Nf;\nfunction Wc(a){var b=a[Of];if(b)return b;for(var c=a.parentNode;c;){if(b=c[uf]||c[Of]){c=b.alternate;if(null!==b.child||null!==c&&null!==c.child)for(a=Mf(a);null!==a;){if(c=a[Of])return c;a=Mf(a)}return b}a=c;c=a.parentNode}return null}function Cb(a){a=a[Of]||a[uf];return!a||5!==a.tag&&6!==a.tag&&13!==a.tag&&3!==a.tag?null:a}function ue(a){if(5===a.tag||6===a.tag)return a.stateNode;throw Error(p(33));}function Db(a){return a[Pf]||null}var Sf=[],Tf=-1;function Uf(a){return{current:a}}\nfunction E(a){0>Tf||(a.current=Sf[Tf],Sf[Tf]=null,Tf--)}function G(a,b){Tf++;Sf[Tf]=a.current;a.current=b}var Vf={},H=Uf(Vf),Wf=Uf(!1),Xf=Vf;function Yf(a,b){var c=a.type.contextTypes;if(!c)return Vf;var d=a.stateNode;if(d&&d.__reactInternalMemoizedUnmaskedChildContext===b)return d.__reactInternalMemoizedMaskedChildContext;var e={},f;for(f in c)e[f]=b[f];d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=b,a.__reactInternalMemoizedMaskedChildContext=e);return e}\nfunction Zf(a){a=a.childContextTypes;return null!==a&&void 0!==a}function $f(){E(Wf);E(H)}function ag(a,b,c){if(H.current!==Vf)throw Error(p(168));G(H,b);G(Wf,c)}function bg(a,b,c){var d=a.stateNode;b=b.childContextTypes;if(\"function\"!==typeof d.getChildContext)return c;d=d.getChildContext();for(var e in d)if(!(e in b))throw Error(p(108,Ra(a)||\"Unknown\",e));return A({},c,d)}\nfunction cg(a){a=(a=a.stateNode)&&a.__reactInternalMemoizedMergedChildContext||Vf;Xf=H.current;G(H,a);G(Wf,Wf.current);return!0}function dg(a,b,c){var d=a.stateNode;if(!d)throw Error(p(169));c?(a=bg(a,b,Xf),d.__reactInternalMemoizedMergedChildContext=a,E(Wf),E(H),G(H,a)):E(Wf);G(Wf,c)}var eg=null,fg=!1,gg=!1;function hg(a){null===eg?eg=[a]:eg.push(a)}function ig(a){fg=!0;hg(a)}\nfunction jg(){if(!gg&&null!==eg){gg=!0;var a=0,b=C;try{var c=eg;for(C=1;a<c.length;a++){var d=c[a];do d=d(!0);while(null!==d)}eg=null;fg=!1}catch(e){throw null!==eg&&(eg=eg.slice(a+1)),ac(fc,jg),e;}finally{C=b,gg=!1}}return null}var kg=[],lg=0,mg=null,ng=0,og=[],pg=0,qg=null,rg=1,sg=\"\";function tg(a,b){kg[lg++]=ng;kg[lg++]=mg;mg=a;ng=b}\nfunction ug(a,b,c){og[pg++]=rg;og[pg++]=sg;og[pg++]=qg;qg=a;var d=rg;a=sg;var e=32-oc(d)-1;d&=~(1<<e);c+=1;var f=32-oc(b)+e;if(30<f){var g=e-e%5;f=(d&(1<<g)-1).toString(32);d>>=g;e-=g;rg=1<<32-oc(b)+e|c<<e|d;sg=f+a}else rg=1<<f|c<<e|d,sg=a}function vg(a){null!==a.return&&(tg(a,1),ug(a,1,0))}function wg(a){for(;a===mg;)mg=kg[--lg],kg[lg]=null,ng=kg[--lg],kg[lg]=null;for(;a===qg;)qg=og[--pg],og[pg]=null,sg=og[--pg],og[pg]=null,rg=og[--pg],og[pg]=null}var xg=null,yg=null,I=!1,zg=null;\nfunction Ag(a,b){var c=Bg(5,null,null,0);c.elementType=\"DELETED\";c.stateNode=b;c.return=a;b=a.deletions;null===b?(a.deletions=[c],a.flags|=16):b.push(c)}\nfunction Cg(a,b){switch(a.tag){case 5:var c=a.type;b=1!==b.nodeType||c.toLowerCase()!==b.nodeName.toLowerCase()?null:b;return null!==b?(a.stateNode=b,xg=a,yg=Lf(b.firstChild),!0):!1;case 6:return b=\"\"===a.pendingProps||3!==b.nodeType?null:b,null!==b?(a.stateNode=b,xg=a,yg=null,!0):!1;case 13:return b=8!==b.nodeType?null:b,null!==b?(c=null!==qg?{id:rg,overflow:sg}:null,a.memoizedState={dehydrated:b,treeContext:c,retryLane:1073741824},c=Bg(18,null,null,0),c.stateNode=b,c.return=a,a.child=c,xg=a,yg=\nnull,!0):!1;default:return!1}}function Dg(a){return 0!==(a.mode&1)&&0===(a.flags&128)}function Eg(a){if(I){var b=yg;if(b){var c=b;if(!Cg(a,b)){if(Dg(a))throw Error(p(418));b=Lf(c.nextSibling);var d=xg;b&&Cg(a,b)?Ag(d,c):(a.flags=a.flags&-4097|2,I=!1,xg=a)}}else{if(Dg(a))throw Error(p(418));a.flags=a.flags&-4097|2;I=!1;xg=a}}}function Fg(a){for(a=a.return;null!==a&&5!==a.tag&&3!==a.tag&&13!==a.tag;)a=a.return;xg=a}\nfunction Gg(a){if(a!==xg)return!1;if(!I)return Fg(a),I=!0,!1;var b;(b=3!==a.tag)&&!(b=5!==a.tag)&&(b=a.type,b=\"head\"!==b&&\"body\"!==b&&!Ef(a.type,a.memoizedProps));if(b&&(b=yg)){if(Dg(a))throw Hg(),Error(p(418));for(;b;)Ag(a,b),b=Lf(b.nextSibling)}Fg(a);if(13===a.tag){a=a.memoizedState;a=null!==a?a.dehydrated:null;if(!a)throw Error(p(317));a:{a=a.nextSibling;for(b=0;a;){if(8===a.nodeType){var c=a.data;if(\"/$\"===c){if(0===b){yg=Lf(a.nextSibling);break a}b--}else\"$\"!==c&&\"$!\"!==c&&\"$?\"!==c||b++}a=a.nextSibling}yg=\nnull}}else yg=xg?Lf(a.stateNode.nextSibling):null;return!0}function Hg(){for(var a=yg;a;)a=Lf(a.nextSibling)}function Ig(){yg=xg=null;I=!1}function Jg(a){null===zg?zg=[a]:zg.push(a)}var Kg=ua.ReactCurrentBatchConfig;function Lg(a,b){if(a&&a.defaultProps){b=A({},b);a=a.defaultProps;for(var c in a)void 0===b[c]&&(b[c]=a[c]);return b}return b}var Mg=Uf(null),Ng=null,Og=null,Pg=null;function Qg(){Pg=Og=Ng=null}function Rg(a){var b=Mg.current;E(Mg);a._currentValue=b}\nfunction Sg(a,b,c){for(;null!==a;){var d=a.alternate;(a.childLanes&b)!==b?(a.childLanes|=b,null!==d&&(d.childLanes|=b)):null!==d&&(d.childLanes&b)!==b&&(d.childLanes|=b);if(a===c)break;a=a.return}}function Tg(a,b){Ng=a;Pg=Og=null;a=a.dependencies;null!==a&&null!==a.firstContext&&(0!==(a.lanes&b)&&(Ug=!0),a.firstContext=null)}\nfunction Vg(a){var b=a._currentValue;if(Pg!==a)if(a={context:a,memoizedValue:b,next:null},null===Og){if(null===Ng)throw Error(p(308));Og=a;Ng.dependencies={lanes:0,firstContext:a}}else Og=Og.next=a;return b}var Wg=null;function Xg(a){null===Wg?Wg=[a]:Wg.push(a)}function Yg(a,b,c,d){var e=b.interleaved;null===e?(c.next=c,Xg(b)):(c.next=e.next,e.next=c);b.interleaved=c;return Zg(a,d)}\nfunction Zg(a,b){a.lanes|=b;var c=a.alternate;null!==c&&(c.lanes|=b);c=a;for(a=a.return;null!==a;)a.childLanes|=b,c=a.alternate,null!==c&&(c.childLanes|=b),c=a,a=a.return;return 3===c.tag?c.stateNode:null}var $g=!1;function ah(a){a.updateQueue={baseState:a.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}\nfunction bh(a,b){a=a.updateQueue;b.updateQueue===a&&(b.updateQueue={baseState:a.baseState,firstBaseUpdate:a.firstBaseUpdate,lastBaseUpdate:a.lastBaseUpdate,shared:a.shared,effects:a.effects})}function ch(a,b){return{eventTime:a,lane:b,tag:0,payload:null,callback:null,next:null}}\nfunction dh(a,b,c){var d=a.updateQueue;if(null===d)return null;d=d.shared;if(0!==(K&2)){var e=d.pending;null===e?b.next=b:(b.next=e.next,e.next=b);d.pending=b;return Zg(a,c)}e=d.interleaved;null===e?(b.next=b,Xg(d)):(b.next=e.next,e.next=b);d.interleaved=b;return Zg(a,c)}function eh(a,b,c){b=b.updateQueue;if(null!==b&&(b=b.shared,0!==(c&4194240))){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nfunction fh(a,b){var c=a.updateQueue,d=a.alternate;if(null!==d&&(d=d.updateQueue,c===d)){var e=null,f=null;c=c.firstBaseUpdate;if(null!==c){do{var g={eventTime:c.eventTime,lane:c.lane,tag:c.tag,payload:c.payload,callback:c.callback,next:null};null===f?e=f=g:f=f.next=g;c=c.next}while(null!==c);null===f?e=f=b:f=f.next=b}else e=f=b;c={baseState:d.baseState,firstBaseUpdate:e,lastBaseUpdate:f,shared:d.shared,effects:d.effects};a.updateQueue=c;return}a=c.lastBaseUpdate;null===a?c.firstBaseUpdate=b:a.next=\nb;c.lastBaseUpdate=b}\nfunction gh(a,b,c,d){var e=a.updateQueue;$g=!1;var f=e.firstBaseUpdate,g=e.lastBaseUpdate,h=e.shared.pending;if(null!==h){e.shared.pending=null;var k=h,l=k.next;k.next=null;null===g?f=l:g.next=l;g=k;var m=a.alternate;null!==m&&(m=m.updateQueue,h=m.lastBaseUpdate,h!==g&&(null===h?m.firstBaseUpdate=l:h.next=l,m.lastBaseUpdate=k))}if(null!==f){var q=e.baseState;g=0;m=l=k=null;h=f;do{var r=h.lane,y=h.eventTime;if((d&r)===r){null!==m&&(m=m.next={eventTime:y,lane:0,tag:h.tag,payload:h.payload,callback:h.callback,\nnext:null});a:{var n=a,t=h;r=b;y=c;switch(t.tag){case 1:n=t.payload;if(\"function\"===typeof n){q=n.call(y,q,r);break a}q=n;break a;case 3:n.flags=n.flags&-65537|128;case 0:n=t.payload;r=\"function\"===typeof n?n.call(y,q,r):n;if(null===r||void 0===r)break a;q=A({},q,r);break a;case 2:$g=!0}}null!==h.callback&&0!==h.lane&&(a.flags|=64,r=e.effects,null===r?e.effects=[h]:r.push(h))}else y={eventTime:y,lane:r,tag:h.tag,payload:h.payload,callback:h.callback,next:null},null===m?(l=m=y,k=q):m=m.next=y,g|=r;\nh=h.next;if(null===h)if(h=e.shared.pending,null===h)break;else r=h,h=r.next,r.next=null,e.lastBaseUpdate=r,e.shared.pending=null}while(1);null===m&&(k=q);e.baseState=k;e.firstBaseUpdate=l;e.lastBaseUpdate=m;b=e.shared.interleaved;if(null!==b){e=b;do g|=e.lane,e=e.next;while(e!==b)}else null===f&&(e.shared.lanes=0);hh|=g;a.lanes=g;a.memoizedState=q}}\nfunction ih(a,b,c){a=b.effects;b.effects=null;if(null!==a)for(b=0;b<a.length;b++){var d=a[b],e=d.callback;if(null!==e){d.callback=null;d=c;if(\"function\"!==typeof e)throw Error(p(191,e));e.call(d)}}}var jh=(new aa.Component).refs;function kh(a,b,c,d){b=a.memoizedState;c=c(d,b);c=null===c||void 0===c?b:A({},b,c);a.memoizedState=c;0===a.lanes&&(a.updateQueue.baseState=c)}\nvar nh={isMounted:function(a){return(a=a._reactInternals)?Vb(a)===a:!1},enqueueSetState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueReplaceState:function(a,b,c){a=a._reactInternals;var d=L(),e=lh(a),f=ch(d,e);f.tag=1;f.payload=b;void 0!==c&&null!==c&&(f.callback=c);b=dh(a,f,e);null!==b&&(mh(b,a,e,d),eh(b,a,e))},enqueueForceUpdate:function(a,b){a=a._reactInternals;var c=L(),d=\nlh(a),e=ch(c,d);e.tag=2;void 0!==b&&null!==b&&(e.callback=b);b=dh(a,e,d);null!==b&&(mh(b,a,d,c),eh(b,a,d))}};function oh(a,b,c,d,e,f,g){a=a.stateNode;return\"function\"===typeof a.shouldComponentUpdate?a.shouldComponentUpdate(d,f,g):b.prototype&&b.prototype.isPureReactComponent?!Ie(c,d)||!Ie(e,f):!0}\nfunction ph(a,b,c){var d=!1,e=Vf;var f=b.contextType;\"object\"===typeof f&&null!==f?f=Vg(f):(e=Zf(b)?Xf:H.current,d=b.contextTypes,f=(d=null!==d&&void 0!==d)?Yf(a,e):Vf);b=new b(c,f);a.memoizedState=null!==b.state&&void 0!==b.state?b.state:null;b.updater=nh;a.stateNode=b;b._reactInternals=a;d&&(a=a.stateNode,a.__reactInternalMemoizedUnmaskedChildContext=e,a.__reactInternalMemoizedMaskedChildContext=f);return b}\nfunction qh(a,b,c,d){a=b.state;\"function\"===typeof b.componentWillReceiveProps&&b.componentWillReceiveProps(c,d);\"function\"===typeof b.UNSAFE_componentWillReceiveProps&&b.UNSAFE_componentWillReceiveProps(c,d);b.state!==a&&nh.enqueueReplaceState(b,b.state,null)}\nfunction rh(a,b,c,d){var e=a.stateNode;e.props=c;e.state=a.memoizedState;e.refs=jh;ah(a);var f=b.contextType;\"object\"===typeof f&&null!==f?e.context=Vg(f):(f=Zf(b)?Xf:H.current,e.context=Yf(a,f));e.state=a.memoizedState;f=b.getDerivedStateFromProps;\"function\"===typeof f&&(kh(a,b,f,c),e.state=a.memoizedState);\"function\"===typeof b.getDerivedStateFromProps||\"function\"===typeof e.getSnapshotBeforeUpdate||\"function\"!==typeof e.UNSAFE_componentWillMount&&\"function\"!==typeof e.componentWillMount||(b=e.state,\n\"function\"===typeof e.componentWillMount&&e.componentWillMount(),\"function\"===typeof e.UNSAFE_componentWillMount&&e.UNSAFE_componentWillMount(),b!==e.state&&nh.enqueueReplaceState(e,e.state,null),gh(a,c,e,d),e.state=a.memoizedState);\"function\"===typeof e.componentDidMount&&(a.flags|=4194308)}\nfunction sh(a,b,c){a=c.ref;if(null!==a&&\"function\"!==typeof a&&\"object\"!==typeof a){if(c._owner){c=c._owner;if(c){if(1!==c.tag)throw Error(p(309));var d=c.stateNode}if(!d)throw Error(p(147,a));var e=d,f=\"\"+a;if(null!==b&&null!==b.ref&&\"function\"===typeof b.ref&&b.ref._stringRef===f)return b.ref;b=function(a){var b=e.refs;b===jh&&(b=e.refs={});null===a?delete b[f]:b[f]=a};b._stringRef=f;return b}if(\"string\"!==typeof a)throw Error(p(284));if(!c._owner)throw Error(p(290,a));}return a}\nfunction th(a,b){a=Object.prototype.toString.call(b);throw Error(p(31,\"[object Object]\"===a?\"object with keys {\"+Object.keys(b).join(\", \")+\"}\":a));}function uh(a){var b=a._init;return b(a._payload)}\nfunction vh(a){function b(b,c){if(a){var d=b.deletions;null===d?(b.deletions=[c],b.flags|=16):d.push(c)}}function c(c,d){if(!a)return null;for(;null!==d;)b(c,d),d=d.sibling;return null}function d(a,b){for(a=new Map;null!==b;)null!==b.key?a.set(b.key,b):a.set(b.index,b),b=b.sibling;return a}function e(a,b){a=wh(a,b);a.index=0;a.sibling=null;return a}function f(b,c,d){b.index=d;if(!a)return b.flags|=1048576,c;d=b.alternate;if(null!==d)return d=d.index,d<c?(b.flags|=2,c):d;b.flags|=2;return c}function g(b){a&&\nnull===b.alternate&&(b.flags|=2);return b}function h(a,b,c,d){if(null===b||6!==b.tag)return b=xh(c,a.mode,d),b.return=a,b;b=e(b,c);b.return=a;return b}function k(a,b,c,d){var f=c.type;if(f===ya)return m(a,b,c.props.children,d,c.key);if(null!==b&&(b.elementType===f||\"object\"===typeof f&&null!==f&&f.$$typeof===Ha&&uh(f)===b.type))return d=e(b,c.props),d.ref=sh(a,b,c),d.return=a,d;d=yh(c.type,c.key,c.props,null,a.mode,d);d.ref=sh(a,b,c);d.return=a;return d}function l(a,b,c,d){if(null===b||4!==b.tag||\nb.stateNode.containerInfo!==c.containerInfo||b.stateNode.implementation!==c.implementation)return b=zh(c,a.mode,d),b.return=a,b;b=e(b,c.children||[]);b.return=a;return b}function m(a,b,c,d,f){if(null===b||7!==b.tag)return b=Ah(c,a.mode,d,f),b.return=a,b;b=e(b,c);b.return=a;return b}function q(a,b,c){if(\"string\"===typeof b&&\"\"!==b||\"number\"===typeof b)return b=xh(\"\"+b,a.mode,c),b.return=a,b;if(\"object\"===typeof b&&null!==b){switch(b.$$typeof){case va:return c=yh(b.type,b.key,b.props,null,a.mode,c),\nc.ref=sh(a,null,b),c.return=a,c;case wa:return b=zh(b,a.mode,c),b.return=a,b;case Ha:var d=b._init;return q(a,d(b._payload),c)}if(eb(b)||Ka(b))return b=Ah(b,a.mode,c,null),b.return=a,b;th(a,b)}return null}function r(a,b,c,d){var e=null!==b?b.key:null;if(\"string\"===typeof c&&\"\"!==c||\"number\"===typeof c)return null!==e?null:h(a,b,\"\"+c,d);if(\"object\"===typeof c&&null!==c){switch(c.$$typeof){case va:return c.key===e?k(a,b,c,d):null;case wa:return c.key===e?l(a,b,c,d):null;case Ha:return e=c._init,r(a,\nb,e(c._payload),d)}if(eb(c)||Ka(c))return null!==e?null:m(a,b,c,d,null);th(a,c)}return null}function y(a,b,c,d,e){if(\"string\"===typeof d&&\"\"!==d||\"number\"===typeof d)return a=a.get(c)||null,h(b,a,\"\"+d,e);if(\"object\"===typeof d&&null!==d){switch(d.$$typeof){case va:return a=a.get(null===d.key?c:d.key)||null,k(b,a,d,e);case wa:return a=a.get(null===d.key?c:d.key)||null,l(b,a,d,e);case Ha:var f=d._init;return y(a,b,c,f(d._payload),e)}if(eb(d)||Ka(d))return a=a.get(c)||null,m(b,a,d,e,null);th(b,d)}return null}\nfunction n(e,g,h,k){for(var l=null,m=null,u=g,w=g=0,x=null;null!==u&&w<h.length;w++){u.index>w?(x=u,u=null):x=u.sibling;var n=r(e,u,h[w],k);if(null===n){null===u&&(u=x);break}a&&u&&null===n.alternate&&b(e,u);g=f(n,g,w);null===m?l=n:m.sibling=n;m=n;u=x}if(w===h.length)return c(e,u),I&&tg(e,w),l;if(null===u){for(;w<h.length;w++)u=q(e,h[w],k),null!==u&&(g=f(u,g,w),null===m?l=u:m.sibling=u,m=u);I&&tg(e,w);return l}for(u=d(e,u);w<h.length;w++)x=y(u,e,w,h[w],k),null!==x&&(a&&null!==x.alternate&&u.delete(null===\nx.key?w:x.key),g=f(x,g,w),null===m?l=x:m.sibling=x,m=x);a&&u.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function t(e,g,h,k){var l=Ka(h);if(\"function\"!==typeof l)throw Error(p(150));h=l.call(h);if(null==h)throw Error(p(151));for(var u=l=null,m=g,w=g=0,x=null,n=h.next();null!==m&&!n.done;w++,n=h.next()){m.index>w?(x=m,m=null):x=m.sibling;var t=r(e,m,n.value,k);if(null===t){null===m&&(m=x);break}a&&m&&null===t.alternate&&b(e,m);g=f(t,g,w);null===u?l=t:u.sibling=t;u=t;m=x}if(n.done)return c(e,\nm),I&&tg(e,w),l;if(null===m){for(;!n.done;w++,n=h.next())n=q(e,n.value,k),null!==n&&(g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);I&&tg(e,w);return l}for(m=d(e,m);!n.done;w++,n=h.next())n=y(m,e,w,n.value,k),null!==n&&(a&&null!==n.alternate&&m.delete(null===n.key?w:n.key),g=f(n,g,w),null===u?l=n:u.sibling=n,u=n);a&&m.forEach(function(a){return b(e,a)});I&&tg(e,w);return l}function J(a,d,f,h){\"object\"===typeof f&&null!==f&&f.type===ya&&null===f.key&&(f=f.props.children);if(\"object\"===typeof f&&null!==f){switch(f.$$typeof){case va:a:{for(var k=\nf.key,l=d;null!==l;){if(l.key===k){k=f.type;if(k===ya){if(7===l.tag){c(a,l.sibling);d=e(l,f.props.children);d.return=a;a=d;break a}}else if(l.elementType===k||\"object\"===typeof k&&null!==k&&k.$$typeof===Ha&&uh(k)===l.type){c(a,l.sibling);d=e(l,f.props);d.ref=sh(a,l,f);d.return=a;a=d;break a}c(a,l);break}else b(a,l);l=l.sibling}f.type===ya?(d=Ah(f.props.children,a.mode,h,f.key),d.return=a,a=d):(h=yh(f.type,f.key,f.props,null,a.mode,h),h.ref=sh(a,d,f),h.return=a,a=h)}return g(a);case wa:a:{for(l=f.key;null!==\nd;){if(d.key===l)if(4===d.tag&&d.stateNode.containerInfo===f.containerInfo&&d.stateNode.implementation===f.implementation){c(a,d.sibling);d=e(d,f.children||[]);d.return=a;a=d;break a}else{c(a,d);break}else b(a,d);d=d.sibling}d=zh(f,a.mode,h);d.return=a;a=d}return g(a);case Ha:return l=f._init,J(a,d,l(f._payload),h)}if(eb(f))return n(a,d,f,h);if(Ka(f))return t(a,d,f,h);th(a,f)}return\"string\"===typeof f&&\"\"!==f||\"number\"===typeof f?(f=\"\"+f,null!==d&&6===d.tag?(c(a,d.sibling),d=e(d,f),d.return=a,a=d):\n(c(a,d),d=xh(f,a.mode,h),d.return=a,a=d),g(a)):c(a,d)}return J}var Bh=vh(!0),Ch=vh(!1),Dh={},Eh=Uf(Dh),Fh=Uf(Dh),Gh=Uf(Dh);function Hh(a){if(a===Dh)throw Error(p(174));return a}function Ih(a,b){G(Gh,b);G(Fh,a);G(Eh,Dh);a=b.nodeType;switch(a){case 9:case 11:b=(b=b.documentElement)?b.namespaceURI:lb(null,\"\");break;default:a=8===a?b.parentNode:b,b=a.namespaceURI||null,a=a.tagName,b=lb(b,a)}E(Eh);G(Eh,b)}function Jh(){E(Eh);E(Fh);E(Gh)}\nfunction Kh(a){Hh(Gh.current);var b=Hh(Eh.current);var c=lb(b,a.type);b!==c&&(G(Fh,a),G(Eh,c))}function Lh(a){Fh.current===a&&(E(Eh),E(Fh))}var M=Uf(0);\nfunction Mh(a){for(var b=a;null!==b;){if(13===b.tag){var c=b.memoizedState;if(null!==c&&(c=c.dehydrated,null===c||\"$?\"===c.data||\"$!\"===c.data))return b}else if(19===b.tag&&void 0!==b.memoizedProps.revealOrder){if(0!==(b.flags&128))return b}else if(null!==b.child){b.child.return=b;b=b.child;continue}if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return null;b=b.return}b.sibling.return=b.return;b=b.sibling}return null}var Nh=[];\nfunction Oh(){for(var a=0;a<Nh.length;a++)Nh[a]._workInProgressVersionPrimary=null;Nh.length=0}var Ph=ua.ReactCurrentDispatcher,Qh=ua.ReactCurrentBatchConfig,Rh=0,N=null,O=null,P=null,Sh=!1,Th=!1,Uh=0,Vh=0;function Q(){throw Error(p(321));}function Wh(a,b){if(null===b)return!1;for(var c=0;c<b.length&&c<a.length;c++)if(!He(a[c],b[c]))return!1;return!0}\nfunction Xh(a,b,c,d,e,f){Rh=f;N=b;b.memoizedState=null;b.updateQueue=null;b.lanes=0;Ph.current=null===a||null===a.memoizedState?Yh:Zh;a=c(d,e);if(Th){f=0;do{Th=!1;Uh=0;if(25<=f)throw Error(p(301));f+=1;P=O=null;b.updateQueue=null;Ph.current=$h;a=c(d,e)}while(Th)}Ph.current=ai;b=null!==O&&null!==O.next;Rh=0;P=O=N=null;Sh=!1;if(b)throw Error(p(300));return a}function bi(){var a=0!==Uh;Uh=0;return a}\nfunction ci(){var a={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};null===P?N.memoizedState=P=a:P=P.next=a;return P}function di(){if(null===O){var a=N.alternate;a=null!==a?a.memoizedState:null}else a=O.next;var b=null===P?N.memoizedState:P.next;if(null!==b)P=b,O=a;else{if(null===a)throw Error(p(310));O=a;a={memoizedState:O.memoizedState,baseState:O.baseState,baseQueue:O.baseQueue,queue:O.queue,next:null};null===P?N.memoizedState=P=a:P=P.next=a}return P}\nfunction ei(a,b){return\"function\"===typeof b?b(a):b}\nfunction fi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=O,e=d.baseQueue,f=c.pending;if(null!==f){if(null!==e){var g=e.next;e.next=f.next;f.next=g}d.baseQueue=e=f;c.pending=null}if(null!==e){f=e.next;d=d.baseState;var h=g=null,k=null,l=f;do{var m=l.lane;if((Rh&m)===m)null!==k&&(k=k.next={lane:0,action:l.action,hasEagerState:l.hasEagerState,eagerState:l.eagerState,next:null}),d=l.hasEagerState?l.eagerState:a(d,l.action);else{var q={lane:m,action:l.action,hasEagerState:l.hasEagerState,\neagerState:l.eagerState,next:null};null===k?(h=k=q,g=d):k=k.next=q;N.lanes|=m;hh|=m}l=l.next}while(null!==l&&l!==f);null===k?g=d:k.next=h;He(d,b.memoizedState)||(Ug=!0);b.memoizedState=d;b.baseState=g;b.baseQueue=k;c.lastRenderedState=d}a=c.interleaved;if(null!==a){e=a;do f=e.lane,N.lanes|=f,hh|=f,e=e.next;while(e!==a)}else null===e&&(c.lanes=0);return[b.memoizedState,c.dispatch]}\nfunction gi(a){var b=di(),c=b.queue;if(null===c)throw Error(p(311));c.lastRenderedReducer=a;var d=c.dispatch,e=c.pending,f=b.memoizedState;if(null!==e){c.pending=null;var g=e=e.next;do f=a(f,g.action),g=g.next;while(g!==e);He(f,b.memoizedState)||(Ug=!0);b.memoizedState=f;null===b.baseQueue&&(b.baseState=f);c.lastRenderedState=f}return[f,d]}function hi(){}\nfunction ii(a,b){var c=N,d=di(),e=b(),f=!He(d.memoizedState,e);f&&(d.memoizedState=e,Ug=!0);d=d.queue;ji(ki.bind(null,c,d,a),[a]);if(d.getSnapshot!==b||f||null!==P&&P.memoizedState.tag&1){c.flags|=2048;li(9,mi.bind(null,c,d,e,b),void 0,null);if(null===R)throw Error(p(349));0!==(Rh&30)||ni(c,b,e)}return e}function ni(a,b,c){a.flags|=16384;a={getSnapshot:b,value:c};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.stores=[a]):(c=b.stores,null===c?b.stores=[a]:c.push(a))}\nfunction mi(a,b,c,d){b.value=c;b.getSnapshot=d;oi(b)&&pi(a)}function ki(a,b,c){return c(function(){oi(b)&&pi(a)})}function oi(a){var b=a.getSnapshot;a=a.value;try{var c=b();return!He(a,c)}catch(d){return!0}}function pi(a){var b=Zg(a,1);null!==b&&mh(b,a,1,-1)}\nfunction qi(a){var b=ci();\"function\"===typeof a&&(a=a());b.memoizedState=b.baseState=a;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:ei,lastRenderedState:a};b.queue=a;a=a.dispatch=ri.bind(null,N,a);return[b.memoizedState,a]}\nfunction li(a,b,c,d){a={tag:a,create:b,destroy:c,deps:d,next:null};b=N.updateQueue;null===b?(b={lastEffect:null,stores:null},N.updateQueue=b,b.lastEffect=a.next=a):(c=b.lastEffect,null===c?b.lastEffect=a.next=a:(d=c.next,c.next=a,a.next=d,b.lastEffect=a));return a}function si(){return di().memoizedState}function ti(a,b,c,d){var e=ci();N.flags|=a;e.memoizedState=li(1|b,c,void 0,void 0===d?null:d)}\nfunction ui(a,b,c,d){var e=di();d=void 0===d?null:d;var f=void 0;if(null!==O){var g=O.memoizedState;f=g.destroy;if(null!==d&&Wh(d,g.deps)){e.memoizedState=li(b,c,f,d);return}}N.flags|=a;e.memoizedState=li(1|b,c,f,d)}function vi(a,b){return ti(8390656,8,a,b)}function ji(a,b){return ui(2048,8,a,b)}function wi(a,b){return ui(4,2,a,b)}function xi(a,b){return ui(4,4,a,b)}\nfunction yi(a,b){if(\"function\"===typeof b)return a=a(),b(a),function(){b(null)};if(null!==b&&void 0!==b)return a=a(),b.current=a,function(){b.current=null}}function zi(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ui(4,4,yi.bind(null,b,a),c)}function Ai(){}function Bi(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];c.memoizedState=[a,b];return a}\nfunction Ci(a,b){var c=di();b=void 0===b?null:b;var d=c.memoizedState;if(null!==d&&null!==b&&Wh(b,d[1]))return d[0];a=a();c.memoizedState=[a,b];return a}function Di(a,b,c){if(0===(Rh&21))return a.baseState&&(a.baseState=!1,Ug=!0),a.memoizedState=c;He(c,b)||(c=yc(),N.lanes|=c,hh|=c,a.baseState=!0);return b}function Ei(a,b){var c=C;C=0!==c&&4>c?c:4;a(!0);var d=Qh.transition;Qh.transition={};try{a(!1),b()}finally{C=c,Qh.transition=d}}function Fi(){return di().memoizedState}\nfunction Gi(a,b,c){var d=lh(a);c={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,c);else if(c=Yg(a,b,c,d),null!==c){var e=L();mh(c,a,d,e);Ji(c,b,d)}}\nfunction ri(a,b,c){var d=lh(a),e={lane:d,action:c,hasEagerState:!1,eagerState:null,next:null};if(Hi(a))Ii(b,e);else{var f=a.alternate;if(0===a.lanes&&(null===f||0===f.lanes)&&(f=b.lastRenderedReducer,null!==f))try{var g=b.lastRenderedState,h=f(g,c);e.hasEagerState=!0;e.eagerState=h;if(He(h,g)){var k=b.interleaved;null===k?(e.next=e,Xg(b)):(e.next=k.next,k.next=e);b.interleaved=e;return}}catch(l){}finally{}c=Yg(a,b,e,d);null!==c&&(e=L(),mh(c,a,d,e),Ji(c,b,d))}}\nfunction Hi(a){var b=a.alternate;return a===N||null!==b&&b===N}function Ii(a,b){Th=Sh=!0;var c=a.pending;null===c?b.next=b:(b.next=c.next,c.next=b);a.pending=b}function Ji(a,b,c){if(0!==(c&4194240)){var d=b.lanes;d&=a.pendingLanes;c|=d;b.lanes=c;Cc(a,c)}}\nvar ai={readContext:Vg,useCallback:Q,useContext:Q,useEffect:Q,useImperativeHandle:Q,useInsertionEffect:Q,useLayoutEffect:Q,useMemo:Q,useReducer:Q,useRef:Q,useState:Q,useDebugValue:Q,useDeferredValue:Q,useTransition:Q,useMutableSource:Q,useSyncExternalStore:Q,useId:Q,unstable_isNewReconciler:!1},Yh={readContext:Vg,useCallback:function(a,b){ci().memoizedState=[a,void 0===b?null:b];return a},useContext:Vg,useEffect:vi,useImperativeHandle:function(a,b,c){c=null!==c&&void 0!==c?c.concat([a]):null;return ti(4194308,\n4,yi.bind(null,b,a),c)},useLayoutEffect:function(a,b){return ti(4194308,4,a,b)},useInsertionEffect:function(a,b){return ti(4,2,a,b)},useMemo:function(a,b){var c=ci();b=void 0===b?null:b;a=a();c.memoizedState=[a,b];return a},useReducer:function(a,b,c){var d=ci();b=void 0!==c?c(b):b;d.memoizedState=d.baseState=b;a={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:a,lastRenderedState:b};d.queue=a;a=a.dispatch=Gi.bind(null,N,a);return[d.memoizedState,a]},useRef:function(a){var b=\nci();a={current:a};return b.memoizedState=a},useState:qi,useDebugValue:Ai,useDeferredValue:function(a){return ci().memoizedState=a},useTransition:function(){var a=qi(!1),b=a[0];a=Ei.bind(null,a[1]);ci().memoizedState=a;return[b,a]},useMutableSource:function(){},useSyncExternalStore:function(a,b,c){var d=N,e=ci();if(I){if(void 0===c)throw Error(p(407));c=c()}else{c=b();if(null===R)throw Error(p(349));0!==(Rh&30)||ni(d,b,c)}e.memoizedState=c;var f={value:c,getSnapshot:b};e.queue=f;vi(ki.bind(null,d,\nf,a),[a]);d.flags|=2048;li(9,mi.bind(null,d,f,c,b),void 0,null);return c},useId:function(){var a=ci(),b=R.identifierPrefix;if(I){var c=sg;var d=rg;c=(d&~(1<<32-oc(d)-1)).toString(32)+c;b=\":\"+b+\"R\"+c;c=Uh++;0<c&&(b+=\"H\"+c.toString(32));b+=\":\"}else c=Vh++,b=\":\"+b+\"r\"+c.toString(32)+\":\";return a.memoizedState=b},unstable_isNewReconciler:!1},Zh={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:fi,useRef:si,useState:function(){return fi(ei)},\nuseDebugValue:Ai,useDeferredValue:function(a){var b=di();return Di(b,O.memoizedState,a)},useTransition:function(){var a=fi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1},$h={readContext:Vg,useCallback:Bi,useContext:Vg,useEffect:ji,useImperativeHandle:zi,useInsertionEffect:wi,useLayoutEffect:xi,useMemo:Ci,useReducer:gi,useRef:si,useState:function(){return gi(ei)},useDebugValue:Ai,useDeferredValue:function(a){var b=di();return null===\nO?b.memoizedState=a:Di(b,O.memoizedState,a)},useTransition:function(){var a=gi(ei)[0],b=di().memoizedState;return[a,b]},useMutableSource:hi,useSyncExternalStore:ii,useId:Fi,unstable_isNewReconciler:!1};function Ki(a,b){try{var c=\"\",d=b;do c+=Pa(d),d=d.return;while(d);var e=c}catch(f){e=\"\\nError generating stack: \"+f.message+\"\\n\"+f.stack}return{value:a,source:b,stack:e,digest:null}}function Li(a,b,c){return{value:a,source:null,stack:null!=c?c:null,digest:null!=b?b:null}}\nfunction Mi(a,b){try{console.error(b.value)}catch(c){setTimeout(function(){throw c;})}}var Ni=\"function\"===typeof WeakMap?WeakMap:Map;function Oi(a,b,c){c=ch(-1,c);c.tag=3;c.payload={element:null};var d=b.value;c.callback=function(){Pi||(Pi=!0,Qi=d);Mi(a,b)};return c}\nfunction Ri(a,b,c){c=ch(-1,c);c.tag=3;var d=a.type.getDerivedStateFromError;if(\"function\"===typeof d){var e=b.value;c.payload=function(){return d(e)};c.callback=function(){Mi(a,b)}}var f=a.stateNode;null!==f&&\"function\"===typeof f.componentDidCatch&&(c.callback=function(){Mi(a,b);\"function\"!==typeof d&&(null===Si?Si=new Set([this]):Si.add(this));var c=b.stack;this.componentDidCatch(b.value,{componentStack:null!==c?c:\"\"})});return c}\nfunction Ti(a,b,c){var d=a.pingCache;if(null===d){d=a.pingCache=new Ni;var e=new Set;d.set(b,e)}else e=d.get(b),void 0===e&&(e=new Set,d.set(b,e));e.has(c)||(e.add(c),a=Ui.bind(null,a,b,c),b.then(a,a))}function Vi(a){do{var b;if(b=13===a.tag)b=a.memoizedState,b=null!==b?null!==b.dehydrated?!0:!1:!0;if(b)return a;a=a.return}while(null!==a);return null}\nfunction Wi(a,b,c,d,e){if(0===(a.mode&1))return a===b?a.flags|=65536:(a.flags|=128,c.flags|=131072,c.flags&=-52805,1===c.tag&&(null===c.alternate?c.tag=17:(b=ch(-1,1),b.tag=2,dh(c,b,1))),c.lanes|=1),a;a.flags|=65536;a.lanes=e;return a}var Xi=ua.ReactCurrentOwner,Ug=!1;function Yi(a,b,c,d){b.child=null===a?Ch(b,null,c,d):Bh(b,a.child,c,d)}\nfunction Zi(a,b,c,d,e){c=c.render;var f=b.ref;Tg(b,e);d=Xh(a,b,c,d,f,e);c=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&c&&vg(b);b.flags|=1;Yi(a,b,d,e);return b.child}\nfunction aj(a,b,c,d,e){if(null===a){var f=c.type;if(\"function\"===typeof f&&!bj(f)&&void 0===f.defaultProps&&null===c.compare&&void 0===c.defaultProps)return b.tag=15,b.type=f,cj(a,b,f,d,e);a=yh(c.type,null,d,b,b.mode,e);a.ref=b.ref;a.return=b;return b.child=a}f=a.child;if(0===(a.lanes&e)){var g=f.memoizedProps;c=c.compare;c=null!==c?c:Ie;if(c(g,d)&&a.ref===b.ref)return $i(a,b,e)}b.flags|=1;a=wh(f,d);a.ref=b.ref;a.return=b;return b.child=a}\nfunction cj(a,b,c,d,e){if(null!==a){var f=a.memoizedProps;if(Ie(f,d)&&a.ref===b.ref)if(Ug=!1,b.pendingProps=d=f,0!==(a.lanes&e))0!==(a.flags&131072)&&(Ug=!0);else return b.lanes=a.lanes,$i(a,b,e)}return dj(a,b,c,d,e)}\nfunction ej(a,b,c){var d=b.pendingProps,e=d.children,f=null!==a?a.memoizedState:null;if(\"hidden\"===d.mode)if(0===(b.mode&1))b.memoizedState={baseLanes:0,cachePool:null,transitions:null},G(fj,gj),gj|=c;else{if(0===(c&1073741824))return a=null!==f?f.baseLanes|c:c,b.lanes=b.childLanes=1073741824,b.memoizedState={baseLanes:a,cachePool:null,transitions:null},b.updateQueue=null,G(fj,gj),gj|=a,null;b.memoizedState={baseLanes:0,cachePool:null,transitions:null};d=null!==f?f.baseLanes:c;G(fj,gj);gj|=d}else null!==\nf?(d=f.baseLanes|c,b.memoizedState=null):d=c,G(fj,gj),gj|=d;Yi(a,b,e,c);return b.child}function hj(a,b){var c=b.ref;if(null===a&&null!==c||null!==a&&a.ref!==c)b.flags|=512,b.flags|=2097152}function dj(a,b,c,d,e){var f=Zf(c)?Xf:H.current;f=Yf(b,f);Tg(b,e);c=Xh(a,b,c,d,f,e);d=bi();if(null!==a&&!Ug)return b.updateQueue=a.updateQueue,b.flags&=-2053,a.lanes&=~e,$i(a,b,e);I&&d&&vg(b);b.flags|=1;Yi(a,b,c,e);return b.child}\nfunction ij(a,b,c,d,e){if(Zf(c)){var f=!0;cg(b)}else f=!1;Tg(b,e);if(null===b.stateNode)jj(a,b),ph(b,c,d),rh(b,c,d,e),d=!0;else if(null===a){var g=b.stateNode,h=b.memoizedProps;g.props=h;var k=g.context,l=c.contextType;\"object\"===typeof l&&null!==l?l=Vg(l):(l=Zf(c)?Xf:H.current,l=Yf(b,l));var m=c.getDerivedStateFromProps,q=\"function\"===typeof m||\"function\"===typeof g.getSnapshotBeforeUpdate;q||\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||\n(h!==d||k!==l)&&qh(b,g,d,l);$g=!1;var r=b.memoizedState;g.state=r;gh(b,d,g,e);k=b.memoizedState;h!==d||r!==k||Wf.current||$g?(\"function\"===typeof m&&(kh(b,c,m,d),k=b.memoizedState),(h=$g||oh(b,c,h,d,r,k,l))?(q||\"function\"!==typeof g.UNSAFE_componentWillMount&&\"function\"!==typeof g.componentWillMount||(\"function\"===typeof g.componentWillMount&&g.componentWillMount(),\"function\"===typeof g.UNSAFE_componentWillMount&&g.UNSAFE_componentWillMount()),\"function\"===typeof g.componentDidMount&&(b.flags|=4194308)):\n(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),b.memoizedProps=d,b.memoizedState=k),g.props=d,g.state=k,g.context=l,d=h):(\"function\"===typeof g.componentDidMount&&(b.flags|=4194308),d=!1)}else{g=b.stateNode;bh(a,b);h=b.memoizedProps;l=b.type===b.elementType?h:Lg(b.type,h);g.props=l;q=b.pendingProps;r=g.context;k=c.contextType;\"object\"===typeof k&&null!==k?k=Vg(k):(k=Zf(c)?Xf:H.current,k=Yf(b,k));var y=c.getDerivedStateFromProps;(m=\"function\"===typeof y||\"function\"===typeof g.getSnapshotBeforeUpdate)||\n\"function\"!==typeof g.UNSAFE_componentWillReceiveProps&&\"function\"!==typeof g.componentWillReceiveProps||(h!==q||r!==k)&&qh(b,g,d,k);$g=!1;r=b.memoizedState;g.state=r;gh(b,d,g,e);var n=b.memoizedState;h!==q||r!==n||Wf.current||$g?(\"function\"===typeof y&&(kh(b,c,y,d),n=b.memoizedState),(l=$g||oh(b,c,l,d,r,n,k)||!1)?(m||\"function\"!==typeof g.UNSAFE_componentWillUpdate&&\"function\"!==typeof g.componentWillUpdate||(\"function\"===typeof g.componentWillUpdate&&g.componentWillUpdate(d,n,k),\"function\"===typeof g.UNSAFE_componentWillUpdate&&\ng.UNSAFE_componentWillUpdate(d,n,k)),\"function\"===typeof g.componentDidUpdate&&(b.flags|=4),\"function\"===typeof g.getSnapshotBeforeUpdate&&(b.flags|=1024)):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),b.memoizedProps=d,b.memoizedState=n),g.props=d,g.state=n,g.context=k,d=l):(\"function\"!==typeof g.componentDidUpdate||h===a.memoizedProps&&r===\na.memoizedState||(b.flags|=4),\"function\"!==typeof g.getSnapshotBeforeUpdate||h===a.memoizedProps&&r===a.memoizedState||(b.flags|=1024),d=!1)}return kj(a,b,c,d,f,e)}\nfunction kj(a,b,c,d,e,f){hj(a,b);var g=0!==(b.flags&128);if(!d&&!g)return e&&dg(b,c,!1),$i(a,b,f);d=b.stateNode;Xi.current=b;var h=g&&\"function\"!==typeof c.getDerivedStateFromError?null:d.render();b.flags|=1;null!==a&&g?(b.child=Bh(b,a.child,null,f),b.child=Bh(b,null,h,f)):Yi(a,b,h,f);b.memoizedState=d.state;e&&dg(b,c,!0);return b.child}function lj(a){var b=a.stateNode;b.pendingContext?ag(a,b.pendingContext,b.pendingContext!==b.context):b.context&&ag(a,b.context,!1);Ih(a,b.containerInfo)}\nfunction mj(a,b,c,d,e){Ig();Jg(e);b.flags|=256;Yi(a,b,c,d);return b.child}var nj={dehydrated:null,treeContext:null,retryLane:0};function oj(a){return{baseLanes:a,cachePool:null,transitions:null}}\nfunction pj(a,b,c){var d=b.pendingProps,e=M.current,f=!1,g=0!==(b.flags&128),h;(h=g)||(h=null!==a&&null===a.memoizedState?!1:0!==(e&2));if(h)f=!0,b.flags&=-129;else if(null===a||null!==a.memoizedState)e|=1;G(M,e&1);if(null===a){Eg(b);a=b.memoizedState;if(null!==a&&(a=a.dehydrated,null!==a))return 0===(b.mode&1)?b.lanes=1:\"$!\"===a.data?b.lanes=8:b.lanes=1073741824,null;g=d.children;a=d.fallback;return f?(d=b.mode,f=b.child,g={mode:\"hidden\",children:g},0===(d&1)&&null!==f?(f.childLanes=0,f.pendingProps=\ng):f=qj(g,d,0,null),a=Ah(a,d,c,null),f.return=b,a.return=b,f.sibling=a,b.child=f,b.child.memoizedState=oj(c),b.memoizedState=nj,a):rj(b,g)}e=a.memoizedState;if(null!==e&&(h=e.dehydrated,null!==h))return sj(a,b,g,d,h,e,c);if(f){f=d.fallback;g=b.mode;e=a.child;h=e.sibling;var k={mode:\"hidden\",children:d.children};0===(g&1)&&b.child!==e?(d=b.child,d.childLanes=0,d.pendingProps=k,b.deletions=null):(d=wh(e,k),d.subtreeFlags=e.subtreeFlags&14680064);null!==h?f=wh(h,f):(f=Ah(f,g,c,null),f.flags|=2);f.return=\nb;d.return=b;d.sibling=f;b.child=d;d=f;f=b.child;g=a.child.memoizedState;g=null===g?oj(c):{baseLanes:g.baseLanes|c,cachePool:null,transitions:g.transitions};f.memoizedState=g;f.childLanes=a.childLanes&~c;b.memoizedState=nj;return d}f=a.child;a=f.sibling;d=wh(f,{mode:\"visible\",children:d.children});0===(b.mode&1)&&(d.lanes=c);d.return=b;d.sibling=null;null!==a&&(c=b.deletions,null===c?(b.deletions=[a],b.flags|=16):c.push(a));b.child=d;b.memoizedState=null;return d}\nfunction rj(a,b){b=qj({mode:\"visible\",children:b},a.mode,0,null);b.return=a;return a.child=b}function tj(a,b,c,d){null!==d&&Jg(d);Bh(b,a.child,null,c);a=rj(b,b.pendingProps.children);a.flags|=2;b.memoizedState=null;return a}\nfunction sj(a,b,c,d,e,f,g){if(c){if(b.flags&256)return b.flags&=-257,d=Li(Error(p(422))),tj(a,b,g,d);if(null!==b.memoizedState)return b.child=a.child,b.flags|=128,null;f=d.fallback;e=b.mode;d=qj({mode:\"visible\",children:d.children},e,0,null);f=Ah(f,e,g,null);f.flags|=2;d.return=b;f.return=b;d.sibling=f;b.child=d;0!==(b.mode&1)&&Bh(b,a.child,null,g);b.child.memoizedState=oj(g);b.memoizedState=nj;return f}if(0===(b.mode&1))return tj(a,b,g,null);if(\"$!\"===e.data){d=e.nextSibling&&e.nextSibling.dataset;\nif(d)var h=d.dgst;d=h;f=Error(p(419));d=Li(f,d,void 0);return tj(a,b,g,d)}h=0!==(g&a.childLanes);if(Ug||h){d=R;if(null!==d){switch(g&-g){case 4:e=2;break;case 16:e=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:e=32;break;case 536870912:e=268435456;break;default:e=0}e=0!==(e&(d.suspendedLanes|g))?0:e;\n0!==e&&e!==f.retryLane&&(f.retryLane=e,Zg(a,e),mh(d,a,e,-1))}uj();d=Li(Error(p(421)));return tj(a,b,g,d)}if(\"$?\"===e.data)return b.flags|=128,b.child=a.child,b=vj.bind(null,a),e._reactRetry=b,null;a=f.treeContext;yg=Lf(e.nextSibling);xg=b;I=!0;zg=null;null!==a&&(og[pg++]=rg,og[pg++]=sg,og[pg++]=qg,rg=a.id,sg=a.overflow,qg=b);b=rj(b,d.children);b.flags|=4096;return b}function wj(a,b,c){a.lanes|=b;var d=a.alternate;null!==d&&(d.lanes|=b);Sg(a.return,b,c)}\nfunction xj(a,b,c,d,e){var f=a.memoizedState;null===f?a.memoizedState={isBackwards:b,rendering:null,renderingStartTime:0,last:d,tail:c,tailMode:e}:(f.isBackwards=b,f.rendering=null,f.renderingStartTime=0,f.last=d,f.tail=c,f.tailMode=e)}\nfunction yj(a,b,c){var d=b.pendingProps,e=d.revealOrder,f=d.tail;Yi(a,b,d.children,c);d=M.current;if(0!==(d&2))d=d&1|2,b.flags|=128;else{if(null!==a&&0!==(a.flags&128))a:for(a=b.child;null!==a;){if(13===a.tag)null!==a.memoizedState&&wj(a,c,b);else if(19===a.tag)wj(a,c,b);else if(null!==a.child){a.child.return=a;a=a.child;continue}if(a===b)break a;for(;null===a.sibling;){if(null===a.return||a.return===b)break a;a=a.return}a.sibling.return=a.return;a=a.sibling}d&=1}G(M,d);if(0===(b.mode&1))b.memoizedState=\nnull;else switch(e){case \"forwards\":c=b.child;for(e=null;null!==c;)a=c.alternate,null!==a&&null===Mh(a)&&(e=c),c=c.sibling;c=e;null===c?(e=b.child,b.child=null):(e=c.sibling,c.sibling=null);xj(b,!1,e,c,f);break;case \"backwards\":c=null;e=b.child;for(b.child=null;null!==e;){a=e.alternate;if(null!==a&&null===Mh(a)){b.child=e;break}a=e.sibling;e.sibling=c;c=e;e=a}xj(b,!0,c,null,f);break;case \"together\":xj(b,!1,null,null,void 0);break;default:b.memoizedState=null}return b.child}\nfunction jj(a,b){0===(b.mode&1)&&null!==a&&(a.alternate=null,b.alternate=null,b.flags|=2)}function $i(a,b,c){null!==a&&(b.dependencies=a.dependencies);hh|=b.lanes;if(0===(c&b.childLanes))return null;if(null!==a&&b.child!==a.child)throw Error(p(153));if(null!==b.child){a=b.child;c=wh(a,a.pendingProps);b.child=c;for(c.return=b;null!==a.sibling;)a=a.sibling,c=c.sibling=wh(a,a.pendingProps),c.return=b;c.sibling=null}return b.child}\nfunction zj(a,b,c){switch(b.tag){case 3:lj(b);Ig();break;case 5:Kh(b);break;case 1:Zf(b.type)&&cg(b);break;case 4:Ih(b,b.stateNode.containerInfo);break;case 10:var d=b.type._context,e=b.memoizedProps.value;G(Mg,d._currentValue);d._currentValue=e;break;case 13:d=b.memoizedState;if(null!==d){if(null!==d.dehydrated)return G(M,M.current&1),b.flags|=128,null;if(0!==(c&b.child.childLanes))return pj(a,b,c);G(M,M.current&1);a=$i(a,b,c);return null!==a?a.sibling:null}G(M,M.current&1);break;case 19:d=0!==(c&\nb.childLanes);if(0!==(a.flags&128)){if(d)return yj(a,b,c);b.flags|=128}e=b.memoizedState;null!==e&&(e.rendering=null,e.tail=null,e.lastEffect=null);G(M,M.current);if(d)break;else return null;case 22:case 23:return b.lanes=0,ej(a,b,c)}return $i(a,b,c)}var Aj,Bj,Cj,Dj;\nAj=function(a,b){for(var c=b.child;null!==c;){if(5===c.tag||6===c.tag)a.appendChild(c.stateNode);else if(4!==c.tag&&null!==c.child){c.child.return=c;c=c.child;continue}if(c===b)break;for(;null===c.sibling;){if(null===c.return||c.return===b)return;c=c.return}c.sibling.return=c.return;c=c.sibling}};Bj=function(){};\nCj=function(a,b,c,d){var e=a.memoizedProps;if(e!==d){a=b.stateNode;Hh(Eh.current);var f=null;switch(c){case \"input\":e=Ya(a,e);d=Ya(a,d);f=[];break;case \"select\":e=A({},e,{value:void 0});d=A({},d,{value:void 0});f=[];break;case \"textarea\":e=gb(a,e);d=gb(a,d);f=[];break;default:\"function\"!==typeof e.onClick&&\"function\"===typeof d.onClick&&(a.onclick=Bf)}ub(c,d);var g;c=null;for(l in e)if(!d.hasOwnProperty(l)&&e.hasOwnProperty(l)&&null!=e[l])if(\"style\"===l){var h=e[l];for(g in h)h.hasOwnProperty(g)&&\n(c||(c={}),c[g]=\"\")}else\"dangerouslySetInnerHTML\"!==l&&\"children\"!==l&&\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&\"autoFocus\"!==l&&(ea.hasOwnProperty(l)?f||(f=[]):(f=f||[]).push(l,null));for(l in d){var k=d[l];h=null!=e?e[l]:void 0;if(d.hasOwnProperty(l)&&k!==h&&(null!=k||null!=h))if(\"style\"===l)if(h){for(g in h)!h.hasOwnProperty(g)||k&&k.hasOwnProperty(g)||(c||(c={}),c[g]=\"\");for(g in k)k.hasOwnProperty(g)&&h[g]!==k[g]&&(c||(c={}),c[g]=k[g])}else c||(f||(f=[]),f.push(l,\nc)),c=k;else\"dangerouslySetInnerHTML\"===l?(k=k?k.__html:void 0,h=h?h.__html:void 0,null!=k&&h!==k&&(f=f||[]).push(l,k)):\"children\"===l?\"string\"!==typeof k&&\"number\"!==typeof k||(f=f||[]).push(l,\"\"+k):\"suppressContentEditableWarning\"!==l&&\"suppressHydrationWarning\"!==l&&(ea.hasOwnProperty(l)?(null!=k&&\"onScroll\"===l&&D(\"scroll\",a),f||h===k||(f=[])):(f=f||[]).push(l,k))}c&&(f=f||[]).push(\"style\",c);var l=f;if(b.updateQueue=l)b.flags|=4}};Dj=function(a,b,c,d){c!==d&&(b.flags|=4)};\nfunction Ej(a,b){if(!I)switch(a.tailMode){case \"hidden\":b=a.tail;for(var c=null;null!==b;)null!==b.alternate&&(c=b),b=b.sibling;null===c?a.tail=null:c.sibling=null;break;case \"collapsed\":c=a.tail;for(var d=null;null!==c;)null!==c.alternate&&(d=c),c=c.sibling;null===d?b||null===a.tail?a.tail=null:a.tail.sibling=null:d.sibling=null}}\nfunction S(a){var b=null!==a.alternate&&a.alternate.child===a.child,c=0,d=0;if(b)for(var e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags&14680064,d|=e.flags&14680064,e.return=a,e=e.sibling;else for(e=a.child;null!==e;)c|=e.lanes|e.childLanes,d|=e.subtreeFlags,d|=e.flags,e.return=a,e=e.sibling;a.subtreeFlags|=d;a.childLanes=c;return b}\nfunction Fj(a,b,c){var d=b.pendingProps;wg(b);switch(b.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return S(b),null;case 1:return Zf(b.type)&&$f(),S(b),null;case 3:d=b.stateNode;Jh();E(Wf);E(H);Oh();d.pendingContext&&(d.context=d.pendingContext,d.pendingContext=null);if(null===a||null===a.child)Gg(b)?b.flags|=4:null===a||a.memoizedState.isDehydrated&&0===(b.flags&256)||(b.flags|=1024,null!==zg&&(Gj(zg),zg=null));Bj(a,b);S(b);return null;case 5:Lh(b);var e=Hh(Gh.current);\nc=b.type;if(null!==a&&null!=b.stateNode)Cj(a,b,c,d,e),a.ref!==b.ref&&(b.flags|=512,b.flags|=2097152);else{if(!d){if(null===b.stateNode)throw Error(p(166));S(b);return null}a=Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.type;var f=b.memoizedProps;d[Of]=b;d[Pf]=f;a=0!==(b.mode&1);switch(c){case \"dialog\":D(\"cancel\",d);D(\"close\",d);break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",d);break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],d);break;case \"source\":D(\"error\",d);break;case \"img\":case \"image\":case \"link\":D(\"error\",\nd);D(\"load\",d);break;case \"details\":D(\"toggle\",d);break;case \"input\":Za(d,f);D(\"invalid\",d);break;case \"select\":d._wrapperState={wasMultiple:!!f.multiple};D(\"invalid\",d);break;case \"textarea\":hb(d,f),D(\"invalid\",d)}ub(c,f);e=null;for(var g in f)if(f.hasOwnProperty(g)){var h=f[g];\"children\"===g?\"string\"===typeof h?d.textContent!==h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,h,a),e=[\"children\",h]):\"number\"===typeof h&&d.textContent!==\"\"+h&&(!0!==f.suppressHydrationWarning&&Af(d.textContent,\nh,a),e=[\"children\",\"\"+h]):ea.hasOwnProperty(g)&&null!=h&&\"onScroll\"===g&&D(\"scroll\",d)}switch(c){case \"input\":Va(d);db(d,f,!0);break;case \"textarea\":Va(d);jb(d);break;case \"select\":case \"option\":break;default:\"function\"===typeof f.onClick&&(d.onclick=Bf)}d=e;b.updateQueue=d;null!==d&&(b.flags|=4)}else{g=9===e.nodeType?e:e.ownerDocument;\"http://www.w3.org/1999/xhtml\"===a&&(a=kb(c));\"http://www.w3.org/1999/xhtml\"===a?\"script\"===c?(a=g.createElement(\"div\"),a.innerHTML=\"<script>\\x3c/script>\",a=a.removeChild(a.firstChild)):\n\"string\"===typeof d.is?a=g.createElement(c,{is:d.is}):(a=g.createElement(c),\"select\"===c&&(g=a,d.multiple?g.multiple=!0:d.size&&(g.size=d.size))):a=g.createElementNS(a,c);a[Of]=b;a[Pf]=d;Aj(a,b,!1,!1);b.stateNode=a;a:{g=vb(c,d);switch(c){case \"dialog\":D(\"cancel\",a);D(\"close\",a);e=d;break;case \"iframe\":case \"object\":case \"embed\":D(\"load\",a);e=d;break;case \"video\":case \"audio\":for(e=0;e<lf.length;e++)D(lf[e],a);e=d;break;case \"source\":D(\"error\",a);e=d;break;case \"img\":case \"image\":case \"link\":D(\"error\",\na);D(\"load\",a);e=d;break;case \"details\":D(\"toggle\",a);e=d;break;case \"input\":Za(a,d);e=Ya(a,d);D(\"invalid\",a);break;case \"option\":e=d;break;case \"select\":a._wrapperState={wasMultiple:!!d.multiple};e=A({},d,{value:void 0});D(\"invalid\",a);break;case \"textarea\":hb(a,d);e=gb(a,d);D(\"invalid\",a);break;default:e=d}ub(c,e);h=e;for(f in h)if(h.hasOwnProperty(f)){var k=h[f];\"style\"===f?sb(a,k):\"dangerouslySetInnerHTML\"===f?(k=k?k.__html:void 0,null!=k&&nb(a,k)):\"children\"===f?\"string\"===typeof k?(\"textarea\"!==\nc||\"\"!==k)&&ob(a,k):\"number\"===typeof k&&ob(a,\"\"+k):\"suppressContentEditableWarning\"!==f&&\"suppressHydrationWarning\"!==f&&\"autoFocus\"!==f&&(ea.hasOwnProperty(f)?null!=k&&\"onScroll\"===f&&D(\"scroll\",a):null!=k&&ta(a,f,k,g))}switch(c){case \"input\":Va(a);db(a,d,!1);break;case \"textarea\":Va(a);jb(a);break;case \"option\":null!=d.value&&a.setAttribute(\"value\",\"\"+Sa(d.value));break;case \"select\":a.multiple=!!d.multiple;f=d.value;null!=f?fb(a,!!d.multiple,f,!1):null!=d.defaultValue&&fb(a,!!d.multiple,d.defaultValue,\n!0);break;default:\"function\"===typeof e.onClick&&(a.onclick=Bf)}switch(c){case \"button\":case \"input\":case \"select\":case \"textarea\":d=!!d.autoFocus;break a;case \"img\":d=!0;break a;default:d=!1}}d&&(b.flags|=4)}null!==b.ref&&(b.flags|=512,b.flags|=2097152)}S(b);return null;case 6:if(a&&null!=b.stateNode)Dj(a,b,a.memoizedProps,d);else{if(\"string\"!==typeof d&&null===b.stateNode)throw Error(p(166));c=Hh(Gh.current);Hh(Eh.current);if(Gg(b)){d=b.stateNode;c=b.memoizedProps;d[Of]=b;if(f=d.nodeValue!==c)if(a=\nxg,null!==a)switch(a.tag){case 3:Af(d.nodeValue,c,0!==(a.mode&1));break;case 5:!0!==a.memoizedProps.suppressHydrationWarning&&Af(d.nodeValue,c,0!==(a.mode&1))}f&&(b.flags|=4)}else d=(9===c.nodeType?c:c.ownerDocument).createTextNode(d),d[Of]=b,b.stateNode=d}S(b);return null;case 13:E(M);d=b.memoizedState;if(null===a||null!==a.memoizedState&&null!==a.memoizedState.dehydrated){if(I&&null!==yg&&0!==(b.mode&1)&&0===(b.flags&128))Hg(),Ig(),b.flags|=98560,f=!1;else if(f=Gg(b),null!==d&&null!==d.dehydrated){if(null===\na){if(!f)throw Error(p(318));f=b.memoizedState;f=null!==f?f.dehydrated:null;if(!f)throw Error(p(317));f[Of]=b}else Ig(),0===(b.flags&128)&&(b.memoizedState=null),b.flags|=4;S(b);f=!1}else null!==zg&&(Gj(zg),zg=null),f=!0;if(!f)return b.flags&65536?b:null}if(0!==(b.flags&128))return b.lanes=c,b;d=null!==d;d!==(null!==a&&null!==a.memoizedState)&&d&&(b.child.flags|=8192,0!==(b.mode&1)&&(null===a||0!==(M.current&1)?0===T&&(T=3):uj()));null!==b.updateQueue&&(b.flags|=4);S(b);return null;case 4:return Jh(),\nBj(a,b),null===a&&sf(b.stateNode.containerInfo),S(b),null;case 10:return Rg(b.type._context),S(b),null;case 17:return Zf(b.type)&&$f(),S(b),null;case 19:E(M);f=b.memoizedState;if(null===f)return S(b),null;d=0!==(b.flags&128);g=f.rendering;if(null===g)if(d)Ej(f,!1);else{if(0!==T||null!==a&&0!==(a.flags&128))for(a=b.child;null!==a;){g=Mh(a);if(null!==g){b.flags|=128;Ej(f,!1);d=g.updateQueue;null!==d&&(b.updateQueue=d,b.flags|=4);b.subtreeFlags=0;d=c;for(c=b.child;null!==c;)f=c,a=d,f.flags&=14680066,\ng=f.alternate,null===g?(f.childLanes=0,f.lanes=a,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=g.childLanes,f.lanes=g.lanes,f.child=g.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=g.memoizedProps,f.memoizedState=g.memoizedState,f.updateQueue=g.updateQueue,f.type=g.type,a=g.dependencies,f.dependencies=null===a?null:{lanes:a.lanes,firstContext:a.firstContext}),c=c.sibling;G(M,M.current&1|2);return b.child}a=\na.sibling}null!==f.tail&&B()>Hj&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304)}else{if(!d)if(a=Mh(g),null!==a){if(b.flags|=128,d=!0,c=a.updateQueue,null!==c&&(b.updateQueue=c,b.flags|=4),Ej(f,!0),null===f.tail&&\"hidden\"===f.tailMode&&!g.alternate&&!I)return S(b),null}else 2*B()-f.renderingStartTime>Hj&&1073741824!==c&&(b.flags|=128,d=!0,Ej(f,!1),b.lanes=4194304);f.isBackwards?(g.sibling=b.child,b.child=g):(c=f.last,null!==c?c.sibling=g:b.child=g,f.last=g)}if(null!==f.tail)return b=f.tail,f.rendering=\nb,f.tail=b.sibling,f.renderingStartTime=B(),b.sibling=null,c=M.current,G(M,d?c&1|2:c&1),b;S(b);return null;case 22:case 23:return Ij(),d=null!==b.memoizedState,null!==a&&null!==a.memoizedState!==d&&(b.flags|=8192),d&&0!==(b.mode&1)?0!==(gj&1073741824)&&(S(b),b.subtreeFlags&6&&(b.flags|=8192)):S(b),null;case 24:return null;case 25:return null}throw Error(p(156,b.tag));}\nfunction Jj(a,b){wg(b);switch(b.tag){case 1:return Zf(b.type)&&$f(),a=b.flags,a&65536?(b.flags=a&-65537|128,b):null;case 3:return Jh(),E(Wf),E(H),Oh(),a=b.flags,0!==(a&65536)&&0===(a&128)?(b.flags=a&-65537|128,b):null;case 5:return Lh(b),null;case 13:E(M);a=b.memoizedState;if(null!==a&&null!==a.dehydrated){if(null===b.alternate)throw Error(p(340));Ig()}a=b.flags;return a&65536?(b.flags=a&-65537|128,b):null;case 19:return E(M),null;case 4:return Jh(),null;case 10:return Rg(b.type._context),null;case 22:case 23:return Ij(),\nnull;case 24:return null;default:return null}}var Kj=!1,U=!1,Lj=\"function\"===typeof WeakSet?WeakSet:Set,V=null;function Mj(a,b){var c=a.ref;if(null!==c)if(\"function\"===typeof c)try{c(null)}catch(d){W(a,b,d)}else c.current=null}function Nj(a,b,c){try{c()}catch(d){W(a,b,d)}}var Oj=!1;\nfunction Pj(a,b){Cf=dd;a=Me();if(Ne(a)){if(\"selectionStart\"in a)var c={start:a.selectionStart,end:a.selectionEnd};else a:{c=(c=a.ownerDocument)&&c.defaultView||window;var d=c.getSelection&&c.getSelection();if(d&&0!==d.rangeCount){c=d.anchorNode;var e=d.anchorOffset,f=d.focusNode;d=d.focusOffset;try{c.nodeType,f.nodeType}catch(F){c=null;break a}var g=0,h=-1,k=-1,l=0,m=0,q=a,r=null;b:for(;;){for(var y;;){q!==c||0!==e&&3!==q.nodeType||(h=g+e);q!==f||0!==d&&3!==q.nodeType||(k=g+d);3===q.nodeType&&(g+=\nq.nodeValue.length);if(null===(y=q.firstChild))break;r=q;q=y}for(;;){if(q===a)break b;r===c&&++l===e&&(h=g);r===f&&++m===d&&(k=g);if(null!==(y=q.nextSibling))break;q=r;r=q.parentNode}q=y}c=-1===h||-1===k?null:{start:h,end:k}}else c=null}c=c||{start:0,end:0}}else c=null;Df={focusedElem:a,selectionRange:c};dd=!1;for(V=b;null!==V;)if(b=V,a=b.child,0!==(b.subtreeFlags&1028)&&null!==a)a.return=b,V=a;else for(;null!==V;){b=V;try{var n=b.alternate;if(0!==(b.flags&1024))switch(b.tag){case 0:case 11:case 15:break;\ncase 1:if(null!==n){var t=n.memoizedProps,J=n.memoizedState,x=b.stateNode,w=x.getSnapshotBeforeUpdate(b.elementType===b.type?t:Lg(b.type,t),J);x.__reactInternalSnapshotBeforeUpdate=w}break;case 3:var u=b.stateNode.containerInfo;1===u.nodeType?u.textContent=\"\":9===u.nodeType&&u.documentElement&&u.removeChild(u.documentElement);break;case 5:case 6:case 4:case 17:break;default:throw Error(p(163));}}catch(F){W(b,b.return,F)}a=b.sibling;if(null!==a){a.return=b.return;V=a;break}V=b.return}n=Oj;Oj=!1;return n}\nfunction Qj(a,b,c){var d=b.updateQueue;d=null!==d?d.lastEffect:null;if(null!==d){var e=d=d.next;do{if((e.tag&a)===a){var f=e.destroy;e.destroy=void 0;void 0!==f&&Nj(b,c,f)}e=e.next}while(e!==d)}}function Rj(a,b){b=b.updateQueue;b=null!==b?b.lastEffect:null;if(null!==b){var c=b=b.next;do{if((c.tag&a)===a){var d=c.create;c.destroy=d()}c=c.next}while(c!==b)}}function Sj(a){var b=a.ref;if(null!==b){var c=a.stateNode;switch(a.tag){case 5:a=c;break;default:a=c}\"function\"===typeof b?b(a):b.current=a}}\nfunction Tj(a){var b=a.alternate;null!==b&&(a.alternate=null,Tj(b));a.child=null;a.deletions=null;a.sibling=null;5===a.tag&&(b=a.stateNode,null!==b&&(delete b[Of],delete b[Pf],delete b[of],delete b[Qf],delete b[Rf]));a.stateNode=null;a.return=null;a.dependencies=null;a.memoizedProps=null;a.memoizedState=null;a.pendingProps=null;a.stateNode=null;a.updateQueue=null}function Uj(a){return 5===a.tag||3===a.tag||4===a.tag}\nfunction Vj(a){a:for(;;){for(;null===a.sibling;){if(null===a.return||Uj(a.return))return null;a=a.return}a.sibling.return=a.return;for(a=a.sibling;5!==a.tag&&6!==a.tag&&18!==a.tag;){if(a.flags&2)continue a;if(null===a.child||4===a.tag)continue a;else a.child.return=a,a=a.child}if(!(a.flags&2))return a.stateNode}}\nfunction Wj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?8===c.nodeType?c.parentNode.insertBefore(a,b):c.insertBefore(a,b):(8===c.nodeType?(b=c.parentNode,b.insertBefore(a,c)):(b=c,b.appendChild(a)),c=c._reactRootContainer,null!==c&&void 0!==c||null!==b.onclick||(b.onclick=Bf));else if(4!==d&&(a=a.child,null!==a))for(Wj(a,b,c),a=a.sibling;null!==a;)Wj(a,b,c),a=a.sibling}\nfunction Xj(a,b,c){var d=a.tag;if(5===d||6===d)a=a.stateNode,b?c.insertBefore(a,b):c.appendChild(a);else if(4!==d&&(a=a.child,null!==a))for(Xj(a,b,c),a=a.sibling;null!==a;)Xj(a,b,c),a=a.sibling}var X=null,Yj=!1;function Zj(a,b,c){for(c=c.child;null!==c;)ak(a,b,c),c=c.sibling}\nfunction ak(a,b,c){if(lc&&\"function\"===typeof lc.onCommitFiberUnmount)try{lc.onCommitFiberUnmount(kc,c)}catch(h){}switch(c.tag){case 5:U||Mj(c,b);case 6:var d=X,e=Yj;X=null;Zj(a,b,c);X=d;Yj=e;null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?a.parentNode.removeChild(c):a.removeChild(c)):X.removeChild(c.stateNode));break;case 18:null!==X&&(Yj?(a=X,c=c.stateNode,8===a.nodeType?Kf(a.parentNode,c):1===a.nodeType&&Kf(a,c),bd(a)):Kf(X,c.stateNode));break;case 4:d=X;e=Yj;X=c.stateNode.containerInfo;Yj=!0;\nZj(a,b,c);X=d;Yj=e;break;case 0:case 11:case 14:case 15:if(!U&&(d=c.updateQueue,null!==d&&(d=d.lastEffect,null!==d))){e=d=d.next;do{var f=e,g=f.destroy;f=f.tag;void 0!==g&&(0!==(f&2)?Nj(c,b,g):0!==(f&4)&&Nj(c,b,g));e=e.next}while(e!==d)}Zj(a,b,c);break;case 1:if(!U&&(Mj(c,b),d=c.stateNode,\"function\"===typeof d.componentWillUnmount))try{d.props=c.memoizedProps,d.state=c.memoizedState,d.componentWillUnmount()}catch(h){W(c,b,h)}Zj(a,b,c);break;case 21:Zj(a,b,c);break;case 22:c.mode&1?(U=(d=U)||null!==\nc.memoizedState,Zj(a,b,c),U=d):Zj(a,b,c);break;default:Zj(a,b,c)}}function bk(a){var b=a.updateQueue;if(null!==b){a.updateQueue=null;var c=a.stateNode;null===c&&(c=a.stateNode=new Lj);b.forEach(function(b){var d=ck.bind(null,a,b);c.has(b)||(c.add(b),b.then(d,d))})}}\nfunction dk(a,b){var c=b.deletions;if(null!==c)for(var d=0;d<c.length;d++){var e=c[d];try{var f=a,g=b,h=g;a:for(;null!==h;){switch(h.tag){case 5:X=h.stateNode;Yj=!1;break a;case 3:X=h.stateNode.containerInfo;Yj=!0;break a;case 4:X=h.stateNode.containerInfo;Yj=!0;break a}h=h.return}if(null===X)throw Error(p(160));ak(f,g,e);X=null;Yj=!1;var k=e.alternate;null!==k&&(k.return=null);e.return=null}catch(l){W(e,b,l)}}if(b.subtreeFlags&12854)for(b=b.child;null!==b;)ek(b,a),b=b.sibling}\nfunction ek(a,b){var c=a.alternate,d=a.flags;switch(a.tag){case 0:case 11:case 14:case 15:dk(b,a);fk(a);if(d&4){try{Qj(3,a,a.return),Rj(3,a)}catch(t){W(a,a.return,t)}try{Qj(5,a,a.return)}catch(t){W(a,a.return,t)}}break;case 1:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);break;case 5:dk(b,a);fk(a);d&512&&null!==c&&Mj(c,c.return);if(a.flags&32){var e=a.stateNode;try{ob(e,\"\")}catch(t){W(a,a.return,t)}}if(d&4&&(e=a.stateNode,null!=e)){var f=a.memoizedProps,g=null!==c?c.memoizedProps:f,h=a.type,k=a.updateQueue;\na.updateQueue=null;if(null!==k)try{\"input\"===h&&\"radio\"===f.type&&null!=f.name&&ab(e,f);vb(h,g);var l=vb(h,f);for(g=0;g<k.length;g+=2){var m=k[g],q=k[g+1];\"style\"===m?sb(e,q):\"dangerouslySetInnerHTML\"===m?nb(e,q):\"children\"===m?ob(e,q):ta(e,m,q,l)}switch(h){case \"input\":bb(e,f);break;case \"textarea\":ib(e,f);break;case \"select\":var r=e._wrapperState.wasMultiple;e._wrapperState.wasMultiple=!!f.multiple;var y=f.value;null!=y?fb(e,!!f.multiple,y,!1):r!==!!f.multiple&&(null!=f.defaultValue?fb(e,!!f.multiple,\nf.defaultValue,!0):fb(e,!!f.multiple,f.multiple?[]:\"\",!1))}e[Pf]=f}catch(t){W(a,a.return,t)}}break;case 6:dk(b,a);fk(a);if(d&4){if(null===a.stateNode)throw Error(p(162));e=a.stateNode;f=a.memoizedProps;try{e.nodeValue=f}catch(t){W(a,a.return,t)}}break;case 3:dk(b,a);fk(a);if(d&4&&null!==c&&c.memoizedState.isDehydrated)try{bd(b.containerInfo)}catch(t){W(a,a.return,t)}break;case 4:dk(b,a);fk(a);break;case 13:dk(b,a);fk(a);e=a.child;e.flags&8192&&(f=null!==e.memoizedState,e.stateNode.isHidden=f,!f||\nnull!==e.alternate&&null!==e.alternate.memoizedState||(gk=B()));d&4&&bk(a);break;case 22:m=null!==c&&null!==c.memoizedState;a.mode&1?(U=(l=U)||m,dk(b,a),U=l):dk(b,a);fk(a);if(d&8192){l=null!==a.memoizedState;if((a.stateNode.isHidden=l)&&!m&&0!==(a.mode&1))for(V=a,m=a.child;null!==m;){for(q=V=m;null!==V;){r=V;y=r.child;switch(r.tag){case 0:case 11:case 14:case 15:Qj(4,r,r.return);break;case 1:Mj(r,r.return);var n=r.stateNode;if(\"function\"===typeof n.componentWillUnmount){d=r;c=r.return;try{b=d,n.props=\nb.memoizedProps,n.state=b.memoizedState,n.componentWillUnmount()}catch(t){W(d,c,t)}}break;case 5:Mj(r,r.return);break;case 22:if(null!==r.memoizedState){hk(q);continue}}null!==y?(y.return=r,V=y):hk(q)}m=m.sibling}a:for(m=null,q=a;;){if(5===q.tag){if(null===m){m=q;try{e=q.stateNode,l?(f=e.style,\"function\"===typeof f.setProperty?f.setProperty(\"display\",\"none\",\"important\"):f.display=\"none\"):(h=q.stateNode,k=q.memoizedProps.style,g=void 0!==k&&null!==k&&k.hasOwnProperty(\"display\")?k.display:null,h.style.display=\nrb(\"display\",g))}catch(t){W(a,a.return,t)}}}else if(6===q.tag){if(null===m)try{q.stateNode.nodeValue=l?\"\":q.memoizedProps}catch(t){W(a,a.return,t)}}else if((22!==q.tag&&23!==q.tag||null===q.memoizedState||q===a)&&null!==q.child){q.child.return=q;q=q.child;continue}if(q===a)break a;for(;null===q.sibling;){if(null===q.return||q.return===a)break a;m===q&&(m=null);q=q.return}m===q&&(m=null);q.sibling.return=q.return;q=q.sibling}}break;case 19:dk(b,a);fk(a);d&4&&bk(a);break;case 21:break;default:dk(b,\na),fk(a)}}function fk(a){var b=a.flags;if(b&2){try{a:{for(var c=a.return;null!==c;){if(Uj(c)){var d=c;break a}c=c.return}throw Error(p(160));}switch(d.tag){case 5:var e=d.stateNode;d.flags&32&&(ob(e,\"\"),d.flags&=-33);var f=Vj(a);Xj(a,f,e);break;case 3:case 4:var g=d.stateNode.containerInfo,h=Vj(a);Wj(a,h,g);break;default:throw Error(p(161));}}catch(k){W(a,a.return,k)}a.flags&=-3}b&4096&&(a.flags&=-4097)}function ik(a,b,c){V=a;jk(a,b,c)}\nfunction jk(a,b,c){for(var d=0!==(a.mode&1);null!==V;){var e=V,f=e.child;if(22===e.tag&&d){var g=null!==e.memoizedState||Kj;if(!g){var h=e.alternate,k=null!==h&&null!==h.memoizedState||U;h=Kj;var l=U;Kj=g;if((U=k)&&!l)for(V=e;null!==V;)g=V,k=g.child,22===g.tag&&null!==g.memoizedState?kk(e):null!==k?(k.return=g,V=k):kk(e);for(;null!==f;)V=f,jk(f,b,c),f=f.sibling;V=e;Kj=h;U=l}lk(a,b,c)}else 0!==(e.subtreeFlags&8772)&&null!==f?(f.return=e,V=f):lk(a,b,c)}}\nfunction lk(a){for(;null!==V;){var b=V;if(0!==(b.flags&8772)){var c=b.alternate;try{if(0!==(b.flags&8772))switch(b.tag){case 0:case 11:case 15:U||Rj(5,b);break;case 1:var d=b.stateNode;if(b.flags&4&&!U)if(null===c)d.componentDidMount();else{var e=b.elementType===b.type?c.memoizedProps:Lg(b.type,c.memoizedProps);d.componentDidUpdate(e,c.memoizedState,d.__reactInternalSnapshotBeforeUpdate)}var f=b.updateQueue;null!==f&&ih(b,f,d);break;case 3:var g=b.updateQueue;if(null!==g){c=null;if(null!==b.child)switch(b.child.tag){case 5:c=\nb.child.stateNode;break;case 1:c=b.child.stateNode}ih(b,g,c)}break;case 5:var h=b.stateNode;if(null===c&&b.flags&4){c=h;var k=b.memoizedProps;switch(b.type){case \"button\":case \"input\":case \"select\":case \"textarea\":k.autoFocus&&c.focus();break;case \"img\":k.src&&(c.src=k.src)}}break;case 6:break;case 4:break;case 12:break;case 13:if(null===b.memoizedState){var l=b.alternate;if(null!==l){var m=l.memoizedState;if(null!==m){var q=m.dehydrated;null!==q&&bd(q)}}}break;case 19:case 17:case 21:case 22:case 23:case 25:break;\ndefault:throw Error(p(163));}U||b.flags&512&&Sj(b)}catch(r){W(b,b.return,r)}}if(b===a){V=null;break}c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}function hk(a){for(;null!==V;){var b=V;if(b===a){V=null;break}var c=b.sibling;if(null!==c){c.return=b.return;V=c;break}V=b.return}}\nfunction kk(a){for(;null!==V;){var b=V;try{switch(b.tag){case 0:case 11:case 15:var c=b.return;try{Rj(4,b)}catch(k){W(b,c,k)}break;case 1:var d=b.stateNode;if(\"function\"===typeof d.componentDidMount){var e=b.return;try{d.componentDidMount()}catch(k){W(b,e,k)}}var f=b.return;try{Sj(b)}catch(k){W(b,f,k)}break;case 5:var g=b.return;try{Sj(b)}catch(k){W(b,g,k)}}}catch(k){W(b,b.return,k)}if(b===a){V=null;break}var h=b.sibling;if(null!==h){h.return=b.return;V=h;break}V=b.return}}\nvar mk=Math.ceil,nk=ua.ReactCurrentDispatcher,ok=ua.ReactCurrentOwner,pk=ua.ReactCurrentBatchConfig,K=0,R=null,Y=null,Z=0,gj=0,fj=Uf(0),T=0,qk=null,hh=0,rk=0,sk=0,tk=null,uk=null,gk=0,Hj=Infinity,vk=null,Pi=!1,Qi=null,Si=null,wk=!1,xk=null,yk=0,zk=0,Ak=null,Bk=-1,Ck=0;function L(){return 0!==(K&6)?B():-1!==Bk?Bk:Bk=B()}\nfunction lh(a){if(0===(a.mode&1))return 1;if(0!==(K&2)&&0!==Z)return Z&-Z;if(null!==Kg.transition)return 0===Ck&&(Ck=yc()),Ck;a=C;if(0!==a)return a;a=window.event;a=void 0===a?16:jd(a.type);return a}function mh(a,b,c,d){if(50<zk)throw zk=0,Ak=null,Error(p(185));Ac(a,c,d);if(0===(K&2)||a!==R)a===R&&(0===(K&2)&&(rk|=c),4===T&&Dk(a,Z)),Ek(a,d),1===c&&0===K&&0===(b.mode&1)&&(Hj=B()+500,fg&&jg())}\nfunction Ek(a,b){var c=a.callbackNode;wc(a,b);var d=uc(a,a===R?Z:0);if(0===d)null!==c&&bc(c),a.callbackNode=null,a.callbackPriority=0;else if(b=d&-d,a.callbackPriority!==b){null!=c&&bc(c);if(1===b)0===a.tag?ig(Fk.bind(null,a)):hg(Fk.bind(null,a)),Jf(function(){0===(K&6)&&jg()}),c=null;else{switch(Dc(d)){case 1:c=fc;break;case 4:c=gc;break;case 16:c=hc;break;case 536870912:c=jc;break;default:c=hc}c=Gk(c,Hk.bind(null,a))}a.callbackPriority=b;a.callbackNode=c}}\nfunction Hk(a,b){Bk=-1;Ck=0;if(0!==(K&6))throw Error(p(327));var c=a.callbackNode;if(Ik()&&a.callbackNode!==c)return null;var d=uc(a,a===R?Z:0);if(0===d)return null;if(0!==(d&30)||0!==(d&a.expiredLanes)||b)b=Jk(a,d);else{b=d;var e=K;K|=2;var f=Kk();if(R!==a||Z!==b)vk=null,Hj=B()+500,Lk(a,b);do try{Mk();break}catch(h){Nk(a,h)}while(1);Qg();nk.current=f;K=e;null!==Y?b=0:(R=null,Z=0,b=T)}if(0!==b){2===b&&(e=xc(a),0!==e&&(d=e,b=Ok(a,e)));if(1===b)throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;if(6===b)Dk(a,d);\nelse{e=a.current.alternate;if(0===(d&30)&&!Pk(e)&&(b=Jk(a,d),2===b&&(f=xc(a),0!==f&&(d=f,b=Ok(a,f))),1===b))throw c=qk,Lk(a,0),Dk(a,d),Ek(a,B()),c;a.finishedWork=e;a.finishedLanes=d;switch(b){case 0:case 1:throw Error(p(345));case 2:Qk(a,uk,vk);break;case 3:Dk(a,d);if((d&130023424)===d&&(b=gk+500-B(),10<b)){if(0!==uc(a,0))break;e=a.suspendedLanes;if((e&d)!==d){L();a.pingedLanes|=a.suspendedLanes&e;break}a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),b);break}Qk(a,uk,vk);break;case 4:Dk(a,d);if((d&4194240)===\nd)break;b=a.eventTimes;for(e=-1;0<d;){var g=31-oc(d);f=1<<g;g=b[g];g>e&&(e=g);d&=~f}d=e;d=B()-d;d=(120>d?120:480>d?480:1080>d?1080:1920>d?1920:3E3>d?3E3:4320>d?4320:1960*mk(d/1960))-d;if(10<d){a.timeoutHandle=Ff(Qk.bind(null,a,uk,vk),d);break}Qk(a,uk,vk);break;case 5:Qk(a,uk,vk);break;default:throw Error(p(329));}}}Ek(a,B());return a.callbackNode===c?Hk.bind(null,a):null}\nfunction Ok(a,b){var c=tk;a.current.memoizedState.isDehydrated&&(Lk(a,b).flags|=256);a=Jk(a,b);2!==a&&(b=uk,uk=c,null!==b&&Gj(b));return a}function Gj(a){null===uk?uk=a:uk.push.apply(uk,a)}\nfunction Pk(a){for(var b=a;;){if(b.flags&16384){var c=b.updateQueue;if(null!==c&&(c=c.stores,null!==c))for(var d=0;d<c.length;d++){var e=c[d],f=e.getSnapshot;e=e.value;try{if(!He(f(),e))return!1}catch(g){return!1}}}c=b.child;if(b.subtreeFlags&16384&&null!==c)c.return=b,b=c;else{if(b===a)break;for(;null===b.sibling;){if(null===b.return||b.return===a)return!0;b=b.return}b.sibling.return=b.return;b=b.sibling}}return!0}\nfunction Dk(a,b){b&=~sk;b&=~rk;a.suspendedLanes|=b;a.pingedLanes&=~b;for(a=a.expirationTimes;0<b;){var c=31-oc(b),d=1<<c;a[c]=-1;b&=~d}}function Fk(a){if(0!==(K&6))throw Error(p(327));Ik();var b=uc(a,0);if(0===(b&1))return Ek(a,B()),null;var c=Jk(a,b);if(0!==a.tag&&2===c){var d=xc(a);0!==d&&(b=d,c=Ok(a,d))}if(1===c)throw c=qk,Lk(a,0),Dk(a,b),Ek(a,B()),c;if(6===c)throw Error(p(345));a.finishedWork=a.current.alternate;a.finishedLanes=b;Qk(a,uk,vk);Ek(a,B());return null}\nfunction Rk(a,b){var c=K;K|=1;try{return a(b)}finally{K=c,0===K&&(Hj=B()+500,fg&&jg())}}function Sk(a){null!==xk&&0===xk.tag&&0===(K&6)&&Ik();var b=K;K|=1;var c=pk.transition,d=C;try{if(pk.transition=null,C=1,a)return a()}finally{C=d,pk.transition=c,K=b,0===(K&6)&&jg()}}function Ij(){gj=fj.current;E(fj)}\nfunction Lk(a,b){a.finishedWork=null;a.finishedLanes=0;var c=a.timeoutHandle;-1!==c&&(a.timeoutHandle=-1,Gf(c));if(null!==Y)for(c=Y.return;null!==c;){var d=c;wg(d);switch(d.tag){case 1:d=d.type.childContextTypes;null!==d&&void 0!==d&&$f();break;case 3:Jh();E(Wf);E(H);Oh();break;case 5:Lh(d);break;case 4:Jh();break;case 13:E(M);break;case 19:E(M);break;case 10:Rg(d.type._context);break;case 22:case 23:Ij()}c=c.return}R=a;Y=a=wh(a.current,null);Z=gj=b;T=0;qk=null;sk=rk=hh=0;uk=tk=null;if(null!==Wg){for(b=\n0;b<Wg.length;b++)if(c=Wg[b],d=c.interleaved,null!==d){c.interleaved=null;var e=d.next,f=c.pending;if(null!==f){var g=f.next;f.next=e;d.next=g}c.pending=d}Wg=null}return a}\nfunction Nk(a,b){do{var c=Y;try{Qg();Ph.current=ai;if(Sh){for(var d=N.memoizedState;null!==d;){var e=d.queue;null!==e&&(e.pending=null);d=d.next}Sh=!1}Rh=0;P=O=N=null;Th=!1;Uh=0;ok.current=null;if(null===c||null===c.return){T=1;qk=b;Y=null;break}a:{var f=a,g=c.return,h=c,k=b;b=Z;h.flags|=32768;if(null!==k&&\"object\"===typeof k&&\"function\"===typeof k.then){var l=k,m=h,q=m.tag;if(0===(m.mode&1)&&(0===q||11===q||15===q)){var r=m.alternate;r?(m.updateQueue=r.updateQueue,m.memoizedState=r.memoizedState,\nm.lanes=r.lanes):(m.updateQueue=null,m.memoizedState=null)}var y=Vi(g);if(null!==y){y.flags&=-257;Wi(y,g,h,f,b);y.mode&1&&Ti(f,l,b);b=y;k=l;var n=b.updateQueue;if(null===n){var t=new Set;t.add(k);b.updateQueue=t}else n.add(k);break a}else{if(0===(b&1)){Ti(f,l,b);uj();break a}k=Error(p(426))}}else if(I&&h.mode&1){var J=Vi(g);if(null!==J){0===(J.flags&65536)&&(J.flags|=256);Wi(J,g,h,f,b);Jg(Ki(k,h));break a}}f=k=Ki(k,h);4!==T&&(T=2);null===tk?tk=[f]:tk.push(f);f=g;do{switch(f.tag){case 3:f.flags|=65536;\nb&=-b;f.lanes|=b;var x=Oi(f,k,b);fh(f,x);break a;case 1:h=k;var w=f.type,u=f.stateNode;if(0===(f.flags&128)&&(\"function\"===typeof w.getDerivedStateFromError||null!==u&&\"function\"===typeof u.componentDidCatch&&(null===Si||!Si.has(u)))){f.flags|=65536;b&=-b;f.lanes|=b;var F=Ri(f,h,b);fh(f,F);break a}}f=f.return}while(null!==f)}Tk(c)}catch(na){b=na;Y===c&&null!==c&&(Y=c=c.return);continue}break}while(1)}function Kk(){var a=nk.current;nk.current=ai;return null===a?ai:a}\nfunction uj(){if(0===T||3===T||2===T)T=4;null===R||0===(hh&268435455)&&0===(rk&268435455)||Dk(R,Z)}function Jk(a,b){var c=K;K|=2;var d=Kk();if(R!==a||Z!==b)vk=null,Lk(a,b);do try{Uk();break}catch(e){Nk(a,e)}while(1);Qg();K=c;nk.current=d;if(null!==Y)throw Error(p(261));R=null;Z=0;return T}function Uk(){for(;null!==Y;)Vk(Y)}function Mk(){for(;null!==Y&&!cc();)Vk(Y)}function Vk(a){var b=Wk(a.alternate,a,gj);a.memoizedProps=a.pendingProps;null===b?Tk(a):Y=b;ok.current=null}\nfunction Tk(a){var b=a;do{var c=b.alternate;a=b.return;if(0===(b.flags&32768)){if(c=Fj(c,b,gj),null!==c){Y=c;return}}else{c=Jj(c,b);if(null!==c){c.flags&=32767;Y=c;return}if(null!==a)a.flags|=32768,a.subtreeFlags=0,a.deletions=null;else{T=6;Y=null;return}}b=b.sibling;if(null!==b){Y=b;return}Y=b=a}while(null!==b);0===T&&(T=5)}function Qk(a,b,c){var d=C,e=pk.transition;try{pk.transition=null,C=1,Xk(a,b,c,d)}finally{pk.transition=e,C=d}return null}\nfunction Xk(a,b,c,d){do Ik();while(null!==xk);if(0!==(K&6))throw Error(p(327));c=a.finishedWork;var e=a.finishedLanes;if(null===c)return null;a.finishedWork=null;a.finishedLanes=0;if(c===a.current)throw Error(p(177));a.callbackNode=null;a.callbackPriority=0;var f=c.lanes|c.childLanes;Bc(a,f);a===R&&(Y=R=null,Z=0);0===(c.subtreeFlags&2064)&&0===(c.flags&2064)||wk||(wk=!0,Gk(hc,function(){Ik();return null}));f=0!==(c.flags&15990);if(0!==(c.subtreeFlags&15990)||f){f=pk.transition;pk.transition=null;\nvar g=C;C=1;var h=K;K|=4;ok.current=null;Pj(a,c);ek(c,a);Oe(Df);dd=!!Cf;Df=Cf=null;a.current=c;ik(c,a,e);dc();K=h;C=g;pk.transition=f}else a.current=c;wk&&(wk=!1,xk=a,yk=e);f=a.pendingLanes;0===f&&(Si=null);mc(c.stateNode,d);Ek(a,B());if(null!==b)for(d=a.onRecoverableError,c=0;c<b.length;c++)e=b[c],d(e.value,{componentStack:e.stack,digest:e.digest});if(Pi)throw Pi=!1,a=Qi,Qi=null,a;0!==(yk&1)&&0!==a.tag&&Ik();f=a.pendingLanes;0!==(f&1)?a===Ak?zk++:(zk=0,Ak=a):zk=0;jg();return null}\nfunction Ik(){if(null!==xk){var a=Dc(yk),b=pk.transition,c=C;try{pk.transition=null;C=16>a?16:a;if(null===xk)var d=!1;else{a=xk;xk=null;yk=0;if(0!==(K&6))throw Error(p(331));var e=K;K|=4;for(V=a.current;null!==V;){var f=V,g=f.child;if(0!==(V.flags&16)){var h=f.deletions;if(null!==h){for(var k=0;k<h.length;k++){var l=h[k];for(V=l;null!==V;){var m=V;switch(m.tag){case 0:case 11:case 15:Qj(8,m,f)}var q=m.child;if(null!==q)q.return=m,V=q;else for(;null!==V;){m=V;var r=m.sibling,y=m.return;Tj(m);if(m===\nl){V=null;break}if(null!==r){r.return=y;V=r;break}V=y}}}var n=f.alternate;if(null!==n){var t=n.child;if(null!==t){n.child=null;do{var J=t.sibling;t.sibling=null;t=J}while(null!==t)}}V=f}}if(0!==(f.subtreeFlags&2064)&&null!==g)g.return=f,V=g;else b:for(;null!==V;){f=V;if(0!==(f.flags&2048))switch(f.tag){case 0:case 11:case 15:Qj(9,f,f.return)}var x=f.sibling;if(null!==x){x.return=f.return;V=x;break b}V=f.return}}var w=a.current;for(V=w;null!==V;){g=V;var u=g.child;if(0!==(g.subtreeFlags&2064)&&null!==\nu)u.return=g,V=u;else b:for(g=w;null!==V;){h=V;if(0!==(h.flags&2048))try{switch(h.tag){case 0:case 11:case 15:Rj(9,h)}}catch(na){W(h,h.return,na)}if(h===g){V=null;break b}var F=h.sibling;if(null!==F){F.return=h.return;V=F;break b}V=h.return}}K=e;jg();if(lc&&\"function\"===typeof lc.onPostCommitFiberRoot)try{lc.onPostCommitFiberRoot(kc,a)}catch(na){}d=!0}return d}finally{C=c,pk.transition=b}}return!1}function Yk(a,b,c){b=Ki(c,b);b=Oi(a,b,1);a=dh(a,b,1);b=L();null!==a&&(Ac(a,1,b),Ek(a,b))}\nfunction W(a,b,c){if(3===a.tag)Yk(a,a,c);else for(;null!==b;){if(3===b.tag){Yk(b,a,c);break}else if(1===b.tag){var d=b.stateNode;if(\"function\"===typeof b.type.getDerivedStateFromError||\"function\"===typeof d.componentDidCatch&&(null===Si||!Si.has(d))){a=Ki(c,a);a=Ri(b,a,1);b=dh(b,a,1);a=L();null!==b&&(Ac(b,1,a),Ek(b,a));break}}b=b.return}}\nfunction Ui(a,b,c){var d=a.pingCache;null!==d&&d.delete(b);b=L();a.pingedLanes|=a.suspendedLanes&c;R===a&&(Z&c)===c&&(4===T||3===T&&(Z&130023424)===Z&&500>B()-gk?Lk(a,0):sk|=c);Ek(a,b)}function Zk(a,b){0===b&&(0===(a.mode&1)?b=1:(b=sc,sc<<=1,0===(sc&130023424)&&(sc=4194304)));var c=L();a=Zg(a,b);null!==a&&(Ac(a,b,c),Ek(a,c))}function vj(a){var b=a.memoizedState,c=0;null!==b&&(c=b.retryLane);Zk(a,c)}\nfunction ck(a,b){var c=0;switch(a.tag){case 13:var d=a.stateNode;var e=a.memoizedState;null!==e&&(c=e.retryLane);break;case 19:d=a.stateNode;break;default:throw Error(p(314));}null!==d&&d.delete(b);Zk(a,c)}var Wk;\nWk=function(a,b,c){if(null!==a)if(a.memoizedProps!==b.pendingProps||Wf.current)Ug=!0;else{if(0===(a.lanes&c)&&0===(b.flags&128))return Ug=!1,zj(a,b,c);Ug=0!==(a.flags&131072)?!0:!1}else Ug=!1,I&&0!==(b.flags&1048576)&&ug(b,ng,b.index);b.lanes=0;switch(b.tag){case 2:var d=b.type;jj(a,b);a=b.pendingProps;var e=Yf(b,H.current);Tg(b,c);e=Xh(null,b,d,a,e,c);var f=bi();b.flags|=1;\"object\"===typeof e&&null!==e&&\"function\"===typeof e.render&&void 0===e.$$typeof?(b.tag=1,b.memoizedState=null,b.updateQueue=\nnull,Zf(d)?(f=!0,cg(b)):f=!1,b.memoizedState=null!==e.state&&void 0!==e.state?e.state:null,ah(b),e.updater=nh,b.stateNode=e,e._reactInternals=b,rh(b,d,a,c),b=kj(null,b,d,!0,f,c)):(b.tag=0,I&&f&&vg(b),Yi(null,b,e,c),b=b.child);return b;case 16:d=b.elementType;a:{jj(a,b);a=b.pendingProps;e=d._init;d=e(d._payload);b.type=d;e=b.tag=$k(d);a=Lg(d,a);switch(e){case 0:b=dj(null,b,d,a,c);break a;case 1:b=ij(null,b,d,a,c);break a;case 11:b=Zi(null,b,d,a,c);break a;case 14:b=aj(null,b,d,Lg(d.type,a),c);break a}throw Error(p(306,\nd,\"\"));}return b;case 0:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),dj(a,b,d,e,c);case 1:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),ij(a,b,d,e,c);case 3:a:{lj(b);if(null===a)throw Error(p(387));d=b.pendingProps;f=b.memoizedState;e=f.element;bh(a,b);gh(b,d,null,c);var g=b.memoizedState;d=g.element;if(f.isDehydrated)if(f={element:d,isDehydrated:!1,cache:g.cache,pendingSuspenseBoundaries:g.pendingSuspenseBoundaries,transitions:g.transitions},b.updateQueue.baseState=\nf,b.memoizedState=f,b.flags&256){e=Ki(Error(p(423)),b);b=mj(a,b,d,c,e);break a}else if(d!==e){e=Ki(Error(p(424)),b);b=mj(a,b,d,c,e);break a}else for(yg=Lf(b.stateNode.containerInfo.firstChild),xg=b,I=!0,zg=null,c=Ch(b,null,d,c),b.child=c;c;)c.flags=c.flags&-3|4096,c=c.sibling;else{Ig();if(d===e){b=$i(a,b,c);break a}Yi(a,b,d,c)}b=b.child}return b;case 5:return Kh(b),null===a&&Eg(b),d=b.type,e=b.pendingProps,f=null!==a?a.memoizedProps:null,g=e.children,Ef(d,e)?g=null:null!==f&&Ef(d,f)&&(b.flags|=32),\nhj(a,b),Yi(a,b,g,c),b.child;case 6:return null===a&&Eg(b),null;case 13:return pj(a,b,c);case 4:return Ih(b,b.stateNode.containerInfo),d=b.pendingProps,null===a?b.child=Bh(b,null,d,c):Yi(a,b,d,c),b.child;case 11:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),Zi(a,b,d,e,c);case 7:return Yi(a,b,b.pendingProps,c),b.child;case 8:return Yi(a,b,b.pendingProps.children,c),b.child;case 12:return Yi(a,b,b.pendingProps.children,c),b.child;case 10:a:{d=b.type._context;e=b.pendingProps;f=b.memoizedProps;\ng=e.value;G(Mg,d._currentValue);d._currentValue=g;if(null!==f)if(He(f.value,g)){if(f.children===e.children&&!Wf.current){b=$i(a,b,c);break a}}else for(f=b.child,null!==f&&(f.return=b);null!==f;){var h=f.dependencies;if(null!==h){g=f.child;for(var k=h.firstContext;null!==k;){if(k.context===d){if(1===f.tag){k=ch(-1,c&-c);k.tag=2;var l=f.updateQueue;if(null!==l){l=l.shared;var m=l.pending;null===m?k.next=k:(k.next=m.next,m.next=k);l.pending=k}}f.lanes|=c;k=f.alternate;null!==k&&(k.lanes|=c);Sg(f.return,\nc,b);h.lanes|=c;break}k=k.next}}else if(10===f.tag)g=f.type===b.type?null:f.child;else if(18===f.tag){g=f.return;if(null===g)throw Error(p(341));g.lanes|=c;h=g.alternate;null!==h&&(h.lanes|=c);Sg(g,c,b);g=f.sibling}else g=f.child;if(null!==g)g.return=f;else for(g=f;null!==g;){if(g===b){g=null;break}f=g.sibling;if(null!==f){f.return=g.return;g=f;break}g=g.return}f=g}Yi(a,b,e.children,c);b=b.child}return b;case 9:return e=b.type,d=b.pendingProps.children,Tg(b,c),e=Vg(e),d=d(e),b.flags|=1,Yi(a,b,d,c),\nb.child;case 14:return d=b.type,e=Lg(d,b.pendingProps),e=Lg(d.type,e),aj(a,b,d,e,c);case 15:return cj(a,b,b.type,b.pendingProps,c);case 17:return d=b.type,e=b.pendingProps,e=b.elementType===d?e:Lg(d,e),jj(a,b),b.tag=1,Zf(d)?(a=!0,cg(b)):a=!1,Tg(b,c),ph(b,d,e),rh(b,d,e,c),kj(null,b,d,!0,a,c);case 19:return yj(a,b,c);case 22:return ej(a,b,c)}throw Error(p(156,b.tag));};function Gk(a,b){return ac(a,b)}\nfunction al(a,b,c,d){this.tag=a;this.key=c;this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null;this.index=0;this.ref=null;this.pendingProps=b;this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null;this.mode=d;this.subtreeFlags=this.flags=0;this.deletions=null;this.childLanes=this.lanes=0;this.alternate=null}function Bg(a,b,c,d){return new al(a,b,c,d)}function bj(a){a=a.prototype;return!(!a||!a.isReactComponent)}\nfunction $k(a){if(\"function\"===typeof a)return bj(a)?1:0;if(void 0!==a&&null!==a){a=a.$$typeof;if(a===Da)return 11;if(a===Ga)return 14}return 2}\nfunction wh(a,b){var c=a.alternate;null===c?(c=Bg(a.tag,b,a.key,a.mode),c.elementType=a.elementType,c.type=a.type,c.stateNode=a.stateNode,c.alternate=a,a.alternate=c):(c.pendingProps=b,c.type=a.type,c.flags=0,c.subtreeFlags=0,c.deletions=null);c.flags=a.flags&14680064;c.childLanes=a.childLanes;c.lanes=a.lanes;c.child=a.child;c.memoizedProps=a.memoizedProps;c.memoizedState=a.memoizedState;c.updateQueue=a.updateQueue;b=a.dependencies;c.dependencies=null===b?null:{lanes:b.lanes,firstContext:b.firstContext};\nc.sibling=a.sibling;c.index=a.index;c.ref=a.ref;return c}\nfunction yh(a,b,c,d,e,f){var g=2;d=a;if(\"function\"===typeof a)bj(a)&&(g=1);else if(\"string\"===typeof a)g=5;else a:switch(a){case ya:return Ah(c.children,e,f,b);case za:g=8;e|=8;break;case Aa:return a=Bg(12,c,b,e|2),a.elementType=Aa,a.lanes=f,a;case Ea:return a=Bg(13,c,b,e),a.elementType=Ea,a.lanes=f,a;case Fa:return a=Bg(19,c,b,e),a.elementType=Fa,a.lanes=f,a;case Ia:return qj(c,e,f,b);default:if(\"object\"===typeof a&&null!==a)switch(a.$$typeof){case Ba:g=10;break a;case Ca:g=9;break a;case Da:g=11;\nbreak a;case Ga:g=14;break a;case Ha:g=16;d=null;break a}throw Error(p(130,null==a?a:typeof a,\"\"));}b=Bg(g,c,b,e);b.elementType=a;b.type=d;b.lanes=f;return b}function Ah(a,b,c,d){a=Bg(7,a,d,b);a.lanes=c;return a}function qj(a,b,c,d){a=Bg(22,a,d,b);a.elementType=Ia;a.lanes=c;a.stateNode={isHidden:!1};return a}function xh(a,b,c){a=Bg(6,a,null,b);a.lanes=c;return a}\nfunction zh(a,b,c){b=Bg(4,null!==a.children?a.children:[],a.key,b);b.lanes=c;b.stateNode={containerInfo:a.containerInfo,pendingChildren:null,implementation:a.implementation};return b}\nfunction bl(a,b,c,d,e){this.tag=b;this.containerInfo=a;this.finishedWork=this.pingCache=this.current=this.pendingChildren=null;this.timeoutHandle=-1;this.callbackNode=this.pendingContext=this.context=null;this.callbackPriority=0;this.eventTimes=zc(0);this.expirationTimes=zc(-1);this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0;this.entanglements=zc(0);this.identifierPrefix=d;this.onRecoverableError=e;this.mutableSourceEagerHydrationData=\nnull}function cl(a,b,c,d,e,f,g,h,k){a=new bl(a,b,c,h,k);1===b?(b=1,!0===f&&(b|=8)):b=0;f=Bg(3,null,null,b);a.current=f;f.stateNode=a;f.memoizedState={element:d,isDehydrated:c,cache:null,transitions:null,pendingSuspenseBoundaries:null};ah(f);return a}function dl(a,b,c){var d=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:wa,key:null==d?null:\"\"+d,children:a,containerInfo:b,implementation:c}}\nfunction el(a){if(!a)return Vf;a=a._reactInternals;a:{if(Vb(a)!==a||1!==a.tag)throw Error(p(170));var b=a;do{switch(b.tag){case 3:b=b.stateNode.context;break a;case 1:if(Zf(b.type)){b=b.stateNode.__reactInternalMemoizedMergedChildContext;break a}}b=b.return}while(null!==b);throw Error(p(171));}if(1===a.tag){var c=a.type;if(Zf(c))return bg(a,c,b)}return b}\nfunction fl(a,b,c,d,e,f,g,h,k){a=cl(c,d,!0,a,e,f,g,h,k);a.context=el(null);c=a.current;d=L();e=lh(c);f=ch(d,e);f.callback=void 0!==b&&null!==b?b:null;dh(c,f,e);a.current.lanes=e;Ac(a,e,d);Ek(a,d);return a}function gl(a,b,c,d){var e=b.current,f=L(),g=lh(e);c=el(c);null===b.context?b.context=c:b.pendingContext=c;b=ch(f,g);b.payload={element:a};d=void 0===d?null:d;null!==d&&(b.callback=d);a=dh(e,b,g);null!==a&&(mh(a,e,g,f),eh(a,e,g));return g}\nfunction hl(a){a=a.current;if(!a.child)return null;switch(a.child.tag){case 5:return a.child.stateNode;default:return a.child.stateNode}}function il(a,b){a=a.memoizedState;if(null!==a&&null!==a.dehydrated){var c=a.retryLane;a.retryLane=0!==c&&c<b?c:b}}function jl(a,b){il(a,b);(a=a.alternate)&&il(a,b)}function kl(){return null}var ll=\"function\"===typeof reportError?reportError:function(a){console.error(a)};function ml(a){this._internalRoot=a}\nnl.prototype.render=ml.prototype.render=function(a){var b=this._internalRoot;if(null===b)throw Error(p(409));gl(a,b,null,null)};nl.prototype.unmount=ml.prototype.unmount=function(){var a=this._internalRoot;if(null!==a){this._internalRoot=null;var b=a.containerInfo;Sk(function(){gl(null,a,null,null)});b[uf]=null}};function nl(a){this._internalRoot=a}\nnl.prototype.unstable_scheduleHydration=function(a){if(a){var b=Hc();a={blockedOn:null,target:a,priority:b};for(var c=0;c<Qc.length&&0!==b&&b<Qc[c].priority;c++);Qc.splice(c,0,a);0===c&&Vc(a)}};function ol(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType)}function pl(a){return!(!a||1!==a.nodeType&&9!==a.nodeType&&11!==a.nodeType&&(8!==a.nodeType||\" react-mount-point-unstable \"!==a.nodeValue))}function ql(){}\nfunction rl(a,b,c,d,e){if(e){if(\"function\"===typeof d){var f=d;d=function(){var a=hl(g);f.call(a)}}var g=fl(b,d,a,0,null,!1,!1,\"\",ql);a._reactRootContainer=g;a[uf]=g.current;sf(8===a.nodeType?a.parentNode:a);Sk();return g}for(;e=a.lastChild;)a.removeChild(e);if(\"function\"===typeof d){var h=d;d=function(){var a=hl(k);h.call(a)}}var k=cl(a,0,!1,null,null,!1,!1,\"\",ql);a._reactRootContainer=k;a[uf]=k.current;sf(8===a.nodeType?a.parentNode:a);Sk(function(){gl(b,k,c,d)});return k}\nfunction sl(a,b,c,d,e){var f=c._reactRootContainer;if(f){var g=f;if(\"function\"===typeof e){var h=e;e=function(){var a=hl(g);h.call(a)}}gl(b,g,a,e)}else g=rl(c,b,a,e,d);return hl(g)}Ec=function(a){switch(a.tag){case 3:var b=a.stateNode;if(b.current.memoizedState.isDehydrated){var c=tc(b.pendingLanes);0!==c&&(Cc(b,c|1),Ek(b,B()),0===(K&6)&&(Hj=B()+500,jg()))}break;case 13:Sk(function(){var b=Zg(a,1);if(null!==b){var c=L();mh(b,a,1,c)}}),jl(a,1)}};\nFc=function(a){if(13===a.tag){var b=Zg(a,134217728);if(null!==b){var c=L();mh(b,a,134217728,c)}jl(a,134217728)}};Gc=function(a){if(13===a.tag){var b=lh(a),c=Zg(a,b);if(null!==c){var d=L();mh(c,a,b,d)}jl(a,b)}};Hc=function(){return C};Ic=function(a,b){var c=C;try{return C=a,b()}finally{C=c}};\nyb=function(a,b,c){switch(b){case \"input\":bb(a,c);b=c.name;if(\"radio\"===c.type&&null!=b){for(c=a;c.parentNode;)c=c.parentNode;c=c.querySelectorAll(\"input[name=\"+JSON.stringify(\"\"+b)+'][type=\"radio\"]');for(b=0;b<c.length;b++){var d=c[b];if(d!==a&&d.form===a.form){var e=Db(d);if(!e)throw Error(p(90));Wa(d);bb(d,e)}}}break;case \"textarea\":ib(a,c);break;case \"select\":b=c.value,null!=b&&fb(a,!!c.multiple,b,!1)}};Gb=Rk;Hb=Sk;\nvar tl={usingClientEntryPoint:!1,Events:[Cb,ue,Db,Eb,Fb,Rk]},ul={findFiberByHostInstance:Wc,bundleType:0,version:\"18.2.0\",rendererPackageName:\"react-dom\"};\nvar vl={bundleType:ul.bundleType,version:ul.version,rendererPackageName:ul.rendererPackageName,rendererConfig:ul.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:ua.ReactCurrentDispatcher,findHostInstanceByFiber:function(a){a=Zb(a);return null===a?null:a.stateNode},findFiberByHostInstance:ul.findFiberByHostInstance||\nkl,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:\"18.2.0-next-9e3b772b8-20220608\"};if(\"undefined\"!==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var wl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!wl.isDisabled&&wl.supportsFiber)try{kc=wl.inject(vl),lc=wl}catch(a){}}exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=tl;\nexports.createPortal=function(a,b){var c=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!ol(b))throw Error(p(200));return dl(a,b,null,c)};exports.createRoot=function(a,b){if(!ol(a))throw Error(p(299));var c=!1,d=\"\",e=ll;null!==b&&void 0!==b&&(!0===b.unstable_strictMode&&(c=!0),void 0!==b.identifierPrefix&&(d=b.identifierPrefix),void 0!==b.onRecoverableError&&(e=b.onRecoverableError));b=cl(a,1,!1,null,null,c,!1,d,e);a[uf]=b.current;sf(8===a.nodeType?a.parentNode:a);return new ml(b)};\nexports.findDOMNode=function(a){if(null==a)return null;if(1===a.nodeType)return a;var b=a._reactInternals;if(void 0===b){if(\"function\"===typeof a.render)throw Error(p(188));a=Object.keys(a).join(\",\");throw Error(p(268,a));}a=Zb(b);a=null===a?null:a.stateNode;return a};exports.flushSync=function(a){return Sk(a)};exports.hydrate=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!0,c)};\nexports.hydrateRoot=function(a,b,c){if(!ol(a))throw Error(p(405));var d=null!=c&&c.hydratedSources||null,e=!1,f=\"\",g=ll;null!==c&&void 0!==c&&(!0===c.unstable_strictMode&&(e=!0),void 0!==c.identifierPrefix&&(f=c.identifierPrefix),void 0!==c.onRecoverableError&&(g=c.onRecoverableError));b=fl(b,null,a,1,null!=c?c:null,e,!1,f,g);a[uf]=b.current;sf(a);if(d)for(a=0;a<d.length;a++)c=d[a],e=c._getVersion,e=e(c._source),null==b.mutableSourceEagerHydrationData?b.mutableSourceEagerHydrationData=[c,e]:b.mutableSourceEagerHydrationData.push(c,\ne);return new nl(b)};exports.render=function(a,b,c){if(!pl(b))throw Error(p(200));return sl(null,a,b,!1,c)};exports.unmountComponentAtNode=function(a){if(!pl(a))throw Error(p(40));return a._reactRootContainer?(Sk(function(){sl(null,null,a,!1,function(){a._reactRootContainer=null;a[uf]=null})}),!0):!1};exports.unstable_batchedUpdates=Rk;\nexports.unstable_renderSubtreeIntoContainer=function(a,b,c,d){if(!pl(c))throw Error(p(200));if(null==a||void 0===a._reactInternals)throw Error(p(38));return sl(a,b,c,!1,d)};exports.version=\"18.2.0-next-9e3b772b8-20220608\";\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","'use strict';\n\nfunction checkDCE() {\n  /* global __REACT_DEVTOOLS_GLOBAL_HOOK__ */\n  if (\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined' ||\n    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE !== 'function'\n  ) {\n    return;\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    // This branch is unreachable because this function is only called\n    // in production, but the condition is true only in development.\n    // Therefore if the branch is still here, dead code elimination wasn't\n    // properly applied.\n    // Don't change the message. React DevTools relies on it. Also make sure\n    // this message doesn't occur elsewhere in this function, or it will cause\n    // a false positive.\n    throw new Error('^_^');\n  }\n  try {\n    // Verify that the code above has been dead code eliminated (DCE'd).\n    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);\n  } catch (err) {\n    // DevTools shouldn't crash React, no matter what.\n    // We should still report in case we break this code.\n    console.error(err);\n  }\n}\n\nif (process.env.NODE_ENV === 'production') {\n  // DCE check should happen before ReactDOM bundle executes so that\n  // DevTools can report bad minification during injection.\n  checkDCE();\n  module.exports = require('./cjs/react-dom.production.min.js');\n} else {\n  module.exports = require('./cjs/react-dom.development.js');\n}\n","/** @license React v16.13.1\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';var b=\"function\"===typeof Symbol&&Symbol.for,c=b?Symbol.for(\"react.element\"):60103,d=b?Symbol.for(\"react.portal\"):60106,e=b?Symbol.for(\"react.fragment\"):60107,f=b?Symbol.for(\"react.strict_mode\"):60108,g=b?Symbol.for(\"react.profiler\"):60114,h=b?Symbol.for(\"react.provider\"):60109,k=b?Symbol.for(\"react.context\"):60110,l=b?Symbol.for(\"react.async_mode\"):60111,m=b?Symbol.for(\"react.concurrent_mode\"):60111,n=b?Symbol.for(\"react.forward_ref\"):60112,p=b?Symbol.for(\"react.suspense\"):60113,q=b?\nSymbol.for(\"react.suspense_list\"):60120,r=b?Symbol.for(\"react.memo\"):60115,t=b?Symbol.for(\"react.lazy\"):60116,v=b?Symbol.for(\"react.block\"):60121,w=b?Symbol.for(\"react.fundamental\"):60117,x=b?Symbol.for(\"react.responder\"):60118,y=b?Symbol.for(\"react.scope\"):60119;\nfunction z(a){if(\"object\"===typeof a&&null!==a){var u=a.$$typeof;switch(u){case c:switch(a=a.type,a){case l:case m:case e:case g:case f:case p:return a;default:switch(a=a&&a.$$typeof,a){case k:case n:case t:case r:case h:return a;default:return u}}case d:return u}}}function A(a){return z(a)===m}exports.AsyncMode=l;exports.ConcurrentMode=m;exports.ContextConsumer=k;exports.ContextProvider=h;exports.Element=c;exports.ForwardRef=n;exports.Fragment=e;exports.Lazy=t;exports.Memo=r;exports.Portal=d;\nexports.Profiler=g;exports.StrictMode=f;exports.Suspense=p;exports.isAsyncMode=function(a){return A(a)||z(a)===l};exports.isConcurrentMode=A;exports.isContextConsumer=function(a){return z(a)===k};exports.isContextProvider=function(a){return z(a)===h};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===c};exports.isForwardRef=function(a){return z(a)===n};exports.isFragment=function(a){return z(a)===e};exports.isLazy=function(a){return z(a)===t};\nexports.isMemo=function(a){return z(a)===r};exports.isPortal=function(a){return z(a)===d};exports.isProfiler=function(a){return z(a)===g};exports.isStrictMode=function(a){return z(a)===f};exports.isSuspense=function(a){return z(a)===p};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===e||a===m||a===g||a===f||a===p||a===q||\"object\"===typeof a&&null!==a&&(a.$$typeof===t||a.$$typeof===r||a.$$typeof===h||a.$$typeof===k||a.$$typeof===n||a.$$typeof===w||a.$$typeof===x||a.$$typeof===y||a.$$typeof===v)};exports.typeOf=z;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","// Default to a dummy \"batch\" implementation that just runs the callback\nfunction defaultNoopBatch(callback) {\n  callback();\n}\n\nlet batch = defaultNoopBatch; // Allow injecting another batching function later\n\nexport const setBatch = newBatch => batch = newBatch; // Supply a getter just to skip dealing with ESM bindings\n\nexport const getBatch = () => batch;","import * as React from 'react';\nconst ContextKey = Symbol.for(`react-redux-context`);\nconst gT = typeof globalThis !== \"undefined\" ? globalThis :\n/* fall back to a per-module scope (pre-8.1 behaviour) if `globalThis` is not available */\n{};\n\nfunction getContext() {\n  var _gT$ContextKey;\n\n  if (!React.createContext) return {};\n  const contextMap = (_gT$ContextKey = gT[ContextKey]) != null ? _gT$ContextKey : gT[ContextKey] = new Map();\n  let realContext = contextMap.get(React.createContext);\n\n  if (!realContext) {\n    realContext = React.createContext(null);\n\n    if (process.env.NODE_ENV !== 'production') {\n      realContext.displayName = 'ReactRedux';\n    }\n\n    contextMap.set(React.createContext, realContext);\n  }\n\n  return realContext;\n}\n\nexport const ReactReduxContext = /*#__PURE__*/getContext();\nexport default ReactReduxContext;","import { useContext } from 'react';\nimport { ReactReduxContext } from '../components/Context';\n\n/**\r\n * Hook factory, which creates a `useReduxContext` hook bound to a given context. This is a low-level\r\n * hook that you should usually not need to call directly.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useReduxContext` hook bound to the specified context.\r\n */\nexport function createReduxContextHook(context = ReactReduxContext) {\n  return function useReduxContext() {\n    const contextValue = useContext(context);\n\n    if (process.env.NODE_ENV !== 'production' && !contextValue) {\n      throw new Error('could not find react-redux context value; please ensure the component is wrapped in a <Provider>');\n    }\n\n    return contextValue;\n  };\n}\n/**\r\n * A hook to access the value of the `ReactReduxContext`. This is a low-level\r\n * hook that you should usually not need to call directly.\r\n *\r\n * @returns {any} the value of the `ReactReduxContext`\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useReduxContext } from 'react-redux'\r\n *\r\n * export const CounterComponent = () => {\r\n *   const { store } = useReduxContext()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */\n\nexport const useReduxContext = /*#__PURE__*/createReduxContextHook();","export const notInitialized = () => {\n  throw new Error('uSES not initialized!');\n};","import { useCallback, useDebugValue, useRef } from 'react';\nimport { createReduxContextHook, useReduxContext as useDefaultReduxContext } from './useReduxContext';\nimport { ReactReduxContext } from '../components/Context';\nimport { notInitialized } from '../utils/useSyncExternalStore';\nlet useSyncExternalStoreWithSelector = notInitialized;\nexport const initializeUseSelector = fn => {\n  useSyncExternalStoreWithSelector = fn;\n};\n\nconst refEquality = (a, b) => a === b;\n/**\r\n * Hook factory, which creates a `useSelector` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useSelector` hook bound to the specified context.\r\n */\n\n\nexport function createSelectorHook(context = ReactReduxContext) {\n  const useReduxContext = context === ReactReduxContext ? useDefaultReduxContext : createReduxContextHook(context);\n  return function useSelector(selector, equalityFnOrOptions = {}) {\n    const {\n      equalityFn = refEquality,\n      stabilityCheck = undefined,\n      noopCheck = undefined\n    } = typeof equalityFnOrOptions === 'function' ? {\n      equalityFn: equalityFnOrOptions\n    } : equalityFnOrOptions;\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (!selector) {\n        throw new Error(`You must pass a selector to useSelector`);\n      }\n\n      if (typeof selector !== 'function') {\n        throw new Error(`You must pass a function as a selector to useSelector`);\n      }\n\n      if (typeof equalityFn !== 'function') {\n        throw new Error(`You must pass a function as an equality function to useSelector`);\n      }\n    }\n\n    const {\n      store,\n      subscription,\n      getServerState,\n      stabilityCheck: globalStabilityCheck,\n      noopCheck: globalNoopCheck\n    } = useReduxContext();\n    const firstRun = useRef(true);\n    const wrappedSelector = useCallback({\n      [selector.name](state) {\n        const selected = selector(state);\n\n        if (process.env.NODE_ENV !== 'production') {\n          const finalStabilityCheck = typeof stabilityCheck === 'undefined' ? globalStabilityCheck : stabilityCheck;\n\n          if (finalStabilityCheck === 'always' || finalStabilityCheck === 'once' && firstRun.current) {\n            const toCompare = selector(state);\n\n            if (!equalityFn(selected, toCompare)) {\n              let stack = undefined;\n\n              try {\n                throw new Error();\n              } catch (e) {\n                ;\n                ({\n                  stack\n                } = e);\n              }\n\n              console.warn('Selector ' + (selector.name || 'unknown') + ' returned a different result when called with the same parameters. This can lead to unnecessary rerenders.' + '\\nSelectors that return a new reference (such as an object or an array) should be memoized: https://redux.js.org/usage/deriving-data-selectors#optimizing-selectors-with-memoization', {\n                state,\n                selected,\n                selected2: toCompare,\n                stack\n              });\n            }\n          }\n\n          const finalNoopCheck = typeof noopCheck === 'undefined' ? globalNoopCheck : noopCheck;\n\n          if (finalNoopCheck === 'always' || finalNoopCheck === 'once' && firstRun.current) {\n            // @ts-ignore\n            if (selected === state) {\n              let stack = undefined;\n\n              try {\n                throw new Error();\n              } catch (e) {\n                ;\n                ({\n                  stack\n                } = e);\n              }\n\n              console.warn('Selector ' + (selector.name || 'unknown') + ' returned the root state when called. This can lead to unnecessary rerenders.' + '\\nSelectors that return the entire state are almost certainly a mistake, as they will cause a rerender whenever *anything* in state changes.', {\n                stack\n              });\n            }\n          }\n\n          if (firstRun.current) firstRun.current = false;\n        }\n\n        return selected;\n      }\n\n    }[selector.name], [selector, globalStabilityCheck, stabilityCheck]);\n    const selectedState = useSyncExternalStoreWithSelector(subscription.addNestedSub, store.getState, getServerState || store.getState, wrappedSelector, equalityFn);\n    useDebugValue(selectedState);\n    return selectedState;\n  };\n}\n/**\r\n * A hook to access the redux store's state. This hook takes a selector function\r\n * as an argument. The selector is called with the store state.\r\n *\r\n * This hook takes an optional equality comparison function as the second parameter\r\n * that allows you to customize the way the selected state is compared to determine\r\n * whether the component needs to be re-rendered.\r\n *\r\n * @param {Function} selector the selector function\r\n * @param {Function=} equalityFn the function that will be used to determine equality\r\n *\r\n * @returns {any} the selected state\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useSelector } from 'react-redux'\r\n *\r\n * export const CounterComponent = () => {\r\n *   const counter = useSelector(state => state.counter)\r\n *   return <div>{counter}</div>\r\n * }\r\n */\n\nexport const useSelector = /*#__PURE__*/createSelectorHook();","import { getBatch } from './batch'; // encapsulates the subscription logic for connecting a component to the redux store, as\n// well as nesting subscriptions of descendant components, so that we can ensure the\n// ancestor components re-render before descendants\n\nfunction createListenerCollection() {\n  const batch = getBatch();\n  let first = null;\n  let last = null;\n  return {\n    clear() {\n      first = null;\n      last = null;\n    },\n\n    notify() {\n      batch(() => {\n        let listener = first;\n\n        while (listener) {\n          listener.callback();\n          listener = listener.next;\n        }\n      });\n    },\n\n    get() {\n      let listeners = [];\n      let listener = first;\n\n      while (listener) {\n        listeners.push(listener);\n        listener = listener.next;\n      }\n\n      return listeners;\n    },\n\n    subscribe(callback) {\n      let isSubscribed = true;\n      let listener = last = {\n        callback,\n        next: null,\n        prev: last\n      };\n\n      if (listener.prev) {\n        listener.prev.next = listener;\n      } else {\n        first = listener;\n      }\n\n      return function unsubscribe() {\n        if (!isSubscribed || first === null) return;\n        isSubscribed = false;\n\n        if (listener.next) {\n          listener.next.prev = listener.prev;\n        } else {\n          last = listener.prev;\n        }\n\n        if (listener.prev) {\n          listener.prev.next = listener.next;\n        } else {\n          first = listener.next;\n        }\n      };\n    }\n\n  };\n}\n\nconst nullListeners = {\n  notify() {},\n\n  get: () => []\n};\nexport function createSubscription(store, parentSub) {\n  let unsubscribe;\n  let listeners = nullListeners; // Reasons to keep the subscription active\n\n  let subscriptionsAmount = 0; // Is this specific subscription subscribed (or only nested ones?)\n\n  let selfSubscribed = false;\n\n  function addNestedSub(listener) {\n    trySubscribe();\n    const cleanupListener = listeners.subscribe(listener); // cleanup nested sub\n\n    let removed = false;\n    return () => {\n      if (!removed) {\n        removed = true;\n        cleanupListener();\n        tryUnsubscribe();\n      }\n    };\n  }\n\n  function notifyNestedSubs() {\n    listeners.notify();\n  }\n\n  function handleChangeWrapper() {\n    if (subscription.onStateChange) {\n      subscription.onStateChange();\n    }\n  }\n\n  function isSubscribed() {\n    return selfSubscribed;\n  }\n\n  function trySubscribe() {\n    subscriptionsAmount++;\n\n    if (!unsubscribe) {\n      unsubscribe = parentSub ? parentSub.addNestedSub(handleChangeWrapper) : store.subscribe(handleChangeWrapper);\n      listeners = createListenerCollection();\n    }\n  }\n\n  function tryUnsubscribe() {\n    subscriptionsAmount--;\n\n    if (unsubscribe && subscriptionsAmount === 0) {\n      unsubscribe();\n      unsubscribe = undefined;\n      listeners.clear();\n      listeners = nullListeners;\n    }\n  }\n\n  function trySubscribeSelf() {\n    if (!selfSubscribed) {\n      selfSubscribed = true;\n      trySubscribe();\n    }\n  }\n\n  function tryUnsubscribeSelf() {\n    if (selfSubscribed) {\n      selfSubscribed = false;\n      tryUnsubscribe();\n    }\n  }\n\n  const subscription = {\n    addNestedSub,\n    notifyNestedSubs,\n    handleChangeWrapper,\n    isSubscribed,\n    trySubscribe: trySubscribeSelf,\n    tryUnsubscribe: tryUnsubscribeSelf,\n    getListeners: () => listeners\n  };\n  return subscription;\n}","import * as React from 'react'; // React currently throws a warning when using useLayoutEffect on the server.\n// To get around it, we can conditionally useEffect on the server (no-op) and\n// useLayoutEffect in the browser. We need useLayoutEffect to ensure the store\n// subscription callback always has the selector from the latest render commit\n// available, otherwise a store update may happen between render and the effect,\n// which may cause missed updates; we also must ensure the store subscription\n// is created synchronously, otherwise a store update may occur before the\n// subscription is created and an inconsistent state may be observed\n// Matches logic in React's `shared/ExecutionEnvironment` file\n\nexport const canUseDOM = !!(typeof window !== 'undefined' && typeof window.document !== 'undefined' && typeof window.document.createElement !== 'undefined');\nexport const useIsomorphicLayoutEffect = canUseDOM ? React.useLayoutEffect : React.useEffect;","import * as React from 'react';\nimport { ReactReduxContext } from './Context';\nimport { createSubscription } from '../utils/Subscription';\nimport { useIsomorphicLayoutEffect } from '../utils/useIsomorphicLayoutEffect';\n\nfunction Provider({\n  store,\n  context,\n  children,\n  serverState,\n  stabilityCheck = 'once',\n  noopCheck = 'once'\n}) {\n  const contextValue = React.useMemo(() => {\n    const subscription = createSubscription(store);\n    return {\n      store,\n      subscription,\n      getServerState: serverState ? () => serverState : undefined,\n      stabilityCheck,\n      noopCheck\n    };\n  }, [store, serverState, stabilityCheck, noopCheck]);\n  const previousState = React.useMemo(() => store.getState(), [store]);\n  useIsomorphicLayoutEffect(() => {\n    const {\n      subscription\n    } = contextValue;\n    subscription.onStateChange = subscription.notifyNestedSubs;\n    subscription.trySubscribe();\n\n    if (previousState !== store.getState()) {\n      subscription.notifyNestedSubs();\n    }\n\n    return () => {\n      subscription.tryUnsubscribe();\n      subscription.onStateChange = undefined;\n    };\n  }, [contextValue, previousState]);\n  const Context = context || ReactReduxContext; // @ts-ignore 'AnyAction' is assignable to the constraint of type 'A', but 'A' could be instantiated with a different subtype\n\n  return /*#__PURE__*/React.createElement(Context.Provider, {\n    value: contextValue\n  }, children);\n}\n\nexport default Provider;","import { ReactReduxContext } from '../components/Context';\nimport { useReduxContext as useDefaultReduxContext, createReduxContextHook } from './useReduxContext';\n/**\r\n * Hook factory, which creates a `useStore` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useStore` hook bound to the specified context.\r\n */\n\nexport function createStoreHook(context = ReactReduxContext) {\n  const useReduxContext = // @ts-ignore\n  context === ReactReduxContext ? useDefaultReduxContext : // @ts-ignore\n  createReduxContextHook(context);\n  return function useStore() {\n    const {\n      store\n    } = useReduxContext(); // @ts-ignore\n\n    return store;\n  };\n}\n/**\r\n * A hook to access the redux store.\r\n *\r\n * @returns {any} the redux store\r\n *\r\n * @example\r\n *\r\n * import React from 'react'\r\n * import { useStore } from 'react-redux'\r\n *\r\n * export const ExampleComponent = () => {\r\n *   const store = useStore()\r\n *   return <div>{store.getState()}</div>\r\n * }\r\n */\n\nexport const useStore = /*#__PURE__*/createStoreHook();","import { ReactReduxContext } from '../components/Context';\nimport { useStore as useDefaultStore, createStoreHook } from './useStore';\n/**\r\n * Hook factory, which creates a `useDispatch` hook bound to a given context.\r\n *\r\n * @param {React.Context} [context=ReactReduxContext] Context passed to your `<Provider>`.\r\n * @returns {Function} A `useDispatch` hook bound to the specified context.\r\n */\n\nexport function createDispatchHook(context = ReactReduxContext) {\n  const useStore = // @ts-ignore\n  context === ReactReduxContext ? useDefaultStore : createStoreHook(context);\n  return function useDispatch() {\n    const store = useStore(); // @ts-ignore\n\n    return store.dispatch;\n  };\n}\n/**\r\n * A hook to access the redux `dispatch` function.\r\n *\r\n * @returns {any|function} redux store's `dispatch` function\r\n *\r\n * @example\r\n *\r\n * import React, { useCallback } from 'react'\r\n * import { useDispatch } from 'react-redux'\r\n *\r\n * export const CounterComponent = ({ value }) => {\r\n *   const dispatch = useDispatch()\r\n *   const increaseCounter = useCallback(() => dispatch({ type: 'increase-counter' }), [])\r\n *   return (\r\n *     <div>\r\n *       <span>{value}</span>\r\n *       <button onClick={increaseCounter}>Increase counter</button>\r\n *     </div>\r\n *   )\r\n * }\r\n */\n\nexport const useDispatch = /*#__PURE__*/createDispatchHook();","// The primary entry point assumes we're working with standard ReactDOM/RN, but\n// older versions that do not include `useSyncExternalStore` (React 16.9 - 17.x).\n// Because of that, the useSyncExternalStore compat shim is needed.\nimport { useSyncExternalStore } from 'use-sync-external-store/shim';\nimport { useSyncExternalStoreWithSelector } from 'use-sync-external-store/shim/with-selector';\nimport { unstable_batchedUpdates as batch } from './utils/reactBatchedUpdates';\nimport { setBatch } from './utils/batch';\nimport { initializeUseSelector } from './hooks/useSelector';\nimport { initializeConnect } from './components/connect';\ninitializeUseSelector(useSyncExternalStoreWithSelector);\ninitializeConnect(useSyncExternalStore); // Enable batched updates in our subscriptions for use\n// with standard React renderers (ReactDOM, React Native)\n\nsetBatch(batch);\nexport { batch };\nexport * from './exports';","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nconst _excluded = [\"reactReduxForwardedRef\"];\n\n/* eslint-disable valid-jsdoc, @typescript-eslint/no-unused-vars */\nimport hoistStatics from 'hoist-non-react-statics';\nimport * as React from 'react';\nimport { isValidElementType, isContextConsumer } from 'react-is';\nimport defaultSelectorFactory from '../connect/selectorFactory';\nimport { mapDispatchToPropsFactory } from '../connect/mapDispatchToProps';\nimport { mapStateToPropsFactory } from '../connect/mapStateToProps';\nimport { mergePropsFactory } from '../connect/mergeProps';\nimport { createSubscription } from '../utils/Subscription';\nimport { useIsomorphicLayoutEffect } from '../utils/useIsomorphicLayoutEffect';\nimport shallowEqual from '../utils/shallowEqual';\nimport warning from '../utils/warning';\nimport { ReactReduxContext } from './Context';\nimport { notInitialized } from '../utils/useSyncExternalStore';\nlet useSyncExternalStore = notInitialized;\nexport const initializeConnect = fn => {\n  useSyncExternalStore = fn;\n}; // Define some constant arrays just to avoid re-creating these\n\nconst EMPTY_ARRAY = [null, 0];\nconst NO_SUBSCRIPTION_ARRAY = [null, null]; // Attempts to stringify whatever not-really-a-component value we were given\n// for logging in an error message\n\nconst stringifyComponent = Comp => {\n  try {\n    return JSON.stringify(Comp);\n  } catch (err) {\n    return String(Comp);\n  }\n};\n\n// This is \"just\" a `useLayoutEffect`, but with two modifications:\n// - we need to fall back to `useEffect` in SSR to avoid annoying warnings\n// - we extract this to a separate function to avoid closing over values\n//   and causing memory leaks\nfunction useIsomorphicLayoutEffectWithArgs(effectFunc, effectArgs, dependencies) {\n  useIsomorphicLayoutEffect(() => effectFunc(...effectArgs), dependencies);\n} // Effect callback, extracted: assign the latest props values to refs for later usage\n\n\nfunction captureWrapperProps(lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, // actualChildProps: unknown,\nchildPropsFromStoreUpdate, notifyNestedSubs) {\n  // We want to capture the wrapper props and child props we used for later comparisons\n  lastWrapperProps.current = wrapperProps;\n  renderIsScheduled.current = false; // If the render was from a store update, clear out that reference and cascade the subscriber update\n\n  if (childPropsFromStoreUpdate.current) {\n    childPropsFromStoreUpdate.current = null;\n    notifyNestedSubs();\n  }\n} // Effect callback, extracted: subscribe to the Redux store or nearest connected ancestor,\n// check for updates after dispatched actions, and trigger re-renders.\n\n\nfunction subscribeUpdates(shouldHandleStateChanges, store, subscription, childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, isMounted, childPropsFromStoreUpdate, notifyNestedSubs, // forceComponentUpdateDispatch: React.Dispatch<any>,\nadditionalSubscribeListener) {\n  // If we're not subscribed to the store, nothing to do here\n  if (!shouldHandleStateChanges) return () => {}; // Capture values for checking if and when this component unmounts\n\n  let didUnsubscribe = false;\n  let lastThrownError = null; // We'll run this callback every time a store subscription update propagates to this component\n\n  const checkForUpdates = () => {\n    if (didUnsubscribe || !isMounted.current) {\n      // Don't run stale listeners.\n      // Redux doesn't guarantee unsubscriptions happen until next dispatch.\n      return;\n    } // TODO We're currently calling getState ourselves here, rather than letting `uSES` do it\n\n\n    const latestStoreState = store.getState();\n    let newChildProps, error;\n\n    try {\n      // Actually run the selector with the most recent store state and wrapper props\n      // to determine what the child props should be\n      newChildProps = childPropsSelector(latestStoreState, lastWrapperProps.current);\n    } catch (e) {\n      error = e;\n      lastThrownError = e;\n    }\n\n    if (!error) {\n      lastThrownError = null;\n    } // If the child props haven't changed, nothing to do here - cascade the subscription update\n\n\n    if (newChildProps === lastChildProps.current) {\n      if (!renderIsScheduled.current) {\n        notifyNestedSubs();\n      }\n    } else {\n      // Save references to the new child props.  Note that we track the \"child props from store update\"\n      // as a ref instead of a useState/useReducer because we need a way to determine if that value has\n      // been processed.  If this went into useState/useReducer, we couldn't clear out the value without\n      // forcing another re-render, which we don't want.\n      lastChildProps.current = newChildProps;\n      childPropsFromStoreUpdate.current = newChildProps;\n      renderIsScheduled.current = true; // TODO This is hacky and not how `uSES` is meant to be used\n      // Trigger the React `useSyncExternalStore` subscriber\n\n      additionalSubscribeListener();\n    }\n  }; // Actually subscribe to the nearest connected ancestor (or store)\n\n\n  subscription.onStateChange = checkForUpdates;\n  subscription.trySubscribe(); // Pull data from the store after first render in case the store has\n  // changed since we began.\n\n  checkForUpdates();\n\n  const unsubscribeWrapper = () => {\n    didUnsubscribe = true;\n    subscription.tryUnsubscribe();\n    subscription.onStateChange = null;\n\n    if (lastThrownError) {\n      // It's possible that we caught an error due to a bad mapState function, but the\n      // parent re-rendered without this component and we're about to unmount.\n      // This shouldn't happen as long as we do top-down subscriptions correctly, but\n      // if we ever do those wrong, this throw will surface the error in our tests.\n      // In that case, throw the error from here so it doesn't get lost.\n      throw lastThrownError;\n    }\n  };\n\n  return unsubscribeWrapper;\n} // Reducer initial state creation for our update reducer\n\n\nconst initStateUpdates = () => EMPTY_ARRAY;\n\nfunction strictEqual(a, b) {\n  return a === b;\n}\n/**\r\n * Infers the type of props that a connector will inject into a component.\r\n */\n\n\nlet hasWarnedAboutDeprecatedPureOption = false;\n/**\r\n * Connects a React component to a Redux store.\r\n *\r\n * - Without arguments, just wraps the component, without changing the behavior / props\r\n *\r\n * - If 2 params are passed (3rd param, mergeProps, is skipped), default behavior\r\n * is to override ownProps (as stated in the docs), so what remains is everything that's\r\n * not a state or dispatch prop\r\n *\r\n * - When 3rd param is passed, we don't know if ownProps propagate and whether they\r\n * should be valid component props, because it depends on mergeProps implementation.\r\n * As such, it is the user's responsibility to extend ownProps interface from state or\r\n * dispatch props or both when applicable\r\n *\r\n * @param mapStateToProps A function that extracts values from state\r\n * @param mapDispatchToProps Setup for dispatching actions\r\n * @param mergeProps Optional callback to merge state and dispatch props together\r\n * @param options Options for configuring the connection\r\n *\r\n */\n\nfunction connect(mapStateToProps, mapDispatchToProps, mergeProps, {\n  // The `pure` option has been removed, so TS doesn't like us destructuring this to check its existence.\n  // @ts-ignore\n  pure,\n  areStatesEqual = strictEqual,\n  areOwnPropsEqual = shallowEqual,\n  areStatePropsEqual = shallowEqual,\n  areMergedPropsEqual = shallowEqual,\n  // use React's forwardRef to expose a ref of the wrapped component\n  forwardRef = false,\n  // the context consumer to use\n  context = ReactReduxContext\n} = {}) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (pure !== undefined && !hasWarnedAboutDeprecatedPureOption) {\n      hasWarnedAboutDeprecatedPureOption = true;\n      warning('The `pure` option has been removed. `connect` is now always a \"pure/memoized\" component');\n    }\n  }\n\n  const Context = context;\n  const initMapStateToProps = mapStateToPropsFactory(mapStateToProps);\n  const initMapDispatchToProps = mapDispatchToPropsFactory(mapDispatchToProps);\n  const initMergeProps = mergePropsFactory(mergeProps);\n  const shouldHandleStateChanges = Boolean(mapStateToProps);\n\n  const wrapWithConnect = WrappedComponent => {\n    if (process.env.NODE_ENV !== 'production' && !isValidElementType(WrappedComponent)) {\n      throw new Error(`You must pass a component to the function returned by connect. Instead received ${stringifyComponent(WrappedComponent)}`);\n    }\n\n    const wrappedComponentName = WrappedComponent.displayName || WrappedComponent.name || 'Component';\n    const displayName = `Connect(${wrappedComponentName})`;\n    const selectorFactoryOptions = {\n      shouldHandleStateChanges,\n      displayName,\n      wrappedComponentName,\n      WrappedComponent,\n      // @ts-ignore\n      initMapStateToProps,\n      // @ts-ignore\n      initMapDispatchToProps,\n      initMergeProps,\n      areStatesEqual,\n      areStatePropsEqual,\n      areOwnPropsEqual,\n      areMergedPropsEqual\n    };\n\n    function ConnectFunction(props) {\n      const [propsContext, reactReduxForwardedRef, wrapperProps] = React.useMemo(() => {\n        // Distinguish between actual \"data\" props that were passed to the wrapper component,\n        // and values needed to control behavior (forwarded refs, alternate context instances).\n        // To maintain the wrapperProps object reference, memoize this destructuring.\n        const {\n          reactReduxForwardedRef\n        } = props,\n              wrapperProps = _objectWithoutPropertiesLoose(props, _excluded);\n\n        return [props.context, reactReduxForwardedRef, wrapperProps];\n      }, [props]);\n      const ContextToUse = React.useMemo(() => {\n        // Users may optionally pass in a custom context instance to use instead of our ReactReduxContext.\n        // Memoize the check that determines which context instance we should use.\n        return propsContext && propsContext.Consumer && // @ts-ignore\n        isContextConsumer( /*#__PURE__*/React.createElement(propsContext.Consumer, null)) ? propsContext : Context;\n      }, [propsContext, Context]); // Retrieve the store and ancestor subscription via context, if available\n\n      const contextValue = React.useContext(ContextToUse); // The store _must_ exist as either a prop or in context.\n      // We'll check to see if it _looks_ like a Redux store first.\n      // This allows us to pass through a `store` prop that is just a plain value.\n\n      const didStoreComeFromProps = Boolean(props.store) && Boolean(props.store.getState) && Boolean(props.store.dispatch);\n      const didStoreComeFromContext = Boolean(contextValue) && Boolean(contextValue.store);\n\n      if (process.env.NODE_ENV !== 'production' && !didStoreComeFromProps && !didStoreComeFromContext) {\n        throw new Error(`Could not find \"store\" in the context of ` + `\"${displayName}\". Either wrap the root component in a <Provider>, ` + `or pass a custom React context provider to <Provider> and the corresponding ` + `React context consumer to ${displayName} in connect options.`);\n      } // Based on the previous check, one of these must be true\n\n\n      const store = didStoreComeFromProps ? props.store : contextValue.store;\n      const getServerState = didStoreComeFromContext ? contextValue.getServerState : store.getState;\n      const childPropsSelector = React.useMemo(() => {\n        // The child props selector needs the store reference as an input.\n        // Re-create this selector whenever the store changes.\n        return defaultSelectorFactory(store.dispatch, selectorFactoryOptions);\n      }, [store]);\n      const [subscription, notifyNestedSubs] = React.useMemo(() => {\n        if (!shouldHandleStateChanges) return NO_SUBSCRIPTION_ARRAY; // This Subscription's source should match where store came from: props vs. context. A component\n        // connected to the store via props shouldn't use subscription from context, or vice versa.\n\n        const subscription = createSubscription(store, didStoreComeFromProps ? undefined : contextValue.subscription); // `notifyNestedSubs` is duplicated to handle the case where the component is unmounted in\n        // the middle of the notification loop, where `subscription` will then be null. This can\n        // probably be avoided if Subscription's listeners logic is changed to not call listeners\n        // that have been unsubscribed in the  middle of the notification loop.\n\n        const notifyNestedSubs = subscription.notifyNestedSubs.bind(subscription);\n        return [subscription, notifyNestedSubs];\n      }, [store, didStoreComeFromProps, contextValue]); // Determine what {store, subscription} value should be put into nested context, if necessary,\n      // and memoize that value to avoid unnecessary context updates.\n\n      const overriddenContextValue = React.useMemo(() => {\n        if (didStoreComeFromProps) {\n          // This component is directly subscribed to a store from props.\n          // We don't want descendants reading from this store - pass down whatever\n          // the existing context value is from the nearest connected ancestor.\n          return contextValue;\n        } // Otherwise, put this component's subscription instance into context, so that\n        // connected descendants won't update until after this component is done\n\n\n        return _extends({}, contextValue, {\n          subscription\n        });\n      }, [didStoreComeFromProps, contextValue, subscription]); // Set up refs to coordinate values between the subscription effect and the render logic\n\n      const lastChildProps = React.useRef();\n      const lastWrapperProps = React.useRef(wrapperProps);\n      const childPropsFromStoreUpdate = React.useRef();\n      const renderIsScheduled = React.useRef(false);\n      const isProcessingDispatch = React.useRef(false);\n      const isMounted = React.useRef(false);\n      const latestSubscriptionCallbackError = React.useRef();\n      useIsomorphicLayoutEffect(() => {\n        isMounted.current = true;\n        return () => {\n          isMounted.current = false;\n        };\n      }, []);\n      const actualChildPropsSelector = React.useMemo(() => {\n        const selector = () => {\n          // Tricky logic here:\n          // - This render may have been triggered by a Redux store update that produced new child props\n          // - However, we may have gotten new wrapper props after that\n          // If we have new child props, and the same wrapper props, we know we should use the new child props as-is.\n          // But, if we have new wrapper props, those might change the child props, so we have to recalculate things.\n          // So, we'll use the child props from store update only if the wrapper props are the same as last time.\n          if (childPropsFromStoreUpdate.current && wrapperProps === lastWrapperProps.current) {\n            return childPropsFromStoreUpdate.current;\n          } // TODO We're reading the store directly in render() here. Bad idea?\n          // This will likely cause Bad Things (TM) to happen in Concurrent Mode.\n          // Note that we do this because on renders _not_ caused by store updates, we need the latest store state\n          // to determine what the child props should be.\n\n\n          return childPropsSelector(store.getState(), wrapperProps);\n        };\n\n        return selector;\n      }, [store, wrapperProps]); // We need this to execute synchronously every time we re-render. However, React warns\n      // about useLayoutEffect in SSR, so we try to detect environment and fall back to\n      // just useEffect instead to avoid the warning, since neither will run anyway.\n\n      const subscribeForReact = React.useMemo(() => {\n        const subscribe = reactListener => {\n          if (!subscription) {\n            return () => {};\n          }\n\n          return subscribeUpdates(shouldHandleStateChanges, store, subscription, // @ts-ignore\n          childPropsSelector, lastWrapperProps, lastChildProps, renderIsScheduled, isMounted, childPropsFromStoreUpdate, notifyNestedSubs, reactListener);\n        };\n\n        return subscribe;\n      }, [subscription]);\n      useIsomorphicLayoutEffectWithArgs(captureWrapperProps, [lastWrapperProps, lastChildProps, renderIsScheduled, wrapperProps, childPropsFromStoreUpdate, notifyNestedSubs]);\n      let actualChildProps;\n\n      try {\n        actualChildProps = useSyncExternalStore( // TODO We're passing through a big wrapper that does a bunch of extra side effects besides subscribing\n        subscribeForReact, // TODO This is incredibly hacky. We've already processed the store update and calculated new child props,\n        // TODO and we're just passing that through so it triggers a re-render for us rather than relying on `uSES`.\n        actualChildPropsSelector, getServerState ? () => childPropsSelector(getServerState(), wrapperProps) : actualChildPropsSelector);\n      } catch (err) {\n        if (latestSubscriptionCallbackError.current) {\n          ;\n          err.message += `\\nThe error may be correlated with this previous error:\\n${latestSubscriptionCallbackError.current.stack}\\n\\n`;\n        }\n\n        throw err;\n      }\n\n      useIsomorphicLayoutEffect(() => {\n        latestSubscriptionCallbackError.current = undefined;\n        childPropsFromStoreUpdate.current = undefined;\n        lastChildProps.current = actualChildProps;\n      }); // Now that all that's done, we can finally try to actually render the child component.\n      // We memoize the elements for the rendered child component as an optimization.\n\n      const renderedWrappedComponent = React.useMemo(() => {\n        return (\n          /*#__PURE__*/\n          // @ts-ignore\n          React.createElement(WrappedComponent, _extends({}, actualChildProps, {\n            ref: reactReduxForwardedRef\n          }))\n        );\n      }, [reactReduxForwardedRef, WrappedComponent, actualChildProps]); // If React sees the exact same element reference as last time, it bails out of re-rendering\n      // that child, same as if it was wrapped in React.memo() or returned false from shouldComponentUpdate.\n\n      const renderedChild = React.useMemo(() => {\n        if (shouldHandleStateChanges) {\n          // If this component is subscribed to store updates, we need to pass its own\n          // subscription instance down to our descendants. That means rendering the same\n          // Context instance, and putting a different value into the context.\n          return /*#__PURE__*/React.createElement(ContextToUse.Provider, {\n            value: overriddenContextValue\n          }, renderedWrappedComponent);\n        }\n\n        return renderedWrappedComponent;\n      }, [ContextToUse, renderedWrappedComponent, overriddenContextValue]);\n      return renderedChild;\n    }\n\n    const _Connect = React.memo(ConnectFunction);\n\n    // Add a hacky cast to get the right output type\n    const Connect = _Connect;\n    Connect.WrappedComponent = WrappedComponent;\n    Connect.displayName = ConnectFunction.displayName = displayName;\n\n    if (forwardRef) {\n      const _forwarded = React.forwardRef(function forwardConnectRef(props, ref) {\n        // @ts-ignore\n        return /*#__PURE__*/React.createElement(Connect, _extends({}, props, {\n          reactReduxForwardedRef: ref\n        }));\n      });\n\n      const forwarded = _forwarded;\n      forwarded.displayName = displayName;\n      forwarded.WrappedComponent = WrappedComponent;\n      return hoistStatics(forwarded, WrappedComponent);\n    }\n\n    return hoistStatics(Connect, WrappedComponent);\n  };\n\n  return wrapWithConnect;\n}\n\nexport default connect;","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","import type {\n  FormEncType,\n  HTMLFormMethod,\n  RelativeRoutingType,\n} from \"@remix-run/router\";\nimport { stripBasename, UNSAFE_warning as warning } from \"@remix-run/router\";\n\nexport const defaultMethod: HTMLFormMethod = \"get\";\nconst defaultEncType: FormEncType = \"application/x-www-form-urlencoded\";\n\nexport function isHtmlElement(object: any): object is HTMLElement {\n  return object != null && typeof object.tagName === \"string\";\n}\n\nexport function isButtonElement(object: any): object is HTMLButtonElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"button\";\n}\n\nexport function isFormElement(object: any): object is HTMLFormElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"form\";\n}\n\nexport function isInputElement(object: any): object is HTMLInputElement {\n  return isHtmlElement(object) && object.tagName.toLowerCase() === \"input\";\n}\n\ntype LimitedMouseEvent = Pick<\n  MouseEvent,\n  \"button\" | \"metaKey\" | \"altKey\" | \"ctrlKey\" | \"shiftKey\"\n>;\n\nfunction isModifiedEvent(event: LimitedMouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport function shouldProcessLinkClick(\n  event: LimitedMouseEvent,\n  target?: string\n) {\n  return (\n    event.button === 0 && // Ignore everything but left clicks\n    (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n    !isModifiedEvent(event) // Ignore clicks with modifier keys\n  );\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n\nexport function getSearchParamsForLocation(\n  locationSearch: string,\n  defaultSearchParams: URLSearchParams | null\n) {\n  let searchParams = createSearchParams(locationSearch);\n\n  if (defaultSearchParams) {\n    // Use `defaultSearchParams.forEach(...)` here instead of iterating of\n    // `defaultSearchParams.keys()` to work-around a bug in Firefox related to\n    // web extensions. Relevant Bugzilla tickets:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1414602\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=1023984\n    defaultSearchParams.forEach((_, key) => {\n      if (!searchParams.has(key)) {\n        defaultSearchParams.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    });\n  }\n\n  return searchParams;\n}\n\n// Thanks https://github.com/sindresorhus/type-fest!\ntype JsonObject = { [Key in string]: JsonValue } & {\n  [Key in string]?: JsonValue | undefined;\n};\ntype JsonArray = JsonValue[] | readonly JsonValue[];\ntype JsonPrimitive = string | number | boolean | null;\ntype JsonValue = JsonPrimitive | JsonObject | JsonArray;\n\nexport type SubmitTarget =\n  | HTMLFormElement\n  | HTMLButtonElement\n  | HTMLInputElement\n  | FormData\n  | URLSearchParams\n  | JsonValue\n  | null;\n\n// One-time check for submitter support\nlet _formDataSupportsSubmitter: boolean | null = null;\n\nfunction isFormDataSubmitterSupported() {\n  if (_formDataSupportsSubmitter === null) {\n    try {\n      new FormData(\n        document.createElement(\"form\"),\n        // @ts-expect-error if FormData supports the submitter parameter, this will throw\n        0\n      );\n      _formDataSupportsSubmitter = false;\n    } catch (e) {\n      _formDataSupportsSubmitter = true;\n    }\n  }\n  return _formDataSupportsSubmitter;\n}\n\nexport interface SubmitOptions {\n  /**\n   * The HTTP method used to submit the form. Overrides `<form method>`.\n   * Defaults to \"GET\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * The action URL path used to submit the form. Overrides `<form action>`.\n   * Defaults to the path of the current route.\n   */\n  action?: string;\n\n  /**\n   * The encoding used to submit the form. Overrides `<form encType>`.\n   * Defaults to \"application/x-www-form-urlencoded\".\n   */\n  encType?: FormEncType;\n\n  /**\n   * Set `true` to replace the current entry in the browser's history stack\n   * instead of creating a new one (i.e. stay on \"the same page\"). Defaults\n   * to `false`.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * In browser-based environments, prevent resetting scroll after this\n   * navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n}\n\nconst supportedFormEncTypes: Set<FormEncType> = new Set([\n  \"application/x-www-form-urlencoded\",\n  \"multipart/form-data\",\n  \"text/plain\",\n]);\n\nfunction getFormEncType(encType: string | null) {\n  if (encType != null && !supportedFormEncTypes.has(encType as FormEncType)) {\n    warning(\n      false,\n      `\"${encType}\" is not a valid \\`encType\\` for \\`<Form>\\`/\\`<fetcher.Form>\\` ` +\n        `and will default to \"${defaultEncType}\"`\n    );\n\n    return null;\n  }\n  return encType;\n}\n\nexport function getFormSubmissionInfo(\n  target: SubmitTarget,\n  basename: string\n): {\n  action: string | null;\n  method: string;\n  encType: string;\n  formData: FormData | undefined;\n  body: any;\n} {\n  let method: string;\n  let action: string | null;\n  let encType: string;\n  let formData: FormData | undefined;\n  let body: any;\n\n  if (isFormElement(target)) {\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n    method = target.getAttribute(\"method\") || defaultMethod;\n    encType = getFormEncType(target.getAttribute(\"enctype\")) || defaultEncType;\n\n    formData = new FormData(target);\n  } else if (\n    isButtonElement(target) ||\n    (isInputElement(target) &&\n      (target.type === \"submit\" || target.type === \"image\"))\n  ) {\n    let form = target.form;\n\n    if (form == null) {\n      throw new Error(\n        `Cannot submit a <button> or <input type=\"submit\"> without a <form>`\n      );\n    }\n\n    // <button>/<input type=\"submit\"> may override attributes of <form>\n\n    // When grabbing the action from the element, it will have had the basename\n    // prefixed to ensure non-JS scenarios work, so strip it since we'll\n    // re-prefix in the router\n    let attr = target.getAttribute(\"formaction\") || form.getAttribute(\"action\");\n    action = attr ? stripBasename(attr, basename) : null;\n\n    method =\n      target.getAttribute(\"formmethod\") ||\n      form.getAttribute(\"method\") ||\n      defaultMethod;\n    encType =\n      getFormEncType(target.getAttribute(\"formenctype\")) ||\n      getFormEncType(form.getAttribute(\"enctype\")) ||\n      defaultEncType;\n\n    // Build a FormData object populated from a form and submitter\n    formData = new FormData(form, target);\n\n    // If this browser doesn't support the `FormData(el, submitter)` format,\n    // then tack on the submitter value at the end.  This is a lightweight\n    // solution that is not 100% spec compliant.  For complete support in older\n    // browsers, consider using the `formdata-submitter-polyfill` package\n    if (!isFormDataSubmitterSupported()) {\n      let { name, type, value } = target;\n      if (type === \"image\") {\n        let prefix = name ? `${name}.` : \"\";\n        formData.append(`${prefix}x`, \"0\");\n        formData.append(`${prefix}y`, \"0\");\n      } else if (name) {\n        formData.append(name, value);\n      }\n    }\n  } else if (isHtmlElement(target)) {\n    throw new Error(\n      `Cannot submit element that is not <form>, <button>, or ` +\n        `<input type=\"submit|image\">`\n    );\n  } else {\n    method = defaultMethod;\n    action = null;\n    encType = defaultEncType;\n    body = target;\n  }\n\n  // Send body for <Form encType=\"text/plain\" so we encode it into text\n  if (formData && encType === \"text/plain\") {\n    body = formData;\n    formData = undefined;\n  }\n\n  return { action, method: method.toLowerCase(), encType, formData, body };\n}\n","/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type {\n  FutureConfig,\n  Location,\n  NavigateOptions,\n  NavigationType,\n  RelativeRoutingType,\n  RouteObject,\n  To,\n} from \"react-router\";\nimport {\n  Router,\n  createPath,\n  useHref,\n  useLocation,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useResolvedPath,\n  unstable_useBlocker as useBlocker,\n  UNSAFE_DataRouterContext as DataRouterContext,\n  UNSAFE_DataRouterStateContext as DataRouterStateContext,\n  UNSAFE_NavigationContext as NavigationContext,\n  UNSAFE_RouteContext as RouteContext,\n  UNSAFE_mapRouteProperties as mapRouteProperties,\n  UNSAFE_useRouteId as useRouteId,\n} from \"react-router\";\nimport type {\n  BrowserHistory,\n  Fetcher,\n  FormEncType,\n  FormMethod,\n  FutureConfig as RouterFutureConfig,\n  GetScrollRestorationKeyFunction,\n  HashHistory,\n  History,\n  HTMLFormMethod,\n  HydrationState,\n  Router as RemixRouter,\n  V7_FormMethod,\n} from \"@remix-run/router\";\nimport {\n  createRouter,\n  createBrowserHistory,\n  createHashHistory,\n  joinPaths,\n  stripBasename,\n  UNSAFE_ErrorResponseImpl as ErrorResponseImpl,\n  UNSAFE_invariant as invariant,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  SubmitOptions,\n  ParamKeyValuePair,\n  URLSearchParamsInit,\n  SubmitTarget,\n} from \"./dom\";\nimport {\n  createSearchParams,\n  defaultMethod,\n  getFormSubmissionInfo,\n  getSearchParamsForLocation,\n  shouldProcessLinkClick,\n} from \"./dom\";\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Re-exports\n////////////////////////////////////////////////////////////////////////////////\n\nexport type {\n  FormEncType,\n  FormMethod,\n  GetScrollRestorationKeyFunction,\n  ParamKeyValuePair,\n  SubmitOptions,\n  URLSearchParamsInit,\n  V7_FormMethod,\n};\nexport { createSearchParams };\n\n// Note: Keep in sync with react-router exports!\nexport type {\n  ActionFunction,\n  ActionFunctionArgs,\n  AwaitProps,\n  unstable_Blocker,\n  unstable_BlockerFunction,\n  DataRouteMatch,\n  DataRouteObject,\n  ErrorResponse,\n  Fetcher,\n  Hash,\n  IndexRouteObject,\n  IndexRouteProps,\n  JsonFunction,\n  LazyRouteFunction,\n  LayoutRouteProps,\n  LoaderFunction,\n  LoaderFunctionArgs,\n  Location,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigation,\n  Navigator,\n  NonIndexRouteObject,\n  OutletProps,\n  Params,\n  ParamParseKey,\n  Path,\n  PathMatch,\n  Pathname,\n  PathPattern,\n  PathRouteProps,\n  RedirectFunction,\n  RelativeRoutingType,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  RouterProps,\n  RouterProviderProps,\n  RoutesProps,\n  Search,\n  ShouldRevalidateFunction,\n  ShouldRevalidateFunctionArgs,\n  To,\n  UIMatch,\n} from \"react-router\";\nexport {\n  AbortedDeferredError,\n  Await,\n  MemoryRouter,\n  Navigate,\n  NavigationType,\n  Outlet,\n  Route,\n  Router,\n  RouterProvider,\n  Routes,\n  createMemoryRouter,\n  createPath,\n  createRoutesFromChildren,\n  createRoutesFromElements,\n  defer,\n  isRouteErrorResponse,\n  generatePath,\n  json,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  redirect,\n  redirectDocument,\n  renderMatches,\n  resolvePath,\n  useActionData,\n  useAsyncError,\n  useAsyncValue,\n  unstable_useBlocker,\n  useHref,\n  useInRouterContext,\n  useLoaderData,\n  useLocation,\n  useMatch,\n  useMatches,\n  useNavigate,\n  useNavigation,\n  useNavigationType,\n  useOutlet,\n  useOutletContext,\n  useParams,\n  useResolvedPath,\n  useRevalidator,\n  useRouteError,\n  useRouteLoaderData,\n  useRoutes,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_DataRouterContext,\n  UNSAFE_DataRouterStateContext,\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n  UNSAFE_useRouteId,\n} from \"react-router\";\n//#endregion\n\ndeclare global {\n  var __staticRouterHydrationData: HydrationState | undefined;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Routers\n////////////////////////////////////////////////////////////////////////////////\n\ninterface DOMRouterOpts {\n  basename?: string;\n  future?: Partial<Omit<RouterFutureConfig, \"v7_prependBasename\">>;\n  hydrationData?: HydrationState;\n  window?: Window;\n}\n\nexport function createBrowserRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createBrowserHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nexport function createHashRouter(\n  routes: RouteObject[],\n  opts?: DOMRouterOpts\n): RemixRouter {\n  return createRouter({\n    basename: opts?.basename,\n    future: {\n      ...opts?.future,\n      v7_prependBasename: true,\n    },\n    history: createHashHistory({ window: opts?.window }),\n    hydrationData: opts?.hydrationData || parseHydrationData(),\n    routes,\n    mapRouteProperties,\n  }).initialize();\n}\n\nfunction parseHydrationData(): HydrationState | undefined {\n  let state = window?.__staticRouterHydrationData;\n  if (state && state.errors) {\n    state = {\n      ...state,\n      errors: deserializeErrors(state.errors),\n    };\n  }\n  return state;\n}\n\nfunction deserializeErrors(\n  errors: RemixRouter[\"state\"][\"errors\"]\n): RemixRouter[\"state\"][\"errors\"] {\n  if (!errors) return null;\n  let entries = Object.entries(errors);\n  let serialized: RemixRouter[\"state\"][\"errors\"] = {};\n  for (let [key, val] of entries) {\n    // Hey you!  If you change this, please change the corresponding logic in\n    // serializeErrors in react-router-dom/server.tsx :)\n    if (val && val.__type === \"RouteErrorResponse\") {\n      serialized[key] = new ErrorResponseImpl(\n        val.status,\n        val.statusText,\n        val.data,\n        val.internal === true\n      );\n    } else if (val && val.__type === \"Error\") {\n      // Attempt to reconstruct the right type of Error (i.e., ReferenceError)\n      if (val.__subType) {\n        let ErrorConstructor = window[val.__subType];\n        if (typeof ErrorConstructor === \"function\") {\n          try {\n            // @ts-expect-error\n            let error = new ErrorConstructor(val.message);\n            // Wipe away the client-side stack trace.  Nothing to fill it in with\n            // because we don't serialize SSR stack traces for security reasons\n            error.stack = \"\";\n            serialized[key] = error;\n          } catch (e) {\n            // no-op - fall through and create a normal Error\n          }\n        }\n      }\n\n      if (serialized[key] == null) {\n        let error = new Error(val.message);\n        // Wipe away the client-side stack trace.  Nothing to fill it in with\n        // because we don't serialize SSR stack traces for security reasons\n        error.stack = \"\";\n        serialized[key] = error;\n      }\n    } else {\n      serialized[key] = val;\n    }\n  }\n  return serialized;\n}\n\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Components\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  future,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({\n  basename,\n  children,\n  future,\n  window,\n}: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window, v5Compat: true });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  future?: FutureConfig;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({\n  basename,\n  children,\n  future,\n  history,\n}: HistoryRouterProps) {\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n  to: To;\n}\n\nconst isBrowser =\n  typeof window !== \"undefined\" &&\n  typeof window.document !== \"undefined\" &&\n  typeof window.document.createElement !== \"undefined\";\n\nconst ABSOLUTE_URL_REGEX = /^(?:[a-z][a-z0-9+.-]*:|\\/\\/)/i;\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    {\n      onClick,\n      relative,\n      reloadDocument,\n      replace,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      ...rest\n    },\n    ref\n  ) {\n    let { basename } = React.useContext(NavigationContext);\n\n    // Rendered into <a href> for absolute URLs\n    let absoluteHref;\n    let isExternal = false;\n\n    if (typeof to === \"string\" && ABSOLUTE_URL_REGEX.test(to)) {\n      // Render the absolute href server- and client-side\n      absoluteHref = to;\n\n      // Only check for external origins client-side\n      if (isBrowser) {\n        try {\n          let currentUrl = new URL(window.location.href);\n          let targetUrl = to.startsWith(\"//\")\n            ? new URL(currentUrl.protocol + to)\n            : new URL(to);\n          let path = stripBasename(targetUrl.pathname, basename);\n\n          if (targetUrl.origin === currentUrl.origin && path != null) {\n            // Strip the protocol/origin/basename for same-origin absolute URLs\n            to = path + targetUrl.search + targetUrl.hash;\n          } else {\n            isExternal = true;\n          }\n        } catch (e) {\n          // We can't do external URL detection without a valid URL\n          warning(\n            false,\n            `<Link to=\"${to}\"> contains an invalid URL which will probably break ` +\n              `when clicked - please update to a valid URL path.`\n          );\n        }\n      }\n    }\n\n    // Rendered into <a href> for relative URLs\n    let href = useHref(to, { relative });\n\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target,\n      preventScrollReset,\n      relative,\n    });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={absoluteHref || href}\n        onClick={isExternal || reloadDocument ? onClick : handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean; isPending: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?:\n    | string\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: {\n        isActive: boolean;\n        isPending: boolean;\n      }) => React.CSSProperties | undefined);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let path = useResolvedPath(to, { relative: rest.relative });\n    let location = useLocation();\n    let routerState = React.useContext(DataRouterStateContext);\n    let { navigator } = React.useContext(NavigationContext);\n\n    let toPathname = navigator.encodeLocation\n      ? navigator.encodeLocation(path).pathname\n      : path.pathname;\n    let locationPathname = location.pathname;\n    let nextLocationPathname =\n      routerState && routerState.navigation && routerState.navigation.location\n        ? routerState.navigation.location.pathname\n        : null;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      nextLocationPathname = nextLocationPathname\n        ? nextLocationPathname.toLowerCase()\n        : null;\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let isPending =\n      nextLocationPathname != null &&\n      (nextLocationPathname === toPathname ||\n        (!end &&\n          nextLocationPathname.startsWith(toPathname) &&\n          nextLocationPathname.charAt(toPathname.length) === \"/\"));\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive, isPending });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [\n        classNameProp,\n        isActive ? \"active\" : null,\n        isPending ? \"pending\" : null,\n      ]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\"\n        ? styleProp({ isActive, isPending })\n        : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\"\n          ? children({ isActive, isPending })\n          : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\nexport interface FetcherFormProps\n  extends React.FormHTMLAttributes<HTMLFormElement> {\n  /**\n   * The HTTP verb to use when the form is submit. Supports \"get\", \"post\",\n   * \"put\", \"delete\", \"patch\".\n   */\n  method?: HTMLFormMethod;\n\n  /**\n   * `<form encType>` - enhancing beyond the normal string type and limiting\n   * to the built-in browser supported values\n   */\n  encType?:\n    | \"application/x-www-form-urlencoded\"\n    | \"multipart/form-data\"\n    | \"text/plain\";\n\n  /**\n   * Normal `<form action>` but supports React Router's relative paths.\n   */\n  action?: string;\n\n  /**\n   * Determines whether the form action is relative to the route hierarchy or\n   * the pathname.  Use this if you want to opt out of navigating the route\n   * hierarchy and want to instead route based on /-delimited URL segments\n   */\n  relative?: RelativeRoutingType;\n\n  /**\n   * Prevent the scroll position from resetting to the top of the viewport on\n   * completion of the navigation when using the <ScrollRestoration> component\n   */\n  preventScrollReset?: boolean;\n\n  /**\n   * A function to call when the form is submitted. If you call\n   * `event.preventDefault()` then this form will not do anything.\n   */\n  onSubmit?: React.FormEventHandler<HTMLFormElement>;\n}\n\nexport interface FormProps extends FetcherFormProps {\n  /**\n   * Forces a full document navigation instead of a fetch.\n   */\n  reloadDocument?: boolean;\n\n  /**\n   * Replaces the current entry in the browser history stack when the form\n   * navigates. Use this if you don't want the user to be able to click \"back\"\n   * to the page with the form on it.\n   */\n  replace?: boolean;\n\n  /**\n   * State object to add to the history stack entry for this navigation\n   */\n  state?: any;\n}\n\n/**\n * A `@remix-run/router`-aware `<form>`. It behaves like a normal form except\n * that the interaction with the server is with `fetch` instead of new document\n * requests, allowing components to add nicer UX to the page as the form is\n * submitted and returns with data.\n */\nexport const Form = React.forwardRef<HTMLFormElement, FormProps>(\n  (props, ref) => {\n    let submit = useSubmit();\n    return <FormImpl {...props} submit={submit} ref={ref} />;\n  }\n);\n\nif (__DEV__) {\n  Form.displayName = \"Form\";\n}\n\ntype HTMLSubmitEvent = React.BaseSyntheticEvent<\n  SubmitEvent,\n  Event,\n  HTMLFormElement\n>;\n\ntype HTMLFormSubmitter = HTMLButtonElement | HTMLInputElement;\n\ninterface FormImplProps extends FormProps {\n  submit: SubmitFunction | FetcherSubmitFunction;\n}\n\nconst FormImpl = React.forwardRef<HTMLFormElement, FormImplProps>(\n  (\n    {\n      reloadDocument,\n      replace,\n      state,\n      method = defaultMethod,\n      action,\n      onSubmit,\n      submit,\n      relative,\n      preventScrollReset,\n      ...props\n    },\n    forwardedRef\n  ) => {\n    let formMethod: HTMLFormMethod =\n      method.toLowerCase() === \"get\" ? \"get\" : \"post\";\n    let formAction = useFormAction(action, { relative });\n    let submitHandler: React.FormEventHandler<HTMLFormElement> = (event) => {\n      onSubmit && onSubmit(event);\n      if (event.defaultPrevented) return;\n      event.preventDefault();\n\n      let submitter = (event as unknown as HTMLSubmitEvent).nativeEvent\n        .submitter as HTMLFormSubmitter | null;\n\n      let submitMethod =\n        (submitter?.getAttribute(\"formmethod\") as HTMLFormMethod | undefined) ||\n        method;\n\n      submit(submitter || event.currentTarget, {\n        method: submitMethod,\n        replace,\n        state,\n        relative,\n        preventScrollReset,\n      });\n    };\n\n    return (\n      <form\n        ref={forwardedRef}\n        method={formMethod}\n        action={formAction}\n        onSubmit={reloadDocument ? onSubmit : submitHandler}\n        {...props}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  FormImpl.displayName = \"FormImpl\";\n}\n\nexport interface ScrollRestorationProps {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n}\n\n/**\n * This component will emulate the browser's scroll restoration on location\n * changes.\n */\nexport function ScrollRestoration({\n  getKey,\n  storageKey,\n}: ScrollRestorationProps) {\n  useScrollRestoration({ getKey, storageKey });\n  return null;\n}\n\nif (__DEV__) {\n  ScrollRestoration.displayName = \"ScrollRestoration\";\n}\n//#endregion\n\n////////////////////////////////////////////////////////////////////////////////\n//#region Hooks\n////////////////////////////////////////////////////////////////////////////////\n\nenum DataRouterHook {\n  UseScrollRestoration = \"useScrollRestoration\",\n  UseSubmit = \"useSubmit\",\n  UseSubmitFetcher = \"useSubmitFetcher\",\n  UseFetcher = \"useFetcher\",\n}\n\nenum DataRouterStateHook {\n  UseFetchers = \"useFetchers\",\n  UseScrollRestoration = \"useScrollRestoration\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n    preventScrollReset,\n    relative,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n    preventScrollReset?: boolean;\n    relative?: RelativeRoutingType;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to, { relative });\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (shouldProcessLinkClick(event, target)) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here unless the replace prop is explicitly set\n        let replace =\n          replaceProp !== undefined\n            ? replaceProp\n            : createPath(location) === createPath(path);\n\n        navigate(to, { replace, state, preventScrollReset, relative });\n      }\n    },\n    [\n      location,\n      navigate,\n      path,\n      replaceProp,\n      state,\n      target,\n      to,\n      preventScrollReset,\n      relative,\n    ]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(\n  defaultInit?: URLSearchParamsInit\n): [URLSearchParams, SetURLSearchParams] {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n  let hasSetSearchParamsRef = React.useRef(false);\n\n  let location = useLocation();\n  let searchParams = React.useMemo(\n    () =>\n      // Only merge in the defaults if we haven't yet called setSearchParams.\n      // Once we call that we want those to take precedence, otherwise you can't\n      // remove a param with setSearchParams({}) if it has an initial value\n      getSearchParamsForLocation(\n        location.search,\n        hasSetSearchParamsRef.current ? null : defaultSearchParamsRef.current\n      ),\n    [location.search]\n  );\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback<SetURLSearchParams>(\n    (nextInit, navigateOptions) => {\n      const newSearchParams = createSearchParams(\n        typeof nextInit === \"function\" ? nextInit(searchParams) : nextInit\n      );\n      hasSetSearchParamsRef.current = true;\n      navigate(\"?\" + newSearchParams, navigateOptions);\n    },\n    [navigate, searchParams]\n  );\n\n  return [searchParams, setSearchParams];\n}\n\nexport type SetURLSearchParams = (\n  nextInit?:\n    | URLSearchParamsInit\n    | ((prev: URLSearchParams) => URLSearchParamsInit),\n  navigateOpts?: NavigateOptions\n) => void;\n\n/**\n * Submits a HTML `<form>` to the server without reloading the page.\n */\nexport interface SubmitFunction {\n  (\n    /**\n     * Specifies the `<form>` to be submitted to the server, a specific\n     * `<button>` or `<input type=\"submit\">` to use to submit the form, or some\n     * arbitrary data to submit.\n     *\n     * Note: When using a `<button>` its `name` and `value` will also be\n     * included in the form data that is submitted.\n     */\n    target: SubmitTarget,\n\n    /**\n     * Options that override the `<form>`'s own attributes. Required when\n     * submitting arbitrary data without a backing `<form>`.\n     */\n    options?: SubmitOptions\n  ): void;\n}\n\n/**\n * Submits a fetcher `<form>` to the server without reloading the page.\n */\nexport interface FetcherSubmitFunction {\n  (\n    target: SubmitTarget,\n    // Fetchers cannot replace or set state because they are not navigation events\n    options?: Omit<SubmitOptions, \"replace\" | \"state\">\n  ): void;\n}\n\nfunction validateClientSideSubmission() {\n  if (typeof document === \"undefined\") {\n    throw new Error(\n      \"You are calling submit during the server render. \" +\n        \"Try calling submit within a `useEffect` or callback instead.\"\n    );\n  }\n}\n\n/**\n * Returns a function that may be used to programmatically submit a form (or\n * some arbitrary data) to the server.\n */\nexport function useSubmit(): SubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmit);\n  let { basename } = React.useContext(NavigationContext);\n  let currentRouteId = useRouteId();\n\n  return React.useCallback<SubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      router.navigate(options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n        replace: options.replace,\n        state: options.state,\n        fromRouteId: currentRouteId,\n      });\n    },\n    [router, basename, currentRouteId]\n  );\n}\n\n/**\n * Returns the implementation for fetcher.submit\n */\nfunction useSubmitFetcher(\n  fetcherKey: string,\n  fetcherRouteId: string\n): FetcherSubmitFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseSubmitFetcher);\n  let { basename } = React.useContext(NavigationContext);\n\n  return React.useCallback<FetcherSubmitFunction>(\n    (target, options = {}) => {\n      validateClientSideSubmission();\n\n      let { action, method, encType, formData, body } = getFormSubmissionInfo(\n        target,\n        basename\n      );\n\n      invariant(\n        fetcherRouteId != null,\n        \"No routeId available for useFetcher()\"\n      );\n      router.fetch(fetcherKey, fetcherRouteId, options.action || action, {\n        preventScrollReset: options.preventScrollReset,\n        formData,\n        body,\n        formMethod: options.method || (method as HTMLFormMethod),\n        formEncType: options.encType || (encType as FormEncType),\n      });\n    },\n    [router, basename, fetcherKey, fetcherRouteId]\n  );\n}\n\n// v7: Eventually we should deprecate this entirely in favor of using the\n// router method directly?\nexport function useFormAction(\n  action?: string,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  let { basename } = React.useContext(NavigationContext);\n  let routeContext = React.useContext(RouteContext);\n  invariant(routeContext, \"useFormAction must be used inside a RouteContext\");\n\n  let [match] = routeContext.matches.slice(-1);\n  // Shallow clone path so we can modify it below, otherwise we modify the\n  // object referenced by useMemo inside useResolvedPath\n  let path = { ...useResolvedPath(action ? action : \".\", { relative }) };\n\n  // Previously we set the default action to \".\". The problem with this is that\n  // `useResolvedPath(\".\")` excludes search params of the resolved URL. This is\n  // the intended behavior of when \".\" is specifically provided as\n  // the form action, but inconsistent w/ browsers when the action is omitted.\n  // https://github.com/remix-run/remix/issues/927\n  let location = useLocation();\n  if (action == null) {\n    // Safe to write to this directly here since if action was undefined, we\n    // would have called useResolvedPath(\".\") which will never include a search\n    path.search = location.search;\n\n    // When grabbing search params from the URL, remove the automatically\n    // inserted ?index param so we match the useResolvedPath search behavior\n    // which would not include ?index\n    if (match.route.index) {\n      let params = new URLSearchParams(path.search);\n      params.delete(\"index\");\n      path.search = params.toString() ? `?${params.toString()}` : \"\";\n    }\n  }\n\n  if ((!action || action === \".\") && match.route.index) {\n    path.search = path.search\n      ? path.search.replace(/^\\?/, \"?index&\")\n      : \"?index\";\n  }\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the form action.  If this is a root navigation, then just use\n  // the raw basename which allows the basename to have full control over the\n  // presence of a trailing slash on root actions\n  if (basename !== \"/\") {\n    path.pathname =\n      path.pathname === \"/\" ? basename : joinPaths([basename, path.pathname]);\n  }\n\n  return createPath(path);\n}\n\nfunction createFetcherForm(fetcherKey: string, routeId: string) {\n  let FetcherForm = React.forwardRef<HTMLFormElement, FetcherFormProps>(\n    (props, ref) => {\n      let submit = useSubmitFetcher(fetcherKey, routeId);\n      return <FormImpl {...props} ref={ref} submit={submit} />;\n    }\n  );\n  if (__DEV__) {\n    FetcherForm.displayName = \"fetcher.Form\";\n  }\n  return FetcherForm;\n}\n\nlet fetcherId = 0;\n\nexport type FetcherWithComponents<TData> = Fetcher<TData> & {\n  Form: ReturnType<typeof createFetcherForm>;\n  submit: FetcherSubmitFunction;\n  load: (href: string) => void;\n};\n\n// TODO: (v7) Change the useFetcher generic default from `any` to `unknown`\n\n/**\n * Interacts with route loaders and actions without causing a navigation. Great\n * for any interaction that stays on the same page.\n */\nexport function useFetcher<TData = any>(): FetcherWithComponents<TData> {\n  let { router } = useDataRouterContext(DataRouterHook.UseFetcher);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useFetcher must be used inside a RouteContext`);\n\n  let routeId = route.matches[route.matches.length - 1]?.route.id;\n  invariant(\n    routeId != null,\n    `useFetcher can only be used on routes that contain a unique \"id\"`\n  );\n\n  let [fetcherKey] = React.useState(() => String(++fetcherId));\n  let [Form] = React.useState(() => {\n    invariant(routeId, `No routeId available for fetcher.Form()`);\n    return createFetcherForm(fetcherKey, routeId);\n  });\n  let [load] = React.useState(() => (href: string) => {\n    invariant(router, \"No router available for fetcher.load()\");\n    invariant(routeId, \"No routeId available for fetcher.load()\");\n    router.fetch(fetcherKey, routeId, href);\n  });\n  let submit = useSubmitFetcher(fetcherKey, routeId);\n\n  let fetcher = router.getFetcher<TData>(fetcherKey);\n\n  let fetcherWithComponents = React.useMemo(\n    () => ({\n      Form,\n      submit,\n      load,\n      ...fetcher,\n    }),\n    [fetcher, Form, submit, load]\n  );\n\n  React.useEffect(() => {\n    // Is this busted when the React team gets real weird and calls effects\n    // twice on mount?  We really just need to garbage collect here when this\n    // fetcher is no longer around.\n    return () => {\n      if (!router) {\n        console.warn(`No router available to clean up from useFetcher()`);\n        return;\n      }\n      router.deleteFetcher(fetcherKey);\n    };\n  }, [router, fetcherKey]);\n\n  return fetcherWithComponents;\n}\n\n/**\n * Provides all fetchers currently on the page. Useful for layouts and parent\n * routes that need to provide pending/optimistic UI regarding the fetch.\n */\nexport function useFetchers(): Fetcher[] {\n  let state = useDataRouterState(DataRouterStateHook.UseFetchers);\n  return [...state.fetchers.values()];\n}\n\nconst SCROLL_RESTORATION_STORAGE_KEY = \"react-router-scroll-positions\";\nlet savedScrollPositions: Record<string, number> = {};\n\n/**\n * When rendered inside a RouterProvider, will restore scroll positions on navigations\n */\nfunction useScrollRestoration({\n  getKey,\n  storageKey,\n}: {\n  getKey?: GetScrollRestorationKeyFunction;\n  storageKey?: string;\n} = {}) {\n  let { router } = useDataRouterContext(DataRouterHook.UseScrollRestoration);\n  let { restoreScrollPosition, preventScrollReset } = useDataRouterState(\n    DataRouterStateHook.UseScrollRestoration\n  );\n  let { basename } = React.useContext(NavigationContext);\n  let location = useLocation();\n  let matches = useMatches();\n  let navigation = useNavigation();\n\n  // Trigger manual scroll restoration while we're active\n  React.useEffect(() => {\n    window.history.scrollRestoration = \"manual\";\n    return () => {\n      window.history.scrollRestoration = \"auto\";\n    };\n  }, []);\n\n  // Save positions on pagehide\n  usePageHide(\n    React.useCallback(() => {\n      if (navigation.state === \"idle\") {\n        let key = (getKey ? getKey(location, matches) : null) || location.key;\n        savedScrollPositions[key] = window.scrollY;\n      }\n      sessionStorage.setItem(\n        storageKey || SCROLL_RESTORATION_STORAGE_KEY,\n        JSON.stringify(savedScrollPositions)\n      );\n      window.history.scrollRestoration = \"auto\";\n    }, [storageKey, getKey, navigation.state, location, matches])\n  );\n\n  // Read in any saved scroll locations\n  if (typeof document !== \"undefined\") {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      try {\n        let sessionPositions = sessionStorage.getItem(\n          storageKey || SCROLL_RESTORATION_STORAGE_KEY\n        );\n        if (sessionPositions) {\n          savedScrollPositions = JSON.parse(sessionPositions);\n        }\n      } catch (e) {\n        // no-op, use default empty object\n      }\n    }, [storageKey]);\n\n    // Enable scroll restoration in the router\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      let getKeyWithoutBasename: GetScrollRestorationKeyFunction | undefined =\n        getKey && basename !== \"/\"\n          ? (location, matches) =>\n              getKey(\n                // Strip the basename to match useLocation()\n                {\n                  ...location,\n                  pathname:\n                    stripBasename(location.pathname, basename) ||\n                    location.pathname,\n                },\n                matches\n              )\n          : getKey;\n      let disableScrollRestoration = router?.enableScrollRestoration(\n        savedScrollPositions,\n        () => window.scrollY,\n        getKeyWithoutBasename\n      );\n      return () => disableScrollRestoration && disableScrollRestoration();\n    }, [router, basename, getKey]);\n\n    // Restore scrolling when state.restoreScrollPosition changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(() => {\n      // Explicit false means don't do anything (used for submissions)\n      if (restoreScrollPosition === false) {\n        return;\n      }\n\n      // been here before, scroll to it\n      if (typeof restoreScrollPosition === \"number\") {\n        window.scrollTo(0, restoreScrollPosition);\n        return;\n      }\n\n      // try to scroll to the hash\n      if (location.hash) {\n        let el = document.getElementById(\n          decodeURIComponent(location.hash.slice(1))\n        );\n        if (el) {\n          el.scrollIntoView();\n          return;\n        }\n      }\n\n      // Don't reset if this navigation opted out\n      if (preventScrollReset === true) {\n        return;\n      }\n\n      // otherwise go to the top on new locations\n      window.scrollTo(0, 0);\n    }, [location, restoreScrollPosition, preventScrollReset]);\n  }\n}\n\nexport { useScrollRestoration as UNSAFE_useScrollRestoration };\n\n/**\n * Setup a callback to be fired on the window's `beforeunload` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nexport function useBeforeUnload(\n  callback: (event: BeforeUnloadEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"beforeunload\", callback, opts);\n    return () => {\n      window.removeEventListener(\"beforeunload\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Setup a callback to be fired on the window's `pagehide` event. This is\n * useful for saving some data to `window.localStorage` just before the page\n * refreshes.  This event is better supported than beforeunload across browsers.\n *\n * Note: The `callback` argument should be a function created with\n * `React.useCallback()`.\n */\nfunction usePageHide(\n  callback: (event: PageTransitionEvent) => any,\n  options?: { capture?: boolean }\n): void {\n  let { capture } = options || {};\n  React.useEffect(() => {\n    let opts = capture != null ? { capture } : undefined;\n    window.addEventListener(\"pagehide\", callback, opts);\n    return () => {\n      window.removeEventListener(\"pagehide\", callback, opts);\n    };\n  }, [callback, capture]);\n}\n\n/**\n * Wrapper around useBlocker to show a window.confirm prompt to users instead\n * of building a custom UI with useBlocker.\n *\n * Warning: This has *a lot of rough edges* and behaves very differently (and\n * very incorrectly in some cases) across browsers if user click addition\n * back/forward navigations while the confirm is open.  Use at your own risk.\n */\nfunction usePrompt({ when, message }: { when: boolean; message: string }) {\n  let blocker = useBlocker(when);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\") {\n      let proceed = window.confirm(message);\n      if (proceed) {\n        // This timeout is needed to avoid a weird \"race\" on POP navigations\n        // between the `window.history` revert navigation and the result of\n        // `window.confirm`\n        setTimeout(blocker.proceed, 0);\n      } else {\n        blocker.reset();\n      }\n    }\n  }, [blocker, message]);\n\n  React.useEffect(() => {\n    if (blocker.state === \"blocked\" && !when) {\n      blocker.reset();\n    }\n  }, [blocker, when]);\n}\n\nexport { usePrompt as unstable_usePrompt };\n\n//#endregion\n","import * as React from \"react\";\nimport type {\n  AgnosticIndexRouteObject,\n  AgnosticNonIndexRouteObject,\n  AgnosticRouteMatch,\n  History,\n  LazyRouteFunction,\n  Location,\n  Action as NavigationType,\n  RelativeRoutingType,\n  Router,\n  StaticHandlerContext,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\n\n// Create react-specific types from the agnostic types in @remix-run/router to\n// export from react-router\nexport interface IndexRouteObject {\n  caseSensitive?: AgnosticIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticIndexRouteObject[\"path\"];\n  id?: AgnosticIndexRouteObject[\"id\"];\n  loader?: AgnosticIndexRouteObject[\"loader\"];\n  action?: AgnosticIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticIndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport interface NonIndexRouteObject {\n  caseSensitive?: AgnosticNonIndexRouteObject[\"caseSensitive\"];\n  path?: AgnosticNonIndexRouteObject[\"path\"];\n  id?: AgnosticNonIndexRouteObject[\"id\"];\n  loader?: AgnosticNonIndexRouteObject[\"loader\"];\n  action?: AgnosticNonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: AgnosticNonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: AgnosticNonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: AgnosticNonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: RouteObject[];\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n  lazy?: LazyRouteFunction<RouteObject>;\n}\n\nexport type RouteObject = IndexRouteObject | NonIndexRouteObject;\n\nexport type DataRouteObject = RouteObject & {\n  children?: DataRouteObject[];\n  id: string;\n};\n\nexport interface RouteMatch<\n  ParamKey extends string = string,\n  RouteObjectType extends RouteObject = RouteObject\n> extends AgnosticRouteMatch<ParamKey, RouteObjectType> {}\n\nexport interface DataRouteMatch extends RouteMatch<string, DataRouteObject> {}\n\nexport interface DataRouterContextObject extends NavigationContextObject {\n  router: Router;\n  staticContext?: StaticHandlerContext;\n}\n\nexport const DataRouterContext =\n  React.createContext<DataRouterContextObject | null>(null);\nif (__DEV__) {\n  DataRouterContext.displayName = \"DataRouter\";\n}\n\nexport const DataRouterStateContext = React.createContext<\n  Router[\"state\"] | null\n>(null);\nif (__DEV__) {\n  DataRouterStateContext.displayName = \"DataRouterState\";\n}\n\nexport const AwaitContext = React.createContext<TrackedPromise | null>(null);\nif (__DEV__) {\n  AwaitContext.displayName = \"Await\";\n}\n\nexport interface NavigateOptions {\n  replace?: boolean;\n  state?: any;\n  preventScrollReset?: boolean;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * A Navigator is a \"location changer\"; it's how you get to different locations.\n *\n * Every history instance conforms to the Navigator interface, but the\n * distinction is useful primarily when it comes to the low-level <Router> API\n * where both the location and a navigator must be provided separately in order\n * to avoid \"tearing\" that may occur in a suspense-enabled app if the action\n * and/or location were to be read directly from the history instance.\n */\nexport interface Navigator {\n  createHref: History[\"createHref\"];\n  // Optional for backwards-compat with Router/HistoryRouter usage (edge case)\n  encodeLocation?: History[\"encodeLocation\"];\n  go: History[\"go\"];\n  push(to: To, state?: any, opts?: NavigateOptions): void;\n  replace(to: To, state?: any, opts?: NavigateOptions): void;\n}\n\ninterface NavigationContextObject {\n  basename: string;\n  navigator: Navigator;\n  static: boolean;\n}\n\nexport const NavigationContext = React.createContext<NavigationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  NavigationContext.displayName = \"Navigation\";\n}\n\ninterface LocationContextObject {\n  location: Location;\n  navigationType: NavigationType;\n}\n\nexport const LocationContext = React.createContext<LocationContextObject>(\n  null!\n);\n\nif (__DEV__) {\n  LocationContext.displayName = \"Location\";\n}\n\nexport interface RouteContextObject {\n  outlet: React.ReactElement | null;\n  matches: RouteMatch[];\n  isDataRoute: boolean;\n}\n\nexport const RouteContext = React.createContext<RouteContextObject>({\n  outlet: null,\n  matches: [],\n  isDataRoute: false,\n});\n\nif (__DEV__) {\n  RouteContext.displayName = \"Route\";\n}\n\nexport const RouteErrorContext = React.createContext<any>(null);\n\nif (__DEV__) {\n  RouteErrorContext.displayName = \"RouteError\";\n}\n","import * as React from \"react\";\nimport type {\n  Blocker,\n  BlockerFunction,\n  Location,\n  ParamParseKey,\n  Params,\n  Path,\n  PathMatch,\n  PathPattern,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RevalidationState,\n  To,\n  UIMatch,\n} from \"@remix-run/router\";\nimport {\n  IDLE_BLOCKER,\n  Action as NavigationType,\n  UNSAFE_convertRouteMatchToUiMatch as convertRouteMatchToUiMatch,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n  UNSAFE_invariant as invariant,\n  isRouteErrorResponse,\n  joinPaths,\n  matchPath,\n  matchRoutes,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\n\nimport type {\n  DataRouteMatch,\n  NavigateOptions,\n  RouteContextObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n  RouteErrorContext,\n} from \"./context\";\n\n/**\n * Returns the full href for the given \"to\" value. This is useful for building\n * custom links that are also accessible and preserve right-click behavior.\n *\n * @see https://reactrouter.com/hooks/use-href\n */\nexport function useHref(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): string {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useHref() may be used only in the context of a <Router> component.`\n  );\n\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { hash, pathname, search } = useResolvedPath(to, { relative });\n\n  let joinedPathname = pathname;\n\n  // If we're operating within a basename, prepend it to the pathname prior\n  // to creating the href.  If this is a root navigation, then just use the raw\n  // basename which allows the basename to have full control over the presence\n  // of a trailing slash on root links\n  if (basename !== \"/\") {\n    joinedPathname =\n      pathname === \"/\" ? basename : joinPaths([basename, pathname]);\n  }\n\n  return navigator.createHref({ pathname: joinedPathname, search, hash });\n}\n\n/**\n * Returns true if this component is a descendant of a <Router>.\n *\n * @see https://reactrouter.com/hooks/use-in-router-context\n */\nexport function useInRouterContext(): boolean {\n  return React.useContext(LocationContext) != null;\n}\n\n/**\n * Returns the current location object, which represents the current URL in web\n * browsers.\n *\n * Note: If you're using this it may mean you're doing some of your own\n * \"routing\" in your app, and we'd like to know what your use case is. We may\n * be able to provide something higher-level to better suit your needs.\n *\n * @see https://reactrouter.com/hooks/use-location\n */\nexport function useLocation(): Location {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useLocation() may be used only in the context of a <Router> component.`\n  );\n\n  return React.useContext(LocationContext).location;\n}\n\n/**\n * Returns the current navigation action which describes how the router came to\n * the current location, either by a pop, push, or replace on the history stack.\n *\n * @see https://reactrouter.com/hooks/use-navigation-type\n */\nexport function useNavigationType(): NavigationType {\n  return React.useContext(LocationContext).navigationType;\n}\n\n/**\n * Returns a PathMatch object if the given pattern matches the current URL.\n * This is useful for components that need to know \"active\" state, e.g.\n * <NavLink>.\n *\n * @see https://reactrouter.com/hooks/use-match\n */\nexport function useMatch<\n  ParamKey extends ParamParseKey<Path>,\n  Path extends string\n>(pattern: PathPattern<Path> | Path): PathMatch<ParamKey> | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useMatch() may be used only in the context of a <Router> component.`\n  );\n\n  let { pathname } = useLocation();\n  return React.useMemo(\n    () => matchPath<ParamKey, Path>(pattern, pathname),\n    [pathname, pattern]\n  );\n}\n\n/**\n * The interface for the navigate() function returned from useNavigate().\n */\nexport interface NavigateFunction {\n  (to: To, options?: NavigateOptions): void;\n  (delta: number): void;\n}\n\nconst navigateEffectWarning =\n  `You should call navigate() in a React.useEffect(), not when ` +\n  `your component is first rendered.`;\n\n// Mute warnings for calls to useNavigate in SSR environments\nfunction useIsomorphicLayoutEffect(\n  cb: Parameters<typeof React.useLayoutEffect>[0]\n) {\n  let isStatic = React.useContext(NavigationContext).static;\n  if (!isStatic) {\n    // We should be able to get rid of this once react 18.3 is released\n    // See: https://github.com/facebook/react/pull/26395\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useLayoutEffect(cb);\n  }\n}\n\n/**\n * Returns an imperative method for changing the location. Used by <Link>s, but\n * may also be used by other elements to change the location.\n *\n * @see https://reactrouter.com/hooks/use-navigate\n */\nexport function useNavigate(): NavigateFunction {\n  let { isDataRoute } = React.useContext(RouteContext);\n  // Conditional usage is OK here because the usage of a data router is static\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  return isDataRoute ? useNavigateStable() : useNavigateUnstable();\n}\n\nfunction useNavigateUnstable(): NavigateFunction {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useNavigate() may be used only in the context of a <Router> component.`\n  );\n\n  let dataRouterContext = React.useContext(DataRouterContext);\n  let { basename, navigator } = React.useContext(NavigationContext);\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our history listener yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        navigator.go(to);\n        return;\n      }\n\n      let path = resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        options.relative === \"path\"\n      );\n\n      // If we're operating within a basename, prepend it to the pathname prior\n      // to handing off to history (but only if we're not in a data router,\n      // otherwise it'll prepend the basename inside of the router).\n      // If this is a root navigation, then we navigate to the raw basename\n      // which allows the basename to have full control over the presence of a\n      // trailing slash on root links\n      if (dataRouterContext == null && basename !== \"/\") {\n        path.pathname =\n          path.pathname === \"/\"\n            ? basename\n            : joinPaths([basename, path.pathname]);\n      }\n\n      (!!options.replace ? navigator.replace : navigator.push)(\n        path,\n        options.state,\n        options\n      );\n    },\n    [\n      basename,\n      navigator,\n      routePathnamesJson,\n      locationPathname,\n      dataRouterContext,\n    ]\n  );\n\n  return navigate;\n}\n\nconst OutletContext = React.createContext<unknown>(null);\n\n/**\n * Returns the context (if provided) for the child route at this level of the route\n * hierarchy.\n * @see https://reactrouter.com/hooks/use-outlet-context\n */\nexport function useOutletContext<Context = unknown>(): Context {\n  return React.useContext(OutletContext) as Context;\n}\n\n/**\n * Returns the element for the child route at this level of the route\n * hierarchy. Used internally by <Outlet> to render child routes.\n *\n * @see https://reactrouter.com/hooks/use-outlet\n */\nexport function useOutlet(context?: unknown): React.ReactElement | null {\n  let outlet = React.useContext(RouteContext).outlet;\n  if (outlet) {\n    return (\n      <OutletContext.Provider value={context}>{outlet}</OutletContext.Provider>\n    );\n  }\n  return outlet;\n}\n\n/**\n * Returns an object of key/value pairs of the dynamic params from the current\n * URL that were matched by the route path.\n *\n * @see https://reactrouter.com/hooks/use-params\n */\nexport function useParams<\n  ParamsOrKey extends string | Record<string, string | undefined> = string\n>(): Readonly<\n  [ParamsOrKey] extends [string] ? Params<ParamsOrKey> : Partial<ParamsOrKey>\n> {\n  let { matches } = React.useContext(RouteContext);\n  let routeMatch = matches[matches.length - 1];\n  return routeMatch ? (routeMatch.params as any) : {};\n}\n\n/**\n * Resolves the pathname of the given `to` value against the current location.\n *\n * @see https://reactrouter.com/hooks/use-resolved-path\n */\nexport function useResolvedPath(\n  to: To,\n  { relative }: { relative?: RelativeRoutingType } = {}\n): Path {\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n\n  let routePathnamesJson = JSON.stringify(\n    getPathContributingMatches(matches).map((match) => match.pathnameBase)\n  );\n\n  return React.useMemo(\n    () =>\n      resolveTo(\n        to,\n        JSON.parse(routePathnamesJson),\n        locationPathname,\n        relative === \"path\"\n      ),\n    [to, routePathnamesJson, locationPathname, relative]\n  );\n}\n\n/**\n * Returns the element of the route that matched the current location, prepared\n * with the correct context to render the remainder of the route tree. Route\n * elements in the tree must render an <Outlet> to render their child route's\n * element.\n *\n * @see https://reactrouter.com/hooks/use-routes\n */\nexport function useRoutes(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string\n): React.ReactElement | null {\n  return useRoutesImpl(routes, locationArg);\n}\n\n// Internal implementation with accept optional param for RouterProvider usage\nexport function useRoutesImpl(\n  routes: RouteObject[],\n  locationArg?: Partial<Location> | string,\n  dataRouterState?: RemixRouter[\"state\"]\n): React.ReactElement | null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of the\n    // router loaded. We can help them understand how to avoid that.\n    `useRoutes() may be used only in the context of a <Router> component.`\n  );\n\n  let { navigator } = React.useContext(NavigationContext);\n  let { matches: parentMatches } = React.useContext(RouteContext);\n  let routeMatch = parentMatches[parentMatches.length - 1];\n  let parentParams = routeMatch ? routeMatch.params : {};\n  let parentPathname = routeMatch ? routeMatch.pathname : \"/\";\n  let parentPathnameBase = routeMatch ? routeMatch.pathnameBase : \"/\";\n  let parentRoute = routeMatch && routeMatch.route;\n\n  if (__DEV__) {\n    // You won't get a warning about 2 different <Routes> under a <Route>\n    // without a trailing *, but this is a best-effort warning anyway since we\n    // cannot even give the warning unless they land at the parent route.\n    //\n    // Example:\n    //\n    // <Routes>\n    //   {/* This route path MUST end with /* because otherwise\n    //       it will never match /blog/post/123 */}\n    //   <Route path=\"blog\" element={<Blog />} />\n    //   <Route path=\"blog/feed\" element={<BlogFeed />} />\n    // </Routes>\n    //\n    // function Blog() {\n    //   return (\n    //     <Routes>\n    //       <Route path=\"post/:id\" element={<Post />} />\n    //     </Routes>\n    //   );\n    // }\n    let parentPath = (parentRoute && parentRoute.path) || \"\";\n    warningOnce(\n      parentPathname,\n      !parentRoute || parentPath.endsWith(\"*\"),\n      `You rendered descendant <Routes> (or called \\`useRoutes()\\`) at ` +\n        `\"${parentPathname}\" (under <Route path=\"${parentPath}\">) but the ` +\n        `parent route path has no trailing \"*\". This means if you navigate ` +\n        `deeper, the parent won't match anymore and therefore the child ` +\n        `routes will never render.\\n\\n` +\n        `Please change the parent <Route path=\"${parentPath}\"> to <Route ` +\n        `path=\"${parentPath === \"/\" ? \"*\" : `${parentPath}/*`}\">.`\n    );\n  }\n\n  let locationFromContext = useLocation();\n\n  let location;\n  if (locationArg) {\n    let parsedLocationArg =\n      typeof locationArg === \"string\" ? parsePath(locationArg) : locationArg;\n\n    invariant(\n      parentPathnameBase === \"/\" ||\n        parsedLocationArg.pathname?.startsWith(parentPathnameBase),\n      `When overriding the location using \\`<Routes location>\\` or \\`useRoutes(routes, location)\\`, ` +\n        `the location pathname must begin with the portion of the URL pathname that was ` +\n        `matched by all parent routes. The current pathname base is \"${parentPathnameBase}\" ` +\n        `but pathname \"${parsedLocationArg.pathname}\" was given in the \\`location\\` prop.`\n    );\n\n    location = parsedLocationArg;\n  } else {\n    location = locationFromContext;\n  }\n\n  let pathname = location.pathname || \"/\";\n  let remainingPathname =\n    parentPathnameBase === \"/\"\n      ? pathname\n      : pathname.slice(parentPathnameBase.length) || \"/\";\n\n  let matches = matchRoutes(routes, { pathname: remainingPathname });\n\n  if (__DEV__) {\n    warning(\n      parentRoute || matches != null,\n      `No routes matched location \"${location.pathname}${location.search}${location.hash}\" `\n    );\n\n    warning(\n      matches == null ||\n        matches[matches.length - 1].route.element !== undefined ||\n        matches[matches.length - 1].route.Component !== undefined,\n      `Matched leaf route at location \"${location.pathname}${location.search}${location.hash}\" ` +\n        `does not have an element or Component. This means it will render an <Outlet /> with a ` +\n        `null value by default resulting in an \"empty\" page.`\n    );\n  }\n\n  let renderedMatches = _renderMatches(\n    matches &&\n      matches.map((match) =>\n        Object.assign({}, match, {\n          params: Object.assign({}, parentParams, match.params),\n          pathname: joinPaths([\n            parentPathnameBase,\n            // Re-encode pathnames that were decoded inside matchRoutes\n            navigator.encodeLocation\n              ? navigator.encodeLocation(match.pathname).pathname\n              : match.pathname,\n          ]),\n          pathnameBase:\n            match.pathnameBase === \"/\"\n              ? parentPathnameBase\n              : joinPaths([\n                  parentPathnameBase,\n                  // Re-encode pathnames that were decoded inside matchRoutes\n                  navigator.encodeLocation\n                    ? navigator.encodeLocation(match.pathnameBase).pathname\n                    : match.pathnameBase,\n                ]),\n        })\n      ),\n    parentMatches,\n    dataRouterState\n  );\n\n  // When a user passes in a `locationArg`, the associated routes need to\n  // be wrapped in a new `LocationContext.Provider` in order for `useLocation`\n  // to use the scoped location instead of the global location.\n  if (locationArg && renderedMatches) {\n    return (\n      <LocationContext.Provider\n        value={{\n          location: {\n            pathname: \"/\",\n            search: \"\",\n            hash: \"\",\n            state: null,\n            key: \"default\",\n            ...location,\n          },\n          navigationType: NavigationType.Pop,\n        }}\n      >\n        {renderedMatches}\n      </LocationContext.Provider>\n    );\n  }\n\n  return renderedMatches;\n}\n\nfunction DefaultErrorComponent() {\n  let error = useRouteError();\n  let message = isRouteErrorResponse(error)\n    ? `${error.status} ${error.statusText}`\n    : error instanceof Error\n    ? error.message\n    : JSON.stringify(error);\n  let stack = error instanceof Error ? error.stack : null;\n  let lightgrey = \"rgba(200,200,200, 0.5)\";\n  let preStyles = { padding: \"0.5rem\", backgroundColor: lightgrey };\n  let codeStyles = { padding: \"2px 4px\", backgroundColor: lightgrey };\n\n  let devInfo = null;\n  if (__DEV__) {\n    console.error(\n      \"Error handled by React Router default ErrorBoundary:\",\n      error\n    );\n\n    devInfo = (\n      <>\n        <p>💿 Hey developer 👋</p>\n        <p>\n          You can provide a way better UX than this when your app throws errors\n          by providing your own <code style={codeStyles}>ErrorBoundary</code> or{\" \"}\n          <code style={codeStyles}>errorElement</code> prop on your route.\n        </p>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <h2>Unexpected Application Error!</h2>\n      <h3 style={{ fontStyle: \"italic\" }}>{message}</h3>\n      {stack ? <pre style={preStyles}>{stack}</pre> : null}\n      {devInfo}\n    </>\n  );\n}\n\nconst defaultErrorElement = <DefaultErrorComponent />;\n\ntype RenderErrorBoundaryProps = React.PropsWithChildren<{\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n  component: React.ReactNode;\n  routeContext: RouteContextObject;\n}>;\n\ntype RenderErrorBoundaryState = {\n  location: Location;\n  revalidation: RevalidationState;\n  error: any;\n};\n\nexport class RenderErrorBoundary extends React.Component<\n  RenderErrorBoundaryProps,\n  RenderErrorBoundaryState\n> {\n  constructor(props: RenderErrorBoundaryProps) {\n    super(props);\n    this.state = {\n      location: props.location,\n      revalidation: props.revalidation,\n      error: props.error,\n    };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error: error };\n  }\n\n  static getDerivedStateFromProps(\n    props: RenderErrorBoundaryProps,\n    state: RenderErrorBoundaryState\n  ) {\n    // When we get into an error state, the user will likely click \"back\" to the\n    // previous page that didn't have an error. Because this wraps the entire\n    // application, that will have no effect--the error page continues to display.\n    // This gives us a mechanism to recover from the error when the location changes.\n    //\n    // Whether we're in an error state or not, we update the location in state\n    // so that when we are in an error state, it gets reset when a new location\n    // comes in and the user recovers from the error.\n    if (\n      state.location !== props.location ||\n      (state.revalidation !== \"idle\" && props.revalidation === \"idle\")\n    ) {\n      return {\n        error: props.error,\n        location: props.location,\n        revalidation: props.revalidation,\n      };\n    }\n\n    // If we're not changing locations, preserve the location but still surface\n    // any new errors that may come through. We retain the existing error, we do\n    // this because the error provided from the app state may be cleared without\n    // the location changing.\n    return {\n      error: props.error || state.error,\n      location: state.location,\n      revalidation: props.revalidation || state.revalidation,\n    };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"React Router caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    return this.state.error ? (\n      <RouteContext.Provider value={this.props.routeContext}>\n        <RouteErrorContext.Provider\n          value={this.state.error}\n          children={this.props.component}\n        />\n      </RouteContext.Provider>\n    ) : (\n      this.props.children\n    );\n  }\n}\n\ninterface RenderedRouteProps {\n  routeContext: RouteContextObject;\n  match: RouteMatch<string, RouteObject>;\n  children: React.ReactNode | null;\n}\n\nfunction RenderedRoute({ routeContext, match, children }: RenderedRouteProps) {\n  let dataRouterContext = React.useContext(DataRouterContext);\n\n  // Track how deep we got in our render pass to emulate SSR componentDidCatch\n  // in a DataStaticRouter\n  if (\n    dataRouterContext &&\n    dataRouterContext.static &&\n    dataRouterContext.staticContext &&\n    (match.route.errorElement || match.route.ErrorBoundary)\n  ) {\n    dataRouterContext.staticContext._deepestRenderedBoundaryId = match.route.id;\n  }\n\n  return (\n    <RouteContext.Provider value={routeContext}>\n      {children}\n    </RouteContext.Provider>\n  );\n}\n\nexport function _renderMatches(\n  matches: RouteMatch[] | null,\n  parentMatches: RouteMatch[] = [],\n  dataRouterState: RemixRouter[\"state\"] | null = null\n): React.ReactElement | null {\n  if (matches == null) {\n    if (dataRouterState?.errors) {\n      // Don't bail if we have data router errors so we can render them in the\n      // boundary.  Use the pre-matched (or shimmed) matches\n      matches = dataRouterState.matches as DataRouteMatch[];\n    } else {\n      return null;\n    }\n  }\n\n  let renderedMatches = matches;\n\n  // If we have data errors, trim matches to the highest error boundary\n  let errors = dataRouterState?.errors;\n  if (errors != null) {\n    let errorIndex = renderedMatches.findIndex(\n      (m) => m.route.id && errors?.[m.route.id]\n    );\n    invariant(\n      errorIndex >= 0,\n      `Could not find a matching route for errors on route IDs: ${Object.keys(\n        errors\n      ).join(\",\")}`\n    );\n    renderedMatches = renderedMatches.slice(\n      0,\n      Math.min(renderedMatches.length, errorIndex + 1)\n    );\n  }\n\n  return renderedMatches.reduceRight((outlet, match, index) => {\n    let error = match.route.id ? errors?.[match.route.id] : null;\n    // Only data routers handle errors\n    let errorElement: React.ReactNode | null = null;\n    if (dataRouterState) {\n      errorElement = match.route.errorElement || defaultErrorElement;\n    }\n    let matches = parentMatches.concat(renderedMatches.slice(0, index + 1));\n    let getChildren = () => {\n      let children: React.ReactNode;\n      if (error) {\n        children = errorElement;\n      } else if (match.route.Component) {\n        // Note: This is a de-optimized path since React won't re-use the\n        // ReactElement since it's identity changes with each new\n        // React.createElement call.  We keep this so folks can use\n        // `<Route Component={...}>` in `<Routes>` but generally `Component`\n        // usage is only advised in `RouterProvider` when we can convert it to\n        // `element` ahead of time.\n        children = <match.route.Component />;\n      } else if (match.route.element) {\n        children = match.route.element;\n      } else {\n        children = outlet;\n      }\n      return (\n        <RenderedRoute\n          match={match}\n          routeContext={{\n            outlet,\n            matches,\n            isDataRoute: dataRouterState != null,\n          }}\n          children={children}\n        />\n      );\n    };\n    // Only wrap in an error boundary within data router usages when we have an\n    // ErrorBoundary/errorElement on this route.  Otherwise let it bubble up to\n    // an ancestor ErrorBoundary/errorElement\n    return dataRouterState &&\n      (match.route.ErrorBoundary || match.route.errorElement || index === 0) ? (\n      <RenderErrorBoundary\n        location={dataRouterState.location}\n        revalidation={dataRouterState.revalidation}\n        component={errorElement}\n        error={error}\n        children={getChildren()}\n        routeContext={{ outlet: null, matches, isDataRoute: true }}\n      />\n    ) : (\n      getChildren()\n    );\n  }, null as React.ReactElement | null);\n}\n\nenum DataRouterHook {\n  UseBlocker = \"useBlocker\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n}\n\nenum DataRouterStateHook {\n  UseBlocker = \"useBlocker\",\n  UseLoaderData = \"useLoaderData\",\n  UseActionData = \"useActionData\",\n  UseRouteError = \"useRouteError\",\n  UseNavigation = \"useNavigation\",\n  UseRouteLoaderData = \"useRouteLoaderData\",\n  UseMatches = \"useMatches\",\n  UseRevalidator = \"useRevalidator\",\n  UseNavigateStable = \"useNavigate\",\n  UseRouteId = \"useRouteId\",\n}\n\nfunction getDataRouterConsoleError(\n  hookName: DataRouterHook | DataRouterStateHook\n) {\n  return `${hookName} must be used within a data router.  See https://reactrouter.com/routers/picking-a-router.`;\n}\n\nfunction useDataRouterContext(hookName: DataRouterHook) {\n  let ctx = React.useContext(DataRouterContext);\n  invariant(ctx, getDataRouterConsoleError(hookName));\n  return ctx;\n}\n\nfunction useDataRouterState(hookName: DataRouterStateHook) {\n  let state = React.useContext(DataRouterStateContext);\n  invariant(state, getDataRouterConsoleError(hookName));\n  return state;\n}\n\nfunction useRouteContext(hookName: DataRouterStateHook) {\n  let route = React.useContext(RouteContext);\n  invariant(route, getDataRouterConsoleError(hookName));\n  return route;\n}\n\n// Internal version with hookName-aware debugging\nfunction useCurrentRouteId(hookName: DataRouterStateHook) {\n  let route = useRouteContext(hookName);\n  let thisRoute = route.matches[route.matches.length - 1];\n  invariant(\n    thisRoute.route.id,\n    `${hookName} can only be used on routes that contain a unique \"id\"`\n  );\n  return thisRoute.route.id;\n}\n\n/**\n * Returns the ID for the nearest contextual route\n */\nexport function useRouteId() {\n  return useCurrentRouteId(DataRouterStateHook.UseRouteId);\n}\n\n/**\n * Returns the current navigation, defaulting to an \"idle\" navigation when\n * no navigation is in progress\n */\nexport function useNavigation() {\n  let state = useDataRouterState(DataRouterStateHook.UseNavigation);\n  return state.navigation;\n}\n\n/**\n * Returns a revalidate function for manually triggering revalidation, as well\n * as the current state of any manual revalidations\n */\nexport function useRevalidator() {\n  let dataRouterContext = useDataRouterContext(DataRouterHook.UseRevalidator);\n  let state = useDataRouterState(DataRouterStateHook.UseRevalidator);\n  return React.useMemo(\n    () => ({\n      revalidate: dataRouterContext.router.revalidate,\n      state: state.revalidation,\n    }),\n    [dataRouterContext.router.revalidate, state.revalidation]\n  );\n}\n\n/**\n * Returns the active route matches, useful for accessing loaderData for\n * parent/child routes or the route \"handle\" property\n */\nexport function useMatches(): UIMatch[] {\n  let { matches, loaderData } = useDataRouterState(\n    DataRouterStateHook.UseMatches\n  );\n  return React.useMemo(\n    () => matches.map((m) => convertRouteMatchToUiMatch(m, loaderData)),\n    [matches, loaderData]\n  );\n}\n\n/**\n * Returns the loader data for the nearest ancestor Route loader\n */\nexport function useLoaderData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseLoaderData);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseLoaderData);\n\n  if (state.errors && state.errors[routeId] != null) {\n    console.error(\n      `You cannot \\`useLoaderData\\` in an errorElement (routeId: ${routeId})`\n    );\n    return undefined;\n  }\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the loaderData for the given routeId\n */\nexport function useRouteLoaderData(routeId: string): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseRouteLoaderData);\n  return state.loaderData[routeId];\n}\n\n/**\n * Returns the action data for the nearest ancestor Route action\n */\nexport function useActionData(): unknown {\n  let state = useDataRouterState(DataRouterStateHook.UseActionData);\n\n  let route = React.useContext(RouteContext);\n  invariant(route, `useActionData must be used inside a RouteContext`);\n\n  return Object.values(state?.actionData || {})[0];\n}\n\n/**\n * Returns the nearest ancestor Route error, which could be a loader/action\n * error or a render error.  This is intended to be called from your\n * ErrorBoundary/errorElement to display a proper error message.\n */\nexport function useRouteError(): unknown {\n  let error = React.useContext(RouteErrorContext);\n  let state = useDataRouterState(DataRouterStateHook.UseRouteError);\n  let routeId = useCurrentRouteId(DataRouterStateHook.UseRouteError);\n\n  // If this was a render error, we put it in a RouteError context inside\n  // of RenderErrorBoundary\n  if (error) {\n    return error;\n  }\n\n  // Otherwise look for errors from our data router state\n  return state.errors?.[routeId];\n}\n\n/**\n * Returns the happy-path data from the nearest ancestor <Await /> value\n */\nexport function useAsyncValue(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._data;\n}\n\n/**\n * Returns the error from the nearest ancestor <Await /> value\n */\nexport function useAsyncError(): unknown {\n  let value = React.useContext(AwaitContext);\n  return value?._error;\n}\n\nlet blockerId = 0;\n\n/**\n * Allow the application to block navigations within the SPA and present the\n * user a confirmation dialog to confirm the navigation.  Mostly used to avoid\n * using half-filled form data.  This does not handle hard-reloads or\n * cross-origin navigations.\n */\nexport function useBlocker(shouldBlock: boolean | BlockerFunction): Blocker {\n  let { router, basename } = useDataRouterContext(DataRouterHook.UseBlocker);\n  let state = useDataRouterState(DataRouterStateHook.UseBlocker);\n\n  let [blockerKey, setBlockerKey] = React.useState(\"\");\n  let blockerFunction = React.useCallback<BlockerFunction>(\n    (arg) => {\n      if (typeof shouldBlock !== \"function\") {\n        return !!shouldBlock;\n      }\n      if (basename === \"/\") {\n        return shouldBlock(arg);\n      }\n\n      // If they provided us a function and we've got an active basename, strip\n      // it from the locations we expose to the user to match the behavior of\n      // useLocation\n      let { currentLocation, nextLocation, historyAction } = arg;\n      return shouldBlock({\n        currentLocation: {\n          ...currentLocation,\n          pathname:\n            stripBasename(currentLocation.pathname, basename) ||\n            currentLocation.pathname,\n        },\n        nextLocation: {\n          ...nextLocation,\n          pathname:\n            stripBasename(nextLocation.pathname, basename) ||\n            nextLocation.pathname,\n        },\n        historyAction,\n      });\n    },\n    [basename, shouldBlock]\n  );\n\n  // This effect is in charge of blocker key assignment and deletion (which is\n  // tightly coupled to the key)\n  React.useEffect(() => {\n    let key = String(++blockerId);\n    setBlockerKey(key);\n    return () => router.deleteBlocker(key);\n  }, [router]);\n\n  // This effect handles assigning the blockerFunction.  This is to handle\n  // unstable blocker function identities, and happens only after the prior\n  // effect so we don't get an orphaned blockerFunction in the router with a\n  // key of \"\".  Until then we just have the IDLE_BLOCKER.\n  React.useEffect(() => {\n    if (blockerKey !== \"\") {\n      router.getBlocker(blockerKey, blockerFunction);\n    }\n  }, [router, blockerKey, blockerFunction]);\n\n  // Prefer the blocker from `state` not `router.state` since DataRouterContext\n  // is memoized so this ensures we update on blocker state updates\n  return blockerKey && state.blockers.has(blockerKey)\n    ? state.blockers.get(blockerKey)!\n    : IDLE_BLOCKER;\n}\n\n/**\n * Stable version of useNavigate that is used when we are in the context of\n * a RouterProvider.\n */\nfunction useNavigateStable(): NavigateFunction {\n  let { router } = useDataRouterContext(DataRouterHook.UseNavigateStable);\n  let id = useCurrentRouteId(DataRouterStateHook.UseNavigateStable);\n\n  let activeRef = React.useRef(false);\n  useIsomorphicLayoutEffect(() => {\n    activeRef.current = true;\n  });\n\n  let navigate: NavigateFunction = React.useCallback(\n    (to: To | number, options: NavigateOptions = {}) => {\n      warning(activeRef.current, navigateEffectWarning);\n\n      // Short circuit here since if this happens on first render the navigate\n      // is useless because we haven't wired up our router subscriber yet\n      if (!activeRef.current) return;\n\n      if (typeof to === \"number\") {\n        router.navigate(to);\n      } else {\n        router.navigate(to, { fromRouteId: id, ...options });\n      }\n    },\n    [router, id]\n  );\n\n  return navigate;\n}\n\nconst alreadyWarned: Record<string, boolean> = {};\n\nfunction warningOnce(key: string, cond: boolean, message: string) {\n  if (!cond && !alreadyWarned[key]) {\n    alreadyWarned[key] = true;\n    warning(false, message);\n  }\n}\n","import type {\n  InitialEntry,\n  LazyRouteFunction,\n  Location,\n  MemoryHistory,\n  RelativeRoutingType,\n  Router as RemixRouter,\n  RouterState,\n  To,\n  TrackedPromise,\n} from \"@remix-run/router\";\nimport {\n  AbortedDeferredError,\n  Action as NavigationType,\n  createMemoryHistory,\n  UNSAFE_getPathContributingMatches as getPathContributingMatches,\n  UNSAFE_invariant as invariant,\n  parsePath,\n  resolveTo,\n  stripBasename,\n  UNSAFE_warning as warning,\n} from \"@remix-run/router\";\nimport * as React from \"react\";\n\nimport type {\n  DataRouteObject,\n  IndexRouteObject,\n  Navigator,\n  NonIndexRouteObject,\n  RouteMatch,\n  RouteObject,\n} from \"./context\";\nimport {\n  AwaitContext,\n  DataRouterContext,\n  DataRouterStateContext,\n  LocationContext,\n  NavigationContext,\n  RouteContext,\n} from \"./context\";\nimport {\n  _renderMatches,\n  useAsyncValue,\n  useInRouterContext,\n  useLocation,\n  useNavigate,\n  useOutlet,\n  useRoutes,\n  useRoutesImpl,\n} from \"./hooks\";\n\nexport interface FutureConfig {\n  v7_startTransition: boolean;\n}\n\nexport interface RouterProviderProps {\n  fallbackElement?: React.ReactNode;\n  router: RemixRouter;\n  future?: FutureConfig;\n}\n\n/**\n  Webpack + React 17 fails to compile on any of the following because webpack\n  complains that `startTransition` doesn't exist in `React`:\n  * import { startTransition } from \"react\"\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React.startTransition(() => setState()) : setState()\n  * import * as React from from \"react\";\n    \"startTransition\" in React ? React[\"startTransition\"](() => setState()) : setState()\n\n  Moving it to a constant such as the following solves the Webpack/React 17 issue:\n  * import * as React from from \"react\";\n    const START_TRANSITION = \"startTransition\";\n    START_TRANSITION in React ? React[START_TRANSITION](() => setState()) : setState()\n\n  However, that introduces webpack/terser minification issues in production builds\n  in React 18 where minification/obfuscation ends up removing the call of\n  React.startTransition entirely from the first half of the ternary.  Grabbing\n  this exported reference once up front resolves that issue.\n\n  See https://github.com/remix-run/react-router/issues/10579\n*/\nconst START_TRANSITION = \"startTransition\";\nconst startTransitionImpl = React[START_TRANSITION];\n\n/**\n * Given a Remix Router instance, render the appropriate UI\n */\nexport function RouterProvider({\n  fallbackElement,\n  router,\n  future,\n}: RouterProviderProps): React.ReactElement {\n  // Need to use a layout effect here so we are subscribed early enough to\n  // pick up on any render-driven redirects/navigations (useEffect/<Navigate>)\n  let [state, setStateImpl] = React.useState(router.state);\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: RouterState) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n  React.useLayoutEffect(() => router.subscribe(setState), [router, setState]);\n\n  let navigator = React.useMemo((): Navigator => {\n    return {\n      createHref: router.createHref,\n      encodeLocation: router.encodeLocation,\n      go: (n) => router.navigate(n),\n      push: (to, state, opts) =>\n        router.navigate(to, {\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n      replace: (to, state, opts) =>\n        router.navigate(to, {\n          replace: true,\n          state,\n          preventScrollReset: opts?.preventScrollReset,\n        }),\n    };\n  }, [router]);\n\n  let basename = router.basename || \"/\";\n\n  let dataRouterContext = React.useMemo(\n    () => ({\n      router,\n      navigator,\n      static: false,\n      basename,\n    }),\n    [router, navigator, basename]\n  );\n\n  // The fragment and {null} here are important!  We need them to keep React 18's\n  // useId happy when we are server-rendering since we may have a <script> here\n  // containing the hydrated server-side staticContext (from StaticRouterProvider).\n  // useId relies on the component tree structure to generate deterministic id's\n  // so we need to ensure it remains the same on the client even though\n  // we don't need the <script> tag\n  return (\n    <>\n      <DataRouterContext.Provider value={dataRouterContext}>\n        <DataRouterStateContext.Provider value={state}>\n          <Router\n            basename={basename}\n            location={state.location}\n            navigationType={state.historyAction}\n            navigator={navigator}\n          >\n            {state.initialized ? (\n              <DataRoutes routes={router.routes} state={state} />\n            ) : (\n              fallbackElement\n            )}\n          </Router>\n        </DataRouterStateContext.Provider>\n      </DataRouterContext.Provider>\n      {null}\n    </>\n  );\n}\n\nfunction DataRoutes({\n  routes,\n  state,\n}: {\n  routes: DataRouteObject[];\n  state: RouterState;\n}): React.ReactElement | null {\n  return useRoutesImpl(routes, undefined, state);\n}\n\nexport interface MemoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  initialEntries?: InitialEntry[];\n  initialIndex?: number;\n  future?: FutureConfig;\n}\n\n/**\n * A <Router> that stores all entries in memory.\n *\n * @see https://reactrouter.com/router-components/memory-router\n */\nexport function MemoryRouter({\n  basename,\n  children,\n  initialEntries,\n  initialIndex,\n  future,\n}: MemoryRouterProps): React.ReactElement {\n  let historyRef = React.useRef<MemoryHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createMemoryHistory({\n      initialEntries,\n      initialIndex,\n      v5Compat: true,\n    });\n  }\n\n  let history = historyRef.current;\n  let [state, setStateImpl] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n  let { v7_startTransition } = future || {};\n  let setState = React.useCallback(\n    (newState: { action: NavigationType; location: Location }) => {\n      v7_startTransition && startTransitionImpl\n        ? startTransitionImpl(() => setStateImpl(newState))\n        : setStateImpl(newState);\n    },\n    [setStateImpl, v7_startTransition]\n  );\n\n  React.useLayoutEffect(() => history.listen(setState), [history, setState]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface NavigateProps {\n  to: To;\n  replace?: boolean;\n  state?: any;\n  relative?: RelativeRoutingType;\n}\n\n/**\n * Changes the current location.\n *\n * Note: This API is mostly useful in React.Component subclasses that are not\n * able to use hooks. In functional components, we recommend you use the\n * `useNavigate` hook instead.\n *\n * @see https://reactrouter.com/components/navigate\n */\nexport function Navigate({\n  to,\n  replace,\n  state,\n  relative,\n}: NavigateProps): null {\n  invariant(\n    useInRouterContext(),\n    // TODO: This error is probably because they somehow have 2 versions of\n    // the router loaded. We can help them understand how to avoid that.\n    `<Navigate> may be used only in the context of a <Router> component.`\n  );\n\n  warning(\n    !React.useContext(NavigationContext).static,\n    `<Navigate> must not be used on the initial render in a <StaticRouter>. ` +\n      `This is a no-op, but you should modify your code so the <Navigate> is ` +\n      `only ever rendered in response to some user interaction or state change.`\n  );\n\n  let { matches } = React.useContext(RouteContext);\n  let { pathname: locationPathname } = useLocation();\n  let navigate = useNavigate();\n\n  // Resolve the path outside of the effect so that when effects run twice in\n  // StrictMode they navigate to the same place\n  let path = resolveTo(\n    to,\n    getPathContributingMatches(matches).map((match) => match.pathnameBase),\n    locationPathname,\n    relative === \"path\"\n  );\n  let jsonPath = JSON.stringify(path);\n\n  React.useEffect(\n    () => navigate(JSON.parse(jsonPath), { replace, state, relative }),\n    [navigate, jsonPath, relative, replace, state]\n  );\n\n  return null;\n}\n\nexport interface OutletProps {\n  context?: unknown;\n}\n\n/**\n * Renders the child route's element, if there is one.\n *\n * @see https://reactrouter.com/components/outlet\n */\nexport function Outlet(props: OutletProps): React.ReactElement | null {\n  return useOutlet(props.context);\n}\n\nexport interface PathRouteProps {\n  caseSensitive?: NonIndexRouteObject[\"caseSensitive\"];\n  path?: NonIndexRouteObject[\"path\"];\n  id?: NonIndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<NonIndexRouteObject>;\n  loader?: NonIndexRouteObject[\"loader\"];\n  action?: NonIndexRouteObject[\"action\"];\n  hasErrorBoundary?: NonIndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: NonIndexRouteObject[\"shouldRevalidate\"];\n  handle?: NonIndexRouteObject[\"handle\"];\n  index?: false;\n  children?: React.ReactNode;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport interface LayoutRouteProps extends PathRouteProps {}\n\nexport interface IndexRouteProps {\n  caseSensitive?: IndexRouteObject[\"caseSensitive\"];\n  path?: IndexRouteObject[\"path\"];\n  id?: IndexRouteObject[\"id\"];\n  lazy?: LazyRouteFunction<IndexRouteObject>;\n  loader?: IndexRouteObject[\"loader\"];\n  action?: IndexRouteObject[\"action\"];\n  hasErrorBoundary?: IndexRouteObject[\"hasErrorBoundary\"];\n  shouldRevalidate?: IndexRouteObject[\"shouldRevalidate\"];\n  handle?: IndexRouteObject[\"handle\"];\n  index: true;\n  children?: undefined;\n  element?: React.ReactNode | null;\n  errorElement?: React.ReactNode | null;\n  Component?: React.ComponentType | null;\n  ErrorBoundary?: React.ComponentType | null;\n}\n\nexport type RouteProps = PathRouteProps | LayoutRouteProps | IndexRouteProps;\n\n/**\n * Declares an element that should be rendered at a certain URL path.\n *\n * @see https://reactrouter.com/components/route\n */\nexport function Route(_props: RouteProps): React.ReactElement | null {\n  invariant(\n    false,\n    `A <Route> is only ever to be used as the child of <Routes> element, ` +\n      `never rendered directly. Please wrap your <Route> in a <Routes>.`\n  );\n}\n\nexport interface RouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  location: Partial<Location> | string;\n  navigationType?: NavigationType;\n  navigator: Navigator;\n  static?: boolean;\n}\n\n/**\n * Provides location context for the rest of the app.\n *\n * Note: You usually won't render a <Router> directly. Instead, you'll render a\n * router that is more specific to your environment such as a <BrowserRouter>\n * in web browsers or a <StaticRouter> for server rendering.\n *\n * @see https://reactrouter.com/router-components/router\n */\nexport function Router({\n  basename: basenameProp = \"/\",\n  children = null,\n  location: locationProp,\n  navigationType = NavigationType.Pop,\n  navigator,\n  static: staticProp = false,\n}: RouterProps): React.ReactElement | null {\n  invariant(\n    !useInRouterContext(),\n    `You cannot render a <Router> inside another <Router>.` +\n      ` You should never have more than one in your app.`\n  );\n\n  // Preserve trailing slashes on basename, so we can let the user control\n  // the enforcement of trailing slashes throughout the app\n  let basename = basenameProp.replace(/^\\/*/, \"/\");\n  let navigationContext = React.useMemo(\n    () => ({ basename, navigator, static: staticProp }),\n    [basename, navigator, staticProp]\n  );\n\n  if (typeof locationProp === \"string\") {\n    locationProp = parsePath(locationProp);\n  }\n\n  let {\n    pathname = \"/\",\n    search = \"\",\n    hash = \"\",\n    state = null,\n    key = \"default\",\n  } = locationProp;\n\n  let locationContext = React.useMemo(() => {\n    let trailingPathname = stripBasename(pathname, basename);\n\n    if (trailingPathname == null) {\n      return null;\n    }\n\n    return {\n      location: {\n        pathname: trailingPathname,\n        search,\n        hash,\n        state,\n        key,\n      },\n      navigationType,\n    };\n  }, [basename, pathname, search, hash, state, key, navigationType]);\n\n  warning(\n    locationContext != null,\n    `<Router basename=\"${basename}\"> is not able to match the URL ` +\n      `\"${pathname}${search}${hash}\" because it does not start with the ` +\n      `basename, so the <Router> won't render anything.`\n  );\n\n  if (locationContext == null) {\n    return null;\n  }\n\n  return (\n    <NavigationContext.Provider value={navigationContext}>\n      <LocationContext.Provider children={children} value={locationContext} />\n    </NavigationContext.Provider>\n  );\n}\n\nexport interface RoutesProps {\n  children?: React.ReactNode;\n  location?: Partial<Location> | string;\n}\n\n/**\n * A container for a nested tree of <Route> elements that renders the branch\n * that best matches the current location.\n *\n * @see https://reactrouter.com/components/routes\n */\nexport function Routes({\n  children,\n  location,\n}: RoutesProps): React.ReactElement | null {\n  return useRoutes(createRoutesFromChildren(children), location);\n}\n\nexport interface AwaitResolveRenderFunction {\n  (data: Awaited<any>): React.ReactNode;\n}\n\nexport interface AwaitProps {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}\n\n/**\n * Component to use for rendering lazily loaded data from returning defer()\n * in a loader function\n */\nexport function Await({ children, errorElement, resolve }: AwaitProps) {\n  return (\n    <AwaitErrorBoundary resolve={resolve} errorElement={errorElement}>\n      <ResolveAwait>{children}</ResolveAwait>\n    </AwaitErrorBoundary>\n  );\n}\n\ntype AwaitErrorBoundaryProps = React.PropsWithChildren<{\n  errorElement?: React.ReactNode;\n  resolve: TrackedPromise | any;\n}>;\n\ntype AwaitErrorBoundaryState = {\n  error: any;\n};\n\nenum AwaitRenderStatus {\n  pending,\n  success,\n  error,\n}\n\nconst neverSettledPromise = new Promise(() => {});\n\nclass AwaitErrorBoundary extends React.Component<\n  AwaitErrorBoundaryProps,\n  AwaitErrorBoundaryState\n> {\n  constructor(props: AwaitErrorBoundaryProps) {\n    super(props);\n    this.state = { error: null };\n  }\n\n  static getDerivedStateFromError(error: any) {\n    return { error };\n  }\n\n  componentDidCatch(error: any, errorInfo: any) {\n    console.error(\n      \"<Await> caught the following error during render\",\n      error,\n      errorInfo\n    );\n  }\n\n  render() {\n    let { children, errorElement, resolve } = this.props;\n\n    let promise: TrackedPromise | null = null;\n    let status: AwaitRenderStatus = AwaitRenderStatus.pending;\n\n    if (!(resolve instanceof Promise)) {\n      // Didn't get a promise - provide as a resolved promise\n      status = AwaitRenderStatus.success;\n      promise = Promise.resolve();\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_data\", { get: () => resolve });\n    } else if (this.state.error) {\n      // Caught a render error, provide it as a rejected promise\n      status = AwaitRenderStatus.error;\n      let renderError = this.state.error;\n      promise = Promise.reject().catch(() => {}); // Avoid unhandled rejection warnings\n      Object.defineProperty(promise, \"_tracked\", { get: () => true });\n      Object.defineProperty(promise, \"_error\", { get: () => renderError });\n    } else if ((resolve as TrackedPromise)._tracked) {\n      // Already tracked promise - check contents\n      promise = resolve;\n      status =\n        promise._error !== undefined\n          ? AwaitRenderStatus.error\n          : promise._data !== undefined\n          ? AwaitRenderStatus.success\n          : AwaitRenderStatus.pending;\n    } else {\n      // Raw (untracked) promise - track it\n      status = AwaitRenderStatus.pending;\n      Object.defineProperty(resolve, \"_tracked\", { get: () => true });\n      promise = resolve.then(\n        (data: any) =>\n          Object.defineProperty(resolve, \"_data\", { get: () => data }),\n        (error: any) =>\n          Object.defineProperty(resolve, \"_error\", { get: () => error })\n      );\n    }\n\n    if (\n      status === AwaitRenderStatus.error &&\n      promise._error instanceof AbortedDeferredError\n    ) {\n      // Freeze the UI by throwing a never resolved promise\n      throw neverSettledPromise;\n    }\n\n    if (status === AwaitRenderStatus.error && !errorElement) {\n      // No errorElement, throw to the nearest route-level error boundary\n      throw promise._error;\n    }\n\n    if (status === AwaitRenderStatus.error) {\n      // Render via our errorElement\n      return <AwaitContext.Provider value={promise} children={errorElement} />;\n    }\n\n    if (status === AwaitRenderStatus.success) {\n      // Render children with resolved value\n      return <AwaitContext.Provider value={promise} children={children} />;\n    }\n\n    // Throw to the suspense boundary\n    throw promise;\n  }\n}\n\n/**\n * @private\n * Indirection to leverage useAsyncValue for a render-prop API on <Await>\n */\nfunction ResolveAwait({\n  children,\n}: {\n  children: React.ReactNode | AwaitResolveRenderFunction;\n}) {\n  let data = useAsyncValue();\n  let toRender = typeof children === \"function\" ? children(data) : children;\n  return <>{toRender}</>;\n}\n\n///////////////////////////////////////////////////////////////////////////////\n// UTILS\n///////////////////////////////////////////////////////////////////////////////\n\n/**\n * Creates a route config from a React \"children\" object, which is usually\n * either a `<Route>` element or an array of them. Used internally by\n * `<Routes>` to create a route config from its children.\n *\n * @see https://reactrouter.com/utils/create-routes-from-children\n */\nexport function createRoutesFromChildren(\n  children: React.ReactNode,\n  parentPath: number[] = []\n): RouteObject[] {\n  let routes: RouteObject[] = [];\n\n  React.Children.forEach(children, (element, index) => {\n    if (!React.isValidElement(element)) {\n      // Ignore non-elements. This allows people to more easily inline\n      // conditionals in their route config.\n      return;\n    }\n\n    let treePath = [...parentPath, index];\n\n    if (element.type === React.Fragment) {\n      // Transparently support React.Fragment and its children.\n      routes.push.apply(\n        routes,\n        createRoutesFromChildren(element.props.children, treePath)\n      );\n      return;\n    }\n\n    invariant(\n      element.type === Route,\n      `[${\n        typeof element.type === \"string\" ? element.type : element.type.name\n      }] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`\n    );\n\n    invariant(\n      !element.props.index || !element.props.children,\n      \"An index route cannot have child routes.\"\n    );\n\n    let route: RouteObject = {\n      id: element.props.id || treePath.join(\"-\"),\n      caseSensitive: element.props.caseSensitive,\n      element: element.props.element,\n      Component: element.props.Component,\n      index: element.props.index,\n      path: element.props.path,\n      loader: element.props.loader,\n      action: element.props.action,\n      errorElement: element.props.errorElement,\n      ErrorBoundary: element.props.ErrorBoundary,\n      hasErrorBoundary:\n        element.props.ErrorBoundary != null ||\n        element.props.errorElement != null,\n      shouldRevalidate: element.props.shouldRevalidate,\n      handle: element.props.handle,\n      lazy: element.props.lazy,\n    };\n\n    if (element.props.children) {\n      route.children = createRoutesFromChildren(\n        element.props.children,\n        treePath\n      );\n    }\n\n    routes.push(route);\n  });\n\n  return routes;\n}\n\n/**\n * Renders the result of `matchRoutes()` into a React element.\n */\nexport function renderMatches(\n  matches: RouteMatch[] | null\n): React.ReactElement | null {\n  return _renderMatches(matches);\n}\n","/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.2.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","\"use strict\";\n\nexports.__esModule = true;\nexports.default = createWebStorage;\n\nvar _getStorage = _interopRequireDefault(require(\"./getStorage\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction createWebStorage(type) {\n  var storage = (0, _getStorage.default)(type);\n  return {\n    getItem: function getItem(key) {\n      return new Promise(function (resolve, reject) {\n        resolve(storage.getItem(key));\n      });\n    },\n    setItem: function setItem(key, item) {\n      return new Promise(function (resolve, reject) {\n        resolve(storage.setItem(key, item));\n      });\n    },\n    removeItem: function removeItem(key) {\n      return new Promise(function (resolve, reject) {\n        resolve(storage.removeItem(key));\n      });\n    }\n  };\n}","\"use strict\";\n\nexports.__esModule = true;\nexports.default = getStorage;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction noop() {}\n\nvar noopStorage = {\n  getItem: noop,\n  setItem: noop,\n  removeItem: noop\n};\n\nfunction hasStorage(storageType) {\n  if ((typeof self === \"undefined\" ? \"undefined\" : _typeof(self)) !== 'object' || !(storageType in self)) {\n    return false;\n  }\n\n  try {\n    var storage = self[storageType];\n    var testKey = \"redux-persist \".concat(storageType, \" test\");\n    storage.setItem(testKey, 'test');\n    storage.getItem(testKey);\n    storage.removeItem(testKey);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') console.warn(\"redux-persist \".concat(storageType, \" test failed, persistence will be disabled.\"));\n    return false;\n  }\n\n  return true;\n}\n\nfunction getStorage(type) {\n  var storageType = \"\".concat(type, \"Storage\");\n  if (hasStorage(storageType)) return self[storageType];else {\n    if (process.env.NODE_ENV !== 'production') {\n      console.error(\"redux-persist failed to create sync storage. falling back to noop storage.\");\n    }\n\n    return noopStorage;\n  }\n}","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _createWebStorage = _interopRequireDefault(require(\"./createWebStorage\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _default = (0, _createWebStorage.default)('local');\n\nexports.default = _default;","/**\n * @license React\n * scheduler.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';function f(a,b){var c=a.length;a.push(b);a:for(;0<c;){var d=c-1>>>1,e=a[d];if(0<g(e,b))a[d]=b,a[c]=e,c=d;else break a}}function h(a){return 0===a.length?null:a[0]}function k(a){if(0===a.length)return null;var b=a[0],c=a.pop();if(c!==b){a[0]=c;a:for(var d=0,e=a.length,w=e>>>1;d<w;){var m=2*(d+1)-1,C=a[m],n=m+1,x=a[n];if(0>g(C,c))n<e&&0>g(x,C)?(a[d]=x,a[n]=c,d=n):(a[d]=C,a[m]=c,d=m);else if(n<e&&0>g(x,c))a[d]=x,a[n]=c,d=n;else break a}}return b}\nfunction g(a,b){var c=a.sortIndex-b.sortIndex;return 0!==c?c:a.id-b.id}if(\"object\"===typeof performance&&\"function\"===typeof performance.now){var l=performance;exports.unstable_now=function(){return l.now()}}else{var p=Date,q=p.now();exports.unstable_now=function(){return p.now()-q}}var r=[],t=[],u=1,v=null,y=3,z=!1,A=!1,B=!1,D=\"function\"===typeof setTimeout?setTimeout:null,E=\"function\"===typeof clearTimeout?clearTimeout:null,F=\"undefined\"!==typeof setImmediate?setImmediate:null;\n\"undefined\"!==typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function G(a){for(var b=h(t);null!==b;){if(null===b.callback)k(t);else if(b.startTime<=a)k(t),b.sortIndex=b.expirationTime,f(r,b);else break;b=h(t)}}function H(a){B=!1;G(a);if(!A)if(null!==h(r))A=!0,I(J);else{var b=h(t);null!==b&&K(H,b.startTime-a)}}\nfunction J(a,b){A=!1;B&&(B=!1,E(L),L=-1);z=!0;var c=y;try{G(b);for(v=h(r);null!==v&&(!(v.expirationTime>b)||a&&!M());){var d=v.callback;if(\"function\"===typeof d){v.callback=null;y=v.priorityLevel;var e=d(v.expirationTime<=b);b=exports.unstable_now();\"function\"===typeof e?v.callback=e:v===h(r)&&k(r);G(b)}else k(r);v=h(r)}if(null!==v)var w=!0;else{var m=h(t);null!==m&&K(H,m.startTime-b);w=!1}return w}finally{v=null,y=c,z=!1}}var N=!1,O=null,L=-1,P=5,Q=-1;\nfunction M(){return exports.unstable_now()-Q<P?!1:!0}function R(){if(null!==O){var a=exports.unstable_now();Q=a;var b=!0;try{b=O(!0,a)}finally{b?S():(N=!1,O=null)}}else N=!1}var S;if(\"function\"===typeof F)S=function(){F(R)};else if(\"undefined\"!==typeof MessageChannel){var T=new MessageChannel,U=T.port2;T.port1.onmessage=R;S=function(){U.postMessage(null)}}else S=function(){D(R,0)};function I(a){O=a;N||(N=!0,S())}function K(a,b){L=D(function(){a(exports.unstable_now())},b)}\nexports.unstable_IdlePriority=5;exports.unstable_ImmediatePriority=1;exports.unstable_LowPriority=4;exports.unstable_NormalPriority=3;exports.unstable_Profiling=null;exports.unstable_UserBlockingPriority=2;exports.unstable_cancelCallback=function(a){a.callback=null};exports.unstable_continueExecution=function(){A||z||(A=!0,I(J))};\nexports.unstable_forceFrameRate=function(a){0>a||125<a?console.error(\"forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported\"):P=0<a?Math.floor(1E3/a):5};exports.unstable_getCurrentPriorityLevel=function(){return y};exports.unstable_getFirstCallbackNode=function(){return h(r)};exports.unstable_next=function(a){switch(y){case 1:case 2:case 3:var b=3;break;default:b=y}var c=y;y=b;try{return a()}finally{y=c}};exports.unstable_pauseExecution=function(){};\nexports.unstable_requestPaint=function(){};exports.unstable_runWithPriority=function(a,b){switch(a){case 1:case 2:case 3:case 4:case 5:break;default:a=3}var c=y;y=a;try{return b()}finally{y=c}};\nexports.unstable_scheduleCallback=function(a,b,c){var d=exports.unstable_now();\"object\"===typeof c&&null!==c?(c=c.delay,c=\"number\"===typeof c&&0<c?d+c:d):c=d;switch(a){case 1:var e=-1;break;case 2:e=250;break;case 5:e=1073741823;break;case 4:e=1E4;break;default:e=5E3}e=c+e;a={id:u++,callback:b,priorityLevel:a,startTime:c,expirationTime:e,sortIndex:-1};c>d?(a.sortIndex=c,f(t,a),null===h(r)&&a===h(t)&&(B?(E(L),L=-1):B=!0,K(H,c-d))):(a.sortIndex=e,f(r,a),A||z||(A=!0,I(J)));return a};\nexports.unstable_shouldYield=M;exports.unstable_wrapCallback=function(a){var b=y;return function(){var c=y;y=b;try{return a.apply(this,arguments)}finally{y=c}}};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/scheduler.production.min.js');\n} else {\n  module.exports = require('./cjs/scheduler.development.js');\n}\n","/* UAParser.js v1.0.33\n   Copyright © 2012-2021 Faisal Salman <f@faisalman.com>\n   MIT License */\n(function(window,undefined){\"use strict\";var LIBVERSION=\"0.7.33\",EMPTY=\"\",UNKNOWN=\"?\",FUNC_TYPE=\"function\",UNDEF_TYPE=\"undefined\",OBJ_TYPE=\"object\",STR_TYPE=\"string\",MAJOR=\"major\",MODEL=\"model\",NAME=\"name\",TYPE=\"type\",VENDOR=\"vendor\",VERSION=\"version\",ARCHITECTURE=\"architecture\",CONSOLE=\"console\",MOBILE=\"mobile\",TABLET=\"tablet\",SMARTTV=\"smarttv\",WEARABLE=\"wearable\",EMBEDDED=\"embedded\",UA_MAX_LENGTH=350;var AMAZON=\"Amazon\",APPLE=\"Apple\",ASUS=\"ASUS\",BLACKBERRY=\"BlackBerry\",BROWSER=\"Browser\",CHROME=\"Chrome\",EDGE=\"Edge\",FIREFOX=\"Firefox\",GOOGLE=\"Google\",HUAWEI=\"Huawei\",LG=\"LG\",MICROSOFT=\"Microsoft\",MOTOROLA=\"Motorola\",OPERA=\"Opera\",SAMSUNG=\"Samsung\",SHARP=\"Sharp\",SONY=\"Sony\",XIAOMI=\"Xiaomi\",ZEBRA=\"Zebra\",FACEBOOK=\"Facebook\";var extend=function(regexes,extensions){var mergedRegexes={};for(var i in regexes){if(extensions[i]&&extensions[i].length%2===0){mergedRegexes[i]=extensions[i].concat(regexes[i])}else{mergedRegexes[i]=regexes[i]}}return mergedRegexes},enumerize=function(arr){var enums={};for(var i=0;i<arr.length;i++){enums[arr[i].toUpperCase()]=arr[i]}return enums},has=function(str1,str2){return typeof str1===STR_TYPE?lowerize(str2).indexOf(lowerize(str1))!==-1:false},lowerize=function(str){return str.toLowerCase()},majorize=function(version){return typeof version===STR_TYPE?version.replace(/[^\\d\\.]/g,EMPTY).split(\".\")[0]:undefined},trim=function(str,len){if(typeof str===STR_TYPE){str=str.replace(/^\\s\\s*/,EMPTY);return typeof len===UNDEF_TYPE?str:str.substring(0,UA_MAX_LENGTH)}};var rgxMapper=function(ua,arrays){var i=0,j,k,p,q,matches,match;while(i<arrays.length&&!matches){var regex=arrays[i],props=arrays[i+1];j=k=0;while(j<regex.length&&!matches){matches=regex[j++].exec(ua);if(!!matches){for(p=0;p<props.length;p++){match=matches[++k];q=props[p];if(typeof q===OBJ_TYPE&&q.length>0){if(q.length===2){if(typeof q[1]==FUNC_TYPE){this[q[0]]=q[1].call(this,match)}else{this[q[0]]=q[1]}}else if(q.length===3){if(typeof q[1]===FUNC_TYPE&&!(q[1].exec&&q[1].test)){this[q[0]]=match?q[1].call(this,match,q[2]):undefined}else{this[q[0]]=match?match.replace(q[1],q[2]):undefined}}else if(q.length===4){this[q[0]]=match?q[3].call(this,match.replace(q[1],q[2])):undefined}}else{this[q]=match?match:undefined}}}}i+=2}},strMapper=function(str,map){for(var i in map){if(typeof map[i]===OBJ_TYPE&&map[i].length>0){for(var j=0;j<map[i].length;j++){if(has(map[i][j],str)){return i===UNKNOWN?undefined:i}}}else if(has(map[i],str)){return i===UNKNOWN?undefined:i}}return str};var oldSafariMap={\"1.0\":\"/8\",1.2:\"/1\",1.3:\"/3\",\"2.0\":\"/412\",\"2.0.2\":\"/416\",\"2.0.3\":\"/417\",\"2.0.4\":\"/419\",\"?\":\"/\"},windowsVersionMap={ME:\"4.90\",\"NT 3.11\":\"NT3.51\",\"NT 4.0\":\"NT4.0\",2e3:\"NT 5.0\",XP:[\"NT 5.1\",\"NT 5.2\"],Vista:\"NT 6.0\",7:\"NT 6.1\",8:\"NT 6.2\",8.1:\"NT 6.3\",10:[\"NT 6.4\",\"NT 10.0\"],RT:\"ARM\"};var regexes={browser:[[/\\b(?:crmo|crios)\\/([\\w\\.]+)/i],[VERSION,[NAME,\"Chrome\"]],[/edg(?:e|ios|a)?\\/([\\w\\.]+)/i],[VERSION,[NAME,\"Edge\"]],[/(opera mini)\\/([-\\w\\.]+)/i,/(opera [mobiletab]{3,6})\\b.+version\\/([-\\w\\.]+)/i,/(opera)(?:.+version\\/|[\\/ ]+)([\\w\\.]+)/i],[NAME,VERSION],[/opios[\\/ ]+([\\w\\.]+)/i],[VERSION,[NAME,OPERA+\" Mini\"]],[/\\bopr\\/([\\w\\.]+)/i],[VERSION,[NAME,OPERA]],[/(kindle)\\/([\\w\\.]+)/i,/(lunascape|maxthon|netfront|jasmine|blazer)[\\/ ]?([\\w\\.]*)/i,/(avant |iemobile|slim)(?:browser)?[\\/ ]?([\\w\\.]*)/i,/(ba?idubrowser)[\\/ ]?([\\w\\.]+)/i,/(?:ms|\\()(ie) ([\\w\\.]+)/i,/(flock|rockmelt|midori|epiphany|silk|skyfire|ovibrowser|bolt|iron|vivaldi|iridium|phantomjs|bowser|quark|qupzilla|falkon|rekonq|puffin|brave|whale|qqbrowserlite|qq|duckduckgo)\\/([-\\w\\.]+)/i,/(weibo)__([\\d\\.]+)/i],[NAME,VERSION],[/(?:\\buc? ?browser|(?:juc.+)ucweb)[\\/ ]?([\\w\\.]+)/i],[VERSION,[NAME,\"UC\"+BROWSER]],[/microm.+\\bqbcore\\/([\\w\\.]+)/i,/\\bqbcore\\/([\\w\\.]+).+microm/i],[VERSION,[NAME,\"WeChat(Win) Desktop\"]],[/micromessenger\\/([\\w\\.]+)/i],[VERSION,[NAME,\"WeChat\"]],[/konqueror\\/([\\w\\.]+)/i],[VERSION,[NAME,\"Konqueror\"]],[/trident.+rv[: ]([\\w\\.]{1,9})\\b.+like gecko/i],[VERSION,[NAME,\"IE\"]],[/yabrowser\\/([\\w\\.]+)/i],[VERSION,[NAME,\"Yandex\"]],[/(avast|avg)\\/([\\w\\.]+)/i],[[NAME,/(.+)/,\"$1 Secure \"+BROWSER],VERSION],[/\\bfocus\\/([\\w\\.]+)/i],[VERSION,[NAME,FIREFOX+\" Focus\"]],[/\\bopt\\/([\\w\\.]+)/i],[VERSION,[NAME,OPERA+\" Touch\"]],[/coc_coc\\w+\\/([\\w\\.]+)/i],[VERSION,[NAME,\"Coc Coc\"]],[/dolfin\\/([\\w\\.]+)/i],[VERSION,[NAME,\"Dolphin\"]],[/coast\\/([\\w\\.]+)/i],[VERSION,[NAME,OPERA+\" Coast\"]],[/miuibrowser\\/([\\w\\.]+)/i],[VERSION,[NAME,\"MIUI \"+BROWSER]],[/fxios\\/([-\\w\\.]+)/i],[VERSION,[NAME,FIREFOX]],[/\\bqihu|(qi?ho?o?|360)browser/i],[[NAME,\"360 \"+BROWSER]],[/(oculus|samsung|sailfish|huawei)browser\\/([\\w\\.]+)/i],[[NAME,/(.+)/,\"$1 \"+BROWSER],VERSION],[/(comodo_dragon)\\/([\\w\\.]+)/i],[[NAME,/_/g,\" \"],VERSION],[/(electron)\\/([\\w\\.]+) safari/i,/(tesla)(?: qtcarbrowser|\\/(20\\d\\d\\.[-\\w\\.]+))/i,/m?(qqbrowser|baiduboxapp|2345Explorer)[\\/ ]?([\\w\\.]+)/i],[NAME,VERSION],[/(metasr)[\\/ ]?([\\w\\.]+)/i,/(lbbrowser)/i,/\\[(linkedin)app\\]/i],[NAME],[/((?:fban\\/fbios|fb_iab\\/fb4a)(?!.+fbav)|;fbav\\/([\\w\\.]+);)/i],[[NAME,FACEBOOK],VERSION],[/safari (line)\\/([\\w\\.]+)/i,/\\b(line)\\/([\\w\\.]+)\\/iab/i,/(chromium|instagram)[\\/ ]([-\\w\\.]+)/i],[NAME,VERSION],[/\\bgsa\\/([\\w\\.]+) .*safari\\//i],[VERSION,[NAME,\"GSA\"]],[/headlesschrome(?:\\/([\\w\\.]+)| )/i],[VERSION,[NAME,CHROME+\" Headless\"]],[/ wv\\).+(chrome)\\/([\\w\\.]+)/i],[[NAME,CHROME+\" WebView\"],VERSION],[/droid.+ version\\/([\\w\\.]+)\\b.+(?:mobile safari|safari)/i],[VERSION,[NAME,\"Android \"+BROWSER]],[/(chrome|omniweb|arora|[tizenoka]{5} ?browser)\\/v?([\\w\\.]+)/i],[NAME,VERSION],[/version\\/([\\w\\.\\,]+) .*mobile\\/\\w+ (safari)/i],[VERSION,[NAME,\"Mobile Safari\"]],[/version\\/([\\w(\\.|\\,)]+) .*(mobile ?safari|safari)/i],[VERSION,NAME],[/webkit.+?(mobile ?safari|safari)(\\/[\\w\\.]+)/i],[NAME,[VERSION,strMapper,oldSafariMap]],[/(webkit|khtml)\\/([\\w\\.]+)/i],[NAME,VERSION],[/(navigator|netscape\\d?)\\/([-\\w\\.]+)/i],[[NAME,\"Netscape\"],VERSION],[/mobile vr; rv:([\\w\\.]+)\\).+firefox/i],[VERSION,[NAME,FIREFOX+\" Reality\"]],[/ekiohf.+(flow)\\/([\\w\\.]+)/i,/(swiftfox)/i,/(icedragon|iceweasel|camino|chimera|fennec|maemo browser|minimo|conkeror|klar)[\\/ ]?([\\w\\.\\+]+)/i,/(seamonkey|k-meleon|icecat|iceape|firebird|phoenix|palemoon|basilisk|waterfox)\\/([-\\w\\.]+)$/i,/(firefox)\\/([\\w\\.]+)/i,/(mozilla)\\/([\\w\\.]+) .+rv\\:.+gecko\\/\\d+/i,/(polaris|lynx|dillo|icab|doris|amaya|w3m|netsurf|sleipnir|obigo|mosaic|(?:go|ice|up)[\\. ]?browser)[-\\/ ]?v?([\\w\\.]+)/i,/(links) \\(([\\w\\.]+)/i],[NAME,VERSION],[/(cobalt)\\/([\\w\\.]+)/i],[NAME,[VERSION,/master.|lts./,\"\"]]],cpu:[[/(?:(amd|x(?:(?:86|64)[-_])?|wow|win)64)[;\\)]/i],[[ARCHITECTURE,\"amd64\"]],[/(ia32(?=;))/i],[[ARCHITECTURE,lowerize]],[/((?:i[346]|x)86)[;\\)]/i],[[ARCHITECTURE,\"ia32\"]],[/\\b(aarch64|arm(v?8e?l?|_?64))\\b/i],[[ARCHITECTURE,\"arm64\"]],[/\\b(arm(?:v[67])?ht?n?[fl]p?)\\b/i],[[ARCHITECTURE,\"armhf\"]],[/windows (ce|mobile); ppc;/i],[[ARCHITECTURE,\"arm\"]],[/((?:ppc|powerpc)(?:64)?)(?: mac|;|\\))/i],[[ARCHITECTURE,/ower/,EMPTY,lowerize]],[/(sun4\\w)[;\\)]/i],[[ARCHITECTURE,\"sparc\"]],[/((?:avr32|ia64(?=;))|68k(?=\\))|\\barm(?=v(?:[1-7]|[5-7]1)l?|;|eabi)|(?=atmel )avr|(?:irix|mips|sparc)(?:64)?\\b|pa-risc)/i],[[ARCHITECTURE,lowerize]]],device:[[/\\b(sch-i[89]0\\d|shw-m380s|sm-[ptx]\\w{2,4}|gt-[pn]\\d{2,4}|sgh-t8[56]9|nexus 10)/i],[MODEL,[VENDOR,SAMSUNG],[TYPE,TABLET]],[/\\b((?:s[cgp]h|gt|sm)-\\w+|galaxy nexus)/i,/samsung[- ]([-\\w]+)/i,/sec-(sgh\\w+)/i],[MODEL,[VENDOR,SAMSUNG],[TYPE,MOBILE]],[/\\((ip(?:hone|od)[\\w ]*);/i],[MODEL,[VENDOR,APPLE],[TYPE,MOBILE]],[/\\((ipad);[-\\w\\),; ]+apple/i,/applecoremedia\\/[\\w\\.]+ \\((ipad)/i,/\\b(ipad)\\d\\d?,\\d\\d?[;\\]].+ios/i],[MODEL,[VENDOR,APPLE],[TYPE,TABLET]],[/(macintosh);/i],[MODEL,[VENDOR,APPLE]],[/\\b((?:ag[rs][23]?|bah2?|sht?|btv)-a?[lw]\\d{2})\\b(?!.+d\\/s)/i],[MODEL,[VENDOR,HUAWEI],[TYPE,TABLET]],[/(?:huawei|honor)([-\\w ]+)[;\\)]/i,/\\b(nexus 6p|\\w{2,4}e?-[atu]?[ln][\\dx][012359c][adn]?)\\b(?!.+d\\/s)/i],[MODEL,[VENDOR,HUAWEI],[TYPE,MOBILE]],[/\\b(poco[\\w ]+)(?: bui|\\))/i,/\\b; (\\w+) build\\/hm\\1/i,/\\b(hm[-_ ]?note?[_ ]?(?:\\d\\w)?) bui/i,/\\b(redmi[\\-_ ]?(?:note|k)?[\\w_ ]+)(?: bui|\\))/i,/\\b(mi[-_ ]?(?:a\\d|one|one[_ ]plus|note lte|max|cc)?[_ ]?(?:\\d?\\w?)[_ ]?(?:plus|se|lite)?)(?: bui|\\))/i],[[MODEL,/_/g,\" \"],[VENDOR,XIAOMI],[TYPE,MOBILE]],[/\\b(mi[-_ ]?(?:pad)(?:[\\w_ ]+))(?: bui|\\))/i],[[MODEL,/_/g,\" \"],[VENDOR,XIAOMI],[TYPE,TABLET]],[/; (\\w+) bui.+ oppo/i,/\\b(cph[12]\\d{3}|p(?:af|c[al]|d\\w|e[ar])[mt]\\d0|x9007|a101op)\\b/i],[MODEL,[VENDOR,\"OPPO\"],[TYPE,MOBILE]],[/vivo (\\w+)(?: bui|\\))/i,/\\b(v[12]\\d{3}\\w?[at])(?: bui|;)/i],[MODEL,[VENDOR,\"Vivo\"],[TYPE,MOBILE]],[/\\b(rmx[12]\\d{3})(?: bui|;|\\))/i],[MODEL,[VENDOR,\"Realme\"],[TYPE,MOBILE]],[/\\b(milestone|droid(?:[2-4x]| (?:bionic|x2|pro|razr))?:?( 4g)?)\\b[\\w ]+build\\//i,/\\bmot(?:orola)?[- ](\\w*)/i,/((?:moto[\\w\\(\\) ]+|xt\\d{3,4}|nexus 6)(?= bui|\\)))/i],[MODEL,[VENDOR,MOTOROLA],[TYPE,MOBILE]],[/\\b(mz60\\d|xoom[2 ]{0,2}) build\\//i],[MODEL,[VENDOR,MOTOROLA],[TYPE,TABLET]],[/((?=lg)?[vl]k\\-?\\d{3}) bui| 3\\.[-\\w; ]{10}lg?-([06cv9]{3,4})/i],[MODEL,[VENDOR,LG],[TYPE,TABLET]],[/(lm(?:-?f100[nv]?|-[\\w\\.]+)(?= bui|\\))|nexus [45])/i,/\\blg[-e;\\/ ]+((?!browser|netcast|android tv)\\w+)/i,/\\blg-?([\\d\\w]+) bui/i],[MODEL,[VENDOR,LG],[TYPE,MOBILE]],[/(ideatab[-\\w ]+)/i,/lenovo ?(s[56]000[-\\w]+|tab(?:[\\w ]+)|yt[-\\d\\w]{6}|tb[-\\d\\w]{6})/i],[MODEL,[VENDOR,\"Lenovo\"],[TYPE,TABLET]],[/(?:maemo|nokia).*(n900|lumia \\d+)/i,/nokia[-_ ]?([-\\w\\.]*)/i],[[MODEL,/_/g,\" \"],[VENDOR,\"Nokia\"],[TYPE,MOBILE]],[/(pixel c)\\b/i],[MODEL,[VENDOR,GOOGLE],[TYPE,TABLET]],[/droid.+; (pixel[\\daxl ]{0,6})(?: bui|\\))/i],[MODEL,[VENDOR,GOOGLE],[TYPE,MOBILE]],[/droid.+ (a?\\d[0-2]{2}so|[c-g]\\d{4}|so[-gl]\\w+|xq-a\\w[4-7][12])(?= bui|\\).+chrome\\/(?![1-6]{0,1}\\d\\.))/i],[MODEL,[VENDOR,SONY],[TYPE,MOBILE]],[/sony tablet [ps]/i,/\\b(?:sony)?sgp\\w+(?: bui|\\))/i],[[MODEL,\"Xperia Tablet\"],[VENDOR,SONY],[TYPE,TABLET]],[/ (kb2005|in20[12]5|be20[12][59])\\b/i,/(?:one)?(?:plus)? (a\\d0\\d\\d)(?: b|\\))/i],[MODEL,[VENDOR,\"OnePlus\"],[TYPE,MOBILE]],[/(alexa)webm/i,/(kf[a-z]{2}wi)( bui|\\))/i,/(kf[a-z]+)( bui|\\)).+silk\\//i],[MODEL,[VENDOR,AMAZON],[TYPE,TABLET]],[/((?:sd|kf)[0349hijorstuw]+)( bui|\\)).+silk\\//i],[[MODEL,/(.+)/g,\"Fire Phone $1\"],[VENDOR,AMAZON],[TYPE,MOBILE]],[/(playbook);[-\\w\\),; ]+(rim)/i],[MODEL,VENDOR,[TYPE,TABLET]],[/\\b((?:bb[a-f]|st[hv])100-\\d)/i,/\\(bb10; (\\w+)/i],[MODEL,[VENDOR,BLACKBERRY],[TYPE,MOBILE]],[/(?:\\b|asus_)(transfo[prime ]{4,10} \\w+|eeepc|slider \\w+|nexus 7|padfone|p00[cj])/i],[MODEL,[VENDOR,ASUS],[TYPE,TABLET]],[/ (z[bes]6[027][012][km][ls]|zenfone \\d\\w?)\\b/i],[MODEL,[VENDOR,ASUS],[TYPE,MOBILE]],[/(nexus 9)/i],[MODEL,[VENDOR,\"HTC\"],[TYPE,TABLET]],[/(htc)[-;_ ]{1,2}([\\w ]+(?=\\)| bui)|\\w+)/i,/(zte)[- ]([\\w ]+?)(?: bui|\\/|\\))/i,/(alcatel|geeksphone|nexian|panasonic|sony(?!-bra))[-_ ]?([-\\w]*)/i],[VENDOR,[MODEL,/_/g,\" \"],[TYPE,MOBILE]],[/droid.+; ([ab][1-7]-?[0178a]\\d\\d?)/i],[MODEL,[VENDOR,\"Acer\"],[TYPE,TABLET]],[/droid.+; (m[1-5] note) bui/i,/\\bmz-([-\\w]{2,})/i],[MODEL,[VENDOR,\"Meizu\"],[TYPE,MOBILE]],[/\\b(sh-?[altvz]?\\d\\d[a-ekm]?)/i],[MODEL,[VENDOR,SHARP],[TYPE,MOBILE]],[/(blackberry|benq|palm(?=\\-)|sonyericsson|acer|asus|dell|meizu|motorola|polytron)[-_ ]?([-\\w]*)/i,/(hp) ([\\w ]+\\w)/i,/(asus)-?(\\w+)/i,/(microsoft); (lumia[\\w ]+)/i,/(lenovo)[-_ ]?([-\\w]+)/i,/(jolla)/i,/(oppo) ?([\\w ]+) bui/i],[VENDOR,MODEL,[TYPE,MOBILE]],[/(archos) (gamepad2?)/i,/(hp).+(touchpad(?!.+tablet)|tablet)/i,/(kindle)\\/([\\w\\.]+)/i,/(nook)[\\w ]+build\\/(\\w+)/i,/(dell) (strea[kpr\\d ]*[\\dko])/i,/(le[- ]+pan)[- ]+(\\w{1,9}) bui/i,/(trinity)[- ]*(t\\d{3}) bui/i,/(gigaset)[- ]+(q\\w{1,9}) bui/i,/(vodafone) ([\\w ]+)(?:\\)| bui)/i],[VENDOR,MODEL,[TYPE,TABLET]],[/(surface duo)/i],[MODEL,[VENDOR,MICROSOFT],[TYPE,TABLET]],[/droid [\\d\\.]+; (fp\\du?)(?: b|\\))/i],[MODEL,[VENDOR,\"Fairphone\"],[TYPE,MOBILE]],[/(u304aa)/i],[MODEL,[VENDOR,\"AT&T\"],[TYPE,MOBILE]],[/\\bsie-(\\w*)/i],[MODEL,[VENDOR,\"Siemens\"],[TYPE,MOBILE]],[/\\b(rct\\w+) b/i],[MODEL,[VENDOR,\"RCA\"],[TYPE,TABLET]],[/\\b(venue[\\d ]{2,7}) b/i],[MODEL,[VENDOR,\"Dell\"],[TYPE,TABLET]],[/\\b(q(?:mv|ta)\\w+) b/i],[MODEL,[VENDOR,\"Verizon\"],[TYPE,TABLET]],[/\\b(?:barnes[& ]+noble |bn[rt])([\\w\\+ ]*) b/i],[MODEL,[VENDOR,\"Barnes & Noble\"],[TYPE,TABLET]],[/\\b(tm\\d{3}\\w+) b/i],[MODEL,[VENDOR,\"NuVision\"],[TYPE,TABLET]],[/\\b(k88) b/i],[MODEL,[VENDOR,\"ZTE\"],[TYPE,TABLET]],[/\\b(nx\\d{3}j) b/i],[MODEL,[VENDOR,\"ZTE\"],[TYPE,MOBILE]],[/\\b(gen\\d{3}) b.+49h/i],[MODEL,[VENDOR,\"Swiss\"],[TYPE,MOBILE]],[/\\b(zur\\d{3}) b/i],[MODEL,[VENDOR,\"Swiss\"],[TYPE,TABLET]],[/\\b((zeki)?tb.*\\b) b/i],[MODEL,[VENDOR,\"Zeki\"],[TYPE,TABLET]],[/\\b([yr]\\d{2}) b/i,/\\b(dragon[- ]+touch |dt)(\\w{5}) b/i],[[VENDOR,\"Dragon Touch\"],MODEL,[TYPE,TABLET]],[/\\b(ns-?\\w{0,9}) b/i],[MODEL,[VENDOR,\"Insignia\"],[TYPE,TABLET]],[/\\b((nxa|next)-?\\w{0,9}) b/i],[MODEL,[VENDOR,\"NextBook\"],[TYPE,TABLET]],[/\\b(xtreme\\_)?(v(1[045]|2[015]|[3469]0|7[05])) b/i],[[VENDOR,\"Voice\"],MODEL,[TYPE,MOBILE]],[/\\b(lvtel\\-)?(v1[12]) b/i],[[VENDOR,\"LvTel\"],MODEL,[TYPE,MOBILE]],[/\\b(ph-1) /i],[MODEL,[VENDOR,\"Essential\"],[TYPE,MOBILE]],[/\\b(v(100md|700na|7011|917g).*\\b) b/i],[MODEL,[VENDOR,\"Envizen\"],[TYPE,TABLET]],[/\\b(trio[-\\w\\. ]+) b/i],[MODEL,[VENDOR,\"MachSpeed\"],[TYPE,TABLET]],[/\\btu_(1491) b/i],[MODEL,[VENDOR,\"Rotor\"],[TYPE,TABLET]],[/(shield[\\w ]+) b/i],[MODEL,[VENDOR,\"Nvidia\"],[TYPE,TABLET]],[/(sprint) (\\w+)/i],[VENDOR,MODEL,[TYPE,MOBILE]],[/(kin\\.[onetw]{3})/i],[[MODEL,/\\./g,\" \"],[VENDOR,MICROSOFT],[TYPE,MOBILE]],[/droid.+; (cc6666?|et5[16]|mc[239][23]x?|vc8[03]x?)\\)/i],[MODEL,[VENDOR,ZEBRA],[TYPE,TABLET]],[/droid.+; (ec30|ps20|tc[2-8]\\d[kx])\\)/i],[MODEL,[VENDOR,ZEBRA],[TYPE,MOBILE]],[/(ouya)/i,/(nintendo) ([wids3utch]+)/i],[VENDOR,MODEL,[TYPE,CONSOLE]],[/droid.+; (shield) bui/i],[MODEL,[VENDOR,\"Nvidia\"],[TYPE,CONSOLE]],[/(playstation [345portablevi]+)/i],[MODEL,[VENDOR,SONY],[TYPE,CONSOLE]],[/\\b(xbox(?: one)?(?!; xbox))[\\); ]/i],[MODEL,[VENDOR,MICROSOFT],[TYPE,CONSOLE]],[/smart-tv.+(samsung)/i],[VENDOR,[TYPE,SMARTTV]],[/hbbtv.+maple;(\\d+)/i],[[MODEL,/^/,\"SmartTV\"],[VENDOR,SAMSUNG],[TYPE,SMARTTV]],[/(nux; netcast.+smarttv|lg (netcast\\.tv-201\\d|android tv))/i],[[VENDOR,LG],[TYPE,SMARTTV]],[/(apple) ?tv/i],[VENDOR,[MODEL,APPLE+\" TV\"],[TYPE,SMARTTV]],[/crkey/i],[[MODEL,CHROME+\"cast\"],[VENDOR,GOOGLE],[TYPE,SMARTTV]],[/droid.+aft(\\w)( bui|\\))/i],[MODEL,[VENDOR,AMAZON],[TYPE,SMARTTV]],[/\\(dtv[\\);].+(aquos)/i,/(aquos-tv[\\w ]+)\\)/i],[MODEL,[VENDOR,SHARP],[TYPE,SMARTTV]],[/(bravia[\\w ]+)( bui|\\))/i],[MODEL,[VENDOR,SONY],[TYPE,SMARTTV]],[/(mitv-\\w{5}) bui/i],[MODEL,[VENDOR,XIAOMI],[TYPE,SMARTTV]],[/\\b(roku)[\\dx]*[\\)\\/]((?:dvp-)?[\\d\\.]*)/i,/hbbtv\\/\\d+\\.\\d+\\.\\d+ +\\([\\w ]*; *(\\w[^;]*);([^;]*)/i],[[VENDOR,trim],[MODEL,trim],[TYPE,SMARTTV]],[/\\b(android tv|smart[- ]?tv|opera tv|tv; rv:)\\b/i],[[TYPE,SMARTTV]],[/((pebble))app/i],[VENDOR,MODEL,[TYPE,WEARABLE]],[/droid.+; (glass) \\d/i],[MODEL,[VENDOR,GOOGLE],[TYPE,WEARABLE]],[/droid.+; (wt63?0{2,3})\\)/i],[MODEL,[VENDOR,ZEBRA],[TYPE,WEARABLE]],[/(quest( 2)?)/i],[MODEL,[VENDOR,FACEBOOK],[TYPE,WEARABLE]],[/(tesla)(?: qtcarbrowser|\\/[-\\w\\.]+)/i],[VENDOR,[TYPE,EMBEDDED]],[/droid .+?; ([^;]+?)(?: bui|\\) applew).+? mobile safari/i],[MODEL,[TYPE,MOBILE]],[/droid .+?; ([^;]+?)(?: bui|\\) applew).+?(?! mobile) safari/i],[MODEL,[TYPE,TABLET]],[/\\b((tablet|tab)[;\\/]|focus\\/\\d(?!.+mobile))/i],[[TYPE,TABLET]],[/(phone|mobile(?:[;\\/]| [ \\w\\/\\.]*safari)|pda(?=.+windows ce))/i],[[TYPE,MOBILE]],[/(android[-\\w\\. ]{0,9});.+buil/i],[MODEL,[VENDOR,\"Generic\"]]],engine:[[/windows.+ edge\\/([\\w\\.]+)/i],[VERSION,[NAME,EDGE+\"HTML\"]],[/webkit\\/537\\.36.+chrome\\/(?!27)([\\w\\.]+)/i],[VERSION,[NAME,\"Blink\"]],[/(presto)\\/([\\w\\.]+)/i,/(webkit|trident|netfront|netsurf|amaya|lynx|w3m|goanna)\\/([\\w\\.]+)/i,/ekioh(flow)\\/([\\w\\.]+)/i,/(khtml|tasman|links)[\\/ ]\\(?([\\w\\.]+)/i,/(icab)[\\/ ]([23]\\.[\\d\\.]+)/i],[NAME,VERSION],[/rv\\:([\\w\\.]{1,9})\\b.+(gecko)/i],[VERSION,NAME]],os:[[/microsoft (windows) (vista|xp)/i],[NAME,VERSION],[/(windows) nt 6\\.2; (arm)/i,/(windows (?:phone(?: os)?|mobile))[\\/ ]?([\\d\\.\\w ]*)/i,/(windows)[\\/ ]?([ntce\\d\\. ]+\\w)(?!.+xbox)/i],[NAME,[VERSION,strMapper,windowsVersionMap]],[/(win(?=3|9|n)|win 9x )([nt\\d\\.]+)/i],[[NAME,\"Windows\"],[VERSION,strMapper,windowsVersionMap]],[/ip[honead]{2,4}\\b(?:.*os ([\\w]+) like mac|; opera)/i,/cfnetwork\\/.+darwin/i],[[VERSION,/_/g,\".\"],[NAME,\"iOS\"]],[/(mac os x) ?([\\w\\. ]*)/i,/(macintosh|mac_powerpc\\b)(?!.+haiku)/i],[[NAME,\"Mac OS\"],[VERSION,/_/g,\".\"]],[/droid ([\\w\\.]+)\\b.+(android[- ]x86|harmonyos)/i],[VERSION,NAME],[/(android|webos|qnx|bada|rim tablet os|maemo|meego|sailfish)[-\\/ ]?([\\w\\.]*)/i,/(blackberry)\\w*\\/([\\w\\.]*)/i,/(tizen|kaios)[\\/ ]([\\w\\.]+)/i,/\\((series40);/i],[NAME,VERSION],[/\\(bb(10);/i],[VERSION,[NAME,BLACKBERRY]],[/(?:symbian ?os|symbos|s60(?=;)|series60)[-\\/ ]?([\\w\\.]*)/i],[VERSION,[NAME,\"Symbian\"]],[/mozilla\\/[\\d\\.]+ \\((?:mobile|tablet|tv|mobile; [\\w ]+); rv:.+ gecko\\/([\\w\\.]+)/i],[VERSION,[NAME,FIREFOX+\" OS\"]],[/web0s;.+rt(tv)/i,/\\b(?:hp)?wos(?:browser)?\\/([\\w\\.]+)/i],[VERSION,[NAME,\"webOS\"]],[/crkey\\/([\\d\\.]+)/i],[VERSION,[NAME,CHROME+\"cast\"]],[/(cros) [\\w]+ ([\\w\\.]+\\w)/i],[[NAME,\"Chromium OS\"],VERSION],[/(nintendo|playstation) ([wids345portablevuch]+)/i,/(xbox); +xbox ([^\\);]+)/i,/\\b(joli|palm)\\b ?(?:os)?\\/?([\\w\\.]*)/i,/(mint)[\\/\\(\\) ]?(\\w*)/i,/(mageia|vectorlinux)[; ]/i,/([kxln]?ubuntu|debian|suse|opensuse|gentoo|arch(?= linux)|slackware|fedora|mandriva|centos|pclinuxos|red ?hat|zenwalk|linpus|raspbian|plan 9|minix|risc os|contiki|deepin|manjaro|elementary os|sabayon|linspire)(?: gnu\\/linux)?(?: enterprise)?(?:[- ]linux)?(?:-gnu)?[-\\/ ]?(?!chrom|package)([-\\w\\.]*)/i,/(hurd|linux) ?([\\w\\.]*)/i,/(gnu) ?([\\w\\.]*)/i,/\\b([-frentopcghs]{0,5}bsd|dragonfly)[\\/ ]?(?!amd|[ix346]{1,2}86)([\\w\\.]*)/i,/(haiku) (\\w+)/i],[NAME,VERSION],[/(sunos) ?([\\w\\.\\d]*)/i],[[NAME,\"Solaris\"],VERSION],[/((?:open)?solaris)[-\\/ ]?([\\w\\.]*)/i,/(aix) ((\\d)(?=\\.|\\)| )[\\w\\.])*/i,/\\b(beos|os\\/2|amigaos|morphos|openvms|fuchsia|hp-ux)/i,/(unix) ?([\\w\\.]*)/i],[NAME,VERSION]]};var UAParser=function(ua,extensions){if(typeof ua===OBJ_TYPE){extensions=ua;ua=undefined}if(!(this instanceof UAParser)){return new UAParser(ua,extensions).getResult()}var _ua=ua||(typeof window!==UNDEF_TYPE&&window.navigator&&window.navigator.userAgent?window.navigator.userAgent:EMPTY);var _rgxmap=extensions?extend(regexes,extensions):regexes;this.getBrowser=function(){var _browser={};_browser[NAME]=undefined;_browser[VERSION]=undefined;rgxMapper.call(_browser,_ua,_rgxmap.browser);_browser.major=majorize(_browser.version);return _browser};this.getCPU=function(){var _cpu={};_cpu[ARCHITECTURE]=undefined;rgxMapper.call(_cpu,_ua,_rgxmap.cpu);return _cpu};this.getDevice=function(){var _device={};_device[VENDOR]=undefined;_device[MODEL]=undefined;_device[TYPE]=undefined;rgxMapper.call(_device,_ua,_rgxmap.device);return _device};this.getEngine=function(){var _engine={};_engine[NAME]=undefined;_engine[VERSION]=undefined;rgxMapper.call(_engine,_ua,_rgxmap.engine);return _engine};this.getOS=function(){var _os={};_os[NAME]=undefined;_os[VERSION]=undefined;rgxMapper.call(_os,_ua,_rgxmap.os);return _os};this.getResult=function(){return{ua:this.getUA(),browser:this.getBrowser(),engine:this.getEngine(),os:this.getOS(),device:this.getDevice(),cpu:this.getCPU()}};this.getUA=function(){return _ua};this.setUA=function(ua){_ua=typeof ua===STR_TYPE&&ua.length>UA_MAX_LENGTH?trim(ua,UA_MAX_LENGTH):ua;return this};this.setUA(_ua);return this};UAParser.VERSION=LIBVERSION;UAParser.BROWSER=enumerize([NAME,VERSION,MAJOR]);UAParser.CPU=enumerize([ARCHITECTURE]);UAParser.DEVICE=enumerize([MODEL,VENDOR,TYPE,CONSOLE,MOBILE,SMARTTV,TABLET,WEARABLE,EMBEDDED]);UAParser.ENGINE=UAParser.OS=enumerize([NAME,VERSION]);if(typeof exports!==UNDEF_TYPE){if(typeof module!==UNDEF_TYPE&&module.exports){exports=module.exports=UAParser}exports.UAParser=UAParser}else{if(typeof define===FUNC_TYPE&&define.amd){define(function(){return UAParser})}else if(typeof window!==UNDEF_TYPE){window.UAParser=UAParser}}var $=typeof window!==UNDEF_TYPE&&(window.jQuery||window.Zepto);if($&&!$.ua){var parser=new UAParser;$.ua=parser.getResult();$.ua.get=function(){return parser.getUA()};$.ua.set=function(ua){parser.setUA(ua);var result=parser.getResult();for(var prop in result){$.ua[prop]=result[prop]}}}})(typeof window===\"object\"?window:this);\n","'use strict';\n\nvar React = require('react');\n\nfunction useAsyncEffect(effect, destroy, inputs) {\n  var hasDestroy = typeof destroy === 'function';\n\n  React.useEffect(function () {\n    var result;\n    var mounted = true;\n    var maybePromise = effect(function () {\n      return mounted;\n    });\n\n    Promise.resolve(maybePromise).then(function (value) {\n      result = value;\n    });\n\n    return function () {\n      mounted = false;\n\n      if (hasDestroy) {\n        destroy(result);\n      }\n    };\n  }, hasDestroy ? inputs : destroy);\n}\n\nmodule.exports = useAsyncEffect;\nmodule.exports.useAsyncEffect = useAsyncEffect;\n","/**\n * @license React\n * use-sync-external-store-shim.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var e=require(\"react\");function h(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var k=\"function\"===typeof Object.is?Object.is:h,l=e.useState,m=e.useEffect,n=e.useLayoutEffect,p=e.useDebugValue;function q(a,b){var d=b(),f=l({inst:{value:d,getSnapshot:b}}),c=f[0].inst,g=f[1];n(function(){c.value=d;c.getSnapshot=b;r(c)&&g({inst:c})},[a,d,b]);m(function(){r(c)&&g({inst:c});return a(function(){r(c)&&g({inst:c})})},[a]);p(d);return d}\nfunction r(a){var b=a.getSnapshot;a=a.value;try{var d=b();return!k(a,d)}catch(f){return!0}}function t(a,b){return b()}var u=\"undefined\"===typeof window||\"undefined\"===typeof window.document||\"undefined\"===typeof window.document.createElement?t:q;exports.useSyncExternalStore=void 0!==e.useSyncExternalStore?e.useSyncExternalStore:u;\n","/**\n * @license React\n * use-sync-external-store-shim/with-selector.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var h=require(\"react\"),n=require(\"use-sync-external-store/shim\");function p(a,b){return a===b&&(0!==a||1/a===1/b)||a!==a&&b!==b}var q=\"function\"===typeof Object.is?Object.is:p,r=n.useSyncExternalStore,t=h.useRef,u=h.useEffect,v=h.useMemo,w=h.useDebugValue;\nexports.useSyncExternalStoreWithSelector=function(a,b,e,l,g){var c=t(null);if(null===c.current){var f={hasValue:!1,value:null};c.current=f}else f=c.current;c=v(function(){function a(a){if(!c){c=!0;d=a;a=l(a);if(void 0!==g&&f.hasValue){var b=f.value;if(g(b,a))return k=b}return k=a}b=k;if(q(d,a))return b;var e=l(a);if(void 0!==g&&g(b,e))return b;d=a;return k=e}var c=!1,d,k,m=void 0===e?null:e;return[function(){return a(b())},null===m?void 0:function(){return a(m())}]},[b,e,l,g]);var d=r(a,c[0],c[1]);\nu(function(){f.hasValue=!0;f.value=d},[d]);w(d);return d};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.production.min.js');\n} else {\n  module.exports = require('../cjs/use-sync-external-store-shim/with-selector.development.js');\n}\n","/**\n * This file automatically generated from `pre-publish.js`.\n * Do not manually edit.\n */\n\nmodule.exports = {\n  \"area\": true,\n  \"base\": true,\n  \"br\": true,\n  \"col\": true,\n  \"embed\": true,\n  \"hr\": true,\n  \"img\": true,\n  \"input\": true,\n  \"link\": true,\n  \"meta\": true,\n  \"param\": true,\n  \"source\": true,\n  \"track\": true,\n  \"wbr\": true\n};\n","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nmodule.exports = _classCallCheck, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var toPropertyKey = require(\"./toPropertyKey.js\");\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\nmodule.exports = _createClass, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\nmodule.exports = _toPrimitive, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nvar toPrimitive = require(\"./toPrimitive.js\");\nfunction _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}\nmodule.exports = _toPropertyKey, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return (module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(obj);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","const LANGUAGES_LIST = {\n  aa: {\n    name: 'Afar',\n    nativeName: 'Afaraf',\n  },\n  ab: {\n    name: 'Abkhaz',\n    nativeName: 'аҧсуа бызшәа',\n  },\n  ae: {\n    name: 'Avestan',\n    nativeName: 'avesta',\n  },\n  af: {\n    name: 'Afrikaans',\n    nativeName: 'Afrikaans',\n  },\n  ak: {\n    name: 'Akan',\n    nativeName: 'Akan',\n  },\n  am: {\n    name: 'Amharic',\n    nativeName: 'አማርኛ',\n  },\n  an: {\n    name: 'Aragonese',\n    nativeName: 'aragonés',\n  },\n  ar: {\n    name: 'Arabic',\n    nativeName: 'اَلْعَرَبِيَّةُ',\n  },\n  as: {\n    name: 'Assamese',\n    nativeName: 'অসমীয়া',\n  },\n  av: {\n    name: 'Avaric',\n    nativeName: 'авар мацӀ',\n  },\n  ay: {\n    name: 'Aymara',\n    nativeName: 'aymar aru',\n  },\n  az: {\n    name: 'Azerbaijani',\n    nativeName: 'azərbaycan dili',\n  },\n  ba: {\n    name: 'Bashkir',\n    nativeName: 'башҡорт теле',\n  },\n  be: {\n    name: 'Belarusian',\n    nativeName: 'беларуская мова',\n  },\n  bg: {\n    name: 'Bulgarian',\n    nativeName: 'български език',\n  },\n  bi: {\n    name: 'Bislama',\n    nativeName: 'Bislama',\n  },\n  bm: {\n    name: 'Bambara',\n    nativeName: 'bamanankan',\n  },\n  bn: {\n    name: 'Bengali',\n    nativeName: 'বাংলা',\n  },\n  bo: {\n    name: 'Tibetan',\n    nativeName: 'བོད་ཡིག',\n  },\n  br: {\n    name: 'Breton',\n    nativeName: 'brezhoneg',\n  },\n  bs: {\n    name: 'Bosnian',\n    nativeName: 'bosanski jezik',\n  },\n  ca: {\n    name: 'Catalan',\n    nativeName: 'Català',\n  },\n  ce: {\n    name: 'Chechen',\n    nativeName: 'нохчийн мотт',\n  },\n  ch: {\n    name: 'Chamorro',\n    nativeName: 'Chamoru',\n  },\n  co: {\n    name: 'Corsican',\n    nativeName: 'corsu',\n  },\n  cr: {\n    name: 'Cree',\n    nativeName: 'ᓀᐦᐃᔭᐍᐏᐣ',\n  },\n  cs: {\n    name: 'Czech',\n    nativeName: 'čeština',\n  },\n  cu: {\n    name: 'Old Church Slavonic',\n    nativeName: 'ѩзыкъ словѣньскъ',\n  },\n  cv: {\n    name: 'Chuvash',\n    nativeName: 'чӑваш чӗлхи',\n  },\n  cy: {\n    name: 'Welsh',\n    nativeName: 'Cymraeg',\n  },\n  da: {\n    name: 'Danish',\n    nativeName: 'dansk',\n  },\n  de: {\n    name: 'German',\n    nativeName: 'Deutsch',\n  },\n  dv: {\n    name: 'Divehi',\n    nativeName: 'ދިވެހި',\n  },\n  dz: {\n    name: 'Dzongkha',\n    nativeName: 'རྫོང་ཁ',\n  },\n  ee: {\n    name: 'Ewe',\n    nativeName: 'Eʋegbe',\n  },\n  el: {\n    name: 'Greek',\n    nativeName: 'Ελληνικά',\n  },\n  en: {\n    name: 'English',\n    nativeName: 'English',\n  },\n  eo: {\n    name: 'Esperanto',\n    nativeName: 'Esperanto',\n  },\n  es: {\n    name: 'Spanish',\n    nativeName: 'Español',\n  },\n  et: {\n    name: 'Estonian',\n    nativeName: 'eesti',\n  },\n  eu: {\n    name: 'Basque',\n    nativeName: 'euskara',\n  },\n  fa: {\n    name: 'Persian',\n    nativeName: 'فارسی',\n  },\n  ff: {\n    name: 'Fula',\n    nativeName: 'Fulfulde',\n  },\n  fi: {\n    name: 'Finnish',\n    nativeName: 'suomi',\n  },\n  fj: {\n    name: 'Fijian',\n    nativeName: 'vosa Vakaviti',\n  },\n  fo: {\n    name: 'Faroese',\n    nativeName: 'føroyskt',\n  },\n  fr: {\n    name: 'French',\n    nativeName: 'Français',\n  },\n  fy: {\n    name: 'Western Frisian',\n    nativeName: 'Frysk',\n  },\n  ga: {\n    name: 'Irish',\n    nativeName: 'Gaeilge',\n  },\n  gd: {\n    name: 'Scottish Gaelic',\n    nativeName: 'Gàidhlig',\n  },\n  gl: {\n    name: 'Galician',\n    nativeName: 'galego',\n  },\n  gn: {\n    name: 'Guaraní',\n    nativeName: \"Avañe'ẽ\",\n  },\n  gu: {\n    name: 'Gujarati',\n    nativeName: 'ગુજરાતી',\n  },\n  gv: {\n    name: 'Manx',\n    nativeName: 'Gaelg',\n  },\n  ha: {\n    name: 'Hausa',\n    nativeName: 'هَوُسَ',\n  },\n  he: {\n    name: 'Hebrew',\n    nativeName: 'עברית',\n  },\n  hi: {\n    name: 'Hindi',\n    nativeName: 'हिन्दी',\n  },\n  ho: {\n    name: 'Hiri Motu',\n    nativeName: 'Hiri Motu',\n  },\n  hr: {\n    name: 'Croatian',\n    nativeName: 'Hrvatski',\n  },\n  ht: {\n    name: 'Haitian',\n    nativeName: 'Kreyòl ayisyen',\n  },\n  hu: {\n    name: 'Hungarian',\n    nativeName: 'magyar',\n  },\n  hy: {\n    name: 'Armenian',\n    nativeName: 'Հայերեն',\n  },\n  hz: {\n    name: 'Herero',\n    nativeName: 'Otjiherero',\n  },\n  ia: {\n    name: 'Interlingua',\n    nativeName: 'Interlingua',\n  },\n  id: {\n    name: 'Indonesian',\n    nativeName: 'Bahasa Indonesia',\n  },\n  ie: {\n    name: 'Interlingue',\n    nativeName: 'Interlingue',\n  },\n  ig: {\n    name: 'Igbo',\n    nativeName: 'Asụsụ Igbo',\n  },\n  ii: {\n    name: 'Nuosu',\n    nativeName: 'ꆈꌠ꒿ Nuosuhxop',\n  },\n  ik: {\n    name: 'Inupiaq',\n    nativeName: 'Iñupiaq',\n  },\n  io: {\n    name: 'Ido',\n    nativeName: 'Ido',\n  },\n  is: {\n    name: 'Icelandic',\n    nativeName: 'Íslenska',\n  },\n  it: {\n    name: 'Italian',\n    nativeName: 'Italiano',\n  },\n  iu: {\n    name: 'Inuktitut',\n    nativeName: 'ᐃᓄᒃᑎᑐᑦ',\n  },\n  ja: {\n    name: 'Japanese',\n    nativeName: '日本語',\n  },\n  jv: {\n    name: 'Javanese',\n    nativeName: 'basa Jawa',\n  },\n  ka: {\n    name: 'Georgian',\n    nativeName: 'ქართული',\n  },\n  kg: {\n    name: 'Kongo',\n    nativeName: 'Kikongo',\n  },\n  ki: {\n    name: 'Kikuyu',\n    nativeName: 'Gĩkũyũ',\n  },\n  kj: {\n    name: 'Kwanyama',\n    nativeName: 'Kuanyama',\n  },\n  kk: {\n    name: 'Kazakh',\n    nativeName: 'қазақ тілі',\n  },\n  kl: {\n    name: 'Kalaallisut',\n    nativeName: 'kalaallisut',\n  },\n  km: {\n    name: 'Khmer',\n    nativeName: 'ខេមរភាសា',\n  },\n  kn: {\n    name: 'Kannada',\n    nativeName: 'ಕನ್ನಡ',\n  },\n  ko: {\n    name: 'Korean',\n    nativeName: '한국어',\n  },\n  kr: {\n    name: 'Kanuri',\n    nativeName: 'Kanuri',\n  },\n  ks: {\n    name: 'Kashmiri',\n    nativeName: 'कश्मीरी',\n  },\n  ku: {\n    name: 'Kurdish',\n    nativeName: 'Kurdî',\n  },\n  kv: {\n    name: 'Komi',\n    nativeName: 'коми кыв',\n  },\n  kw: {\n    name: 'Cornish',\n    nativeName: 'Kernewek',\n  },\n  ky: {\n    name: 'Kyrgyz',\n    nativeName: 'Кыргызча',\n  },\n  la: {\n    name: 'Latin',\n    nativeName: 'latine',\n  },\n  lb: {\n    name: 'Luxembourgish',\n    nativeName: 'Lëtzebuergesch',\n  },\n  lg: {\n    name: 'Ganda',\n    nativeName: 'Luganda',\n  },\n  li: {\n    name: 'Limburgish',\n    nativeName: 'Limburgs',\n  },\n  ln: {\n    name: 'Lingala',\n    nativeName: 'Lingála',\n  },\n  lo: {\n    name: 'Lao',\n    nativeName: 'ພາສາລາວ',\n  },\n  lt: {\n    name: 'Lithuanian',\n    nativeName: 'lietuvių kalba',\n  },\n  lu: {\n    name: 'Luba-Katanga',\n    nativeName: 'Kiluba',\n  },\n  lv: {\n    name: 'Latvian',\n    nativeName: 'latviešu valoda',\n  },\n  mg: {\n    name: 'Malagasy',\n    nativeName: 'fiteny malagasy',\n  },\n  mh: {\n    name: 'Marshallese',\n    nativeName: 'Kajin M̧ajeļ',\n  },\n  mi: {\n    name: 'Māori',\n    nativeName: 'te reo Māori',\n  },\n  mk: {\n    name: 'Macedonian',\n    nativeName: 'македонски јазик',\n  },\n  ml: {\n    name: 'Malayalam',\n    nativeName: 'മലയാളം',\n  },\n  mn: {\n    name: 'Mongolian',\n    nativeName: 'Монгол хэл',\n  },\n  mr: {\n    name: 'Marathi',\n    nativeName: 'मराठी',\n  },\n  ms: {\n    name: 'Malay',\n    nativeName: 'Bahasa Melayu',\n  },\n  mt: {\n    name: 'Maltese',\n    nativeName: 'Malti',\n  },\n  my: {\n    name: 'Burmese',\n    nativeName: 'ဗမာစာ',\n  },\n  na: {\n    name: 'Nauru',\n    nativeName: 'Dorerin Naoero',\n  },\n  nb: {\n    name: 'Norwegian Bokmål',\n    nativeName: 'Norsk bokmål',\n  },\n  nd: {\n    name: 'Northern Ndebele',\n    nativeName: 'isiNdebele',\n  },\n  ne: {\n    name: 'Nepali',\n    nativeName: 'नेपाली',\n  },\n  ng: {\n    name: 'Ndonga',\n    nativeName: 'Owambo',\n  },\n  nl: {\n    name: 'Dutch',\n    nativeName: 'Nederlands',\n  },\n  nn: {\n    name: 'Norwegian Nynorsk',\n    nativeName: 'Norsk nynorsk',\n  },\n  no: {\n    name: 'Norwegian',\n    nativeName: 'Norsk',\n  },\n  nr: {\n    name: 'Southern Ndebele',\n    nativeName: 'isiNdebele',\n  },\n  nv: {\n    name: 'Navajo',\n    nativeName: 'Diné bizaad',\n  },\n  ny: {\n    name: 'Chichewa',\n    nativeName: 'chiCheŵa',\n  },\n  oc: {\n    name: 'Occitan',\n    nativeName: 'occitan',\n  },\n  oj: {\n    name: 'Ojibwe',\n    nativeName: 'ᐊᓂᔑᓈᐯᒧᐎᓐ',\n  },\n  om: {\n    name: 'Oromo',\n    nativeName: 'Afaan Oromoo',\n  },\n  or: {\n    name: 'Oriya',\n    nativeName: 'ଓଡ଼ିଆ',\n  },\n  os: {\n    name: 'Ossetian',\n    nativeName: 'ирон æвзаг',\n  },\n  pa: {\n    name: 'Panjabi',\n    nativeName: 'ਪੰਜਾਬੀ',\n  },\n  pi: {\n    name: 'Pāli',\n    nativeName: 'पाऴि',\n  },\n  pl: {\n    name: 'Polish',\n    nativeName: 'Polski',\n  },\n  ps: {\n    name: 'Pashto',\n    nativeName: 'پښتو',\n  },\n  pt: {\n    name: 'Portuguese',\n    nativeName: 'Português',\n  },\n  qu: {\n    name: 'Quechua',\n    nativeName: 'Runa Simi',\n  },\n  rm: {\n    name: 'Romansh',\n    nativeName: 'rumantsch grischun',\n  },\n  rn: {\n    name: 'Kirundi',\n    nativeName: 'Ikirundi',\n  },\n  ro: {\n    name: 'Romanian',\n    nativeName: 'Română',\n  },\n  ru: {\n    name: 'Russian',\n    nativeName: 'Русский',\n  },\n  rw: {\n    name: 'Kinyarwanda',\n    nativeName: 'Ikinyarwanda',\n  },\n  sa: {\n    name: 'Sanskrit',\n    nativeName: 'संस्कृतम्',\n  },\n  sc: {\n    name: 'Sardinian',\n    nativeName: 'sardu',\n  },\n  sd: {\n    name: 'Sindhi',\n    nativeName: 'सिन्धी',\n  },\n  se: {\n    name: 'Northern Sami',\n    nativeName: 'Davvisámegiella',\n  },\n  sg: {\n    name: 'Sango',\n    nativeName: 'yângâ tî sängö',\n  },\n  si: {\n    name: 'Sinhala',\n    nativeName: 'සිංහල',\n  },\n  sk: {\n    name: 'Slovak',\n    nativeName: 'slovenčina',\n  },\n  sl: {\n    name: 'Slovenian',\n    nativeName: 'slovenščina',\n  },\n  sm: {\n    name: 'Samoan',\n    nativeName: \"gagana fa'a Samoa\",\n  },\n  sn: {\n    name: 'Shona',\n    nativeName: 'chiShona',\n  },\n  so: {\n    name: 'Somali',\n    nativeName: 'Soomaaliga',\n  },\n  sq: {\n    name: 'Albanian',\n    nativeName: 'Shqip',\n  },\n  sr: {\n    name: 'Serbian',\n    nativeName: 'српски језик',\n  },\n  ss: {\n    name: 'Swati',\n    nativeName: 'SiSwati',\n  },\n  st: {\n    name: 'Southern Sotho',\n    nativeName: 'Sesotho',\n  },\n  su: {\n    name: 'Sundanese',\n    nativeName: 'Basa Sunda',\n  },\n  sv: {\n    name: 'Swedish',\n    nativeName: 'Svenska',\n  },\n  sw: {\n    name: 'Swahili',\n    nativeName: 'Kiswahili',\n  },\n  ta: {\n    name: 'Tamil',\n    nativeName: 'தமிழ்',\n  },\n  te: {\n    name: 'Telugu',\n    nativeName: 'తెలుగు',\n  },\n  tg: {\n    name: 'Tajik',\n    nativeName: 'тоҷикӣ',\n  },\n  th: {\n    name: 'Thai',\n    nativeName: 'ไทย',\n  },\n  ti: {\n    name: 'Tigrinya',\n    nativeName: 'ትግርኛ',\n  },\n  tk: {\n    name: 'Turkmen',\n    nativeName: 'Türkmençe',\n  },\n  tl: {\n    name: 'Tagalog',\n    nativeName: 'Wikang Tagalog',\n  },\n  tn: {\n    name: 'Tswana',\n    nativeName: 'Setswana',\n  },\n  to: {\n    name: 'Tonga',\n    nativeName: 'faka Tonga',\n  },\n  tr: {\n    name: 'Turkish',\n    nativeName: 'Türkçe',\n  },\n  ts: {\n    name: 'Tsonga',\n    nativeName: 'Xitsonga',\n  },\n  tt: {\n    name: 'Tatar',\n    nativeName: 'татар теле',\n  },\n  tw: {\n    name: 'Twi',\n    nativeName: 'Twi',\n  },\n  ty: {\n    name: 'Tahitian',\n    nativeName: 'Reo Tahiti',\n  },\n  ug: {\n    name: 'Uyghur',\n    nativeName: 'ئۇيغۇرچە‎',\n  },\n  uk: {\n    name: 'Ukrainian',\n    nativeName: 'Українська',\n  },\n  ur: {\n    name: 'Urdu',\n    nativeName: 'اردو',\n  },\n  uz: {\n    name: 'Uzbek',\n    nativeName: 'Ўзбек',\n  },\n  ve: {\n    name: 'Venda',\n    nativeName: 'Tshivenḓa',\n  },\n  vi: {\n    name: 'Vietnamese',\n    nativeName: 'Tiếng Việt',\n  },\n  vo: {\n    name: 'Volapük',\n    nativeName: 'Volapük',\n  },\n  wa: {\n    name: 'Walloon',\n    nativeName: 'walon',\n  },\n  wo: {\n    name: 'Wolof',\n    nativeName: 'Wollof',\n  },\n  xh: {\n    name: 'Xhosa',\n    nativeName: 'isiXhosa',\n  },\n  yi: {\n    name: 'Yiddish',\n    nativeName: 'ייִדיש',\n  },\n  yo: {\n    name: 'Yoruba',\n    nativeName: 'Yorùbá',\n  },\n  za: {\n    name: 'Zhuang',\n    nativeName: 'Saɯ cueŋƅ',\n  },\n  zh: {\n    name: 'Chinese',\n    nativeName: '中文',\n  },\n  zu: {\n    name: 'Zulu',\n    nativeName: 'isiZulu',\n  },\n};\n\nmodule.exports = LANGUAGES_LIST;\n","const LANGUAGES_LIST = require('./data.js');\n\nconst LANGUAGES = {};\nconst LANGUAGES_BY_NAME = {};\nconst LANGUAGE_CODES = [];\nconst LANGUAGE_NAMES = [];\nconst LANGUAGE_NATIVE_NAMES = [];\n\nfor (const code in LANGUAGES_LIST) {\n  const { name, nativeName } = LANGUAGES_LIST[code];\n  LANGUAGES[code] =\n    LANGUAGES_BY_NAME[name.toLowerCase()] =\n    LANGUAGES_BY_NAME[nativeName.toLowerCase()] =\n      { code, name, nativeName };\n  LANGUAGE_CODES.push(code);\n  LANGUAGE_NAMES.push(name);\n  LANGUAGE_NATIVE_NAMES.push(nativeName);\n}\n\nmodule.exports = class ISO6391 {\n  static getLanguages(codes = []) {\n    return codes.map(code =>\n      ISO6391.validate(code)\n        ? Object.assign({}, LANGUAGES[code])\n        : { code, name: '', nativeName: '' }\n    );\n  }\n\n  static getName(code) {\n    return ISO6391.validate(code) ? LANGUAGES_LIST[code].name : '';\n  }\n\n  static getAllNames() {\n    return LANGUAGE_NAMES.slice();\n  }\n\n  static getNativeName(code) {\n    return ISO6391.validate(code) ? LANGUAGES_LIST[code].nativeName : '';\n  }\n\n  static getAllNativeNames() {\n    return LANGUAGE_NATIVE_NAMES.slice();\n  }\n\n  static getCode(name) {\n    name = name.toLowerCase();\n    return LANGUAGES_BY_NAME.hasOwnProperty(name)\n      ? LANGUAGES_BY_NAME[name].code\n      : '';\n  }\n\n  static getAllCodes() {\n    return LANGUAGE_CODES.slice();\n  }\n\n  static validate(code) {\n    return LANGUAGES_LIST.hasOwnProperty(code);\n  }\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import defineProperty from \"./defineProperty.js\";\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n  return keys;\n}\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n  return target;\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\nimport { NetworkResponse } from \"./NetworkManager\";\n\n/**\n * Options allowed by network request APIs.\n */\nexport type NetworkRequestOptions = {\n    headers?: Record<string, string>;\n    body?: string;\n};\n\n/**\n * Client network interface to send backend requests.\n * @interface\n */\nexport interface INetworkModule {\n    /**\n     * Interface function for async network \"GET\" requests. Based on the Fetch standard: https://fetch.spec.whatwg.org/\n     * @param url\n     * @param requestParams\n     * @param enableCaching\n     */\n    sendGetRequestAsync<T>(\n        url: string,\n        options?: NetworkRequestOptions,\n        cancellationToken?: number\n    ): Promise<NetworkResponse<T>>;\n\n    /**\n     * Interface function for async network \"POST\" requests. Based on the Fetch standard: https://fetch.spec.whatwg.org/\n     * @param url\n     * @param requestParams\n     * @param enableCaching\n     */\n    sendPostRequestAsync<T>(\n        url: string,\n        options?: NetworkRequestOptions\n    ): Promise<NetworkResponse<T>>;\n}\n\nexport const StubbedNetworkModule: INetworkModule = {\n    sendGetRequestAsync: () => {\n        return Promise.reject(\n            createClientAuthError(ClientAuthErrorCodes.methodNotImplemented)\n        );\n    },\n    sendPostRequestAsync: () => {\n        return Promise.reject(\n            createClientAuthError(ClientAuthErrorCodes.methodNotImplemented)\n        );\n    },\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    IPerformanceClient,\n    InProgressPerformanceEvent,\n} from \"./IPerformanceClient\";\nimport { IPerformanceMeasurement } from \"./IPerformanceMeasurement\";\nimport { PerformanceEvent, PerformanceEventStatus } from \"./PerformanceEvent\";\n\nexport class StubPerformanceMeasurement implements IPerformanceMeasurement {\n    startMeasurement(): void {\n        return;\n    }\n    endMeasurement(): void {\n        return;\n    }\n    flushMeasurement(): number | null {\n        return null;\n    }\n}\n\nexport class StubPerformanceClient implements IPerformanceClient {\n    generateId(): string {\n        return \"callback-id\";\n    }\n\n    startMeasurement(\n        measureName: string,\n        correlationId?: string | undefined\n    ): InProgressPerformanceEvent {\n        return {\n            end: () => null,\n            discard: () => {},\n            add: () => {},\n            increment: () => {},\n            event: {\n                eventId: this.generateId(),\n                status: PerformanceEventStatus.InProgress,\n                authority: \"\",\n                libraryName: \"\",\n                libraryVersion: \"\",\n                clientId: \"\",\n                name: measureName,\n                startTimeMs: Date.now(),\n                correlationId: correlationId || \"\",\n            },\n            measurement: new StubPerformanceMeasurement(),\n        };\n    }\n\n    startPerformanceMeasurement(): IPerformanceMeasurement {\n        return new StubPerformanceMeasurement();\n    }\n\n    calculateQueuedTime(): number {\n        return 0;\n    }\n\n    addQueueMeasurement(): void {\n        return;\n    }\n\n    setPreQueueTime(): void {\n        return;\n    }\n\n    endMeasurement(): PerformanceEvent | null {\n        return null;\n    }\n\n    discardMeasurements(): void {\n        return;\n    }\n\n    removePerformanceCallback(): boolean {\n        return true;\n    }\n\n    addPerformanceCallback(): string {\n        return \"\";\n    }\n\n    emitEvents(): void {\n        return;\n    }\n\n    addFields(): void {\n        return;\n    }\n\n    incrementFields(): void {\n        return;\n    }\n\n    cacheEventByCorrelationId(): void {\n        return;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INavigationClient } from \"./INavigationClient\";\nimport { NavigationOptions } from \"./NavigationOptions\";\n\nexport class NavigationClient implements INavigationClient {\n    /**\n     * Navigates to other pages within the same web application\n     * @param url\n     * @param options\n     */\n    navigateInternal(\n        url: string,\n        options: NavigationOptions\n    ): Promise<boolean> {\n        return NavigationClient.defaultNavigateWindow(url, options);\n    }\n\n    /**\n     * Navigates to other pages outside the web application i.e. the Identity Provider\n     * @param url\n     * @param options\n     */\n    navigateExternal(\n        url: string,\n        options: NavigationOptions\n    ): Promise<boolean> {\n        return NavigationClient.defaultNavigateWindow(url, options);\n    }\n\n    /**\n     * Default navigation implementation invoked by the internal and external functions\n     * @param url\n     * @param options\n     */\n    private static defaultNavigateWindow(\n        url: string,\n        options: NavigationOptions\n    ): Promise<boolean> {\n        if (options.noHistory) {\n            window.location.replace(url);\n        } else {\n            window.location.assign(url);\n        }\n\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                resolve(true);\n            }, options.timeout);\n        });\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    Constants,\n    INetworkModule,\n    NetworkRequestOptions,\n    NetworkResponse,\n} from \"@azure/msal-common\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { HTTP_REQUEST_TYPE } from \"../utils/BrowserConstants\";\n\n/**\n * This class implements the Fetch API for GET and POST requests. See more here: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API\n */\nexport class FetchClient implements INetworkModule {\n    /**\n     * Fetch Client for REST endpoints - Get request\n     * @param url\n     * @param headers\n     * @param body\n     */\n    async sendGetRequestAsync<T>(\n        url: string,\n        options?: NetworkRequestOptions\n    ): Promise<NetworkResponse<T>> {\n        let response;\n        try {\n            response = await fetch(url, {\n                method: HTTP_REQUEST_TYPE.GET,\n                headers: this.getFetchHeaders(options),\n            });\n        } catch (e) {\n            if (window.navigator.onLine) {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.getRequestFailed\n                );\n            } else {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.noNetworkConnectivity\n                );\n            }\n        }\n\n        try {\n            return {\n                headers: this.getHeaderDict(response.headers),\n                body: (await response.json()) as T,\n                status: response.status,\n            };\n        } catch (e) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.failedToParseResponse\n            );\n        }\n    }\n\n    /**\n     * Fetch Client for REST endpoints - Post request\n     * @param url\n     * @param headers\n     * @param body\n     */\n    async sendPostRequestAsync<T>(\n        url: string,\n        options?: NetworkRequestOptions\n    ): Promise<NetworkResponse<T>> {\n        const reqBody = (options && options.body) || Constants.EMPTY_STRING;\n\n        let response;\n        try {\n            response = await fetch(url, {\n                method: HTTP_REQUEST_TYPE.POST,\n                headers: this.getFetchHeaders(options),\n                body: reqBody,\n            });\n        } catch (e) {\n            if (window.navigator.onLine) {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.postRequestFailed\n                );\n            } else {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.noNetworkConnectivity\n                );\n            }\n        }\n\n        try {\n            return {\n                headers: this.getHeaderDict(response.headers),\n                body: (await response.json()) as T,\n                status: response.status,\n            };\n        } catch (e) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.failedToParseResponse\n            );\n        }\n    }\n\n    /**\n     * Get Fetch API Headers object from string map\n     * @param inputHeaders\n     */\n    private getFetchHeaders(options?: NetworkRequestOptions): Headers {\n        const headers = new Headers();\n        if (!(options && options.headers)) {\n            return headers;\n        }\n        const optionsHeaders = options.headers;\n        Object.keys(optionsHeaders).forEach((key) => {\n            headers.append(key, optionsHeaders[key]);\n        });\n        return headers;\n    }\n\n    private getHeaderDict(headers: Headers): Record<string, string> {\n        const headerDict: Record<string, string> = {};\n        headers.forEach((value: string, key: string) => {\n            headerDict[key] = value;\n        });\n        return headerDict;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    SystemOptions,\n    LoggerOptions,\n    INetworkModule,\n    DEFAULT_SYSTEM_OPTIONS,\n    Constants,\n    ProtocolMode,\n    OIDCOptions,\n    ServerResponseType,\n    LogLevel,\n    StubbedNetworkModule,\n    AzureCloudInstance,\n    AzureCloudOptions,\n    ApplicationTelemetry,\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n    IPerformanceClient,\n    StubPerformanceClient,\n    Logger,\n} from \"@azure/msal-common\";\nimport {\n    BrowserCacheLocation,\n    BrowserConstants,\n} from \"../utils/BrowserConstants\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { NavigationClient } from \"../navigation/NavigationClient\";\nimport { FetchClient } from \"../network/FetchClient\";\n\n// Default timeout for popup windows and iframes in milliseconds\nexport const DEFAULT_POPUP_TIMEOUT_MS = 60000;\nexport const DEFAULT_IFRAME_TIMEOUT_MS = 6000;\nexport const DEFAULT_REDIRECT_TIMEOUT_MS = 30000;\nexport const DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS = 2000;\n\n/**\n * Use this to configure the auth options in the Configuration object\n */\nexport type BrowserAuthOptions = {\n    /**\n     * Client ID of your app registered with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview in Microsoft Identity Platform\n     */\n    clientId: string;\n    /**\n     * You can configure a specific authority, defaults to \" \" or \"https://login.microsoftonline.com/common\"\n     */\n    authority?: string;\n    /**\n     * An array of URIs that are known to be valid. Used in B2C scenarios.\n     */\n    knownAuthorities?: Array<string>;\n    /**\n     * A string containing the cloud discovery response. Used in AAD scenarios.\n     */\n    cloudDiscoveryMetadata?: string;\n    /**\n     * A string containing the .well-known/openid-configuration endpoint response\n     */\n    authorityMetadata?: string;\n    /**\n     * The redirect URI where authentication responses can be received by your application. It must exactly match one of the redirect URIs registered in the Azure portal.\n     */\n    redirectUri?: string;\n    /**\n     * The redirect URI where the window navigates after a successful logout.\n     */\n    postLogoutRedirectUri?: string | null;\n    /**\n     * Boolean indicating whether to navigate to the original request URL after the auth server navigates to the redirect URL.\n     */\n    navigateToLoginRequestUrl?: boolean;\n    /**\n     * Array of capabilities which will be added to the claims.access_token.xms_cc request property on every network request.\n     */\n    clientCapabilities?: Array<string>;\n    /**\n     * Enum that represents the protocol that msal follows. Used for configuring proper endpoints.\n     */\n    protocolMode?: ProtocolMode;\n    /**\n     * Enum that configures options for the OIDC protocol mode.\n     */\n    OIDCOptions?: OIDCOptions;\n    /**\n     * Enum that represents the Azure Cloud to use.\n     */\n    azureCloudOptions?: AzureCloudOptions;\n    /**\n     * Flag of whether to use the local metadata cache\n     */\n    skipAuthorityMetadataCache?: boolean;\n};\n\n/** @internal */\nexport type InternalAuthOptions = Required<BrowserAuthOptions> & {\n    OIDCOptions: Required<OIDCOptions>;\n};\n\n/**\n * Use this to configure the below cache configuration options:\n */\nexport type CacheOptions = {\n    /**\n     * Used to specify the cacheLocation user wants to set. Valid values are \"localStorage\", \"sessionStorage\" and \"memoryStorage\".\n     */\n    cacheLocation?: BrowserCacheLocation | string;\n    /**\n     * Used to specify the temporaryCacheLocation user wants to set. Valid values are \"localStorage\", \"sessionStorage\" and \"memoryStorage\".\n     */\n    temporaryCacheLocation?: BrowserCacheLocation | string;\n    /**\n     * If set, MSAL stores the auth request state required for validation of the auth flows in the browser cookies. By default this flag is set to false.\n     */\n    storeAuthStateInCookie?: boolean;\n    /**\n     * If set, MSAL sets the \"Secure\" flag on cookies so they can only be sent over HTTPS. By default this flag is set to false.\n     */\n    secureCookies?: boolean;\n    /**\n     * If set, MSAL will attempt to migrate cache entries from older versions on initialization. By default this flag is set to true if cacheLocation is localStorage, otherwise false.\n     */\n    cacheMigrationEnabled?: boolean;\n    /**\n     * Flag that determines whether access tokens are stored based on requested claims\n     */\n    claimsBasedCachingEnabled?: boolean;\n};\n\nexport type BrowserSystemOptions = SystemOptions & {\n    /**\n     * Used to initialize the Logger object (See ClientConfiguration.ts)\n     */\n    loggerOptions?: LoggerOptions;\n    /**\n     * Network interface implementation\n     */\n    networkClient?: INetworkModule;\n    /**\n     * Override the methods used to navigate to other webpages. Particularly useful if you are using a client-side router\n     */\n    navigationClient?: INavigationClient;\n    /**\n     * Sets the timeout for waiting for a response hash in a popup. Will take precedence over loadFrameTimeout if both are set.\n     */\n    windowHashTimeout?: number;\n    /**\n     * Sets the timeout for waiting for a response hash in an iframe. Will take precedence over loadFrameTimeout if both are set.\n     */\n    iframeHashTimeout?: number;\n    /**\n     * Sets the timeout for waiting for a response hash in an iframe or popup\n     */\n    loadFrameTimeout?: number;\n    /**\n     * Maximum time the library should wait for a frame to load\n     * @deprecated This was previously needed for older browsers which are no longer supported by MSAL.js. This option will be removed in the next major version\n     */\n    navigateFrameWait?: number;\n    /**\n     * Time to wait for redirection to occur before resolving promise\n     */\n    redirectNavigationTimeout?: number;\n    /**\n     * Sets whether popups are opened asynchronously. By default, this flag is set to false. When set to false, blank popups are opened before anything else happens. When set to true, popups are opened when making the network request.\n     */\n    asyncPopups?: boolean;\n    /**\n     * Flag to enable redirect opertaions when the app is rendered in an iframe (to support scenarios such as embedded B2C login).\n     */\n    allowRedirectInIframe?: boolean;\n    /**\n     * Flag to enable native broker support (e.g. acquiring tokens from WAM on Windows)\n     */\n    allowNativeBroker?: boolean;\n    /**\n     * Sets the timeout for waiting for the native broker handshake to resolve\n     */\n    nativeBrokerHandshakeTimeout?: number;\n    /**\n     * Sets the interval length in milliseconds for polling the location attribute in popup windows (default is 30ms)\n     */\n    pollIntervalMilliseconds?: number;\n};\n\n/**\n * Telemetry Options\n */\nexport type BrowserTelemetryOptions = {\n    /**\n     * Telemetry information sent on request\n     * - appName: Unique string name of an application\n     * - appVersion: Version of the application using MSAL\n     */\n    application?: ApplicationTelemetry;\n\n    client?: IPerformanceClient;\n};\n\n/**\n * This object allows you to configure important elements of MSAL functionality and is passed into the constructor of PublicClientApplication\n */\nexport type Configuration = {\n    /**\n     * This is where you configure auth elements like clientID, authority used for authenticating against the Microsoft Identity Platform\n     */\n    auth: BrowserAuthOptions;\n    /**\n     * This is where you configure cache location and whether to store cache in cookies\n     */\n    cache?: CacheOptions;\n    /**\n     * This is where you can configure the network client, logger, token renewal offset\n     */\n    system?: BrowserSystemOptions;\n    /**\n     * This is where you can configure telemetry data and options\n     */\n    telemetry?: BrowserTelemetryOptions;\n};\n\n/** @internal */\nexport type BrowserConfiguration = {\n    auth: InternalAuthOptions;\n    cache: Required<CacheOptions>;\n    system: Required<BrowserSystemOptions>;\n    telemetry: Required<BrowserTelemetryOptions>;\n};\n\n/**\n * MSAL function that sets the default options when not explicitly configured from app developer\n *\n * @param auth\n * @param cache\n * @param system\n *\n * @returns Configuration object\n */\nexport function buildConfiguration(\n    {\n        auth: userInputAuth,\n        cache: userInputCache,\n        system: userInputSystem,\n        telemetry: userInputTelemetry,\n    }: Configuration,\n    isBrowserEnvironment: boolean\n): BrowserConfiguration {\n    // Default auth options for browser\n    const DEFAULT_AUTH_OPTIONS: InternalAuthOptions = {\n        clientId: Constants.EMPTY_STRING,\n        authority: `${Constants.DEFAULT_AUTHORITY}`,\n        knownAuthorities: [],\n        cloudDiscoveryMetadata: Constants.EMPTY_STRING,\n        authorityMetadata: Constants.EMPTY_STRING,\n        redirectUri: Constants.EMPTY_STRING,\n        postLogoutRedirectUri: Constants.EMPTY_STRING,\n        navigateToLoginRequestUrl: true,\n        clientCapabilities: [],\n        protocolMode: ProtocolMode.AAD,\n        OIDCOptions: {\n            serverResponseType: ServerResponseType.FRAGMENT,\n            defaultScopes: [\n                Constants.OPENID_SCOPE,\n                Constants.PROFILE_SCOPE,\n                Constants.OFFLINE_ACCESS_SCOPE,\n            ],\n        },\n        azureCloudOptions: {\n            azureCloudInstance: AzureCloudInstance.None,\n            tenant: Constants.EMPTY_STRING,\n        },\n        skipAuthorityMetadataCache: false,\n    };\n\n    // Default cache options for browser\n    const DEFAULT_CACHE_OPTIONS: Required<CacheOptions> = {\n        cacheLocation: BrowserCacheLocation.SessionStorage,\n        temporaryCacheLocation: BrowserCacheLocation.SessionStorage,\n        storeAuthStateInCookie: false,\n        secureCookies: false,\n        // Default cache migration to true if cache location is localStorage since entries are preserved across tabs/windows. Migration has little to no benefit in sessionStorage and memoryStorage\n        cacheMigrationEnabled:\n            userInputCache &&\n            userInputCache.cacheLocation === BrowserCacheLocation.LocalStorage\n                ? true\n                : false,\n        claimsBasedCachingEnabled: false,\n    };\n\n    // Default logger options for browser\n    const DEFAULT_LOGGER_OPTIONS: LoggerOptions = {\n        // eslint-disable-next-line @typescript-eslint/no-empty-function\n        loggerCallback: (): void => {\n            // allow users to not set logger call back\n        },\n        logLevel: LogLevel.Info,\n        piiLoggingEnabled: false,\n    };\n\n    // Default system options for browser\n    const DEFAULT_BROWSER_SYSTEM_OPTIONS: Required<BrowserSystemOptions> = {\n        ...DEFAULT_SYSTEM_OPTIONS,\n        loggerOptions: DEFAULT_LOGGER_OPTIONS,\n        networkClient: isBrowserEnvironment\n            ? new FetchClient()\n            : StubbedNetworkModule,\n        navigationClient: new NavigationClient(),\n        loadFrameTimeout: 0,\n        // If loadFrameTimeout is provided, use that as default.\n        windowHashTimeout:\n            userInputSystem?.loadFrameTimeout || DEFAULT_POPUP_TIMEOUT_MS,\n        iframeHashTimeout:\n            userInputSystem?.loadFrameTimeout || DEFAULT_IFRAME_TIMEOUT_MS,\n        navigateFrameWait: 0,\n        redirectNavigationTimeout: DEFAULT_REDIRECT_TIMEOUT_MS,\n        asyncPopups: false,\n        allowRedirectInIframe: false,\n        allowNativeBroker: false,\n        nativeBrokerHandshakeTimeout:\n            userInputSystem?.nativeBrokerHandshakeTimeout ||\n            DEFAULT_NATIVE_BROKER_HANDSHAKE_TIMEOUT_MS,\n        pollIntervalMilliseconds: BrowserConstants.DEFAULT_POLL_INTERVAL_MS,\n    };\n\n    const providedSystemOptions: Required<BrowserSystemOptions> = {\n        ...DEFAULT_BROWSER_SYSTEM_OPTIONS,\n        ...userInputSystem,\n        loggerOptions: userInputSystem?.loggerOptions || DEFAULT_LOGGER_OPTIONS,\n    };\n\n    const DEFAULT_TELEMETRY_OPTIONS: Required<BrowserTelemetryOptions> = {\n        application: {\n            appName: Constants.EMPTY_STRING,\n            appVersion: Constants.EMPTY_STRING,\n        },\n        client: new StubPerformanceClient(),\n    };\n\n    // Throw an error if user has set OIDCOptions without being in OIDC protocol mode\n    if (\n        userInputAuth?.protocolMode !== ProtocolMode.OIDC &&\n        userInputAuth?.OIDCOptions\n    ) {\n        const logger = new Logger(providedSystemOptions.loggerOptions);\n        logger.warning(\n            JSON.stringify(\n                createClientConfigurationError(\n                    ClientConfigurationErrorCodes.cannotSetOIDCOptions\n                )\n            )\n        );\n    }\n\n    // Throw an error if user has set allowNativeBroker to true without being in AAD protocol mode\n    if (\n        userInputAuth?.protocolMode &&\n        userInputAuth.protocolMode !== ProtocolMode.AAD &&\n        providedSystemOptions?.allowNativeBroker\n    ) {\n        throw createClientConfigurationError(\n            ClientConfigurationErrorCodes.cannotAllowNativeBroker\n        );\n    }\n\n    const overlayedConfig: BrowserConfiguration = {\n        auth: {\n            ...DEFAULT_AUTH_OPTIONS,\n            ...userInputAuth,\n            OIDCOptions: {\n                ...DEFAULT_AUTH_OPTIONS.OIDCOptions,\n                ...userInputAuth?.OIDCOptions,\n            },\n        },\n        cache: { ...DEFAULT_CACHE_OPTIONS, ...userInputCache },\n        system: providedSystemOptions,\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...userInputTelemetry },\n    };\n\n    return overlayedConfig;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError\";\nimport * as JoseHeaderErrorCodes from \"./JoseHeaderErrorCodes\";\nexport { JoseHeaderErrorCodes };\n\nexport const JoseHeaderErrorMessages = {\n    [JoseHeaderErrorCodes.missingKidError]:\n        \"The JOSE Header for the requested JWT, JWS or JWK object requires a keyId to be configured as the 'kid' header claim. No 'kid' value was provided.\",\n    [JoseHeaderErrorCodes.missingAlgError]:\n        \"The JOSE Header for the requested JWT, JWS or JWK object requires an algorithm to be specified as the 'alg' header claim. No 'alg' value was provided.\",\n};\n\n/**\n * Error thrown when there is an error in the client code running on the browser.\n */\nexport class JoseHeaderError extends AuthError {\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"JoseHeaderError\";\n\n        Object.setPrototypeOf(this, JoseHeaderError.prototype);\n    }\n}\n\n/** Returns JoseHeaderError object */\nexport function createJoseHeaderError(code: string): JoseHeaderError {\n    return new JoseHeaderError(code, JoseHeaderErrorMessages[code]);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    JoseHeaderErrorCodes,\n    createJoseHeaderError,\n} from \"../error/JoseHeaderError\";\nimport { JsonTypes } from \"../utils/Constants\";\n\nexport type JoseHeaderOptions = {\n    typ?: JsonTypes;\n    alg?: string;\n    kid?: string;\n};\n\n/** @internal */\nexport class JoseHeader {\n    public typ?: JsonTypes;\n    public alg?: string;\n    public kid?: string;\n\n    constructor(options: JoseHeaderOptions) {\n        this.typ = options.typ;\n        this.alg = options.alg;\n        this.kid = options.kid;\n    }\n\n    /**\n     * Builds SignedHttpRequest formatted JOSE Header from the\n     * JOSE Header options provided or previously set on the object and returns\n     * the stringified header object.\n     * Throws if keyId or algorithm aren't provided since they are required for Access Token Binding.\n     * @param shrHeaderOptions\n     * @returns\n     */\n    static getShrHeaderString(shrHeaderOptions: JoseHeaderOptions): string {\n        // KeyID is required on the SHR header\n        if (!shrHeaderOptions.kid) {\n            throw createJoseHeaderError(JoseHeaderErrorCodes.missingKidError);\n        }\n\n        // Alg is required on the SHR header\n        if (!shrHeaderOptions.alg) {\n            throw createJoseHeaderError(JoseHeaderErrorCodes.missingAlgError);\n        }\n\n        const shrHeader = new JoseHeader({\n            // Access Token PoP headers must have type pop, but the type header can be overriden for special cases\n            typ: shrHeaderOptions.typ || JsonTypes.Pop,\n            kid: shrHeaderOptions.kid,\n            alg: shrHeaderOptions.alg,\n        });\n\n        return JSON.stringify(shrHeader);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Class which exposes APIs to encode plaintext to base64 encoded string. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n */\n\n/**\n * Returns URL Safe b64 encoded string from a plaintext string.\n * @param input\n */\nexport function urlEncode(input: string): string {\n    return encodeURIComponent(\n        base64Encode(input)\n            .replace(/=/g, \"\")\n            .replace(/\\+/g, \"-\")\n            .replace(/\\//g, \"_\")\n    );\n}\n\n/**\n * Returns URL Safe b64 encoded string from an int8Array.\n * @param inputArr\n */\nexport function urlEncodeArr(inputArr: Uint8Array): string {\n    return base64EncArr(inputArr)\n        .replace(/=/g, \"\")\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\");\n}\n\n/**\n * Returns b64 encoded string from plaintext string.\n * @param input\n */\nexport function base64Encode(input: string): string {\n    return base64EncArr(new TextEncoder().encode(input));\n}\n\n/**\n * Base64 encode byte array\n * @param aBytes\n */\nfunction base64EncArr(aBytes: Uint8Array): string {\n    const binString = Array.from(aBytes, (x) => String.fromCodePoint(x)).join(\n        \"\"\n    );\n    return btoa(binString);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants } from \"@azure/msal-common\";\n\n/**\n * Utility functions for strings in a browser. See here for implementation details:\n * https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#Solution_2_%E2%80%93_JavaScript's_UTF-16_%3E_UTF-8_%3E_base64\n */\nexport class BrowserStringUtils {\n    /**\n     * Converts string to Uint8Array\n     * @param sDOMStr\n     */\n    static stringToUtf8Arr(sDOMStr: string): Uint8Array {\n        let nChr;\n        let nArrLen = 0;\n        const nStrLen = sDOMStr.length;\n        /* mapping... */\n        for (let nMapIdx = 0; nMapIdx < nStrLen; nMapIdx++) {\n            nChr = sDOMStr.charCodeAt(nMapIdx);\n            nArrLen +=\n                nChr < 0x80\n                    ? 1\n                    : nChr < 0x800\n                    ? 2\n                    : nChr < 0x10000\n                    ? 3\n                    : nChr < 0x200000\n                    ? 4\n                    : nChr < 0x4000000\n                    ? 5\n                    : 6;\n        }\n\n        const aBytes = new Uint8Array(nArrLen);\n\n        /* transcription... */\n\n        for (let nIdx = 0, nChrIdx = 0; nIdx < nArrLen; nChrIdx++) {\n            nChr = sDOMStr.charCodeAt(nChrIdx);\n            if (nChr < 128) {\n                /* one byte */\n                aBytes[nIdx++] = nChr;\n            } else if (nChr < 0x800) {\n                /* two bytes */\n                aBytes[nIdx++] = 192 + (nChr >>> 6);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            } else if (nChr < 0x10000) {\n                /* three bytes */\n                aBytes[nIdx++] = 224 + (nChr >>> 12);\n                aBytes[nIdx++] = 128 + ((nChr >>> 6) & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            } else if (nChr < 0x200000) {\n                /* four bytes */\n                aBytes[nIdx++] = 240 + (nChr >>> 18);\n                aBytes[nIdx++] = 128 + ((nChr >>> 12) & 63);\n                aBytes[nIdx++] = 128 + ((nChr >>> 6) & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            } else if (nChr < 0x4000000) {\n                /* five bytes */\n                aBytes[nIdx++] = 248 + (nChr >>> 24);\n                aBytes[nIdx++] = 128 + ((nChr >>> 18) & 63);\n                aBytes[nIdx++] = 128 + ((nChr >>> 12) & 63);\n                aBytes[nIdx++] = 128 + ((nChr >>> 6) & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            } /* if (nChr <= 0x7fffffff) */ else {\n                /* six bytes */\n                aBytes[nIdx++] = 252 + (nChr >>> 30);\n                aBytes[nIdx++] = 128 + ((nChr >>> 24) & 63);\n                aBytes[nIdx++] = 128 + ((nChr >>> 18) & 63);\n                aBytes[nIdx++] = 128 + ((nChr >>> 12) & 63);\n                aBytes[nIdx++] = 128 + ((nChr >>> 6) & 63);\n                aBytes[nIdx++] = 128 + (nChr & 63);\n            }\n        }\n\n        return aBytes;\n    }\n\n    /**\n     * Converts Uint8Array to a string\n     * @param aBytes\n     */\n    static utf8ArrToString(aBytes: Uint8Array): string {\n        let sView = Constants.EMPTY_STRING;\n        for (let nPart, nLen = aBytes.length, nIdx = 0; nIdx < nLen; nIdx++) {\n            nPart = aBytes[nIdx];\n            sView += String.fromCharCode(\n                nPart > 251 && nPart < 254 && nIdx + 5 < nLen /* six bytes */\n                    ? /* (nPart - 252 << 30) may be not so safe in ECMAScript! So...: */\n                      (nPart - 252) * 1073741824 +\n                          ((aBytes[++nIdx] - 128) << 24) +\n                          ((aBytes[++nIdx] - 128) << 18) +\n                          ((aBytes[++nIdx] - 128) << 12) +\n                          ((aBytes[++nIdx] - 128) << 6) +\n                          aBytes[++nIdx] -\n                          128\n                    : nPart > 247 &&\n                      nPart < 252 &&\n                      nIdx + 4 < nLen /* five bytes */\n                    ? ((nPart - 248) << 24) +\n                      ((aBytes[++nIdx] - 128) << 18) +\n                      ((aBytes[++nIdx] - 128) << 12) +\n                      ((aBytes[++nIdx] - 128) << 6) +\n                      aBytes[++nIdx] -\n                      128\n                    : nPart > 239 &&\n                      nPart < 248 &&\n                      nIdx + 3 < nLen /* four bytes */\n                    ? ((nPart - 240) << 18) +\n                      ((aBytes[++nIdx] - 128) << 12) +\n                      ((aBytes[++nIdx] - 128) << 6) +\n                      aBytes[++nIdx] -\n                      128\n                    : nPart > 223 &&\n                      nPart < 240 &&\n                      nIdx + 2 < nLen /* three bytes */\n                    ? ((nPart - 224) << 12) +\n                      ((aBytes[++nIdx] - 128) << 6) +\n                      aBytes[++nIdx] -\n                      128\n                    : nPart > 191 &&\n                      nPart < 224 &&\n                      nIdx + 1 < nLen /* two bytes */\n                    ? ((nPart - 192) << 6) + aBytes[++nIdx] - 128\n                    : /* nPart < 127 ? */ /* one byte */\n                      nPart\n            );\n        }\n        return sView;\n    }\n\n    /**\n     * Returns stringified jwk.\n     * @param jwk\n     */\n    static getSortedObjectString(obj: object): string {\n        return JSON.stringify(obj, Object.keys(obj).sort());\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport {\n    IPerformanceClient,\n    Logger,\n    PerformanceEvents,\n} from \"@azure/msal-common\";\nimport { KEY_FORMAT_JWK } from \"../utils/BrowserConstants\";\n\n/**\n * This file defines functions used by the browser library to perform cryptography operations such as\n * hashing and encoding. It also has helper functions to validate the availability of specific APIs.\n */\n\n/**\n * See here for more info on RsaHashedKeyGenParams: https://developer.mozilla.org/en-US/docs/Web/API/RsaHashedKeyGenParams\n */\n// RSA KeyGen Algorithm\nconst PKCS1_V15_KEYGEN_ALG = \"RSASSA-PKCS1-v1_5\";\n// SHA-256 hashing algorithm\nconst S256_HASH_ALG = \"SHA-256\";\n// MOD length for PoP tokens\nconst MODULUS_LENGTH = 2048;\n// Public Exponent\nconst PUBLIC_EXPONENT: Uint8Array = new Uint8Array([0x01, 0x00, 0x01]);\n\nconst keygenAlgorithmOptions: RsaHashedKeyGenParams = {\n    name: PKCS1_V15_KEYGEN_ALG,\n    hash: S256_HASH_ALG,\n    modulusLength: MODULUS_LENGTH,\n    publicExponent: PUBLIC_EXPONENT,\n};\n\n/**\n * Check whether browser crypto is available.\n */\nexport function validateCryptoAvailable(logger: Logger): void {\n    if (\"crypto\" in window) {\n        logger.verbose(\"BrowserCrypto: modern crypto interface available\");\n    } else {\n        logger.error(\"BrowserCrypto: crypto interface is unavailable\");\n        throw createBrowserAuthError(BrowserAuthErrorCodes.cryptoNonExistent);\n    }\n}\n\n/**\n * Returns a sha-256 hash of the given dataString as an ArrayBuffer.\n * @param dataString\n */\nexport async function sha256Digest(\n    dataString: string,\n    performanceClient?: IPerformanceClient,\n    correlationId?: string\n): Promise<ArrayBuffer> {\n    performanceClient?.addQueueMeasurement(\n        PerformanceEvents.Sha256Digest,\n        correlationId\n    );\n    const data = BrowserStringUtils.stringToUtf8Arr(dataString);\n    return window.crypto.subtle.digest(\n        S256_HASH_ALG,\n        data\n    ) as Promise<ArrayBuffer>;\n}\n\n/**\n * Populates buffer with cryptographically random values.\n * @param dataBuffer\n */\nexport function getRandomValues(dataBuffer: Uint8Array): Uint8Array {\n    return window.crypto.getRandomValues(dataBuffer);\n}\n\n/**\n * Creates a new random GUID\n * @returns\n */\nexport function createNewGuid(): string {\n    return window.crypto.randomUUID();\n}\n\n/**\n * Generates a keypair based on current keygen algorithm config.\n * @param extractable\n * @param usages\n */\nexport async function generateKeyPair(\n    extractable: boolean,\n    usages: Array<KeyUsage>\n): Promise<CryptoKeyPair> {\n    return window.crypto.subtle.generateKey(\n        keygenAlgorithmOptions,\n        extractable,\n        usages\n    ) as Promise<CryptoKeyPair>;\n}\n\n/**\n * Export key as Json Web Key (JWK)\n * @param key\n */\nexport async function exportJwk(key: CryptoKey): Promise<JsonWebKey> {\n    return window.crypto.subtle.exportKey(\n        KEY_FORMAT_JWK,\n        key\n    ) as Promise<JsonWebKey>;\n}\n\n/**\n * Imports key as Json Web Key (JWK), can set extractable and usages.\n * @param key\n * @param extractable\n * @param usages\n */\nexport async function importJwk(\n    key: JsonWebKey,\n    extractable: boolean,\n    usages: Array<KeyUsage>\n): Promise<CryptoKey> {\n    return window.crypto.subtle.importKey(\n        KEY_FORMAT_JWK,\n        key,\n        keygenAlgorithmOptions,\n        extractable,\n        usages\n    ) as Promise<CryptoKey>;\n}\n\n/**\n * Signs given data with given key\n * @param key\n * @param data\n */\nexport async function sign(\n    key: CryptoKey,\n    data: ArrayBuffer\n): Promise<ArrayBuffer> {\n    return window.crypto.subtle.sign(\n        keygenAlgorithmOptions,\n        key,\n        data\n    ) as Promise<ArrayBuffer>;\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { DB_NAME, DB_TABLE_NAME, DB_VERSION } from \"../utils/BrowserConstants\";\nimport { IAsyncStorage } from \"./IAsyncMemoryStorage\";\n\ninterface IDBOpenDBRequestEvent extends Event {\n    target: IDBOpenDBRequest & EventTarget;\n}\n\ninterface IDBOpenOnUpgradeNeededEvent extends IDBVersionChangeEvent {\n    target: IDBOpenDBRequest & EventTarget;\n}\n\ninterface IDBRequestEvent extends Event {\n    target: IDBRequest & EventTarget;\n}\n\n/**\n * Storage wrapper for IndexedDB storage in browsers: https://developer.mozilla.org/en-US/docs/Web/API/IndexedDB_API\n */\nexport class DatabaseStorage<T> implements IAsyncStorage<T> {\n    private db: IDBDatabase | undefined;\n    private dbName: string;\n    private tableName: string;\n    private version: number;\n    private dbOpen: boolean;\n\n    constructor() {\n        this.dbName = DB_NAME;\n        this.version = DB_VERSION;\n        this.tableName = DB_TABLE_NAME;\n        this.dbOpen = false;\n    }\n\n    /**\n     * Opens IndexedDB instance.\n     */\n    async open(): Promise<void> {\n        return new Promise((resolve, reject) => {\n            const openDB = window.indexedDB.open(this.dbName, this.version);\n            openDB.addEventListener(\n                \"upgradeneeded\",\n                (e: IDBVersionChangeEvent) => {\n                    const event = e as IDBOpenOnUpgradeNeededEvent;\n                    event.target.result.createObjectStore(this.tableName);\n                }\n            );\n            openDB.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBOpenDBRequestEvent;\n                this.db = event.target.result;\n                this.dbOpen = true;\n                resolve();\n            });\n            openDB.addEventListener(\"error\", () =>\n                reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.databaseUnavailable\n                    )\n                )\n            );\n        });\n    }\n\n    /**\n     * Closes the connection to IndexedDB database when all pending transactions\n     * complete.\n     */\n    closeConnection(): void {\n        const db = this.db;\n        if (db && this.dbOpen) {\n            db.close();\n            this.dbOpen = false;\n        }\n    }\n\n    /**\n     * Opens database if it's not already open\n     */\n    private async validateDbIsOpen(): Promise<void> {\n        if (!this.dbOpen) {\n            return await this.open();\n        }\n    }\n\n    /**\n     * Retrieves item from IndexedDB instance.\n     * @param key\n     */\n    async getItem(key: string): Promise<T | null> {\n        await this.validateDbIsOpen();\n        return new Promise<T>((resolve, reject) => {\n            // TODO: Add timeouts?\n            if (!this.db) {\n                return reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.databaseNotOpen\n                    )\n                );\n            }\n            const transaction = this.db.transaction(\n                [this.tableName],\n                \"readonly\"\n            );\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbGet = objectStore.get(key);\n\n            dbGet.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBRequestEvent;\n                this.closeConnection();\n                resolve(event.target.result);\n            });\n\n            dbGet.addEventListener(\"error\", (e: Event) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * Adds item to IndexedDB under given key\n     * @param key\n     * @param payload\n     */\n    async setItem(key: string, payload: T): Promise<void> {\n        await this.validateDbIsOpen();\n        return new Promise<void>((resolve: Function, reject: Function) => {\n            // TODO: Add timeouts?\n            if (!this.db) {\n                return reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.databaseNotOpen\n                    )\n                );\n            }\n            const transaction = this.db.transaction(\n                [this.tableName],\n                \"readwrite\"\n            );\n\n            const objectStore = transaction.objectStore(this.tableName);\n\n            const dbPut = objectStore.put(payload, key);\n\n            dbPut.addEventListener(\"success\", () => {\n                this.closeConnection();\n                resolve();\n            });\n\n            dbPut.addEventListener(\"error\", (e) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * Removes item from IndexedDB under given key\n     * @param key\n     */\n    async removeItem(key: string): Promise<void> {\n        await this.validateDbIsOpen();\n        return new Promise<void>((resolve: Function, reject: Function) => {\n            if (!this.db) {\n                return reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.databaseNotOpen\n                    )\n                );\n            }\n\n            const transaction = this.db.transaction(\n                [this.tableName],\n                \"readwrite\"\n            );\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbDelete = objectStore.delete(key);\n\n            dbDelete.addEventListener(\"success\", () => {\n                this.closeConnection();\n                resolve();\n            });\n\n            dbDelete.addEventListener(\"error\", (e) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * Get all the keys from the storage object as an iterable array of strings.\n     */\n    async getKeys(): Promise<string[]> {\n        await this.validateDbIsOpen();\n        return new Promise<string[]>((resolve: Function, reject: Function) => {\n            if (!this.db) {\n                return reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.databaseNotOpen\n                    )\n                );\n            }\n\n            const transaction = this.db.transaction(\n                [this.tableName],\n                \"readonly\"\n            );\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbGetKeys = objectStore.getAllKeys();\n\n            dbGetKeys.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBRequestEvent;\n                this.closeConnection();\n                resolve(event.target.result);\n            });\n\n            dbGetKeys.addEventListener(\"error\", (e: Event) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     *\n     * Checks whether there is an object under the search key in the object store\n     */\n    async containsKey(key: string): Promise<boolean> {\n        await this.validateDbIsOpen();\n\n        return new Promise<boolean>((resolve: Function, reject: Function) => {\n            if (!this.db) {\n                return reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.databaseNotOpen\n                    )\n                );\n            }\n\n            const transaction = this.db.transaction(\n                [this.tableName],\n                \"readonly\"\n            );\n            const objectStore = transaction.objectStore(this.tableName);\n            const dbContainsKey = objectStore.count(key);\n\n            dbContainsKey.addEventListener(\"success\", (e: Event) => {\n                const event = e as IDBRequestEvent;\n                this.closeConnection();\n                resolve(event.target.result === 1);\n            });\n\n            dbContainsKey.addEventListener(\"error\", (e: Event) => {\n                this.closeConnection();\n                reject(e);\n            });\n        });\n    }\n\n    /**\n     * Deletes the MSAL database. The database is deleted rather than cleared to make it possible\n     * for client applications to downgrade to a previous MSAL version without worrying about forward compatibility issues\n     * with IndexedDB database versions.\n     */\n    async deleteDatabase(): Promise<boolean> {\n        // Check if database being deleted exists\n\n        if (this.db && this.dbOpen) {\n            this.closeConnection();\n        }\n\n        return new Promise<boolean>((resolve: Function, reject: Function) => {\n            const deleteDbRequest = window.indexedDB.deleteDatabase(DB_NAME);\n            deleteDbRequest.addEventListener(\"success\", () => resolve(true));\n            deleteDbRequest.addEventListener(\"blocked\", () => resolve(true));\n            deleteDbRequest.addEventListener(\"error\", () => reject(false));\n        });\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IWindowStorage } from \"./IWindowStorage\";\n\nexport class MemoryStorage<T> implements IWindowStorage<T> {\n    private cache: Map<string, T>;\n\n    constructor() {\n        this.cache = new Map<string, T>();\n    }\n\n    getItem(key: string): T | null {\n        return this.cache.get(key) || null;\n    }\n\n    setItem(key: string, value: T): void {\n        this.cache.set(key, value);\n    }\n\n    removeItem(key: string): void {\n        this.cache.delete(key);\n    }\n\n    getKeys(): string[] {\n        const cacheKeys: string[] = [];\n        this.cache.forEach((value: T, key: string) => {\n            cacheKeys.push(key);\n        });\n        return cacheKeys;\n    }\n\n    containsKey(key: string): boolean {\n        return this.cache.has(key);\n    }\n\n    clear(): void {\n        this.cache.clear();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Logger } from \"@azure/msal-common\";\nimport {\n    BrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { DatabaseStorage } from \"./DatabaseStorage\";\nimport { IAsyncStorage } from \"./IAsyncMemoryStorage\";\nimport { MemoryStorage } from \"./MemoryStorage\";\n\n/**\n * This class allows MSAL to store artifacts asynchronously using the DatabaseStorage IndexedDB wrapper,\n * backed up with the more volatile MemoryStorage object for cases in which IndexedDB may be unavailable.\n */\nexport class AsyncMemoryStorage<T> implements IAsyncStorage<T> {\n    private inMemoryCache: MemoryStorage<T>;\n    private indexedDBCache: DatabaseStorage<T>;\n    private logger: Logger;\n    private storeName: string;\n\n    constructor(logger: Logger, storeName: string) {\n        this.inMemoryCache = new MemoryStorage<T>();\n        this.indexedDBCache = new DatabaseStorage<T>();\n        this.logger = logger;\n        this.storeName = storeName;\n    }\n\n    private handleDatabaseAccessError(error: unknown): void {\n        if (\n            error instanceof BrowserAuthError &&\n            error.errorCode === BrowserAuthErrorCodes.databaseUnavailable\n        ) {\n            this.logger.error(\n                \"Could not access persistent storage. This may be caused by browser privacy features which block persistent storage in third-party contexts.\"\n            );\n        } else {\n            throw error;\n        }\n    }\n    /**\n     * Get the item matching the given key. Tries in-memory cache first, then in the asynchronous\n     * storage object if item isn't found in-memory.\n     * @param key\n     */\n    async getItem(key: string): Promise<T | null> {\n        const item = this.inMemoryCache.getItem(key);\n        if (!item) {\n            try {\n                this.logger.verbose(\n                    \"Queried item not found in in-memory cache, now querying persistent storage.\"\n                );\n                return await this.indexedDBCache.getItem(key);\n            } catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return item;\n    }\n\n    /**\n     * Sets the item in the in-memory cache and then tries to set it in the asynchronous\n     * storage object with the given key.\n     * @param key\n     * @param value\n     */\n    async setItem(key: string, value: T): Promise<void> {\n        this.inMemoryCache.setItem(key, value);\n        try {\n            await this.indexedDBCache.setItem(key, value);\n        } catch (e) {\n            this.handleDatabaseAccessError(e);\n        }\n    }\n\n    /**\n     * Removes the item matching the key from the in-memory cache, then tries to remove it from the asynchronous storage object.\n     * @param key\n     */\n    async removeItem(key: string): Promise<void> {\n        this.inMemoryCache.removeItem(key);\n        try {\n            await this.indexedDBCache.removeItem(key);\n        } catch (e) {\n            this.handleDatabaseAccessError(e);\n        }\n    }\n\n    /**\n     * Get all the keys from the in-memory cache as an iterable array of strings. If no keys are found, query the keys in the\n     * asynchronous storage object.\n     */\n    async getKeys(): Promise<string[]> {\n        const cacheKeys = this.inMemoryCache.getKeys();\n        if (cacheKeys.length === 0) {\n            try {\n                this.logger.verbose(\n                    \"In-memory cache is empty, now querying persistent storage.\"\n                );\n                return await this.indexedDBCache.getKeys();\n            } catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return cacheKeys;\n    }\n\n    /**\n     * Returns true or false if the given key is present in the cache.\n     * @param key\n     */\n    async containsKey(key: string): Promise<boolean> {\n        const containsKey = this.inMemoryCache.containsKey(key);\n        if (!containsKey) {\n            try {\n                this.logger.verbose(\n                    \"Key not found in in-memory cache, now querying persistent storage.\"\n                );\n                return await this.indexedDBCache.containsKey(key);\n            } catch (e) {\n                this.handleDatabaseAccessError(e);\n            }\n        }\n        return containsKey;\n    }\n\n    /**\n     * Clears in-memory Map\n     */\n    clearInMemory(): void {\n        // InMemory cache is a Map instance, clear is straightforward\n        this.logger.verbose(`Deleting in-memory keystore ${this.storeName}`);\n        this.inMemoryCache.clear();\n        this.logger.verbose(`In-memory keystore ${this.storeName} deleted`);\n    }\n\n    /**\n     * Tries to delete the IndexedDB database\n     * @returns\n     */\n    async clearPersistent(): Promise<boolean> {\n        try {\n            this.logger.verbose(\"Deleting persistent keystore\");\n            const dbDeleted = await this.indexedDBCache.deleteDatabase();\n            if (dbDeleted) {\n                this.logger.verbose(\"Persistent keystore deleted\");\n            }\n\n            return dbDeleted;\n        } catch (e) {\n            this.handleDatabaseAccessError(e);\n            return false;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Logger } from \"@azure/msal-common\";\nimport { CachedKeyPair } from \"../crypto/CryptoOps\";\nimport { AsyncMemoryStorage } from \"./AsyncMemoryStorage\";\n\nexport const CryptoKeyStoreNames = {\n    asymmetricKeys: \"asymmetricKeys\",\n    symmetricKeys: \"symmetricKeys\",\n} as const;\nexport type CryptoKeyStoreNames =\n    (typeof CryptoKeyStoreNames)[keyof typeof CryptoKeyStoreNames];\n\n/**\n * MSAL CryptoKeyStore DB Version 2\n */\nexport class CryptoKeyStore {\n    public asymmetricKeys: AsyncMemoryStorage<CachedKeyPair>;\n    public symmetricKeys: AsyncMemoryStorage<CryptoKey>;\n    public logger: Logger;\n\n    constructor(logger: Logger) {\n        this.logger = logger;\n        this.asymmetricKeys = new AsyncMemoryStorage<CachedKeyPair>(\n            this.logger,\n            CryptoKeyStoreNames.asymmetricKeys\n        );\n        this.symmetricKeys = new AsyncMemoryStorage<CryptoKey>(\n            this.logger,\n            CryptoKeyStoreNames.symmetricKeys\n        );\n    }\n\n    async clear(): Promise<boolean> {\n        // Delete in-memory keystores\n        this.asymmetricKeys.clearInMemory();\n        this.symmetricKeys.clearInMemory();\n\n        /**\n         * There is only one database, so calling clearPersistent on asymmetric keystore takes care of\n         * every persistent keystore\n         */\n        try {\n            await this.asymmetricKeys.clearPersistent();\n            return true;\n        } catch (e) {\n            if (e instanceof Error) {\n                this.logger.error(\n                    `Clearing keystore failed with error: ${e.message}`\n                );\n            } else {\n                this.logger.error(\n                    \"Clearing keystore failed with unknown error\"\n                );\n            }\n\n            return false;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ICrypto,\n    IPerformanceClient,\n    JoseHeader,\n    Logger,\n    PerformanceEvents,\n    SignedHttpRequest,\n    SignedHttpRequestParameters,\n} from \"@azure/msal-common\";\nimport { base64Encode, urlEncode, urlEncodeArr } from \"../encode/Base64Encode\";\nimport { base64Decode } from \"../encode/Base64Decode\";\nimport * as BrowserCrypto from \"./BrowserCrypto\";\nimport { BrowserStringUtils } from \"../utils/BrowserStringUtils\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { CryptoKeyStore } from \"../cache/CryptoKeyStore\";\n\nexport type CachedKeyPair = {\n    publicKey: CryptoKey;\n    privateKey: CryptoKey;\n    requestMethod?: string;\n    requestUri?: string;\n};\n\n/**\n * This class implements MSAL's crypto interface, which allows it to perform base64 encoding and decoding, generating cryptographically random GUIDs and\n * implementing Proof Key for Code Exchange specs for the OAuth Authorization Code Flow using PKCE (rfc here: https://tools.ietf.org/html/rfc7636).\n */\nexport class CryptoOps implements ICrypto {\n    private logger: Logger;\n\n    /**\n     * CryptoOps can be used in contexts outside a PCA instance,\n     * meaning there won't be a performance manager available.\n     */\n    private performanceClient: IPerformanceClient | undefined;\n\n    private static POP_KEY_USAGES: Array<KeyUsage> = [\"sign\", \"verify\"];\n    private static EXTRACTABLE: boolean = true;\n    private cache: CryptoKeyStore;\n\n    constructor(logger: Logger, performanceClient?: IPerformanceClient) {\n        this.logger = logger;\n        // Browser crypto needs to be validated first before any other classes can be set.\n        BrowserCrypto.validateCryptoAvailable(logger);\n        this.cache = new CryptoKeyStore(this.logger);\n        this.performanceClient = performanceClient;\n    }\n\n    /**\n     * Creates a new random GUID - used to populate state and nonce.\n     * @returns string (GUID)\n     */\n    createNewGuid(): string {\n        return BrowserCrypto.createNewGuid();\n    }\n\n    /**\n     * Encodes input string to base64.\n     * @param input\n     */\n    base64Encode(input: string): string {\n        return base64Encode(input);\n    }\n\n    /**\n     * Decodes input string from base64.\n     * @param input\n     */\n    base64Decode(input: string): string {\n        return base64Decode(input);\n    }\n\n    /**\n     * Generates a keypair, stores it and returns a thumbprint\n     * @param request\n     */\n    async getPublicKeyThumbprint(\n        request: SignedHttpRequestParameters\n    ): Promise<string> {\n        const publicKeyThumbMeasurement =\n            this.performanceClient?.startMeasurement(\n                PerformanceEvents.CryptoOptsGetPublicKeyThumbprint,\n                request.correlationId\n            );\n\n        // Generate Keypair\n        const keyPair: CryptoKeyPair = await BrowserCrypto.generateKeyPair(\n            CryptoOps.EXTRACTABLE,\n            CryptoOps.POP_KEY_USAGES\n        );\n\n        // Generate Thumbprint for Public Key\n        const publicKeyJwk: JsonWebKey = await BrowserCrypto.exportJwk(\n            keyPair.publicKey\n        );\n\n        const pubKeyThumprintObj: JsonWebKey = {\n            e: publicKeyJwk.e,\n            kty: publicKeyJwk.kty,\n            n: publicKeyJwk.n,\n        };\n\n        const publicJwkString: string =\n            BrowserStringUtils.getSortedObjectString(pubKeyThumprintObj);\n        const publicJwkHash = await this.hashString(publicJwkString);\n\n        // Generate Thumbprint for Private Key\n        const privateKeyJwk: JsonWebKey = await BrowserCrypto.exportJwk(\n            keyPair.privateKey\n        );\n        // Re-import private key to make it unextractable\n        const unextractablePrivateKey: CryptoKey =\n            await BrowserCrypto.importJwk(privateKeyJwk, false, [\"sign\"]);\n\n        // Store Keypair data in keystore\n        await this.cache.asymmetricKeys.setItem(publicJwkHash, {\n            privateKey: unextractablePrivateKey,\n            publicKey: keyPair.publicKey,\n            requestMethod: request.resourceRequestMethod,\n            requestUri: request.resourceRequestUri,\n        });\n\n        if (publicKeyThumbMeasurement) {\n            publicKeyThumbMeasurement.end({\n                success: true,\n            });\n        }\n\n        return publicJwkHash;\n    }\n\n    /**\n     * Removes cryptographic keypair from key store matching the keyId passed in\n     * @param kid\n     */\n    async removeTokenBindingKey(kid: string): Promise<boolean> {\n        await this.cache.asymmetricKeys.removeItem(kid);\n        const keyFound = await this.cache.asymmetricKeys.containsKey(kid);\n        return !keyFound;\n    }\n\n    /**\n     * Removes all cryptographic keys from IndexedDB storage\n     */\n    async clearKeystore(): Promise<boolean> {\n        return await this.cache.clear();\n    }\n\n    /**\n     * Signs the given object as a jwt payload with private key retrieved by given kid.\n     * @param payload\n     * @param kid\n     */\n    async signJwt(\n        payload: SignedHttpRequest,\n        kid: string,\n        correlationId?: string\n    ): Promise<string> {\n        const signJwtMeasurement = this.performanceClient?.startMeasurement(\n            PerformanceEvents.CryptoOptsSignJwt,\n            correlationId\n        );\n        const cachedKeyPair = await this.cache.asymmetricKeys.getItem(kid);\n\n        if (!cachedKeyPair) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.cryptoKeyNotFound\n            );\n        }\n\n        // Get public key as JWK\n        const publicKeyJwk = await BrowserCrypto.exportJwk(\n            cachedKeyPair.publicKey\n        );\n        const publicKeyJwkString =\n            BrowserStringUtils.getSortedObjectString(publicKeyJwk);\n\n        // Base64URL encode public key thumbprint with keyId only: BASE64URL({ kid: \"FULL_PUBLIC_KEY_HASH\" })\n        const encodedKeyIdThumbprint = urlEncode(JSON.stringify({ kid: kid }));\n\n        // Generate header\n        const shrHeader = JoseHeader.getShrHeaderString({\n            kid: encodedKeyIdThumbprint,\n            alg: publicKeyJwk.alg,\n        });\n        const encodedShrHeader = urlEncode(shrHeader);\n\n        // Generate payload\n        payload.cnf = {\n            jwk: JSON.parse(publicKeyJwkString),\n        };\n        const encodedPayload = urlEncode(JSON.stringify(payload));\n\n        // Form token string\n        const tokenString = `${encodedShrHeader}.${encodedPayload}`;\n\n        // Sign token\n        const tokenBuffer = BrowserStringUtils.stringToUtf8Arr(tokenString);\n        const signatureBuffer = await BrowserCrypto.sign(\n            cachedKeyPair.privateKey,\n            tokenBuffer\n        );\n        const encodedSignature = urlEncodeArr(new Uint8Array(signatureBuffer));\n\n        const signedJwt = `${tokenString}.${encodedSignature}`;\n\n        if (signJwtMeasurement) {\n            signJwtMeasurement.end({\n                success: true,\n            });\n        }\n\n        return signedJwt;\n    }\n\n    /**\n     * Returns the SHA-256 hash of an input string\n     * @param plainText\n     */\n    async hashString(plainText: string): Promise<string> {\n        const hashBuffer: ArrayBuffer = await BrowserCrypto.sha256Digest(\n            plainText\n        );\n        const hashBytes = new Uint8Array(hashBuffer);\n        return urlEncodeArr(hashBytes);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Logger } from \"../logger/Logger\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\n\n/**\n * Wraps a function with a performance measurement.\n * Usage: invoke(functionToCall, performanceClient, \"EventName\", \"correlationId\")(...argsToPassToFunction)\n * @param callback\n * @param eventName\n * @param logger\n * @param telemetryClient\n * @param correlationId\n * @returns\n * @internal\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const invoke = <T extends Array<any>, U>(\n    callback: (...args: T) => U,\n    eventName: string,\n    logger: Logger,\n    telemetryClient?: IPerformanceClient,\n    correlationId?: string\n) => {\n    return (...args: T): U => {\n        logger.trace(`Executing function ${eventName}`);\n        const inProgressEvent = telemetryClient?.startMeasurement(\n            eventName,\n            correlationId\n        );\n        try {\n            const result = callback(...args);\n            inProgressEvent?.end({\n                success: true,\n            });\n            logger.trace(`Returning result from ${eventName}`);\n            return result;\n        } catch (e) {\n            logger.trace(`Error occurred in ${eventName}`);\n            try {\n                logger.trace(JSON.stringify(e));\n            } catch (e) {\n                logger.trace(\"Unable to print error message.\");\n            }\n            inProgressEvent?.end({\n                success: false,\n            });\n            throw e;\n        }\n    };\n};\n\n/**\n * Wraps an async function with a performance measurement.\n * Usage: invokeAsync(functionToCall, performanceClient, \"EventName\", \"correlationId\")(...argsToPassToFunction)\n * @param callback\n * @param eventName\n * @param logger\n * @param telemetryClient\n * @param correlationId\n * @returns\n * @internal\n *\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const invokeAsync = <T extends Array<any>, U>(\n    callback: (...args: T) => Promise<U>,\n    eventName: string,\n    logger: Logger,\n    telemetryClient?: IPerformanceClient,\n    correlationId?: string\n) => {\n    return (...args: T): Promise<U> => {\n        logger.trace(`Executing function ${eventName}`);\n        const inProgressEvent = telemetryClient?.startMeasurement(\n            eventName,\n            correlationId\n        );\n        telemetryClient?.setPreQueueTime(eventName, correlationId);\n        return callback(...args)\n            .then((response) => {\n                logger.trace(`Returning result from ${eventName}`);\n                inProgressEvent?.end({\n                    success: true,\n                });\n                return response;\n            })\n            .catch((e) => {\n                logger.trace(`Error occurred in ${eventName}`);\n                try {\n                    logger.trace(JSON.stringify(e));\n                } catch (e) {\n                    logger.trace(\"Unable to print error message.\");\n                }\n                inProgressEvent?.end({\n                    success: false,\n                });\n                throw e;\n            });\n    };\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ServerAuthorizationCodeResponse } from \"../response/ServerAuthorizationCodeResponse\";\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { IUri } from \"./IUri\";\nimport {\n    AADAuthorityConstants,\n    Constants,\n    ServerResponseType,\n} from \"../utils/Constants\";\n\n/**\n * Url object class which can perform various transformations on url strings.\n */\nexport class UrlString {\n    // internal url string field\n    private _urlString: string;\n    public get urlString(): string {\n        return this._urlString;\n    }\n\n    constructor(url: string) {\n        this._urlString = url;\n        if (!this._urlString) {\n            // Throws error if url is empty\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.urlEmptyError\n            );\n        }\n\n        if (!this.getHash()) {\n            this._urlString = UrlString.canonicalizeUri(url);\n        }\n    }\n\n    /**\n     * Ensure urls are lower case and end with a / character.\n     * @param url\n     */\n    static canonicalizeUri(url: string): string {\n        if (url) {\n            let lowerCaseUrl = url.toLowerCase();\n\n            if (StringUtils.endsWith(lowerCaseUrl, \"?\")) {\n                lowerCaseUrl = lowerCaseUrl.slice(0, -1);\n            } else if (StringUtils.endsWith(lowerCaseUrl, \"?/\")) {\n                lowerCaseUrl = lowerCaseUrl.slice(0, -2);\n            }\n\n            if (!StringUtils.endsWith(lowerCaseUrl, \"/\")) {\n                lowerCaseUrl += \"/\";\n            }\n\n            return lowerCaseUrl;\n        }\n\n        return url;\n    }\n\n    /**\n     * Throws if urlString passed is not a valid authority URI string.\n     */\n    validateAsUri(): void {\n        // Attempts to parse url for uri components\n        let components;\n        try {\n            components = this.getUrlComponents();\n        } catch (e) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.urlParseError\n            );\n        }\n\n        // Throw error if URI or path segments are not parseable.\n        if (!components.HostNameAndPort || !components.PathSegments) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.urlParseError\n            );\n        }\n\n        // Throw error if uri is insecure.\n        if (\n            !components.Protocol ||\n            components.Protocol.toLowerCase() !== \"https:\"\n        ) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.authorityUriInsecure\n            );\n        }\n    }\n\n    /**\n     * Given a url and a query string return the url with provided query string appended\n     * @param url\n     * @param queryString\n     */\n    static appendQueryString(url: string, queryString: string): string {\n        if (!queryString) {\n            return url;\n        }\n\n        return url.indexOf(\"?\") < 0\n            ? `${url}?${queryString}`\n            : `${url}&${queryString}`;\n    }\n\n    /**\n     * Returns a url with the hash removed\n     * @param url\n     */\n    static removeHashFromUrl(url: string): string {\n        return UrlString.canonicalizeUri(url.split(\"#\")[0]);\n    }\n\n    /**\n     * Given a url like https://a:b/common/d?e=f#g, and a tenantId, returns https://a:b/tenantId/d\n     * @param href The url\n     * @param tenantId The tenant id to replace\n     */\n    replaceTenantPath(tenantId: string): UrlString {\n        const urlObject = this.getUrlComponents();\n        const pathArray = urlObject.PathSegments;\n        if (\n            tenantId &&\n            pathArray.length !== 0 &&\n            (pathArray[0] === AADAuthorityConstants.COMMON ||\n                pathArray[0] === AADAuthorityConstants.ORGANIZATIONS)\n        ) {\n            pathArray[0] = tenantId;\n        }\n        return UrlString.constructAuthorityUriFromObject(urlObject);\n    }\n\n    /**\n     * Returns the anchor part(#) of the URL\n     */\n    getHash(): string {\n        return UrlString.parseHash(this.urlString);\n    }\n\n    /**\n     * Parses out the components from a url string.\n     * @returns An object with the various components. Please cache this value insted of calling this multiple times on the same url.\n     */\n    getUrlComponents(): IUri {\n        // https://gist.github.com/curtisz/11139b2cfcaef4a261e0\n        const regEx = RegExp(\n            \"^(([^:/?#]+):)?(//([^/?#]*))?([^?#]*)(\\\\?([^#]*))?(#(.*))?\"\n        );\n\n        // If url string does not match regEx, we throw an error\n        const match = this.urlString.match(regEx);\n        if (!match) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.urlParseError\n            );\n        }\n\n        // Url component object\n        const urlComponents = {\n            Protocol: match[1],\n            HostNameAndPort: match[4],\n            AbsolutePath: match[5],\n            QueryString: match[7],\n        } as IUri;\n\n        let pathSegments = urlComponents.AbsolutePath.split(\"/\");\n        pathSegments = pathSegments.filter((val) => val && val.length > 0); // remove empty elements\n        urlComponents.PathSegments = pathSegments;\n\n        if (\n            urlComponents.QueryString &&\n            urlComponents.QueryString.endsWith(\"/\")\n        ) {\n            urlComponents.QueryString = urlComponents.QueryString.substring(\n                0,\n                urlComponents.QueryString.length - 1\n            );\n        }\n        return urlComponents;\n    }\n\n    static getDomainFromUrl(url: string): string {\n        const regEx = RegExp(\"^([^:/?#]+://)?([^/?#]*)\");\n\n        const match = url.match(regEx);\n\n        if (!match) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.urlParseError\n            );\n        }\n\n        return match[2];\n    }\n\n    static getAbsoluteUrl(relativeUrl: string, baseUrl: string): string {\n        if (relativeUrl[0] === Constants.FORWARD_SLASH) {\n            const url = new UrlString(baseUrl);\n            const baseComponents = url.getUrlComponents();\n\n            return (\n                baseComponents.Protocol +\n                \"//\" +\n                baseComponents.HostNameAndPort +\n                relativeUrl\n            );\n        }\n\n        return relativeUrl;\n    }\n\n    /**\n     * Parses hash string from given string. Returns empty string if no hash symbol is found.\n     * @param hashString\n     */\n    static parseHash(hashString: string): string {\n        const hashIndex1 = hashString.indexOf(\"#\");\n        const hashIndex2 = hashString.indexOf(\"#/\");\n        if (hashIndex2 > -1) {\n            return hashString.substring(hashIndex2 + 2);\n        } else if (hashIndex1 > -1) {\n            return hashString.substring(hashIndex1 + 1);\n        }\n        return Constants.EMPTY_STRING;\n    }\n\n    /**\n     * Parses query string from given string. Returns empty string if no query symbol is found.\n     * @param queryString\n     */\n    static parseQueryString(queryString: string): string {\n        const queryIndex1 = queryString.indexOf(\"?\");\n        const queryIndex2 = queryString.indexOf(\"/?\");\n        if (queryIndex2 > -1) {\n            return queryString.substring(queryIndex2 + 2);\n        } else if (queryIndex1 > -1) {\n            return queryString.substring(queryIndex1 + 1);\n        }\n        return Constants.EMPTY_STRING;\n    }\n\n    /**\n     * Parses query server response string from given string.\n     * Extract hash between '?code=' and '#' if trailing '# is present.\n     * Returns empty string if no query symbol is found.\n     * @param queryString\n     */\n    static parseQueryServerResponse(queryString: string): string {\n        const queryIndex1 = queryString.indexOf(\"?code\");\n        const queryIndex2 = queryString.indexOf(\"/?code\");\n        const hashIndex = queryString.indexOf(\"#\");\n        if (queryIndex2 > -1 && hashIndex > -1) {\n            return queryString.substring(queryIndex2 + 2, hashIndex);\n        } else if (queryIndex2 > -1) {\n            return queryString.substring(queryIndex2 + 2);\n        } else if (queryIndex1 > -1 && hashIndex > -1) {\n            return queryString.substring(queryIndex1 + 1, hashIndex);\n        } else if (queryIndex1 > -1) {\n            return queryString.substring(queryIndex1 + 1);\n        }\n        return Constants.EMPTY_STRING;\n    }\n\n    static constructAuthorityUriFromObject(urlObject: IUri): UrlString {\n        return new UrlString(\n            urlObject.Protocol +\n                \"//\" +\n                urlObject.HostNameAndPort +\n                \"/\" +\n                urlObject.PathSegments.join(\"/\")\n        );\n    }\n\n    /**\n     * Returns URL hash as server auth code response object.\n     */\n    static getDeserializedHash(hash: string): ServerAuthorizationCodeResponse {\n        // Check if given hash is empty\n        if (!hash) {\n            return {};\n        }\n        // Strip the # symbol if present\n        const parsedHash = UrlString.parseHash(hash);\n        // If # symbol was not present, above will return empty string, so give original hash value\n        const deserializedHash: ServerAuthorizationCodeResponse =\n            StringUtils.queryStringToObject<ServerAuthorizationCodeResponse>(\n                parsedHash || hash\n            );\n        // Check if deserialization didn't work\n        if (!deserializedHash) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.hashNotDeserialized\n            );\n        }\n        return deserializedHash;\n    }\n\n    /**\n     * Returns URL query string as server auth code response object.\n     */\n    static getDeserializedQueryString(\n        query: string\n    ): ServerAuthorizationCodeResponse {\n        // Check if given query is empty\n        if (!query) {\n            return {};\n        }\n        // Strip the ? symbol if present\n        const parsedQueryString = UrlString.parseQueryString(query);\n        // If ? symbol was not present, above will return empty string, so give original query value\n        const deserializedQueryString: ServerAuthorizationCodeResponse =\n            StringUtils.queryStringToObject<ServerAuthorizationCodeResponse>(\n                parsedQueryString || query\n            );\n        // Check if deserialization didn't work\n        if (!deserializedQueryString) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.hashNotDeserialized\n            );\n        }\n        return deserializedQueryString;\n    }\n    /**\n     * Returns either deserialized query string or deserialized hash, depending on the serverResponseType\n     * as a server auth code response object.\n     */\n    static getDeserializedCodeResponse(\n        serverResponseType: ServerResponseType | undefined,\n        hashFragment: string\n    ): ServerAuthorizationCodeResponse {\n        const hashUrlString = new UrlString(hashFragment);\n        let serverParams: ServerAuthorizationCodeResponse;\n        if (serverResponseType === ServerResponseType.QUERY) {\n            serverParams = UrlString.getDeserializedQueryString(hashFragment);\n        } else {\n            serverParams = UrlString.getDeserializedHash(\n                hashUrlString.getHash()\n            );\n        }\n        return serverParams;\n    }\n\n    /**\n     * Check if the hash of the URL string contains known properties\n     */\n    static hashContainsKnownProperties(hash: string): boolean {\n        if (!hash || hash.indexOf(\"=\") < 0) {\n            // Hash doesn't contain key/value pairs\n            return false;\n        }\n\n        const parameters: ServerAuthorizationCodeResponse =\n            UrlString.getDeserializedHash(hash);\n        return !!(\n            parameters.code ||\n            parameters.error_description ||\n            parameters.error ||\n            parameters.state\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    Separators,\n    CredentialType,\n    CacheType,\n    Constants,\n    AuthenticationScheme,\n} from \"../../utils/Constants\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../../error/ClientAuthError\";\n\n/**\n * Base type for credentials to be stored in the cache: eg: ACCESS_TOKEN, ID_TOKEN etc\n *\n * Key:Value Schema:\n *\n * Key: <home_account_id*>-<environment>-<credential_type>-<client_id>-<realm*>-<target*>-<requestedClaims*>-<scheme*>\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\n *      clientId: client ID of the application\n *      secret: Actual credential as a string\n *      familyId: Family ID identifier, usually only used for refresh tokens\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\n *      tokenType: Matches the authentication scheme for which the token was issued (i.e. Bearer or pop)\n *      requestedClaimsHash: Matches the SHA 256 hash of the claims object included in the token request\n *      userAssertionHash: Matches the SHA 256 hash of the obo_assertion for the OBO flow\n * }\n */\nexport class CredentialEntity {\n    homeAccountId: string;\n    environment: string;\n    credentialType: CredentialType;\n    clientId: string;\n    secret: string;\n    familyId?: string;\n    realm?: string;\n    target?: string;\n    userAssertionHash?: string;\n    tokenType?: AuthenticationScheme;\n    keyId?: string;\n    requestedClaimsHash?: string;\n\n    /**\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\n     */\n    generateAccountId(): string {\n        return CredentialEntity.generateAccountIdForCacheKey(\n            this.homeAccountId,\n            this.environment\n        );\n    }\n\n    /**\n     * Generate Credential Id key component as per the schema: <credential_type>-<client_id>-<realm>\n     */\n    generateCredentialId(): string {\n        return CredentialEntity.generateCredentialIdForCacheKey(\n            this.credentialType,\n            this.clientId,\n            this.realm,\n            this.familyId\n        );\n    }\n\n    /**\n     * Generate target key component as per schema: <target>\n     */\n    generateTarget(): string {\n        return CredentialEntity.generateTargetForCacheKey(this.target);\n    }\n\n    /**\n     * generates credential key\n     */\n    generateCredentialKey(): string {\n        return CredentialEntity.generateCredentialCacheKey(\n            this.homeAccountId,\n            this.environment,\n            this.credentialType,\n            this.clientId,\n            this.realm,\n            this.target,\n            this.familyId,\n            this.tokenType,\n            this.requestedClaimsHash\n        );\n    }\n\n    /**\n     * returns the type of the cache (in this case credential)\n     */\n    generateType(): number {\n        switch (this.credentialType) {\n            case CredentialType.ID_TOKEN:\n                return CacheType.ID_TOKEN;\n            case CredentialType.ACCESS_TOKEN:\n            case CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME:\n                return CacheType.ACCESS_TOKEN;\n            case CredentialType.REFRESH_TOKEN:\n                return CacheType.REFRESH_TOKEN;\n            default: {\n                throw createClientAuthError(\n                    ClientAuthErrorCodes.unexpectedCredentialType\n                );\n            }\n        }\n    }\n\n    /**\n     * generates credential key\n     * <home_account_id*>-\\<environment>-<credential_type>-<client_id>-<realm\\*>-<target\\*>-<scheme\\*>\n     */\n    static generateCredentialCacheKey(\n        homeAccountId: string,\n        environment: string,\n        credentialType: CredentialType,\n        clientId: string,\n        realm?: string,\n        target?: string,\n        familyId?: string,\n        tokenType?: AuthenticationScheme,\n        requestedClaimsHash?: string\n    ): string {\n        const credentialKey = [\n            this.generateAccountIdForCacheKey(homeAccountId, environment),\n            this.generateCredentialIdForCacheKey(\n                credentialType,\n                clientId,\n                realm,\n                familyId\n            ),\n            this.generateTargetForCacheKey(target),\n            this.generateClaimsHashForCacheKey(requestedClaimsHash),\n            this.generateSchemeForCacheKey(tokenType),\n        ];\n\n        return credentialKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * generates Account Id for keys\n     * @param homeAccountId\n     * @param environment\n     */\n    private static generateAccountIdForCacheKey(\n        homeAccountId: string,\n        environment: string\n    ): string {\n        const accountId: Array<string> = [homeAccountId, environment];\n        return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * Generates Credential Id for keys\n     * @param credentialType\n     * @param realm\n     * @param clientId\n     * @param familyId\n     */\n    private static generateCredentialIdForCacheKey(\n        credentialType: CredentialType,\n        clientId: string,\n        realm?: string,\n        familyId?: string\n    ): string {\n        const clientOrFamilyId =\n            credentialType === CredentialType.REFRESH_TOKEN\n                ? familyId || clientId\n                : clientId;\n        const credentialId: Array<string> = [\n            credentialType,\n            clientOrFamilyId,\n            realm || Constants.EMPTY_STRING,\n        ];\n\n        return credentialId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * Generate target key component as per schema: <target>\n     */\n    private static generateTargetForCacheKey(scopes?: string): string {\n        return (scopes || Constants.EMPTY_STRING).toLowerCase();\n    }\n\n    /**\n     * Generate requested claims key component as per schema: <requestedClaims>\n     */\n    private static generateClaimsHashForCacheKey(\n        requestedClaimsHash?: string\n    ): string {\n        return (requestedClaimsHash || Constants.EMPTY_STRING).toLowerCase();\n    }\n\n    /**\n     * Generate scheme key componenet as per schema: <scheme>\n     */\n    private static generateSchemeForCacheKey(tokenType?: string): string {\n        /*\n         * PoP Tokens and SSH certs include scheme in cache key\n         * Cast to lowercase to handle \"bearer\" from ADFS\n         */\n        return tokenType &&\n            tokenType.toLowerCase() !==\n                AuthenticationScheme.BEARER.toLowerCase()\n            ? tokenType.toLowerCase()\n            : Constants.EMPTY_STRING;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CredentialEntity } from \"./CredentialEntity\";\nimport { CredentialType } from \"../../utils/Constants\";\n\n/**\n * ID_TOKEN Cache\n *\n * Key:Value Schema:\n *\n * Key Example: uid.utid-login.microsoftonline.com-idtoken-clientId-contoso.com-\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\n *      clientId: client ID of the application\n *      secret: Actual credential as a string\n *      realm: Full tenant or organizational identifier that the account belongs to\n * }\n */\nexport class IdTokenEntity extends CredentialEntity {\n    realm: string;\n\n    /**\n     * Create IdTokenEntity\n     * @param homeAccountId\n     * @param authenticationResult\n     * @param clientId\n     * @param authority\n     */\n    static createIdTokenEntity(\n        homeAccountId: string,\n        environment: string,\n        idToken: string,\n        clientId: string,\n        tenantId: string\n    ): IdTokenEntity {\n        const idTokenEntity = new IdTokenEntity();\n\n        idTokenEntity.credentialType = CredentialType.ID_TOKEN;\n        idTokenEntity.homeAccountId = homeAccountId;\n        idTokenEntity.environment = environment;\n        idTokenEntity.clientId = clientId;\n        idTokenEntity.secret = idToken;\n        idTokenEntity.realm = tenantId;\n\n        return idTokenEntity;\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isIdTokenEntity(entity: object): boolean {\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"credentialType\") &&\n            entity.hasOwnProperty(\"realm\") &&\n            entity.hasOwnProperty(\"clientId\") &&\n            entity.hasOwnProperty(\"secret\") &&\n            entity[\"credentialType\"] === CredentialType.ID_TOKEN\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Utility class which exposes functions for managing date and time operations.\n */\nexport class TimeUtils {\n    /**\n     * return the current time in Unix time (seconds).\n     */\n    static nowSeconds(): number {\n        // Date.getTime() returns in milliseconds.\n        return Math.round(new Date().getTime() / 1000.0);\n    }\n\n    /**\n     * check if a token is expired based on given UTC time in seconds.\n     * @param expiresOn\n     */\n    static isTokenExpired(expiresOn: string, offset: number): boolean {\n        // check for access token expiry\n        const expirationSec = Number(expiresOn) || 0;\n        const offsetCurrentTimeSec = TimeUtils.nowSeconds() + offset;\n\n        // If current time + offset is greater than token expiration time, then token is expired.\n        return offsetCurrentTimeSec > expirationSec;\n    }\n\n    /**\n     * If the current time is earlier than the time that a token was cached at, we must discard the token\n     * i.e. The system clock was turned back after acquiring the cached token\n     * @param cachedAt\n     * @param offset\n     */\n    static wasClockTurnedBack(cachedAt: string): boolean {\n        const cachedAtSec = Number(cachedAt);\n\n        return cachedAtSec > TimeUtils.nowSeconds();\n    }\n\n    /**\n     * Waits for t number of milliseconds\n     * @param t number\n     * @param value T\n     */\n    static delay<T>(t: number, value?: T): Promise<T | void> {\n        return new Promise((resolve) => setTimeout(() => resolve(value), t));\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CredentialEntity } from \"./CredentialEntity\";\nimport { CredentialType, AuthenticationScheme } from \"../../utils/Constants\";\nimport { TimeUtils } from \"../../utils/TimeUtils\";\nimport { ICrypto } from \"../../crypto/ICrypto\";\nimport { TokenClaims } from \"../../account/TokenClaims\";\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../../error/ClientAuthError\";\nimport { extractTokenClaims } from \"../../account/AuthToken\";\n\n/**\n * ACCESS_TOKEN Credential Type\n *\n * Key:Value Schema:\n *\n * Key Example: uid.utid-login.microsoftonline.com-accesstoken-clientId-contoso.com-user.read\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\n *      clientId: client ID of the application\n *      secret: Actual credential as a string\n *      familyId: Family ID identifier, usually only used for refresh tokens\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\n *      cachedAt: Absolute device time when entry was created in the cache.\n *      expiresOn: Token expiry time, calculated based on current UTC time in seconds. Represented as a string.\n *      extendedExpiresOn: Additional extended expiry time until when token is valid in case of server-side outage. Represented as string in UTC seconds.\n *      keyId: used for POP and SSH tokenTypes\n *      tokenType: Type of the token issued. Usually \"Bearer\"\n * }\n */\nexport class AccessTokenEntity extends CredentialEntity {\n    realm: string;\n    target: string;\n    cachedAt: string;\n    expiresOn: string;\n    extendedExpiresOn?: string;\n    refreshOn?: string;\n    keyId?: string; // for POP and SSH tokenTypes\n    tokenType?: AuthenticationScheme;\n    requestedClaims?: string;\n    requestedClaimsHash?: string;\n\n    /**\n     * Create AccessTokenEntity\n     * @param homeAccountId\n     * @param environment\n     * @param accessToken\n     * @param clientId\n     * @param tenantId\n     * @param scopes\n     * @param expiresOn\n     * @param extExpiresOn\n     */\n    static createAccessTokenEntity(\n        homeAccountId: string,\n        environment: string,\n        accessToken: string,\n        clientId: string,\n        tenantId: string,\n        scopes: string,\n        expiresOn: number,\n        extExpiresOn: number,\n        cryptoUtils: ICrypto,\n        refreshOn?: number,\n        tokenType?: AuthenticationScheme,\n        userAssertionHash?: string,\n        keyId?: string,\n        requestedClaims?: string,\n        requestedClaimsHash?: string\n    ): AccessTokenEntity {\n        const atEntity: AccessTokenEntity = new AccessTokenEntity();\n\n        atEntity.homeAccountId = homeAccountId;\n        atEntity.credentialType = CredentialType.ACCESS_TOKEN;\n        atEntity.secret = accessToken;\n\n        const currentTime = TimeUtils.nowSeconds();\n        atEntity.cachedAt = currentTime.toString();\n\n        /*\n         * Token expiry time.\n         * This value should be  calculated based on the current UTC time measured locally and the value  expires_in Represented as a string in JSON.\n         */\n        atEntity.expiresOn = expiresOn.toString();\n        atEntity.extendedExpiresOn = extExpiresOn.toString();\n        if (refreshOn) {\n            atEntity.refreshOn = refreshOn.toString();\n        }\n\n        atEntity.environment = environment;\n        atEntity.clientId = clientId;\n        atEntity.realm = tenantId;\n        atEntity.target = scopes;\n        atEntity.userAssertionHash = userAssertionHash;\n\n        atEntity.tokenType = tokenType || AuthenticationScheme.BEARER;\n\n        if (requestedClaims) {\n            atEntity.requestedClaims = requestedClaims;\n            atEntity.requestedClaimsHash = requestedClaimsHash;\n        }\n\n        /*\n         * Create Access Token With Auth Scheme instead of regular access token\n         * Cast to lower to handle \"bearer\" from ADFS\n         */\n        if (\n            atEntity.tokenType?.toLowerCase() !==\n            AuthenticationScheme.BEARER.toLowerCase()\n        ) {\n            atEntity.credentialType =\n                CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\n            switch (atEntity.tokenType) {\n                case AuthenticationScheme.POP:\n                    // Make sure keyId is present and add it to credential\n                    const tokenClaims: TokenClaims | null = extractTokenClaims(\n                        accessToken,\n                        cryptoUtils.base64Decode\n                    );\n                    if (!tokenClaims?.cnf?.kid) {\n                        throw createClientAuthError(\n                            ClientAuthErrorCodes.tokenClaimsCnfRequiredForSignedJwt\n                        );\n                    }\n                    atEntity.keyId = tokenClaims.cnf.kid;\n                    break;\n                case AuthenticationScheme.SSH:\n                    atEntity.keyId = keyId;\n            }\n        }\n\n        return atEntity;\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAccessTokenEntity(entity: object): boolean {\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"credentialType\") &&\n            entity.hasOwnProperty(\"realm\") &&\n            entity.hasOwnProperty(\"clientId\") &&\n            entity.hasOwnProperty(\"secret\") &&\n            entity.hasOwnProperty(\"target\") &&\n            (entity[\"credentialType\"] === CredentialType.ACCESS_TOKEN ||\n                entity[\"credentialType\"] ===\n                    CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME)\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CredentialEntity } from \"./CredentialEntity\";\nimport { CredentialType } from \"../../utils/Constants\";\n\n/**\n * REFRESH_TOKEN Cache\n *\n * Key:Value Schema:\n *\n * Key Example: uid.utid-login.microsoftonline.com-refreshtoken-clientId--\n *\n * Value:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      credentialType: Type of credential as a string, can be one of the following: RefreshToken, AccessToken, IdToken, Password, Cookie, Certificate, Other\n *      clientId: client ID of the application\n *      secret: Actual credential as a string\n *      familyId: Family ID identifier, '1' represents Microsoft Family\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      target: Permissions that are included in the token, or for refresh tokens, the resource identifier.\n * }\n */\nexport class RefreshTokenEntity extends CredentialEntity {\n    familyId?: string;\n\n    /**\n     * Create RefreshTokenEntity\n     * @param homeAccountId\n     * @param authenticationResult\n     * @param clientId\n     * @param authority\n     */\n    static createRefreshTokenEntity(\n        homeAccountId: string,\n        environment: string,\n        refreshToken: string,\n        clientId: string,\n        familyId?: string,\n        userAssertionHash?: string\n    ): RefreshTokenEntity {\n        const rtEntity = new RefreshTokenEntity();\n\n        rtEntity.clientId = clientId;\n        rtEntity.credentialType = CredentialType.REFRESH_TOKEN;\n        rtEntity.environment = environment;\n        rtEntity.homeAccountId = homeAccountId;\n        rtEntity.secret = refreshToken;\n        rtEntity.userAssertionHash = userAssertionHash;\n\n        if (familyId) rtEntity.familyId = familyId;\n\n        return rtEntity;\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isRefreshTokenEntity(entity: object): boolean {\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"credentialType\") &&\n            entity.hasOwnProperty(\"clientId\") &&\n            entity.hasOwnProperty(\"secret\") &&\n            entity[\"credentialType\"] === CredentialType.REFRESH_TOKEN\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { APP_METADATA, Separators } from \"../../utils/Constants\";\n\n/**\n * APP_METADATA Cache\n *\n * Key:Value Schema:\n *\n * Key: appmetadata-<environment>-<client_id>\n *\n * Value:\n * {\n *      clientId: client ID of the application\n *      environment: entity that issued the token, represented as a full host\n *      familyId: Family ID identifier, '1' represents Microsoft Family\n * }\n */\nexport class AppMetadataEntity {\n    clientId: string;\n    environment: string;\n    familyId?: string;\n\n    /**\n     * Generate AppMetadata Cache Key as per the schema: appmetadata-<environment>-<client_id>\n     */\n    generateAppMetadataKey(): string {\n        return AppMetadataEntity.generateAppMetadataCacheKey(\n            this.environment,\n            this.clientId\n        );\n    }\n\n    /**\n     * Generate AppMetadata Cache Key\n     */\n    static generateAppMetadataCacheKey(\n        environment: string,\n        clientId: string\n    ): string {\n        const appMetaDataKeyArray: Array<string> = [\n            APP_METADATA,\n            environment,\n            clientId,\n        ];\n        return appMetaDataKeyArray\n            .join(Separators.CACHE_KEY_SEPARATOR)\n            .toLowerCase();\n    }\n\n    /**\n     * Creates AppMetadataEntity\n     * @param clientId\n     * @param environment\n     * @param familyId\n     */\n    static createAppMetadataEntity(\n        clientId: string,\n        environment: string,\n        familyId?: string\n    ): AppMetadataEntity {\n        const appMetadata = new AppMetadataEntity();\n\n        appMetadata.clientId = clientId;\n        appMetadata.environment = environment;\n        if (familyId) {\n            appMetadata.familyId = familyId;\n        }\n\n        return appMetadata;\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAppMetadataEntity(key: string, entity: object): boolean {\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            key.indexOf(APP_METADATA) === 0 &&\n            entity.hasOwnProperty(\"clientId\") &&\n            entity.hasOwnProperty(\"environment\")\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { SERVER_TELEM_CONSTANTS } from \"../../utils/Constants\";\n\nexport class ServerTelemetryEntity {\n    failedRequests: Array<string | number>;\n    errors: string[];\n    cacheHits: number;\n\n    constructor() {\n        this.failedRequests = [];\n        this.errors = [];\n        this.cacheHits = 0;\n    }\n\n    /**\n     * validates if a given cache entry is \"Telemetry\", parses <key,value>\n     * @param key\n     * @param entity\n     */\n    static isServerTelemetryEntity(key: string, entity?: object): boolean {\n        const validateKey: boolean =\n            key.indexOf(SERVER_TELEM_CONSTANTS.CACHE_KEY) === 0;\n        let validateEntity: boolean = true;\n\n        if (entity) {\n            validateEntity =\n                entity.hasOwnProperty(\"failedRequests\") &&\n                entity.hasOwnProperty(\"errors\") &&\n                entity.hasOwnProperty(\"cacheHits\");\n        }\n\n        return validateKey && validateEntity;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CloudDiscoveryMetadata } from \"../../authority/CloudDiscoveryMetadata\";\nimport { OpenIdConfigResponse } from \"../../authority/OpenIdConfigResponse\";\nimport { AUTHORITY_METADATA_CONSTANTS } from \"../../utils/Constants\";\nimport { TimeUtils } from \"../../utils/TimeUtils\";\n\n/** @internal */\nexport class AuthorityMetadataEntity {\n    aliases: Array<string>;\n    preferred_cache: string;\n    preferred_network: string;\n    canonical_authority: string;\n    authorization_endpoint: string;\n    token_endpoint: string;\n    end_session_endpoint?: string;\n    issuer: string;\n    aliasesFromNetwork: boolean;\n    endpointsFromNetwork: boolean;\n    expiresAt: number;\n    jwks_uri: string;\n\n    constructor() {\n        this.expiresAt =\n            TimeUtils.nowSeconds() +\n            AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS;\n    }\n\n    /**\n     * Update the entity with new aliases, preferred_cache and preferred_network values\n     * @param metadata\n     * @param fromNetwork\n     */\n    updateCloudDiscoveryMetadata(\n        metadata: CloudDiscoveryMetadata,\n        fromNetwork: boolean\n    ): void {\n        this.aliases = metadata.aliases;\n        this.preferred_cache = metadata.preferred_cache;\n        this.preferred_network = metadata.preferred_network;\n        this.aliasesFromNetwork = fromNetwork;\n    }\n\n    /**\n     * Update the entity with new endpoints\n     * @param metadata\n     * @param fromNetwork\n     */\n    updateEndpointMetadata(\n        metadata: OpenIdConfigResponse,\n        fromNetwork: boolean\n    ): void {\n        this.authorization_endpoint = metadata.authorization_endpoint;\n        this.token_endpoint = metadata.token_endpoint;\n        this.end_session_endpoint = metadata.end_session_endpoint;\n        this.issuer = metadata.issuer;\n        this.endpointsFromNetwork = fromNetwork;\n        this.jwks_uri = metadata.jwks_uri;\n    }\n\n    /**\n     * Save the authority that was used to create this cache entry\n     * @param authority\n     */\n    updateCanonicalAuthority(authority: string): void {\n        this.canonical_authority = authority;\n    }\n\n    /**\n     * Reset the exiresAt value\n     */\n    resetExpiresAt(): void {\n        this.expiresAt =\n            TimeUtils.nowSeconds() +\n            AUTHORITY_METADATA_CONSTANTS.REFRESH_TIME_SECONDS;\n    }\n\n    /**\n     * Returns whether or not the data needs to be refreshed\n     */\n    isExpired(): boolean {\n        return this.expiresAt <= TimeUtils.nowSeconds();\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAuthorityMetadataEntity(key: string, entity: object): boolean {\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) === 0 &&\n            entity.hasOwnProperty(\"aliases\") &&\n            entity.hasOwnProperty(\"preferred_cache\") &&\n            entity.hasOwnProperty(\"preferred_network\") &&\n            entity.hasOwnProperty(\"canonical_authority\") &&\n            entity.hasOwnProperty(\"authorization_endpoint\") &&\n            entity.hasOwnProperty(\"token_endpoint\") &&\n            entity.hasOwnProperty(\"issuer\") &&\n            entity.hasOwnProperty(\"aliasesFromNetwork\") &&\n            entity.hasOwnProperty(\"endpointsFromNetwork\") &&\n            entity.hasOwnProperty(\"expiresAt\") &&\n            entity.hasOwnProperty(\"jwks_uri\")\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ThrottlingConstants } from \"../../utils/Constants\";\n\nexport class ThrottlingEntity {\n    // Unix-time value representing the expiration of the throttle\n    throttleTime: number;\n    // Information provided by the server\n    error?: string;\n    errorCodes?: Array<string>;\n    errorMessage?: string;\n    subError?: string;\n\n    /**\n     * validates if a given cache entry is \"Throttling\", parses <key,value>\n     * @param key\n     * @param entity\n     */\n    static isThrottlingEntity(key: string, entity?: object): boolean {\n        let validateKey: boolean = false;\n        if (key) {\n            validateKey =\n                key.indexOf(ThrottlingConstants.THROTTLING_PREFIX) === 0;\n        }\n\n        let validateEntity: boolean = true;\n        if (entity) {\n            validateEntity = entity.hasOwnProperty(\"throttleTime\");\n        }\n\n        return validateKey && validateEntity;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants } from \"./Constants\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\n\n/**\n * Type which defines the object that is stringified, encoded and sent in the state value.\n * Contains the following:\n * - id - unique identifier for this request\n * - ts - timestamp for the time the request was made. Used to ensure that token expiration is not calculated incorrectly.\n * - platformState - string value sent from the platform.\n */\nexport type LibraryStateObject = {\n    id: string;\n    meta?: Record<string, string>;\n};\n\n/**\n * Type which defines the stringified and encoded object sent to the service in the authorize request.\n */\nexport type RequestStateObject = {\n    userRequestState: string;\n    libraryState: LibraryStateObject;\n};\n\n/**\n * Class which provides helpers for OAuth 2.0 protocol specific values\n */\nexport class ProtocolUtils {\n    /**\n     * Appends user state with random guid, or returns random guid.\n     * @param userState\n     * @param randomGuid\n     */\n    static setRequestState(\n        cryptoObj: ICrypto,\n        userState?: string,\n        meta?: Record<string, string>\n    ): string {\n        const libraryState = ProtocolUtils.generateLibraryState(\n            cryptoObj,\n            meta\n        );\n        return userState\n            ? `${libraryState}${Constants.RESOURCE_DELIM}${userState}`\n            : libraryState;\n    }\n\n    /**\n     * Generates the state value used by the common library.\n     * @param randomGuid\n     * @param cryptoObj\n     */\n    static generateLibraryState(\n        cryptoObj: ICrypto,\n        meta?: Record<string, string>\n    ): string {\n        if (!cryptoObj) {\n            throw createClientAuthError(ClientAuthErrorCodes.noCryptoObject);\n        }\n\n        // Create a state object containing a unique id and the timestamp of the request creation\n        const stateObj: LibraryStateObject = {\n            id: cryptoObj.createNewGuid(),\n        };\n\n        if (meta) {\n            stateObj.meta = meta;\n        }\n\n        const stateString = JSON.stringify(stateObj);\n\n        return cryptoObj.base64Encode(stateString);\n    }\n\n    /**\n     * Parses the state into the RequestStateObject, which contains the LibraryState info and the state passed by the user.\n     * @param state\n     * @param cryptoObj\n     */\n    static parseRequestState(\n        cryptoObj: ICrypto,\n        state: string\n    ): RequestStateObject {\n        if (!cryptoObj) {\n            throw createClientAuthError(ClientAuthErrorCodes.noCryptoObject);\n        }\n\n        if (!state) {\n            throw createClientAuthError(ClientAuthErrorCodes.invalidState);\n        }\n\n        try {\n            // Split the state between library state and user passed state and decode them separately\n            const splitState = state.split(Constants.RESOURCE_DELIM);\n            const libraryState = splitState[0];\n            const userState =\n                splitState.length > 1\n                    ? splitState.slice(1).join(Constants.RESOURCE_DELIM)\n                    : Constants.EMPTY_STRING;\n            const libraryStateString = cryptoObj.base64Decode(libraryState);\n            const libraryStateObj = JSON.parse(\n                libraryStateString\n            ) as LibraryStateObject;\n            return {\n                userRequestState: userState || Constants.EMPTY_STRING,\n                libraryState: libraryStateObj,\n            };\n        } catch (e) {\n            throw createClientAuthError(ClientAuthErrorCodes.invalidState);\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport type CcsCredential = {\n    credential: string;\n    type: CcsCredentialType;\n};\n\nexport const CcsCredentialType = {\n    HOME_ACCOUNT_ID: \"home_account_id\",\n    UPN: \"UPN\",\n} as const;\nexport type CcsCredentialType =\n    (typeof CcsCredentialType)[keyof typeof CcsCredentialType];\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { IdTokenEntity } from \"./IdTokenEntity\";\nimport { AccessTokenEntity } from \"./AccessTokenEntity\";\nimport { RefreshTokenEntity } from \"./RefreshTokenEntity\";\nimport { AccountEntity } from \"./AccountEntity\";\nimport { AppMetadataEntity } from \"./AppMetadataEntity\";\n\n/** @internal */\nexport class CacheRecord {\n    account: AccountEntity | null;\n    idToken: IdTokenEntity | null;\n    accessToken: AccessTokenEntity | null;\n    refreshToken: RefreshTokenEntity | null;\n    appMetadata: AppMetadataEntity | null;\n\n    constructor(\n        accountEntity?: AccountEntity | null,\n        idTokenEntity?: IdTokenEntity | null,\n        accessTokenEntity?: AccessTokenEntity | null,\n        refreshTokenEntity?: RefreshTokenEntity | null,\n        appMetadataEntity?: AppMetadataEntity | null\n    ) {\n        this.account = accountEntity || null;\n        this.idToken = idTokenEntity || null;\n        this.accessToken = accessTokenEntity || null;\n        this.refreshToken = refreshTokenEntity || null;\n        this.appMetadata = appMetadataEntity || null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"@azure/msal-common\";\nimport * as BrowserConfigurationAuthErrorCodes from \"./BrowserConfigurationAuthErrorCodes\";\nexport { BrowserConfigurationAuthErrorCodes };\n\nexport const BrowserConfigurationAuthErrorMessages = {\n    [BrowserConfigurationAuthErrorCodes.storageNotSupported]:\n        \"Given storage configuration option was not supported.\",\n    [BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled]:\n        \"Stub instance of Public Client Application was called. If using msal-react, please ensure context is not used without a provider. For more visit: aka.ms/msaljs/browser-errors\",\n    [BrowserConfigurationAuthErrorCodes.inMemRedirectUnavailable]:\n        \"Redirect cannot be supported. In-memory storage was selected and storeAuthStateInCookie=false, which would cause the library to be unable to handle the incoming hash. If you would like to use the redirect API, please use session/localStorage or set storeAuthStateInCookie=true.\",\n};\n\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use BrowserAuthErrorCodes instead\n */\nexport const BrowserConfigurationAuthErrorMessage = {\n    storageNotSupportedError: {\n        code: BrowserConfigurationAuthErrorCodes.storageNotSupported,\n        desc: BrowserConfigurationAuthErrorMessages[\n            BrowserConfigurationAuthErrorCodes.storageNotSupported\n        ],\n    },\n    stubPcaInstanceCalled: {\n        code: BrowserConfigurationAuthErrorCodes.stubbedPublicClientApplicationCalled,\n        desc: BrowserConfigurationAuthErrorMessages[\n            BrowserConfigurationAuthErrorCodes\n                .stubbedPublicClientApplicationCalled\n        ],\n    },\n    inMemRedirectUnavailable: {\n        code: BrowserConfigurationAuthErrorCodes.inMemRedirectUnavailable,\n        desc: BrowserConfigurationAuthErrorMessages[\n            BrowserConfigurationAuthErrorCodes.inMemRedirectUnavailable\n        ],\n    },\n};\n\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nexport class BrowserConfigurationAuthError extends AuthError {\n    constructor(errorCode: string, errorMessage?: string) {\n        super(errorCode, errorMessage);\n        this.name = \"BrowserConfigurationAuthError\";\n\n        Object.setPrototypeOf(this, BrowserConfigurationAuthError.prototype);\n    }\n}\n\nexport function createBrowserConfigurationAuthError(\n    errorCode: string\n): BrowserConfigurationAuthError {\n    return new BrowserConfigurationAuthError(\n        errorCode,\n        BrowserConfigurationAuthErrorMessages[errorCode]\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    BrowserConfigurationAuthErrorCodes,\n    createBrowserConfigurationAuthError,\n} from \"../error/BrowserConfigurationAuthError\";\nimport { BrowserCacheLocation } from \"../utils/BrowserConstants\";\nimport { IWindowStorage } from \"./IWindowStorage\";\n\nexport class BrowserStorage implements IWindowStorage<string> {\n    private windowStorage: Storage;\n\n    constructor(cacheLocation: string) {\n        this.validateWindowStorage(cacheLocation);\n        this.windowStorage = window[cacheLocation];\n    }\n\n    private validateWindowStorage(cacheLocation: string): void {\n        if (\n            (cacheLocation !== BrowserCacheLocation.LocalStorage &&\n                cacheLocation !== BrowserCacheLocation.SessionStorage) ||\n            !window[cacheLocation]\n        ) {\n            throw createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.storageNotSupported\n            );\n        }\n    }\n\n    getItem(key: string): string | null {\n        return this.windowStorage.getItem(key);\n    }\n\n    setItem(key: string, value: string): void {\n        this.windowStorage.setItem(key, value);\n    }\n\n    removeItem(key: string): void {\n        this.windowStorage.removeItem(key);\n    }\n\n    getKeys(): string[] {\n        return Object.keys(this.windowStorage);\n    }\n\n    containsKey(key: string): boolean {\n        return this.windowStorage.hasOwnProperty(key);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { InteractionType } from \"./BrowserConstants\";\nimport {\n    ICrypto,\n    RequestStateObject,\n    ProtocolUtils,\n    ServerAuthorizationCodeResponse,\n    UrlString,\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"@azure/msal-common\";\n\nexport type BrowserStateObject = {\n    interactionType: InteractionType;\n};\n\nexport class BrowserProtocolUtils {\n    /**\n     * Extracts the BrowserStateObject from the state string.\n     * @param browserCrypto\n     * @param state\n     */\n    static extractBrowserRequestState(\n        browserCrypto: ICrypto,\n        state: string\n    ): BrowserStateObject | null {\n        if (!state) {\n            return null;\n        }\n\n        try {\n            const requestStateObj: RequestStateObject =\n                ProtocolUtils.parseRequestState(browserCrypto, state);\n            return requestStateObj.libraryState.meta as BrowserStateObject;\n        } catch (e) {\n            throw createClientAuthError(ClientAuthErrorCodes.invalidState);\n        }\n    }\n\n    /**\n     * Parses properties of server response from url hash\n     * @param locationHash Hash from url\n     */\n    static parseServerResponseFromHash(\n        locationHash: string\n    ): ServerAuthorizationCodeResponse {\n        if (!locationHash) {\n            return {};\n        }\n\n        const hashUrlString = new UrlString(locationHash);\n        return UrlString.getDeserializedHash(hashUrlString.getHash());\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    Constants,\n    PersistentCacheKeys,\n    StringUtils,\n    CommonAuthorizationCodeRequest,\n    ICrypto,\n    AccountEntity,\n    IdTokenEntity,\n    AccessTokenEntity,\n    RefreshTokenEntity,\n    AppMetadataEntity,\n    CacheManager,\n    ServerTelemetryEntity,\n    ThrottlingEntity,\n    ProtocolUtils,\n    Logger,\n    AuthorityMetadataEntity,\n    DEFAULT_CRYPTO_IMPLEMENTATION,\n    AccountInfo,\n    ActiveAccountFilters,\n    CcsCredential,\n    CcsCredentialType,\n    AuthToken,\n    ValidCredentialType,\n    TokenKeys,\n    CredentialType,\n    CacheRecord,\n    AuthenticationScheme,\n    createClientAuthError,\n    ClientAuthErrorCodes,\n    PerformanceEvents,\n    IPerformanceClient,\n} from \"@azure/msal-common\";\nimport { CacheOptions } from \"../config/Configuration\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport {\n    BrowserCacheLocation,\n    InteractionType,\n    TemporaryCacheKeys,\n    InMemoryCacheKeys,\n    StaticCacheKeys,\n} from \"../utils/BrowserConstants\";\nimport { BrowserStorage } from \"./BrowserStorage\";\nimport { MemoryStorage } from \"./MemoryStorage\";\nimport { IWindowStorage } from \"./IWindowStorage\";\nimport { BrowserProtocolUtils } from \"../utils/BrowserProtocolUtils\";\nimport { NativeTokenRequest } from \"../broker/nativeBroker/NativeRequest\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { base64Decode } from \"../encode/Base64Decode\";\nimport { base64Encode } from \"../encode/Base64Encode\";\n\n/**\n * This class implements the cache storage interface for MSAL through browser local or session storage.\n * Cookies are only used if storeAuthStateInCookie is true, and are only used for\n * parameters such as state and nonce, generally.\n */\nexport class BrowserCacheManager extends CacheManager {\n    // Cache configuration, either set by user or default values.\n    protected cacheConfig: Required<CacheOptions>;\n    // Window storage object (either local or sessionStorage)\n    protected browserStorage: IWindowStorage<string>;\n    // Internal in-memory storage object used for data used by msal that does not need to persist across page loads\n    protected internalStorage: MemoryStorage<string>;\n    // Temporary cache\n    protected temporaryCacheStorage: IWindowStorage<string>;\n    // Logger instance\n    protected logger: Logger;\n\n    // Cookie life calculation (hours * minutes * seconds * ms)\n    protected readonly COOKIE_LIFE_MULTIPLIER = 24 * 60 * 60 * 1000;\n\n    constructor(\n        clientId: string,\n        cacheConfig: Required<CacheOptions>,\n        cryptoImpl: ICrypto,\n        logger: Logger\n    ) {\n        super(clientId, cryptoImpl, logger);\n        this.cacheConfig = cacheConfig;\n        this.logger = logger;\n        this.internalStorage = new MemoryStorage();\n        this.browserStorage = this.setupBrowserStorage(\n            this.cacheConfig.cacheLocation\n        );\n        this.temporaryCacheStorage = this.setupTemporaryCacheStorage(\n            this.cacheConfig.temporaryCacheLocation,\n            this.cacheConfig.cacheLocation\n        );\n\n        // Migrate cache entries from older versions of MSAL.\n        if (cacheConfig.cacheMigrationEnabled) {\n            this.migrateCacheEntries();\n            this.createKeyMaps();\n        }\n    }\n\n    /**\n     * Returns a window storage class implementing the IWindowStorage interface that corresponds to the configured cacheLocation.\n     * @param cacheLocation\n     */\n    protected setupBrowserStorage(\n        cacheLocation: BrowserCacheLocation | string\n    ): IWindowStorage<string> {\n        switch (cacheLocation) {\n            case BrowserCacheLocation.LocalStorage:\n            case BrowserCacheLocation.SessionStorage:\n                try {\n                    return new BrowserStorage(cacheLocation);\n                } catch (e) {\n                    this.logger.verbose(e as string);\n                    break;\n                }\n            case BrowserCacheLocation.MemoryStorage:\n            default:\n                break;\n        }\n        this.cacheConfig.cacheLocation = BrowserCacheLocation.MemoryStorage;\n        return new MemoryStorage();\n    }\n\n    /**\n     * Returns a window storage class implementing the IWindowStorage interface that corresponds to the configured temporaryCacheLocation.\n     * @param temporaryCacheLocation\n     * @param cacheLocation\n     */\n    protected setupTemporaryCacheStorage(\n        temporaryCacheLocation: BrowserCacheLocation | string,\n        cacheLocation: BrowserCacheLocation | string\n    ): IWindowStorage<string> {\n        switch (cacheLocation) {\n            case BrowserCacheLocation.LocalStorage:\n            case BrowserCacheLocation.SessionStorage:\n                try {\n                    // Temporary cache items will always be stored in session storage to mitigate problems caused by multiple tabs\n                    return new BrowserStorage(\n                        temporaryCacheLocation ||\n                            BrowserCacheLocation.SessionStorage\n                    );\n                } catch (e) {\n                    this.logger.verbose(e as string);\n                    return this.internalStorage;\n                }\n            case BrowserCacheLocation.MemoryStorage:\n            default:\n                return this.internalStorage;\n        }\n    }\n\n    /**\n     * Migrate all old cache entries to new schema. No rollback supported.\n     * @param storeAuthStateInCookie\n     */\n    protected migrateCacheEntries(): void {\n        const idTokenKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ID_TOKEN}`;\n        const clientInfoKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.CLIENT_INFO}`;\n        const errorKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ERROR}`;\n        const errorDescKey = `${Constants.CACHE_PREFIX}.${PersistentCacheKeys.ERROR_DESC}`;\n\n        const idTokenValue = this.browserStorage.getItem(idTokenKey);\n        const clientInfoValue = this.browserStorage.getItem(clientInfoKey);\n        const errorValue = this.browserStorage.getItem(errorKey);\n        const errorDescValue = this.browserStorage.getItem(errorDescKey);\n\n        const values = [\n            idTokenValue,\n            clientInfoValue,\n            errorValue,\n            errorDescValue,\n        ];\n        const keysToMigrate = [\n            PersistentCacheKeys.ID_TOKEN,\n            PersistentCacheKeys.CLIENT_INFO,\n            PersistentCacheKeys.ERROR,\n            PersistentCacheKeys.ERROR_DESC,\n        ];\n\n        keysToMigrate.forEach((cacheKey: string, index: number) =>\n            this.migrateCacheEntry(cacheKey, values[index])\n        );\n    }\n\n    /**\n     * Utility function to help with migration.\n     * @param newKey\n     * @param value\n     * @param storeAuthStateInCookie\n     */\n    protected migrateCacheEntry(newKey: string, value: string | null): void {\n        if (value) {\n            this.setTemporaryCache(newKey, value, true);\n        }\n    }\n\n    /**\n     * Searches all cache entries for MSAL accounts and creates the account key map\n     * This is used to migrate users from older versions of MSAL which did not create the map.\n     * @returns\n     */\n    private createKeyMaps(): void {\n        this.logger.trace(\"BrowserCacheManager - createKeyMaps called.\");\n        const accountKeys = this.getItem(StaticCacheKeys.ACCOUNT_KEYS);\n        const tokenKeys = this.getItem(\n            `${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`\n        );\n        if (accountKeys && tokenKeys) {\n            this.logger.verbose(\n                \"BrowserCacheManager:createKeyMaps - account and token key maps already exist, skipping migration.\"\n            );\n            // Key maps already exist, no need to iterate through cache\n            return;\n        }\n\n        const allKeys = this.browserStorage.getKeys();\n        allKeys.forEach((key) => {\n            if (this.isCredentialKey(key)) {\n                // Get item, parse, validate and write key to map\n                const value = this.getItem(key);\n                if (value) {\n                    const credObj = this.validateAndParseJson(value);\n                    if (credObj && credObj.hasOwnProperty(\"credentialType\")) {\n                        switch (credObj[\"credentialType\"]) {\n                            case CredentialType.ID_TOKEN:\n                                if (IdTokenEntity.isIdTokenEntity(credObj)) {\n                                    this.logger.trace(\n                                        \"BrowserCacheManager:createKeyMaps - idToken found, saving key to token key map\"\n                                    );\n                                    this.logger.tracePii(\n                                        `BrowserCacheManager:createKeyMaps - idToken with key: ${key} found, saving key to token key map`\n                                    );\n                                    const idTokenEntity = CacheManager.toObject(\n                                        new IdTokenEntity(),\n                                        credObj\n                                    );\n                                    const newKey =\n                                        this.updateCredentialCacheKey(\n                                            key,\n                                            idTokenEntity\n                                        );\n                                    this.addTokenKey(\n                                        newKey,\n                                        CredentialType.ID_TOKEN\n                                    );\n                                    return;\n                                } else {\n                                    this.logger.trace(\n                                        \"BrowserCacheManager:createKeyMaps - key found matching idToken schema with value containing idToken credentialType field but value failed IdTokenEntity validation, skipping.\"\n                                    );\n                                    this.logger.tracePii(\n                                        `BrowserCacheManager:createKeyMaps - failed idToken validation on key: ${key}`\n                                    );\n                                }\n                                break;\n                            case CredentialType.ACCESS_TOKEN:\n                            case CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME:\n                                if (\n                                    AccessTokenEntity.isAccessTokenEntity(\n                                        credObj\n                                    )\n                                ) {\n                                    this.logger.trace(\n                                        \"BrowserCacheManager:createKeyMaps - accessToken found, saving key to token key map\"\n                                    );\n                                    this.logger.tracePii(\n                                        `BrowserCacheManager:createKeyMaps - accessToken with key: ${key} found, saving key to token key map`\n                                    );\n                                    const accessTokenEntity =\n                                        CacheManager.toObject(\n                                            new AccessTokenEntity(),\n                                            credObj\n                                        );\n                                    const newKey =\n                                        this.updateCredentialCacheKey(\n                                            key,\n                                            accessTokenEntity\n                                        );\n                                    this.addTokenKey(\n                                        newKey,\n                                        CredentialType.ACCESS_TOKEN\n                                    );\n                                    return;\n                                } else {\n                                    this.logger.trace(\n                                        \"BrowserCacheManager:createKeyMaps - key found matching accessToken schema with value containing accessToken credentialType field but value failed AccessTokenEntity validation, skipping.\"\n                                    );\n                                    this.logger.tracePii(\n                                        `BrowserCacheManager:createKeyMaps - failed accessToken validation on key: ${key}`\n                                    );\n                                }\n                                break;\n                            case CredentialType.REFRESH_TOKEN:\n                                if (\n                                    RefreshTokenEntity.isRefreshTokenEntity(\n                                        credObj\n                                    )\n                                ) {\n                                    this.logger.trace(\n                                        \"BrowserCacheManager:createKeyMaps - refreshToken found, saving key to token key map\"\n                                    );\n                                    this.logger.tracePii(\n                                        `BrowserCacheManager:createKeyMaps - refreshToken with key: ${key} found, saving key to token key map`\n                                    );\n                                    const refreshTokenEntity =\n                                        CacheManager.toObject(\n                                            new RefreshTokenEntity(),\n                                            credObj\n                                        );\n                                    const newKey =\n                                        this.updateCredentialCacheKey(\n                                            key,\n                                            refreshTokenEntity\n                                        );\n                                    this.addTokenKey(\n                                        newKey,\n                                        CredentialType.REFRESH_TOKEN\n                                    );\n                                    return;\n                                } else {\n                                    this.logger.trace(\n                                        \"BrowserCacheManager:createKeyMaps - key found matching refreshToken schema with value containing refreshToken credentialType field but value failed RefreshTokenEntity validation, skipping.\"\n                                    );\n                                    this.logger.tracePii(\n                                        `BrowserCacheManager:createKeyMaps - failed refreshToken validation on key: ${key}`\n                                    );\n                                }\n                                break;\n                            default:\n                            // If credentialType isn't one of our predefined ones, it may not be an MSAL cache value. Ignore.\n                        }\n                    }\n                }\n            }\n\n            if (this.isAccountKey(key)) {\n                const value = this.getItem(key);\n                if (value) {\n                    const accountObj = this.validateAndParseJson(value);\n                    if (\n                        accountObj &&\n                        AccountEntity.isAccountEntity(accountObj)\n                    ) {\n                        this.logger.trace(\n                            \"BrowserCacheManager:createKeyMaps - account found, saving key to account key map\"\n                        );\n                        this.logger.tracePii(\n                            `BrowserCacheManager:createKeyMaps - account with key: ${key} found, saving key to account key map`\n                        );\n                        this.addAccountKeyToMap(key);\n                    }\n                }\n            }\n        });\n    }\n\n    /**\n     * Parses passed value as JSON object, JSON.parse() will throw an error.\n     * @param input\n     */\n    protected validateAndParseJson(jsonValue: string): object | null {\n        try {\n            const parsedJson = JSON.parse(jsonValue);\n            /**\n             * There are edge cases in which JSON.parse will successfully parse a non-valid JSON object\n             * (e.g. JSON.parse will parse an escaped string into an unescaped string), so adding a type check\n             * of the parsed value is necessary in order to be certain that the string represents a valid JSON object.\n             *\n             */\n            return parsedJson && typeof parsedJson === \"object\"\n                ? parsedJson\n                : null;\n        } catch (error) {\n            return null;\n        }\n    }\n\n    /**\n     * fetches the entry from the browser storage based off the key\n     * @param key\n     */\n    getItem(key: string): string | null {\n        return this.browserStorage.getItem(key);\n    }\n\n    /**\n     * sets the entry in the browser storage\n     * @param key\n     * @param value\n     */\n    setItem(key: string, value: string): void {\n        this.browserStorage.setItem(key, value);\n    }\n\n    /**\n     * fetch the account entity from the platform cache\n     * @param accountKey\n     */\n    getAccount(accountKey: string): AccountEntity | null {\n        this.logger.trace(\"BrowserCacheManager.getAccount called\");\n        const account = this.getItem(accountKey);\n        if (!account) {\n            this.removeAccountKeyFromMap(accountKey);\n            return null;\n        }\n\n        const parsedAccount = this.validateAndParseJson(account);\n        if (!parsedAccount || !AccountEntity.isAccountEntity(parsedAccount)) {\n            this.removeAccountKeyFromMap(accountKey);\n            return null;\n        }\n\n        return CacheManager.toObject<AccountEntity>(\n            new AccountEntity(),\n            parsedAccount\n        );\n    }\n\n    /**\n     * set account entity in the platform cache\n     * @param account\n     */\n    setAccount(account: AccountEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setAccount called\");\n        const key = account.generateAccountKey();\n        this.setItem(key, JSON.stringify(account));\n        this.addAccountKeyToMap(key);\n    }\n\n    /**\n     * Returns the array of account keys currently cached\n     * @returns\n     */\n    getAccountKeys(): Array<string> {\n        this.logger.trace(\"BrowserCacheManager.getAccountKeys called\");\n        const accountKeys = this.getItem(StaticCacheKeys.ACCOUNT_KEYS);\n        if (accountKeys) {\n            return JSON.parse(accountKeys);\n        }\n\n        this.logger.verbose(\n            \"BrowserCacheManager.getAccountKeys - No account keys found\"\n        );\n        return [];\n    }\n\n    /**\n     * Add a new account to the key map\n     * @param key\n     */\n    addAccountKeyToMap(key: string): void {\n        this.logger.trace(\"BrowserCacheManager.addAccountKeyToMap called\");\n        this.logger.tracePii(\n            `BrowserCacheManager.addAccountKeyToMap called with key: ${key}`\n        );\n        const accountKeys = this.getAccountKeys();\n        if (accountKeys.indexOf(key) === -1) {\n            // Only add key if it does not already exist in the map\n            accountKeys.push(key);\n            this.setItem(\n                StaticCacheKeys.ACCOUNT_KEYS,\n                JSON.stringify(accountKeys)\n            );\n            this.logger.verbose(\n                \"BrowserCacheManager.addAccountKeyToMap account key added\"\n            );\n        } else {\n            this.logger.verbose(\n                \"BrowserCacheManager.addAccountKeyToMap account key already exists in map\"\n            );\n        }\n    }\n\n    /**\n     * Remove an account from the key map\n     * @param key\n     */\n    removeAccountKeyFromMap(key: string): void {\n        this.logger.trace(\"BrowserCacheManager.removeAccountKeyFromMap called\");\n        this.logger.tracePii(\n            `BrowserCacheManager.removeAccountKeyFromMap called with key: ${key}`\n        );\n        const accountKeys = this.getAccountKeys();\n        const removalIndex = accountKeys.indexOf(key);\n        if (removalIndex > -1) {\n            accountKeys.splice(removalIndex, 1);\n            this.setItem(\n                StaticCacheKeys.ACCOUNT_KEYS,\n                JSON.stringify(accountKeys)\n            );\n            this.logger.trace(\n                \"BrowserCacheManager.removeAccountKeyFromMap account key removed\"\n            );\n        } else {\n            this.logger.trace(\n                \"BrowserCacheManager.removeAccountKeyFromMap key not found in existing map\"\n            );\n        }\n    }\n\n    /**\n     * Extends inherited removeAccount function to include removal of the account key from the map\n     * @param key\n     */\n    async removeAccount(key: string): Promise<void> {\n        void super.removeAccount(key);\n        this.removeAccountKeyFromMap(key);\n    }\n\n    /**\n     * Removes given idToken from the cache and from the key map\n     * @param key\n     */\n    removeIdToken(key: string): void {\n        super.removeIdToken(key);\n        this.removeTokenKey(key, CredentialType.ID_TOKEN);\n    }\n\n    /**\n     * Removes given accessToken from the cache and from the key map\n     * @param key\n     */\n    async removeAccessToken(key: string): Promise<void> {\n        void super.removeAccessToken(key);\n        this.removeTokenKey(key, CredentialType.ACCESS_TOKEN);\n    }\n\n    /**\n     * Removes given refreshToken from the cache and from the key map\n     * @param key\n     */\n    removeRefreshToken(key: string): void {\n        super.removeRefreshToken(key);\n        this.removeTokenKey(key, CredentialType.REFRESH_TOKEN);\n    }\n\n    /**\n     * Gets the keys for the cached tokens associated with this clientId\n     * @returns\n     */\n    getTokenKeys(): TokenKeys {\n        this.logger.trace(\"BrowserCacheManager.getTokenKeys called\");\n        const item = this.getItem(\n            `${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`\n        );\n        if (item) {\n            const tokenKeys = this.validateAndParseJson(item);\n            if (\n                tokenKeys &&\n                tokenKeys.hasOwnProperty(\"idToken\") &&\n                tokenKeys.hasOwnProperty(\"accessToken\") &&\n                tokenKeys.hasOwnProperty(\"refreshToken\")\n            ) {\n                return tokenKeys as TokenKeys;\n            } else {\n                this.logger.error(\n                    \"BrowserCacheManager.getTokenKeys - Token keys found but in an unknown format. Returning empty key map.\"\n                );\n            }\n        } else {\n            this.logger.verbose(\n                \"BrowserCacheManager.getTokenKeys - No token keys found\"\n            );\n        }\n\n        return {\n            idToken: [],\n            accessToken: [],\n            refreshToken: [],\n        };\n    }\n\n    /**\n     * Adds the given key to the token key map\n     * @param key\n     * @param type\n     */\n    addTokenKey(key: string, type: CredentialType): void {\n        this.logger.trace(\"BrowserCacheManager addTokenKey called\");\n        const tokenKeys = this.getTokenKeys();\n\n        switch (type) {\n            case CredentialType.ID_TOKEN:\n                if (tokenKeys.idToken.indexOf(key) === -1) {\n                    this.logger.info(\n                        \"BrowserCacheManager: addTokenKey - idToken added to map\"\n                    );\n                    tokenKeys.idToken.push(key);\n                }\n                break;\n            case CredentialType.ACCESS_TOKEN:\n                if (tokenKeys.accessToken.indexOf(key) === -1) {\n                    this.logger.info(\n                        \"BrowserCacheManager: addTokenKey - accessToken added to map\"\n                    );\n                    tokenKeys.accessToken.push(key);\n                }\n                break;\n            case CredentialType.REFRESH_TOKEN:\n                if (tokenKeys.refreshToken.indexOf(key) === -1) {\n                    this.logger.info(\n                        \"BrowserCacheManager: addTokenKey - refreshToken added to map\"\n                    );\n                    tokenKeys.refreshToken.push(key);\n                }\n                break;\n            default:\n                this.logger.error(\n                    `BrowserCacheManager:addTokenKey - CredentialType provided invalid. CredentialType: ${type}`\n                );\n                throw createClientAuthError(\n                    ClientAuthErrorCodes.unexpectedCredentialType\n                );\n        }\n\n        this.setItem(\n            `${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`,\n            JSON.stringify(tokenKeys)\n        );\n    }\n\n    /**\n     * Removes the given key from the token key map\n     * @param key\n     * @param type\n     */\n    removeTokenKey(key: string, type: CredentialType): void {\n        this.logger.trace(\"BrowserCacheManager removeTokenKey called\");\n        const tokenKeys = this.getTokenKeys();\n\n        switch (type) {\n            case CredentialType.ID_TOKEN:\n                this.logger.infoPii(\n                    `BrowserCacheManager: removeTokenKey - attempting to remove idToken with key: ${key} from map`\n                );\n                const idRemoval = tokenKeys.idToken.indexOf(key);\n                if (idRemoval > -1) {\n                    this.logger.info(\n                        \"BrowserCacheManager: removeTokenKey - idToken removed from map\"\n                    );\n                    tokenKeys.idToken.splice(idRemoval, 1);\n                } else {\n                    this.logger.info(\n                        \"BrowserCacheManager: removeTokenKey - idToken does not exist in map. Either it was previously removed or it was never added.\"\n                    );\n                }\n                break;\n            case CredentialType.ACCESS_TOKEN:\n                this.logger.infoPii(\n                    `BrowserCacheManager: removeTokenKey - attempting to remove accessToken with key: ${key} from map`\n                );\n                const accessRemoval = tokenKeys.accessToken.indexOf(key);\n                if (accessRemoval > -1) {\n                    this.logger.info(\n                        \"BrowserCacheManager: removeTokenKey - accessToken removed from map\"\n                    );\n                    tokenKeys.accessToken.splice(accessRemoval, 1);\n                } else {\n                    this.logger.info(\n                        \"BrowserCacheManager: removeTokenKey - accessToken does not exist in map. Either it was previously removed or it was never added.\"\n                    );\n                }\n                break;\n            case CredentialType.REFRESH_TOKEN:\n                this.logger.infoPii(\n                    `BrowserCacheManager: removeTokenKey - attempting to remove refreshToken with key: ${key} from map`\n                );\n                const refreshRemoval = tokenKeys.refreshToken.indexOf(key);\n                if (refreshRemoval > -1) {\n                    this.logger.info(\n                        \"BrowserCacheManager: removeTokenKey - refreshToken removed from map\"\n                    );\n                    tokenKeys.refreshToken.splice(refreshRemoval, 1);\n                } else {\n                    this.logger.info(\n                        \"BrowserCacheManager: removeTokenKey - refreshToken does not exist in map. Either it was previously removed or it was never added.\"\n                    );\n                }\n                break;\n            default:\n                this.logger.error(\n                    `BrowserCacheManager:removeTokenKey - CredentialType provided invalid. CredentialType: ${type}`\n                );\n                throw createClientAuthError(\n                    ClientAuthErrorCodes.unexpectedCredentialType\n                );\n        }\n\n        this.setItem(\n            `${StaticCacheKeys.TOKEN_KEYS}.${this.clientId}`,\n            JSON.stringify(tokenKeys)\n        );\n    }\n\n    /**\n     * generates idToken entity from a string\n     * @param idTokenKey\n     */\n    getIdTokenCredential(idTokenKey: string): IdTokenEntity | null {\n        const value = this.getItem(idTokenKey);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getIdTokenCredential: called, no cache hit\"\n            );\n            this.removeTokenKey(idTokenKey, CredentialType.ID_TOKEN);\n            return null;\n        }\n\n        const parsedIdToken = this.validateAndParseJson(value);\n        if (!parsedIdToken || !IdTokenEntity.isIdTokenEntity(parsedIdToken)) {\n            this.logger.trace(\n                \"BrowserCacheManager.getIdTokenCredential: called, no cache hit\"\n            );\n            this.removeTokenKey(idTokenKey, CredentialType.ID_TOKEN);\n            return null;\n        }\n\n        this.logger.trace(\n            \"BrowserCacheManager.getIdTokenCredential: cache hit\"\n        );\n        return CacheManager.toObject(new IdTokenEntity(), parsedIdToken);\n    }\n\n    /**\n     * set IdToken credential to the platform cache\n     * @param idToken\n     */\n    setIdTokenCredential(idToken: IdTokenEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setIdTokenCredential called\");\n        const idTokenKey = idToken.generateCredentialKey();\n\n        this.setItem(idTokenKey, JSON.stringify(idToken));\n\n        this.addTokenKey(idTokenKey, CredentialType.ID_TOKEN);\n    }\n\n    /**\n     * generates accessToken entity from a string\n     * @param key\n     */\n    getAccessTokenCredential(accessTokenKey: string): AccessTokenEntity | null {\n        const value = this.getItem(accessTokenKey);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\"\n            );\n            this.removeTokenKey(accessTokenKey, CredentialType.ACCESS_TOKEN);\n            return null;\n        }\n        const parsedAccessToken = this.validateAndParseJson(value);\n        if (\n            !parsedAccessToken ||\n            !AccessTokenEntity.isAccessTokenEntity(parsedAccessToken)\n        ) {\n            this.logger.trace(\n                \"BrowserCacheManager.getAccessTokenCredential: called, no cache hit\"\n            );\n            this.removeTokenKey(accessTokenKey, CredentialType.ACCESS_TOKEN);\n            return null;\n        }\n\n        this.logger.trace(\n            \"BrowserCacheManager.getAccessTokenCredential: cache hit\"\n        );\n        return CacheManager.toObject(\n            new AccessTokenEntity(),\n            parsedAccessToken\n        );\n    }\n\n    /**\n     * set accessToken credential to the platform cache\n     * @param accessToken\n     */\n    setAccessTokenCredential(accessToken: AccessTokenEntity): void {\n        this.logger.trace(\n            \"BrowserCacheManager.setAccessTokenCredential called\"\n        );\n        const accessTokenKey = accessToken.generateCredentialKey();\n        this.setItem(accessTokenKey, JSON.stringify(accessToken));\n\n        this.addTokenKey(accessTokenKey, CredentialType.ACCESS_TOKEN);\n    }\n\n    /**\n     * generates refreshToken entity from a string\n     * @param refreshTokenKey\n     */\n    getRefreshTokenCredential(\n        refreshTokenKey: string\n    ): RefreshTokenEntity | null {\n        const value = this.getItem(refreshTokenKey);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\"\n            );\n            this.removeTokenKey(refreshTokenKey, CredentialType.REFRESH_TOKEN);\n            return null;\n        }\n        const parsedRefreshToken = this.validateAndParseJson(value);\n        if (\n            !parsedRefreshToken ||\n            !RefreshTokenEntity.isRefreshTokenEntity(parsedRefreshToken)\n        ) {\n            this.logger.trace(\n                \"BrowserCacheManager.getRefreshTokenCredential: called, no cache hit\"\n            );\n            this.removeTokenKey(refreshTokenKey, CredentialType.REFRESH_TOKEN);\n            return null;\n        }\n\n        this.logger.trace(\n            \"BrowserCacheManager.getRefreshTokenCredential: cache hit\"\n        );\n        return CacheManager.toObject(\n            new RefreshTokenEntity(),\n            parsedRefreshToken\n        );\n    }\n\n    /**\n     * set refreshToken credential to the platform cache\n     * @param refreshToken\n     */\n    setRefreshTokenCredential(refreshToken: RefreshTokenEntity): void {\n        this.logger.trace(\n            \"BrowserCacheManager.setRefreshTokenCredential called\"\n        );\n        const refreshTokenKey = refreshToken.generateCredentialKey();\n        this.setItem(refreshTokenKey, JSON.stringify(refreshToken));\n\n        this.addTokenKey(refreshTokenKey, CredentialType.REFRESH_TOKEN);\n    }\n\n    /**\n     * fetch appMetadata entity from the platform cache\n     * @param appMetadataKey\n     */\n    getAppMetadata(appMetadataKey: string): AppMetadataEntity | null {\n        const value = this.getItem(appMetadataKey);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getAppMetadata: called, no cache hit\"\n            );\n            return null;\n        }\n\n        const parsedMetadata = this.validateAndParseJson(value);\n        if (\n            !parsedMetadata ||\n            !AppMetadataEntity.isAppMetadataEntity(\n                appMetadataKey,\n                parsedMetadata\n            )\n        ) {\n            this.logger.trace(\n                \"BrowserCacheManager.getAppMetadata: called, no cache hit\"\n            );\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getAppMetadata: cache hit\");\n        return CacheManager.toObject(new AppMetadataEntity(), parsedMetadata);\n    }\n\n    /**\n     * set appMetadata entity to the platform cache\n     * @param appMetadata\n     */\n    setAppMetadata(appMetadata: AppMetadataEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setAppMetadata called\");\n        const appMetadataKey = appMetadata.generateAppMetadataKey();\n        this.setItem(appMetadataKey, JSON.stringify(appMetadata));\n    }\n\n    /**\n     * fetch server telemetry entity from the platform cache\n     * @param serverTelemetryKey\n     */\n    getServerTelemetry(\n        serverTelemetryKey: string\n    ): ServerTelemetryEntity | null {\n        const value = this.getItem(serverTelemetryKey);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getServerTelemetry: called, no cache hit\"\n            );\n            return null;\n        }\n        const parsedMetadata = this.validateAndParseJson(value);\n        if (\n            !parsedMetadata ||\n            !ServerTelemetryEntity.isServerTelemetryEntity(\n                serverTelemetryKey,\n                parsedMetadata\n            )\n        ) {\n            this.logger.trace(\n                \"BrowserCacheManager.getServerTelemetry: called, no cache hit\"\n            );\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getServerTelemetry: cache hit\");\n        return CacheManager.toObject(\n            new ServerTelemetryEntity(),\n            parsedMetadata\n        );\n    }\n\n    /**\n     * set server telemetry entity to the platform cache\n     * @param serverTelemetryKey\n     * @param serverTelemetry\n     */\n    setServerTelemetry(\n        serverTelemetryKey: string,\n        serverTelemetry: ServerTelemetryEntity\n    ): void {\n        this.logger.trace(\"BrowserCacheManager.setServerTelemetry called\");\n        this.setItem(serverTelemetryKey, JSON.stringify(serverTelemetry));\n    }\n\n    /**\n     *\n     */\n    getAuthorityMetadata(key: string): AuthorityMetadataEntity | null {\n        const value = this.internalStorage.getItem(key);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getAuthorityMetadata: called, no cache hit\"\n            );\n            return null;\n        }\n        const parsedMetadata = this.validateAndParseJson(value);\n        if (\n            parsedMetadata &&\n            AuthorityMetadataEntity.isAuthorityMetadataEntity(\n                key,\n                parsedMetadata\n            )\n        ) {\n            this.logger.trace(\n                \"BrowserCacheManager.getAuthorityMetadata: cache hit\"\n            );\n            return CacheManager.toObject(\n                new AuthorityMetadataEntity(),\n                parsedMetadata\n            );\n        }\n        return null;\n    }\n\n    /**\n     *\n     */\n    getAuthorityMetadataKeys(): Array<string> {\n        const allKeys = this.internalStorage.getKeys();\n        return allKeys.filter((key) => {\n            return this.isAuthorityMetadata(key);\n        });\n    }\n\n    /**\n     * Sets wrapper metadata in memory\n     * @param wrapperSKU\n     * @param wrapperVersion\n     */\n    setWrapperMetadata(wrapperSKU: string, wrapperVersion: string): void {\n        this.internalStorage.setItem(InMemoryCacheKeys.WRAPPER_SKU, wrapperSKU);\n        this.internalStorage.setItem(\n            InMemoryCacheKeys.WRAPPER_VER,\n            wrapperVersion\n        );\n    }\n\n    /**\n     * Returns wrapper metadata from in-memory storage\n     */\n    getWrapperMetadata(): [string, string] {\n        const sku =\n            this.internalStorage.getItem(InMemoryCacheKeys.WRAPPER_SKU) ||\n            Constants.EMPTY_STRING;\n        const version =\n            this.internalStorage.getItem(InMemoryCacheKeys.WRAPPER_VER) ||\n            Constants.EMPTY_STRING;\n        return [sku, version];\n    }\n\n    /**\n     *\n     * @param entity\n     */\n    setAuthorityMetadata(key: string, entity: AuthorityMetadataEntity): void {\n        this.logger.trace(\"BrowserCacheManager.setAuthorityMetadata called\");\n        this.internalStorage.setItem(key, JSON.stringify(entity));\n    }\n\n    /**\n     * Gets the active account\n     */\n    getActiveAccount(): AccountInfo | null {\n        const activeAccountKeyFilters = this.generateCacheKey(\n            PersistentCacheKeys.ACTIVE_ACCOUNT_FILTERS\n        );\n        const activeAccountValueFilters = this.getItem(activeAccountKeyFilters);\n        if (!activeAccountValueFilters) {\n            // if new active account cache type isn't found, it's an old version, so look for that instead\n            this.logger.trace(\n                \"BrowserCacheManager.getActiveAccount: No active account filters cache schema found, looking for legacy schema\"\n            );\n            const activeAccountKeyLocal = this.generateCacheKey(\n                PersistentCacheKeys.ACTIVE_ACCOUNT\n            );\n            const activeAccountValueLocal = this.getItem(activeAccountKeyLocal);\n            if (!activeAccountValueLocal) {\n                this.logger.trace(\n                    \"BrowserCacheManager.getActiveAccount: No active account found\"\n                );\n                return null;\n            }\n            const activeAccount =\n                this.getAccountInfoByFilter({\n                    localAccountId: activeAccountValueLocal,\n                })[0] || null;\n            if (activeAccount) {\n                this.logger.trace(\n                    \"BrowserCacheManager.getActiveAccount: Legacy active account cache schema found\"\n                );\n                this.logger.trace(\n                    \"BrowserCacheManager.getActiveAccount: Adding active account filters cache schema\"\n                );\n                this.setActiveAccount(activeAccount);\n                return activeAccount;\n            }\n            return null;\n        }\n        const activeAccountValueObj = this.validateAndParseJson(\n            activeAccountValueFilters\n        ) as AccountInfo;\n        if (activeAccountValueObj) {\n            this.logger.trace(\n                \"BrowserCacheManager.getActiveAccount: Active account filters schema found\"\n            );\n            return (\n                this.getAccountInfoByFilter({\n                    homeAccountId: activeAccountValueObj.homeAccountId,\n                    localAccountId: activeAccountValueObj.localAccountId,\n                })[0] || null\n            );\n        }\n        this.logger.trace(\n            \"BrowserCacheManager.getActiveAccount: No active account found\"\n        );\n        return null;\n    }\n\n    /**\n     * Sets the active account's localAccountId in cache\n     * @param account\n     */\n    setActiveAccount(account: AccountInfo | null): void {\n        const activeAccountKey = this.generateCacheKey(\n            PersistentCacheKeys.ACTIVE_ACCOUNT_FILTERS\n        );\n        const activeAccountKeyLocal = this.generateCacheKey(\n            PersistentCacheKeys.ACTIVE_ACCOUNT\n        );\n        if (account) {\n            this.logger.verbose(\"setActiveAccount: Active account set\");\n            const activeAccountValue: ActiveAccountFilters = {\n                homeAccountId: account.homeAccountId,\n                localAccountId: account.localAccountId,\n            };\n            this.browserStorage.setItem(\n                activeAccountKey,\n                JSON.stringify(activeAccountValue)\n            );\n            this.browserStorage.setItem(\n                activeAccountKeyLocal,\n                account.localAccountId\n            );\n        } else {\n            this.logger.verbose(\n                \"setActiveAccount: No account passed, active account not set\"\n            );\n            this.browserStorage.removeItem(activeAccountKey);\n            this.browserStorage.removeItem(activeAccountKeyLocal);\n        }\n    }\n\n    /**\n     * Gets a list of accounts that match all of the filters provided\n     * @param account\n     */\n    getAccountInfoByFilter(\n        accountFilter: Partial<Omit<AccountInfo, \"idTokenClaims\" | \"name\">>\n    ): AccountInfo[] {\n        const allAccounts = this.getAllAccounts();\n        this.logger.trace(\n            `BrowserCacheManager.getAccountInfoByFilter: total ${allAccounts.length} accounts found`\n        );\n\n        return allAccounts.filter((accountObj) => {\n            if (\n                accountFilter.username &&\n                accountFilter.username.toLowerCase() !==\n                    accountObj.username.toLowerCase()\n            ) {\n                return false;\n            }\n\n            if (\n                accountFilter.homeAccountId &&\n                accountFilter.homeAccountId !== accountObj.homeAccountId\n            ) {\n                return false;\n            }\n\n            if (\n                accountFilter.localAccountId &&\n                accountFilter.localAccountId !== accountObj.localAccountId\n            ) {\n                return false;\n            }\n\n            if (\n                accountFilter.tenantId &&\n                accountFilter.tenantId !== accountObj.tenantId\n            ) {\n                return false;\n            }\n\n            if (\n                accountFilter.environment &&\n                accountFilter.environment !== accountObj.environment\n            ) {\n                return false;\n            }\n\n            return true;\n        });\n    }\n\n    /**\n     * Checks the cache for accounts matching loginHint or SID\n     * @param loginHint\n     * @param sid\n     */\n    getAccountInfoByHints(\n        loginHint?: string,\n        sid?: string\n    ): AccountInfo | null {\n        const matchingAccounts = this.getAllAccounts().filter((accountInfo) => {\n            if (sid) {\n                const accountSid =\n                    accountInfo.idTokenClaims &&\n                    accountInfo.idTokenClaims[\"sid\"];\n                return sid === accountSid;\n            }\n\n            if (loginHint) {\n                return loginHint === accountInfo.username;\n            }\n\n            return false;\n        });\n\n        if (matchingAccounts.length === 1) {\n            return matchingAccounts[0];\n        } else if (matchingAccounts.length > 1) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.multipleMatchingAccounts\n            );\n        }\n\n        return null;\n    }\n\n    /**\n     * fetch throttling entity from the platform cache\n     * @param throttlingCacheKey\n     */\n    getThrottlingCache(throttlingCacheKey: string): ThrottlingEntity | null {\n        const value = this.getItem(throttlingCacheKey);\n        if (!value) {\n            this.logger.trace(\n                \"BrowserCacheManager.getThrottlingCache: called, no cache hit\"\n            );\n            return null;\n        }\n\n        const parsedThrottlingCache = this.validateAndParseJson(value);\n        if (\n            !parsedThrottlingCache ||\n            !ThrottlingEntity.isThrottlingEntity(\n                throttlingCacheKey,\n                parsedThrottlingCache\n            )\n        ) {\n            this.logger.trace(\n                \"BrowserCacheManager.getThrottlingCache: called, no cache hit\"\n            );\n            return null;\n        }\n\n        this.logger.trace(\"BrowserCacheManager.getThrottlingCache: cache hit\");\n        return CacheManager.toObject(\n            new ThrottlingEntity(),\n            parsedThrottlingCache\n        );\n    }\n\n    /**\n     * set throttling entity to the platform cache\n     * @param throttlingCacheKey\n     * @param throttlingCache\n     */\n    setThrottlingCache(\n        throttlingCacheKey: string,\n        throttlingCache: ThrottlingEntity\n    ): void {\n        this.logger.trace(\"BrowserCacheManager.setThrottlingCache called\");\n        this.setItem(throttlingCacheKey, JSON.stringify(throttlingCache));\n    }\n\n    /**\n     * Gets cache item with given key.\n     * Will retrieve from cookies if storeAuthStateInCookie is set to true.\n     * @param key\n     */\n    getTemporaryCache(cacheKey: string, generateKey?: boolean): string | null {\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            const itemCookie = this.getItemCookie(key);\n            if (itemCookie) {\n                this.logger.trace(\n                    \"BrowserCacheManager.getTemporaryCache: storeAuthStateInCookies set to true, retrieving from cookies\"\n                );\n                return itemCookie;\n            }\n        }\n\n        const value = this.temporaryCacheStorage.getItem(key);\n        if (!value) {\n            // If temp cache item not found in session/memory, check local storage for items set by old versions\n            if (\n                this.cacheConfig.cacheLocation ===\n                BrowserCacheLocation.LocalStorage\n            ) {\n                const item = this.browserStorage.getItem(key);\n                if (item) {\n                    this.logger.trace(\n                        \"BrowserCacheManager.getTemporaryCache: Temporary cache item found in local storage\"\n                    );\n                    return item;\n                }\n            }\n            this.logger.trace(\n                \"BrowserCacheManager.getTemporaryCache: No cache item found in local storage\"\n            );\n            return null;\n        }\n        this.logger.trace(\n            \"BrowserCacheManager.getTemporaryCache: Temporary cache item returned\"\n        );\n        return value;\n    }\n\n    /**\n     * Sets the cache item with the key and value given.\n     * Stores in cookie if storeAuthStateInCookie is set to true.\n     * This can cause cookie overflow if used incorrectly.\n     * @param key\n     * @param value\n     */\n    setTemporaryCache(\n        cacheKey: string,\n        value: string,\n        generateKey?: boolean\n    ): void {\n        const key = generateKey ? this.generateCacheKey(cacheKey) : cacheKey;\n\n        this.temporaryCacheStorage.setItem(key, value);\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            this.logger.trace(\n                \"BrowserCacheManager.setTemporaryCache: storeAuthStateInCookie set to true, setting item cookie\"\n            );\n            this.setItemCookie(key, value);\n        }\n    }\n\n    /**\n     * Removes the cache item with the given key.\n     * Will also clear the cookie item if storeAuthStateInCookie is set to true.\n     * @param key\n     */\n    removeItem(key: string): void {\n        this.browserStorage.removeItem(key);\n        this.temporaryCacheStorage.removeItem(key);\n        if (this.cacheConfig.storeAuthStateInCookie) {\n            this.logger.trace(\n                \"BrowserCacheManager.removeItem: storeAuthStateInCookie is true, clearing item cookie\"\n            );\n            this.clearItemCookie(key);\n        }\n    }\n\n    /**\n     * Checks whether key is in cache.\n     * @param key\n     */\n    containsKey(key: string): boolean {\n        return (\n            this.browserStorage.containsKey(key) ||\n            this.temporaryCacheStorage.containsKey(key)\n        );\n    }\n\n    /**\n     * Gets all keys in window.\n     */\n    getKeys(): string[] {\n        return [\n            ...this.browserStorage.getKeys(),\n            ...this.temporaryCacheStorage.getKeys(),\n        ];\n    }\n\n    /**\n     * Clears all cache entries created by MSAL.\n     */\n    async clear(): Promise<void> {\n        // Removes all accounts and their credentials\n        await this.removeAllAccounts();\n        this.removeAppMetadata();\n\n        // Removes all remaining MSAL cache items\n        this.getKeys().forEach((cacheKey: string) => {\n            // Check if key contains msal prefix; For now, we are clearing all the cache items created by MSAL.js\n            if (\n                (this.browserStorage.containsKey(cacheKey) ||\n                    this.temporaryCacheStorage.containsKey(cacheKey)) &&\n                (cacheKey.indexOf(Constants.CACHE_PREFIX) !== -1 ||\n                    cacheKey.indexOf(this.clientId) !== -1)\n            ) {\n                this.removeItem(cacheKey);\n            }\n        });\n\n        this.internalStorage.clear();\n    }\n\n    /**\n     * Clears all access tokes that have claims prior to saving the current one\n     * @param performanceClient {IPerformanceClient}\n     * @returns\n     */\n    async clearTokensAndKeysWithClaims(\n        performanceClient: IPerformanceClient\n    ): Promise<void> {\n        performanceClient.addQueueMeasurement(\n            PerformanceEvents.ClearTokensAndKeysWithClaims\n        );\n\n        const tokenKeys = this.getTokenKeys();\n\n        const removedAccessTokens: Array<Promise<void>> = [];\n        tokenKeys.accessToken.forEach((key: string) => {\n            // if the access token has claims in its key, remove the token key and the token\n            const credential = this.getAccessTokenCredential(key);\n            if (\n                credential?.requestedClaimsHash &&\n                key.includes(credential.requestedClaimsHash.toLowerCase())\n            ) {\n                removedAccessTokens.push(this.removeAccessToken(key));\n            }\n        });\n        await Promise.all(removedAccessTokens);\n\n        // warn if any access tokens are removed\n        if (removedAccessTokens.length > 0) {\n            this.logger.warning(\n                `${removedAccessTokens.length} access tokens with claims in the cache keys have been removed from the cache.`\n            );\n        }\n    }\n\n    /**\n     * Add value to cookies\n     * @param cookieName\n     * @param cookieValue\n     * @param expires\n     */\n    setItemCookie(\n        cookieName: string,\n        cookieValue: string,\n        expires?: number\n    ): void {\n        let cookieStr = `${encodeURIComponent(cookieName)}=${encodeURIComponent(\n            cookieValue\n        )};path=/;SameSite=Lax;`;\n        if (expires) {\n            const expireTime = this.getCookieExpirationTime(expires);\n            cookieStr += `expires=${expireTime};`;\n        }\n\n        if (this.cacheConfig.secureCookies) {\n            cookieStr += \"Secure;\";\n        }\n\n        document.cookie = cookieStr;\n    }\n\n    /**\n     * Get one item by key from cookies\n     * @param cookieName\n     */\n    getItemCookie(cookieName: string): string {\n        const name = `${encodeURIComponent(cookieName)}=`;\n        const cookieList = document.cookie.split(\";\");\n        for (let i: number = 0; i < cookieList.length; i++) {\n            let cookie = cookieList[i];\n            while (cookie.charAt(0) === \" \") {\n                cookie = cookie.substring(1);\n            }\n            if (cookie.indexOf(name) === 0) {\n                return decodeURIComponent(\n                    cookie.substring(name.length, cookie.length)\n                );\n            }\n        }\n        return Constants.EMPTY_STRING;\n    }\n\n    /**\n     * Clear all msal-related cookies currently set in the browser. Should only be used to clear temporary cache items.\n     */\n    clearMsalCookies(): void {\n        const cookiePrefix = `${Constants.CACHE_PREFIX}.${this.clientId}`;\n        const cookieList = document.cookie.split(\";\");\n        cookieList.forEach((cookie: string): void => {\n            while (cookie.charAt(0) === \" \") {\n                // eslint-disable-next-line no-param-reassign\n                cookie = cookie.substring(1);\n            }\n            if (cookie.indexOf(cookiePrefix) === 0) {\n                const cookieKey = cookie.split(\"=\")[0];\n                this.clearItemCookie(cookieKey);\n            }\n        });\n    }\n\n    /**\n     * Clear an item in the cookies by key\n     * @param cookieName\n     */\n    clearItemCookie(cookieName: string): void {\n        this.setItemCookie(cookieName, Constants.EMPTY_STRING, -1);\n    }\n\n    /**\n     * Get cookie expiration time\n     * @param cookieLifeDays\n     */\n    getCookieExpirationTime(cookieLifeDays: number): string {\n        const today = new Date();\n        const expr = new Date(\n            today.getTime() + cookieLifeDays * this.COOKIE_LIFE_MULTIPLIER\n        );\n        return expr.toUTCString();\n    }\n\n    /**\n     * Gets the cache object referenced by the browser\n     */\n    getCache(): object {\n        return this.browserStorage;\n    }\n\n    /**\n     * interface compat, we cannot overwrite browser cache; Functionality is supported by individual entities in browser\n     */\n    setCache(): void {\n        // sets nothing\n    }\n\n    /**\n     * Prepend msal.<client-id> to each key; Skip for any JSON object as Key (defined schemas do not need the key appended: AccessToken Keys or the upcoming schema)\n     * @param key\n     * @param addInstanceId\n     */\n    generateCacheKey(key: string): string {\n        const generatedKey = this.validateAndParseJson(key);\n        if (!generatedKey) {\n            if (\n                StringUtils.startsWith(key, Constants.CACHE_PREFIX) ||\n                StringUtils.startsWith(key, PersistentCacheKeys.ADAL_ID_TOKEN)\n            ) {\n                return key;\n            }\n            return `${Constants.CACHE_PREFIX}.${this.clientId}.${key}`;\n        }\n\n        return JSON.stringify(key);\n    }\n\n    /**\n     * Create authorityKey to cache authority\n     * @param state\n     */\n    generateAuthorityKey(stateString: string): string {\n        const {\n            libraryState: { id: stateId },\n        } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\n\n        return this.generateCacheKey(\n            `${TemporaryCacheKeys.AUTHORITY}.${stateId}`\n        );\n    }\n\n    /**\n     * Create Nonce key to cache nonce\n     * @param state\n     */\n    generateNonceKey(stateString: string): string {\n        const {\n            libraryState: { id: stateId },\n        } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\n\n        return this.generateCacheKey(\n            `${TemporaryCacheKeys.NONCE_IDTOKEN}.${stateId}`\n        );\n    }\n\n    /**\n     * Creates full cache key for the request state\n     * @param stateString State string for the request\n     */\n    generateStateKey(stateString: string): string {\n        // Use the library state id to key temp storage for uniqueness for multiple concurrent requests\n        const {\n            libraryState: { id: stateId },\n        } = ProtocolUtils.parseRequestState(this.cryptoImpl, stateString);\n        return this.generateCacheKey(\n            `${TemporaryCacheKeys.REQUEST_STATE}.${stateId}`\n        );\n    }\n\n    /**\n     * Gets the cached authority based on the cached state. Returns empty if no cached state found.\n     */\n    getCachedAuthority(cachedState: string): string | null {\n        const stateCacheKey = this.generateStateKey(cachedState);\n        const state = this.getTemporaryCache(stateCacheKey);\n        if (!state) {\n            return null;\n        }\n\n        const authorityCacheKey = this.generateAuthorityKey(state);\n        return this.getTemporaryCache(authorityCacheKey);\n    }\n\n    /**\n     * Updates account, authority, and state in cache\n     * @param serverAuthenticationRequest\n     * @param account\n     */\n    updateCacheEntries(\n        state: string,\n        nonce: string,\n        authorityInstance: string,\n        loginHint: string,\n        account: AccountInfo | null\n    ): void {\n        this.logger.trace(\"BrowserCacheManager.updateCacheEntries called\");\n        // Cache the request state\n        const stateCacheKey = this.generateStateKey(state);\n        this.setTemporaryCache(stateCacheKey, state, false);\n\n        // Cache the nonce\n        const nonceCacheKey = this.generateNonceKey(state);\n        this.setTemporaryCache(nonceCacheKey, nonce, false);\n\n        // Cache authorityKey\n        const authorityCacheKey = this.generateAuthorityKey(state);\n        this.setTemporaryCache(authorityCacheKey, authorityInstance, false);\n\n        if (account) {\n            const ccsCredential: CcsCredential = {\n                credential: account.homeAccountId,\n                type: CcsCredentialType.HOME_ACCOUNT_ID,\n            };\n            this.setTemporaryCache(\n                TemporaryCacheKeys.CCS_CREDENTIAL,\n                JSON.stringify(ccsCredential),\n                true\n            );\n        } else if (loginHint) {\n            const ccsCredential: CcsCredential = {\n                credential: loginHint,\n                type: CcsCredentialType.UPN,\n            };\n            this.setTemporaryCache(\n                TemporaryCacheKeys.CCS_CREDENTIAL,\n                JSON.stringify(ccsCredential),\n                true\n            );\n        }\n    }\n\n    /**\n     * Reset all temporary cache items\n     * @param state\n     */\n    resetRequestCache(state: string): void {\n        this.logger.trace(\"BrowserCacheManager.resetRequestCache called\");\n        // check state and remove associated cache items\n        if (state) {\n            this.getKeys().forEach((key) => {\n                if (key.indexOf(state) !== -1) {\n                    this.removeItem(key);\n                }\n            });\n\n            // delete generic interactive request parameters\n            this.removeItem(this.generateStateKey(state));\n            this.removeItem(this.generateNonceKey(state));\n            this.removeItem(this.generateAuthorityKey(state));\n        }\n        this.removeItem(\n            this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS)\n        );\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.ORIGIN_URI));\n        this.removeItem(this.generateCacheKey(TemporaryCacheKeys.URL_HASH));\n        this.removeItem(\n            this.generateCacheKey(TemporaryCacheKeys.CORRELATION_ID)\n        );\n        this.removeItem(\n            this.generateCacheKey(TemporaryCacheKeys.CCS_CREDENTIAL)\n        );\n        this.removeItem(\n            this.generateCacheKey(TemporaryCacheKeys.NATIVE_REQUEST)\n        );\n        this.setInteractionInProgress(false);\n    }\n\n    /**\n     * Removes temporary cache for the provided state\n     * @param stateString\n     */\n    cleanRequestByState(stateString: string): void {\n        this.logger.trace(\"BrowserCacheManager.cleanRequestByState called\");\n        // Interaction is completed - remove interaction status.\n        if (stateString) {\n            const stateKey = this.generateStateKey(stateString);\n            const cachedState = this.temporaryCacheStorage.getItem(stateKey);\n            this.logger.infoPii(\n                `BrowserCacheManager.cleanRequestByState: Removing temporary cache items for state: ${cachedState}`\n            );\n            this.resetRequestCache(cachedState || Constants.EMPTY_STRING);\n        }\n        this.clearMsalCookies();\n    }\n\n    /**\n     * Looks in temporary cache for any state values with the provided interactionType and removes all temporary cache items for that state\n     * Used in scenarios where temp cache needs to be cleaned but state is not known, such as clicking browser back button.\n     * @param interactionType\n     */\n    cleanRequestByInteractionType(interactionType: InteractionType): void {\n        this.logger.trace(\n            \"BrowserCacheManager.cleanRequestByInteractionType called\"\n        );\n        // Loop through all keys to find state key\n        this.getKeys().forEach((key) => {\n            // If this key is not the state key, move on\n            if (key.indexOf(TemporaryCacheKeys.REQUEST_STATE) === -1) {\n                return;\n            }\n\n            // Retrieve state value, return if not a valid value\n            const stateValue = this.temporaryCacheStorage.getItem(key);\n            if (!stateValue) {\n                return;\n            }\n            // Extract state and ensure it matches given InteractionType, then clean request cache\n            const parsedState = BrowserProtocolUtils.extractBrowserRequestState(\n                this.cryptoImpl,\n                stateValue\n            );\n            if (\n                parsedState &&\n                parsedState.interactionType === interactionType\n            ) {\n                this.logger.infoPii(\n                    `BrowserCacheManager.cleanRequestByInteractionType: Removing temporary cache items for state: ${stateValue}`\n                );\n                this.resetRequestCache(stateValue);\n            }\n        });\n        this.clearMsalCookies();\n        this.setInteractionInProgress(false);\n    }\n\n    cacheCodeRequest(authCodeRequest: CommonAuthorizationCodeRequest): void {\n        this.logger.trace(\"BrowserCacheManager.cacheCodeRequest called\");\n\n        const encodedValue = base64Encode(JSON.stringify(authCodeRequest));\n        this.setTemporaryCache(\n            TemporaryCacheKeys.REQUEST_PARAMS,\n            encodedValue,\n            true\n        );\n    }\n\n    /**\n     * Gets the token exchange parameters from the cache. Throws an error if nothing is found.\n     */\n    getCachedRequest(state: string): CommonAuthorizationCodeRequest {\n        this.logger.trace(\"BrowserCacheManager.getCachedRequest called\");\n        // Get token request from cache and parse as TokenExchangeParameters.\n        const encodedTokenRequest = this.getTemporaryCache(\n            TemporaryCacheKeys.REQUEST_PARAMS,\n            true\n        );\n        if (!encodedTokenRequest) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.noTokenRequestCacheError\n            );\n        }\n\n        let parsedRequest: CommonAuthorizationCodeRequest;\n        try {\n            parsedRequest = JSON.parse(base64Decode(encodedTokenRequest));\n        } catch (e) {\n            this.logger.errorPii(`Attempted to parse: ${encodedTokenRequest}`);\n            this.logger.error(\n                `Parsing cached token request threw with error: ${e}`\n            );\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.unableToParseTokenRequestCacheError\n            );\n        }\n        this.removeItem(\n            this.generateCacheKey(TemporaryCacheKeys.REQUEST_PARAMS)\n        );\n\n        // Get cached authority and use if no authority is cached with request.\n        if (!parsedRequest.authority) {\n            const authorityCacheKey: string = this.generateAuthorityKey(state);\n            const cachedAuthority = this.getTemporaryCache(authorityCacheKey);\n            if (!cachedAuthority) {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.noCachedAuthorityError\n                );\n            }\n            parsedRequest.authority = cachedAuthority;\n        }\n\n        return parsedRequest;\n    }\n\n    /**\n     * Gets cached native request for redirect flows\n     */\n    getCachedNativeRequest(): NativeTokenRequest | null {\n        this.logger.trace(\"BrowserCacheManager.getCachedNativeRequest called\");\n        const cachedRequest = this.getTemporaryCache(\n            TemporaryCacheKeys.NATIVE_REQUEST,\n            true\n        );\n        if (!cachedRequest) {\n            this.logger.trace(\n                \"BrowserCacheManager.getCachedNativeRequest: No cached native request found\"\n            );\n            return null;\n        }\n\n        const parsedRequest = this.validateAndParseJson(\n            cachedRequest\n        ) as NativeTokenRequest;\n        if (!parsedRequest) {\n            this.logger.error(\n                \"BrowserCacheManager.getCachedNativeRequest: Unable to parse native request\"\n            );\n            return null;\n        }\n\n        return parsedRequest;\n    }\n\n    isInteractionInProgress(matchClientId?: boolean): boolean {\n        const clientId = this.getInteractionInProgress();\n\n        if (matchClientId) {\n            return clientId === this.clientId;\n        } else {\n            return !!clientId;\n        }\n    }\n\n    getInteractionInProgress(): string | null {\n        const key = `${Constants.CACHE_PREFIX}.${TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\n        return this.getTemporaryCache(key, false);\n    }\n\n    setInteractionInProgress(inProgress: boolean): void {\n        // Ensure we don't overwrite interaction in progress for a different clientId\n        const key = `${Constants.CACHE_PREFIX}.${TemporaryCacheKeys.INTERACTION_STATUS_KEY}`;\n        if (inProgress) {\n            if (this.getInteractionInProgress()) {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.interactionInProgress\n                );\n            } else {\n                // No interaction is in progress\n                this.setTemporaryCache(key, this.clientId, false);\n            }\n        } else if (\n            !inProgress &&\n            this.getInteractionInProgress() === this.clientId\n        ) {\n            this.removeItem(key);\n        }\n    }\n\n    /**\n     * Returns username retrieved from ADAL or MSAL v1 idToken\n     * @deprecated\n     */\n    getLegacyLoginHint(): string | null {\n        // Only check for adal/msal token if no SSO params are being used\n        const adalIdTokenString = this.getTemporaryCache(\n            PersistentCacheKeys.ADAL_ID_TOKEN\n        );\n        if (adalIdTokenString) {\n            this.browserStorage.removeItem(PersistentCacheKeys.ADAL_ID_TOKEN);\n            this.logger.verbose(\"Cached ADAL id token retrieved.\");\n        }\n\n        // Check for cached MSAL v1 id token\n        const msalIdTokenString = this.getTemporaryCache(\n            PersistentCacheKeys.ID_TOKEN,\n            true\n        );\n        if (msalIdTokenString) {\n            this.removeItem(\n                this.generateCacheKey(PersistentCacheKeys.ID_TOKEN)\n            );\n            this.logger.verbose(\"Cached MSAL.js v1 id token retrieved\");\n        }\n\n        const cachedIdTokenString = msalIdTokenString || adalIdTokenString;\n        if (cachedIdTokenString) {\n            const idTokenClaims = AuthToken.extractTokenClaims(\n                cachedIdTokenString,\n                base64Decode\n            );\n            if (idTokenClaims.preferred_username) {\n                this.logger.verbose(\n                    \"No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 preferred_username as loginHint\"\n                );\n                return idTokenClaims.preferred_username;\n            } else if (idTokenClaims.upn) {\n                this.logger.verbose(\n                    \"No SSO params used and ADAL/MSAL v1 token retrieved, setting ADAL/MSAL v1 upn as loginHint\"\n                );\n                return idTokenClaims.upn;\n            } else {\n                this.logger.verbose(\n                    \"No SSO params used and ADAL/MSAL v1 token retrieved, however, no account hint claim found. Enable preferred_username or upn id token claim to get SSO.\"\n                );\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Updates a credential's cache key if the current cache key is outdated\n     */\n    updateCredentialCacheKey(\n        currentCacheKey: string,\n        credential: ValidCredentialType\n    ): string {\n        const updatedCacheKey = credential.generateCredentialKey();\n\n        if (currentCacheKey !== updatedCacheKey) {\n            const cacheItem = this.getItem(currentCacheKey);\n            if (cacheItem) {\n                this.removeItem(currentCacheKey);\n                this.setItem(updatedCacheKey, cacheItem);\n                this.logger.verbose(\n                    `Updated an outdated ${credential.credentialType} cache key`\n                );\n                return updatedCacheKey;\n            } else {\n                this.logger.error(\n                    `Attempted to update an outdated ${credential.credentialType} cache key but no item matching the outdated key was found in storage`\n                );\n            }\n        }\n\n        return currentCacheKey;\n    }\n\n    /**\n     * Returns application id as redirect context during AcquireTokenRedirect flow.\n     */\n    getRedirectRequestContext(): string | null {\n        return this.getTemporaryCache(\n            TemporaryCacheKeys.REDIRECT_CONTEXT,\n            true\n        );\n    }\n\n    /**\n     * Sets application id as the redirect context during AcquireTokenRedirect flow.\n     * @param value\n     */\n    setRedirectRequestContext(value: string): void {\n        this.setTemporaryCache(\n            TemporaryCacheKeys.REDIRECT_CONTEXT,\n            value,\n            true\n        );\n    }\n\n    /**\n     * Builds credential entities from AuthenticationResult object and saves the resulting credentials to the cache\n     * @param result\n     * @param request\n     */\n    async hydrateCache(\n        result: AuthenticationResult,\n        request:\n            | SilentRequest\n            | SsoSilentRequest\n            | RedirectRequest\n            | PopupRequest\n    ): Promise<void> {\n        const idTokenEntity = IdTokenEntity.createIdTokenEntity(\n            result.account?.homeAccountId,\n            result.account?.environment,\n            result.idToken,\n            this.clientId,\n            result.tenantId\n        );\n\n        let claimsHash;\n        if (request.claims) {\n            claimsHash = await this.cryptoImpl.hashString(request.claims);\n        }\n        const accessTokenEntity = AccessTokenEntity.createAccessTokenEntity(\n            result.account?.homeAccountId,\n            result.account.environment,\n            result.accessToken,\n            this.clientId,\n            result.tenantId,\n            result.scopes.join(\" \"),\n            result.expiresOn?.getTime() || 0,\n            result.extExpiresOn?.getTime() || 0,\n            this.cryptoImpl,\n            undefined, // refreshOn\n            result.tokenType as AuthenticationScheme,\n            undefined, // userAssertionHash\n            request.sshKid,\n            request.claims,\n            claimsHash\n        );\n\n        const cacheRecord = new CacheRecord(\n            undefined,\n            idTokenEntity,\n            accessTokenEntity\n        );\n        return this.saveCacheRecord(cacheRecord);\n    }\n}\n\nexport const DEFAULT_BROWSER_CACHE_MANAGER = (\n    clientId: string,\n    logger: Logger\n): BrowserCacheManager => {\n    const cacheOptions: Required<CacheOptions> = {\n        cacheLocation: BrowserCacheLocation.MemoryStorage,\n        temporaryCacheLocation: BrowserCacheLocation.MemoryStorage,\n        storeAuthStateInCookie: false,\n        secureCookies: false,\n        cacheMigrationEnabled: false,\n        claimsBasedCachingEnabled: false,\n    };\n    return new BrowserCacheManager(\n        clientId,\n        cacheOptions,\n        DEFAULT_CRYPTO_IMPLEMENTATION,\n        logger\n    );\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants, UrlString } from \"@azure/msal-common\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { InteractionType, BrowserConstants } from \"./BrowserConstants\";\n\n/**\n * Utility class for browser specific functions\n */\nexport class BrowserUtils {\n    // #region Window Navigation and URL management\n\n    /**\n     * Clears hash from window url.\n     */\n    static clearHash(contentWindow: Window): void {\n        // Office.js sets history.replaceState to null\n        contentWindow.location.hash = Constants.EMPTY_STRING;\n        if (typeof contentWindow.history.replaceState === \"function\") {\n            // Full removes \"#\" from url\n            contentWindow.history.replaceState(\n                null,\n                Constants.EMPTY_STRING,\n                `${contentWindow.location.origin}${contentWindow.location.pathname}${contentWindow.location.search}`\n            );\n        }\n    }\n\n    /**\n     * Replaces current hash with hash from provided url\n     */\n    static replaceHash(url: string): void {\n        const urlParts = url.split(\"#\");\n        urlParts.shift(); // Remove part before the hash\n        window.location.hash =\n            urlParts.length > 0 ? urlParts.join(\"#\") : Constants.EMPTY_STRING;\n    }\n\n    /**\n     * Returns boolean of whether the current window is in an iframe or not.\n     */\n    static isInIframe(): boolean {\n        return window.parent !== window;\n    }\n\n    /**\n     * Returns boolean of whether or not the current window is a popup opened by msal\n     */\n    static isInPopup(): boolean {\n        return (\n            typeof window !== \"undefined\" &&\n            !!window.opener &&\n            window.opener !== window &&\n            typeof window.name === \"string\" &&\n            window.name.indexOf(`${BrowserConstants.POPUP_NAME_PREFIX}.`) === 0\n        );\n    }\n\n    // #endregion\n\n    /**\n     * Returns current window URL as redirect uri\n     */\n    static getCurrentUri(): string {\n        return window.location.href.split(\"?\")[0].split(\"#\")[0];\n    }\n\n    /**\n     * Gets the homepage url for the current window location.\n     */\n    static getHomepage(): string {\n        const currentUrl = new UrlString(window.location.href);\n        const urlComponents = currentUrl.getUrlComponents();\n        return `${urlComponents.Protocol}//${urlComponents.HostNameAndPort}/`;\n    }\n\n    /**\n     * Throws error if we have completed an auth and are\n     * attempting another auth request inside an iframe.\n     */\n    static blockReloadInHiddenIframes(): void {\n        const isResponseHash = UrlString.hashContainsKnownProperties(\n            window.location.hash\n        );\n        // return an error if called from the hidden iframe created by the msal js silent calls\n        if (isResponseHash && BrowserUtils.isInIframe()) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.blockIframeReload\n            );\n        }\n    }\n\n    /**\n     * Block redirect operations in iframes unless explicitly allowed\n     * @param interactionType Interaction type for the request\n     * @param allowRedirectInIframe Config value to allow redirects when app is inside an iframe\n     */\n    static blockRedirectInIframe(\n        interactionType: InteractionType,\n        allowRedirectInIframe: boolean\n    ): void {\n        const isIframedApp = BrowserUtils.isInIframe();\n        if (\n            interactionType === InteractionType.Redirect &&\n            isIframedApp &&\n            !allowRedirectInIframe\n        ) {\n            // If we are not in top frame, we shouldn't redirect. This is also handled by the service.\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.redirectInIframe\n            );\n        }\n    }\n\n    /**\n     * Block redirectUri loaded in popup from calling AcquireToken APIs\n     */\n    static blockAcquireTokenInPopups(): void {\n        // Popups opened by msal popup APIs are given a name that starts with \"msal.\"\n        if (BrowserUtils.isInPopup()) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.blockNestedPopups\n            );\n        }\n    }\n\n    /**\n     * Throws error if token requests are made in non-browser environment\n     * @param isBrowserEnvironment Flag indicating if environment is a browser.\n     */\n    static blockNonBrowserEnvironment(isBrowserEnvironment: boolean): void {\n        if (!isBrowserEnvironment) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.nonBrowserEnvironment\n            );\n        }\n    }\n\n    /**\n     * Throws error if initialize hasn't been called\n     * @param initialized\n     */\n    static blockAPICallsBeforeInitialize(initialized: boolean): void {\n        if (!initialized) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.uninitializedPublicClientApplication\n            );\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const EventType = {\n    INITIALIZE_START: \"msal:initializeStart\",\n    INITIALIZE_END: \"msal:initializeEnd\",\n    ACCOUNT_ADDED: \"msal:accountAdded\",\n    ACCOUNT_REMOVED: \"msal:accountRemoved\",\n    LOGIN_START: \"msal:loginStart\",\n    LOGIN_SUCCESS: \"msal:loginSuccess\",\n    LOGIN_FAILURE: \"msal:loginFailure\",\n    ACQUIRE_TOKEN_START: \"msal:acquireTokenStart\",\n    ACQUIRE_TOKEN_SUCCESS: \"msal:acquireTokenSuccess\",\n    ACQUIRE_TOKEN_FAILURE: \"msal:acquireTokenFailure\",\n    ACQUIRE_TOKEN_NETWORK_START: \"msal:acquireTokenFromNetworkStart\",\n    SSO_SILENT_START: \"msal:ssoSilentStart\",\n    SSO_SILENT_SUCCESS: \"msal:ssoSilentSuccess\",\n    SSO_SILENT_FAILURE: \"msal:ssoSilentFailure\",\n    ACQUIRE_TOKEN_BY_CODE_START: \"msal:acquireTokenByCodeStart\",\n    ACQUIRE_TOKEN_BY_CODE_SUCCESS: \"msal:acquireTokenByCodeSuccess\",\n    ACQUIRE_TOKEN_BY_CODE_FAILURE: \"msal:acquireTokenByCodeFailure\",\n    HANDLE_REDIRECT_START: \"msal:handleRedirectStart\",\n    HANDLE_REDIRECT_END: \"msal:handleRedirectEnd\",\n    POPUP_OPENED: \"msal:popupOpened\",\n    LOGOUT_START: \"msal:logoutStart\",\n    LOGOUT_SUCCESS: \"msal:logoutSuccess\",\n    LOGOUT_FAILURE: \"msal:logoutFailure\",\n    LOGOUT_END: \"msal:logoutEnd\",\n    RESTORE_FROM_BFCACHE: \"msal:restoreFromBFCache\",\n} as const;\nexport type EventType = (typeof EventType)[keyof typeof EventType];\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ICrypto,\n    Logger,\n    AccountEntity,\n    CacheManager,\n} from \"@azure/msal-common\";\nimport { InteractionType } from \"../utils/BrowserConstants\";\nimport {\n    EventCallbackFunction,\n    EventError,\n    EventMessage,\n    EventPayload,\n} from \"./EventMessage\";\nimport { EventType } from \"./EventType\";\nimport { createNewGuid } from \"../crypto/BrowserCrypto\";\n\nexport class EventHandler {\n    // Callback for subscribing to events\n    private eventCallbacks: Map<string, EventCallbackFunction>;\n    private logger: Logger;\n    private browserCrypto: ICrypto;\n    private listeningToStorageEvents: boolean;\n\n    constructor(logger: Logger, browserCrypto: ICrypto) {\n        this.eventCallbacks = new Map();\n        this.logger = logger;\n        this.browserCrypto = browserCrypto;\n        this.listeningToStorageEvents = false;\n        this.handleAccountCacheChange =\n            this.handleAccountCacheChange.bind(this);\n    }\n\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback: EventCallbackFunction): string | null {\n        if (typeof window !== \"undefined\") {\n            const callbackId = createNewGuid();\n            this.eventCallbacks.set(callbackId, callback);\n            this.logger.verbose(\n                `Event callback registered with id: ${callbackId}`\n            );\n\n            return callbackId;\n        }\n\n        return null;\n    }\n\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId: string): void {\n        this.eventCallbacks.delete(callbackId);\n        this.logger.verbose(`Event callback ${callbackId} removed.`);\n    }\n\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    enableAccountStorageEvents(): void {\n        if (typeof window === \"undefined\") {\n            return;\n        }\n\n        if (!this.listeningToStorageEvents) {\n            this.logger.verbose(\"Adding account storage listener.\");\n            this.listeningToStorageEvents = true;\n            window.addEventListener(\"storage\", this.handleAccountCacheChange);\n        } else {\n            this.logger.verbose(\"Account storage listener already registered.\");\n        }\n    }\n\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    disableAccountStorageEvents(): void {\n        if (typeof window === \"undefined\") {\n            return;\n        }\n\n        if (this.listeningToStorageEvents) {\n            this.logger.verbose(\"Removing account storage listener.\");\n            window.removeEventListener(\n                \"storage\",\n                this.handleAccountCacheChange\n            );\n            this.listeningToStorageEvents = false;\n        } else {\n            this.logger.verbose(\"No account storage listener registered.\");\n        }\n    }\n\n    /**\n     * Emits events by calling callback with event message\n     * @param eventType\n     * @param interactionType\n     * @param payload\n     * @param error\n     */\n    emitEvent(\n        eventType: EventType,\n        interactionType?: InteractionType,\n        payload?: EventPayload,\n        error?: EventError\n    ): void {\n        if (typeof window !== \"undefined\") {\n            const message: EventMessage = {\n                eventType: eventType,\n                interactionType: interactionType || null,\n                payload: payload || null,\n                error: error || null,\n                timestamp: Date.now(),\n            };\n\n            this.logger.info(`Emitting event: ${eventType}`);\n\n            this.eventCallbacks.forEach(\n                (callback: EventCallbackFunction, callbackId: string) => {\n                    this.logger.verbose(\n                        `Emitting event to callback ${callbackId}: ${eventType}`\n                    );\n                    callback.apply(null, [message]);\n                }\n            );\n        }\n    }\n\n    /**\n     * Emit account added/removed events when cached accounts are changed in a different tab or frame\n     */\n    private handleAccountCacheChange(e: StorageEvent): void {\n        try {\n            const cacheValue = e.newValue || e.oldValue;\n            if (!cacheValue) {\n                return;\n            }\n            const parsedValue = JSON.parse(cacheValue);\n            if (\n                typeof parsedValue !== \"object\" ||\n                !AccountEntity.isAccountEntity(parsedValue)\n            ) {\n                return;\n            }\n            const accountEntity = CacheManager.toObject<AccountEntity>(\n                new AccountEntity(),\n                parsedValue\n            );\n            const accountInfo = accountEntity.getAccountInfo();\n            if (!e.oldValue && e.newValue) {\n                this.logger.info(\n                    \"Account was added to cache in a different window\"\n                );\n                this.emitEvent(EventType.ACCOUNT_ADDED, undefined, accountInfo);\n            } else if (!e.newValue && e.oldValue) {\n                this.logger.info(\n                    \"Account was removed from cache in a different window\"\n                );\n                this.emitEvent(\n                    EventType.ACCOUNT_REMOVED,\n                    undefined,\n                    accountInfo\n                );\n            }\n        } catch (e) {\n            return;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { NetworkResponse } from \"./NetworkManager\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse\";\nimport {\n    HeaderNames,\n    ThrottlingConstants,\n    Constants,\n} from \"../utils/Constants\";\nimport { CacheManager } from \"../cache/CacheManager\";\nimport { ServerError } from \"../error/ServerError\";\nimport { RequestThumbprint } from \"./RequestThumbprint\";\nimport { ThrottlingEntity } from \"../cache/entities/ThrottlingEntity\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\n\n/** @internal */\nexport class ThrottlingUtils {\n    /**\n     * Prepares a RequestThumbprint to be stored as a key.\n     * @param thumbprint\n     */\n    static generateThrottlingStorageKey(thumbprint: RequestThumbprint): string {\n        return `${ThrottlingConstants.THROTTLING_PREFIX}.${JSON.stringify(\n            thumbprint\n        )}`;\n    }\n\n    /**\n     * Performs necessary throttling checks before a network request.\n     * @param cacheManager\n     * @param thumbprint\n     */\n    static preProcess(\n        cacheManager: CacheManager,\n        thumbprint: RequestThumbprint\n    ): void {\n        const key = ThrottlingUtils.generateThrottlingStorageKey(thumbprint);\n        const value = cacheManager.getThrottlingCache(key);\n\n        if (value) {\n            if (value.throttleTime < Date.now()) {\n                cacheManager.removeItem(key);\n                return;\n            }\n            throw new ServerError(\n                value.errorCodes?.join(\" \") || Constants.EMPTY_STRING,\n                value.errorMessage,\n                value.subError\n            );\n        }\n    }\n\n    /**\n     * Performs necessary throttling checks after a network request.\n     * @param cacheManager\n     * @param thumbprint\n     * @param response\n     */\n    static postProcess(\n        cacheManager: CacheManager,\n        thumbprint: RequestThumbprint,\n        response: NetworkResponse<ServerAuthorizationTokenResponse>\n    ): void {\n        if (\n            ThrottlingUtils.checkResponseStatus(response) ||\n            ThrottlingUtils.checkResponseForRetryAfter(response)\n        ) {\n            const thumbprintValue: ThrottlingEntity = {\n                throttleTime: ThrottlingUtils.calculateThrottleTime(\n                    parseInt(response.headers[HeaderNames.RETRY_AFTER])\n                ),\n                error: response.body.error,\n                errorCodes: response.body.error_codes,\n                errorMessage: response.body.error_description,\n                subError: response.body.suberror,\n            };\n            cacheManager.setThrottlingCache(\n                ThrottlingUtils.generateThrottlingStorageKey(thumbprint),\n                thumbprintValue\n            );\n        }\n    }\n\n    /**\n     * Checks a NetworkResponse object's status codes against 429 or 5xx\n     * @param response\n     */\n    static checkResponseStatus(\n        response: NetworkResponse<ServerAuthorizationTokenResponse>\n    ): boolean {\n        return (\n            response.status === 429 ||\n            (response.status >= 500 && response.status < 600)\n        );\n    }\n\n    /**\n     * Checks a NetworkResponse object's RetryAfter header\n     * @param response\n     */\n    static checkResponseForRetryAfter(\n        response: NetworkResponse<ServerAuthorizationTokenResponse>\n    ): boolean {\n        if (response.headers) {\n            return (\n                response.headers.hasOwnProperty(HeaderNames.RETRY_AFTER) &&\n                (response.status < 200 || response.status >= 300)\n            );\n        }\n        return false;\n    }\n\n    /**\n     * Calculates the Unix-time value for a throttle to expire given throttleTime in seconds.\n     * @param throttleTime\n     */\n    static calculateThrottleTime(throttleTime: number): number {\n        const time = throttleTime <= 0 ? 0 : throttleTime;\n\n        const currentSeconds = Date.now() / 1000;\n        return Math.floor(\n            Math.min(\n                currentSeconds +\n                    (time || ThrottlingConstants.DEFAULT_THROTTLE_TIME_SECONDS),\n                currentSeconds +\n                    ThrottlingConstants.DEFAULT_MAX_THROTTLE_TIME_SECONDS\n            ) * 1000\n        );\n    }\n\n    static removeThrottle(\n        cacheManager: CacheManager,\n        clientId: string,\n        request: BaseAuthRequest,\n        homeAccountIdentifier?: string\n    ): void {\n        const thumbprint: RequestThumbprint = {\n            clientId: clientId,\n            authority: request.authority,\n            scopes: request.scopes,\n            homeAccountIdentifier: homeAccountIdentifier,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n        };\n\n        const key = this.generateThrottlingStorageKey(thumbprint);\n        cacheManager.removeItem(key);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INetworkModule, NetworkRequestOptions } from \"./INetworkModule\";\nimport { RequestThumbprint } from \"./RequestThumbprint\";\nimport { ThrottlingUtils } from \"./ThrottlingUtils\";\nimport { CacheManager } from \"../cache/CacheManager\";\nimport { AuthError } from \"../error/AuthError\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse\";\n\nexport type NetworkResponse<T> = {\n    headers: Record<string, string>;\n    body: T;\n    status: number;\n};\n\nexport type UrlToHttpRequestOptions = {\n    protocol: string;\n    hostname: string;\n    hash: string;\n    search: string;\n    pathname: string;\n    path: string;\n    href: string;\n    port?: number;\n    auth?: string;\n};\n\n/** @internal */\nexport class NetworkManager {\n    private networkClient: INetworkModule;\n    private cacheManager: CacheManager;\n\n    constructor(networkClient: INetworkModule, cacheManager: CacheManager) {\n        this.networkClient = networkClient;\n        this.cacheManager = cacheManager;\n    }\n\n    /**\n     * Wraps sendPostRequestAsync with necessary preflight and postflight logic\n     * @param thumbprint\n     * @param tokenEndpoint\n     * @param options\n     */\n    async sendPostRequest<T extends ServerAuthorizationTokenResponse>(\n        thumbprint: RequestThumbprint,\n        tokenEndpoint: string,\n        options: NetworkRequestOptions\n    ): Promise<NetworkResponse<T>> {\n        ThrottlingUtils.preProcess(this.cacheManager, thumbprint);\n\n        let response;\n        try {\n            response = await this.networkClient.sendPostRequestAsync<T>(\n                tokenEndpoint,\n                options\n            );\n        } catch (e) {\n            if (e instanceof AuthError) {\n                throw e;\n            } else {\n                throw createClientAuthError(ClientAuthErrorCodes.networkError);\n            }\n        }\n\n        ThrottlingUtils.postProcess(this.cacheManager, thumbprint, response);\n\n        return response;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError\";\nimport { PromptValue, CodeChallengeMethodValues } from \"../utils/Constants\";\nimport { StringDict } from \"../utils/MsalTypes\";\n\n/**\n * Validates server consumable params from the \"request\" objects\n */\nexport class RequestValidator {\n    /**\n     * Utility to check if the `redirectUri` in the request is a non-null value\n     * @param redirectUri\n     */\n    static validateRedirectUri(redirectUri: string): void {\n        if (!redirectUri) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.redirectUriEmpty\n            );\n        }\n    }\n\n    /**\n     * Utility to validate prompt sent by the user in the request\n     * @param prompt\n     */\n    static validatePrompt(prompt: string): void {\n        const promptValues = [];\n\n        for (const value in PromptValue) {\n            promptValues.push(PromptValue[value]);\n        }\n\n        if (promptValues.indexOf(prompt) < 0) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.invalidPromptValue\n            );\n        }\n    }\n\n    static validateClaims(claims: string): void {\n        try {\n            JSON.parse(claims);\n        } catch (e) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.invalidClaims\n            );\n        }\n    }\n\n    /**\n     * Utility to validate code_challenge and code_challenge_method\n     * @param codeChallenge\n     * @param codeChallengeMethod\n     */\n    static validateCodeChallengeParams(\n        codeChallenge: string,\n        codeChallengeMethod: string\n    ): void {\n        if (!codeChallenge || !codeChallengeMethod) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.pkceParamsMissing\n            );\n        } else {\n            this.validateCodeChallengeMethod(codeChallengeMethod);\n        }\n    }\n\n    /**\n     * Utility to validate code_challenge_method\n     * @param codeChallengeMethod\n     */\n    static validateCodeChallengeMethod(codeChallengeMethod: string): void {\n        if (\n            [\n                CodeChallengeMethodValues.PLAIN,\n                CodeChallengeMethodValues.S256,\n            ].indexOf(codeChallengeMethod) < 0\n        ) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.invalidCodeChallengeMethod\n            );\n        }\n    }\n\n    /**\n     * Removes unnecessary, duplicate, and empty string query parameters from extraQueryParameters\n     * @param request\n     */\n    static sanitizeEQParams(\n        eQParams: StringDict,\n        queryParams: Map<string, string>\n    ): StringDict {\n        if (!eQParams) {\n            return {};\n        }\n\n        // Remove any query parameters already included in SSO params\n        queryParams.forEach((_value, key) => {\n            if (eQParams[key]) {\n                delete eQParams[key];\n            }\n        });\n\n        // remove empty string parameters\n        return Object.fromEntries(\n            Object.entries(eQParams).filter((kv) => kv[1] !== \"\")\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AADServerParamKeys,\n    Constants,\n    ResponseMode,\n    SSOTypes,\n    CLIENT_INFO,\n    AuthenticationScheme,\n    ClaimsRequestKeys,\n    PasswordGrantConstants,\n    OIDC_DEFAULT_SCOPES,\n    ThrottlingConstants,\n    HeaderNames,\n} from \"../utils/Constants\";\nimport { ScopeSet } from \"./ScopeSet\";\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError\";\nimport { StringDict } from \"../utils/MsalTypes\";\nimport { RequestValidator } from \"./RequestValidator\";\nimport {\n    ApplicationTelemetry,\n    LibraryInfo,\n} from \"../config/ClientConfiguration\";\nimport { ServerTelemetryManager } from \"../telemetry/server/ServerTelemetryManager\";\nimport { ClientInfo } from \"../account/ClientInfo\";\n\n/** @internal */\nexport class RequestParameterBuilder {\n    private parameters: Map<string, string>;\n\n    constructor() {\n        this.parameters = new Map<string, string>();\n    }\n\n    /**\n     * add response_type = code\n     */\n    addResponseTypeCode(): void {\n        this.parameters.set(\n            AADServerParamKeys.RESPONSE_TYPE,\n            encodeURIComponent(Constants.CODE_RESPONSE_TYPE)\n        );\n    }\n\n    /**\n     * add response_type = token id_token\n     */\n    addResponseTypeForTokenAndIdToken(): void {\n        this.parameters.set(\n            AADServerParamKeys.RESPONSE_TYPE,\n            encodeURIComponent(\n                `${Constants.TOKEN_RESPONSE_TYPE} ${Constants.ID_TOKEN_RESPONSE_TYPE}`\n            )\n        );\n    }\n\n    /**\n     * add response_mode. defaults to query.\n     * @param responseMode\n     */\n    addResponseMode(responseMode?: ResponseMode): void {\n        this.parameters.set(\n            AADServerParamKeys.RESPONSE_MODE,\n            encodeURIComponent(responseMode ? responseMode : ResponseMode.QUERY)\n        );\n    }\n\n    /**\n     * Add flag to indicate STS should attempt to use WAM if available\n     */\n    addNativeBroker(): void {\n        this.parameters.set(\n            AADServerParamKeys.NATIVE_BROKER,\n            encodeURIComponent(\"1\")\n        );\n    }\n\n    /**\n     * add scopes. set addOidcScopes to false to prevent default scopes in non-user scenarios\n     * @param scopeSet\n     * @param addOidcScopes\n     */\n    addScopes(\n        scopes: string[],\n        addOidcScopes: boolean = true,\n        defaultScopes: Array<string> = OIDC_DEFAULT_SCOPES\n    ): void {\n        // Always add openid to the scopes when adding OIDC scopes\n        if (\n            addOidcScopes &&\n            !defaultScopes.includes(\"openid\") &&\n            !scopes.includes(\"openid\")\n        ) {\n            defaultScopes.push(\"openid\");\n        }\n        const requestScopes = addOidcScopes\n            ? [...(scopes || []), ...defaultScopes]\n            : scopes || [];\n        const scopeSet = new ScopeSet(requestScopes);\n        this.parameters.set(\n            AADServerParamKeys.SCOPE,\n            encodeURIComponent(scopeSet.printScopes())\n        );\n    }\n\n    /**\n     * add clientId\n     * @param clientId\n     */\n    addClientId(clientId: string): void {\n        this.parameters.set(\n            AADServerParamKeys.CLIENT_ID,\n            encodeURIComponent(clientId)\n        );\n    }\n\n    /**\n     * add redirect_uri\n     * @param redirectUri\n     */\n    addRedirectUri(redirectUri: string): void {\n        RequestValidator.validateRedirectUri(redirectUri);\n        this.parameters.set(\n            AADServerParamKeys.REDIRECT_URI,\n            encodeURIComponent(redirectUri)\n        );\n    }\n\n    /**\n     * add post logout redirectUri\n     * @param redirectUri\n     */\n    addPostLogoutRedirectUri(redirectUri: string): void {\n        RequestValidator.validateRedirectUri(redirectUri);\n        this.parameters.set(\n            AADServerParamKeys.POST_LOGOUT_URI,\n            encodeURIComponent(redirectUri)\n        );\n    }\n\n    /**\n     * add id_token_hint to logout request\n     * @param idTokenHint\n     */\n    addIdTokenHint(idTokenHint: string): void {\n        this.parameters.set(\n            AADServerParamKeys.ID_TOKEN_HINT,\n            encodeURIComponent(idTokenHint)\n        );\n    }\n\n    /**\n     * add domain_hint\n     * @param domainHint\n     */\n    addDomainHint(domainHint: string): void {\n        this.parameters.set(\n            SSOTypes.DOMAIN_HINT,\n            encodeURIComponent(domainHint)\n        );\n    }\n\n    /**\n     * add login_hint\n     * @param loginHint\n     */\n    addLoginHint(loginHint: string): void {\n        this.parameters.set(SSOTypes.LOGIN_HINT, encodeURIComponent(loginHint));\n    }\n\n    /**\n     * Adds the CCS (Cache Credential Service) query parameter for login_hint\n     * @param loginHint\n     */\n    addCcsUpn(loginHint: string): void {\n        this.parameters.set(\n            HeaderNames.CCS_HEADER,\n            encodeURIComponent(`UPN:${loginHint}`)\n        );\n    }\n\n    /**\n     * Adds the CCS (Cache Credential Service) query parameter for account object\n     * @param loginHint\n     */\n    addCcsOid(clientInfo: ClientInfo): void {\n        this.parameters.set(\n            HeaderNames.CCS_HEADER,\n            encodeURIComponent(`Oid:${clientInfo.uid}@${clientInfo.utid}`)\n        );\n    }\n\n    /**\n     * add sid\n     * @param sid\n     */\n    addSid(sid: string): void {\n        this.parameters.set(SSOTypes.SID, encodeURIComponent(sid));\n    }\n\n    /**\n     * add claims\n     * @param claims\n     */\n    addClaims(claims?: string, clientCapabilities?: Array<string>): void {\n        const mergedClaims = this.addClientCapabilitiesToClaims(\n            claims,\n            clientCapabilities\n        );\n        RequestValidator.validateClaims(mergedClaims);\n        this.parameters.set(\n            AADServerParamKeys.CLAIMS,\n            encodeURIComponent(mergedClaims)\n        );\n    }\n\n    /**\n     * add correlationId\n     * @param correlationId\n     */\n    addCorrelationId(correlationId: string): void {\n        this.parameters.set(\n            AADServerParamKeys.CLIENT_REQUEST_ID,\n            encodeURIComponent(correlationId)\n        );\n    }\n\n    /**\n     * add library info query params\n     * @param libraryInfo\n     */\n    addLibraryInfo(libraryInfo: LibraryInfo): void {\n        // Telemetry Info\n        this.parameters.set(AADServerParamKeys.X_CLIENT_SKU, libraryInfo.sku);\n        this.parameters.set(\n            AADServerParamKeys.X_CLIENT_VER,\n            libraryInfo.version\n        );\n        if (libraryInfo.os) {\n            this.parameters.set(AADServerParamKeys.X_CLIENT_OS, libraryInfo.os);\n        }\n        if (libraryInfo.cpu) {\n            this.parameters.set(\n                AADServerParamKeys.X_CLIENT_CPU,\n                libraryInfo.cpu\n            );\n        }\n    }\n\n    /**\n     * Add client telemetry parameters\n     * @param appTelemetry\n     */\n    addApplicationTelemetry(appTelemetry: ApplicationTelemetry): void {\n        if (appTelemetry?.appName) {\n            this.parameters.set(\n                AADServerParamKeys.X_APP_NAME,\n                appTelemetry.appName\n            );\n        }\n\n        if (appTelemetry?.appVersion) {\n            this.parameters.set(\n                AADServerParamKeys.X_APP_VER,\n                appTelemetry.appVersion\n            );\n        }\n    }\n\n    /**\n     * add prompt\n     * @param prompt\n     */\n    addPrompt(prompt: string): void {\n        RequestValidator.validatePrompt(prompt);\n        this.parameters.set(\n            `${AADServerParamKeys.PROMPT}`,\n            encodeURIComponent(prompt)\n        );\n    }\n\n    /**\n     * add state\n     * @param state\n     */\n    addState(state: string): void {\n        if (state) {\n            this.parameters.set(\n                AADServerParamKeys.STATE,\n                encodeURIComponent(state)\n            );\n        }\n    }\n\n    /**\n     * add nonce\n     * @param nonce\n     */\n    addNonce(nonce: string): void {\n        this.parameters.set(\n            AADServerParamKeys.NONCE,\n            encodeURIComponent(nonce)\n        );\n    }\n\n    /**\n     * add code_challenge and code_challenge_method\n     * - throw if either of them are not passed\n     * @param codeChallenge\n     * @param codeChallengeMethod\n     */\n    addCodeChallengeParams(\n        codeChallenge: string,\n        codeChallengeMethod: string\n    ): void {\n        RequestValidator.validateCodeChallengeParams(\n            codeChallenge,\n            codeChallengeMethod\n        );\n        if (codeChallenge && codeChallengeMethod) {\n            this.parameters.set(\n                AADServerParamKeys.CODE_CHALLENGE,\n                encodeURIComponent(codeChallenge)\n            );\n            this.parameters.set(\n                AADServerParamKeys.CODE_CHALLENGE_METHOD,\n                encodeURIComponent(codeChallengeMethod)\n            );\n        } else {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.pkceParamsMissing\n            );\n        }\n    }\n\n    /**\n     * add the `authorization_code` passed by the user to exchange for a token\n     * @param code\n     */\n    addAuthorizationCode(code: string): void {\n        this.parameters.set(AADServerParamKeys.CODE, encodeURIComponent(code));\n    }\n\n    /**\n     * add the `authorization_code` passed by the user to exchange for a token\n     * @param code\n     */\n    addDeviceCode(code: string): void {\n        this.parameters.set(\n            AADServerParamKeys.DEVICE_CODE,\n            encodeURIComponent(code)\n        );\n    }\n\n    /**\n     * add the `refreshToken` passed by the user\n     * @param refreshToken\n     */\n    addRefreshToken(refreshToken: string): void {\n        this.parameters.set(\n            AADServerParamKeys.REFRESH_TOKEN,\n            encodeURIComponent(refreshToken)\n        );\n    }\n\n    /**\n     * add the `code_verifier` passed by the user to exchange for a token\n     * @param codeVerifier\n     */\n    addCodeVerifier(codeVerifier: string): void {\n        this.parameters.set(\n            AADServerParamKeys.CODE_VERIFIER,\n            encodeURIComponent(codeVerifier)\n        );\n    }\n\n    /**\n     * add client_secret\n     * @param clientSecret\n     */\n    addClientSecret(clientSecret: string): void {\n        this.parameters.set(\n            AADServerParamKeys.CLIENT_SECRET,\n            encodeURIComponent(clientSecret)\n        );\n    }\n\n    /**\n     * add clientAssertion for confidential client flows\n     * @param clientAssertion\n     */\n    addClientAssertion(clientAssertion: string): void {\n        if (clientAssertion) {\n            this.parameters.set(\n                AADServerParamKeys.CLIENT_ASSERTION,\n                encodeURIComponent(clientAssertion)\n            );\n        }\n    }\n\n    /**\n     * add clientAssertionType for confidential client flows\n     * @param clientAssertionType\n     */\n    addClientAssertionType(clientAssertionType: string): void {\n        if (clientAssertionType) {\n            this.parameters.set(\n                AADServerParamKeys.CLIENT_ASSERTION_TYPE,\n                encodeURIComponent(clientAssertionType)\n            );\n        }\n    }\n\n    /**\n     * add OBO assertion for confidential client flows\n     * @param clientAssertion\n     */\n    addOboAssertion(oboAssertion: string): void {\n        this.parameters.set(\n            AADServerParamKeys.OBO_ASSERTION,\n            encodeURIComponent(oboAssertion)\n        );\n    }\n\n    /**\n     * add grant type\n     * @param grantType\n     */\n    addRequestTokenUse(tokenUse: string): void {\n        this.parameters.set(\n            AADServerParamKeys.REQUESTED_TOKEN_USE,\n            encodeURIComponent(tokenUse)\n        );\n    }\n\n    /**\n     * add grant type\n     * @param grantType\n     */\n    addGrantType(grantType: string): void {\n        this.parameters.set(\n            AADServerParamKeys.GRANT_TYPE,\n            encodeURIComponent(grantType)\n        );\n    }\n\n    /**\n     * add client info\n     *\n     */\n    addClientInfo(): void {\n        this.parameters.set(CLIENT_INFO, \"1\");\n    }\n\n    /**\n     * add extraQueryParams\n     * @param eQParams\n     */\n    addExtraQueryParameters(eQParams: StringDict): void {\n        const sanitizedEQParams = RequestValidator.sanitizeEQParams(\n            eQParams,\n            this.parameters\n        );\n        Object.keys(sanitizedEQParams).forEach((key) => {\n            this.parameters.set(key, eQParams[key]);\n        });\n    }\n\n    addClientCapabilitiesToClaims(\n        claims?: string,\n        clientCapabilities?: Array<string>\n    ): string {\n        let mergedClaims: object;\n\n        // Parse provided claims into JSON object or initialize empty object\n        if (!claims) {\n            mergedClaims = {};\n        } else {\n            try {\n                mergedClaims = JSON.parse(claims);\n            } catch (e) {\n                throw createClientConfigurationError(\n                    ClientConfigurationErrorCodes.invalidClaims\n                );\n            }\n        }\n\n        if (clientCapabilities && clientCapabilities.length > 0) {\n            if (!mergedClaims.hasOwnProperty(ClaimsRequestKeys.ACCESS_TOKEN)) {\n                // Add access_token key to claims object\n                mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN] = {};\n            }\n\n            // Add xms_cc claim with provided clientCapabilities to access_token key\n            mergedClaims[ClaimsRequestKeys.ACCESS_TOKEN][\n                ClaimsRequestKeys.XMS_CC\n            ] = {\n                values: clientCapabilities,\n            };\n        }\n\n        return JSON.stringify(mergedClaims);\n    }\n\n    /**\n     * adds `username` for Password Grant flow\n     * @param username\n     */\n    addUsername(username: string): void {\n        this.parameters.set(\n            PasswordGrantConstants.username,\n            encodeURIComponent(username)\n        );\n    }\n\n    /**\n     * adds `password` for Password Grant flow\n     * @param password\n     */\n    addPassword(password: string): void {\n        this.parameters.set(\n            PasswordGrantConstants.password,\n            encodeURIComponent(password)\n        );\n    }\n\n    /**\n     * add pop_jwk to query params\n     * @param cnfString\n     */\n    addPopToken(cnfString: string): void {\n        if (cnfString) {\n            this.parameters.set(\n                AADServerParamKeys.TOKEN_TYPE,\n                AuthenticationScheme.POP\n            );\n            this.parameters.set(\n                AADServerParamKeys.REQ_CNF,\n                encodeURIComponent(cnfString)\n            );\n        }\n    }\n\n    /**\n     * add SSH JWK and key ID to query params\n     */\n    addSshJwk(sshJwkString: string): void {\n        if (sshJwkString) {\n            this.parameters.set(\n                AADServerParamKeys.TOKEN_TYPE,\n                AuthenticationScheme.SSH\n            );\n            this.parameters.set(\n                AADServerParamKeys.REQ_CNF,\n                encodeURIComponent(sshJwkString)\n            );\n        }\n    }\n\n    /**\n     * add server telemetry fields\n     * @param serverTelemetryManager\n     */\n    addServerTelemetry(serverTelemetryManager: ServerTelemetryManager): void {\n        this.parameters.set(\n            AADServerParamKeys.X_CLIENT_CURR_TELEM,\n            serverTelemetryManager.generateCurrentRequestHeaderValue()\n        );\n        this.parameters.set(\n            AADServerParamKeys.X_CLIENT_LAST_TELEM,\n            serverTelemetryManager.generateLastRequestHeaderValue()\n        );\n    }\n\n    /**\n     * Adds parameter that indicates to the server that throttling is supported\n     */\n    addThrottling(): void {\n        this.parameters.set(\n            AADServerParamKeys.X_MS_LIB_CAPABILITY,\n            ThrottlingConstants.X_MS_LIB_CAPABILITY_VALUE\n        );\n    }\n\n    /**\n     * Adds logout_hint parameter for \"silent\" logout which prevent server account picker\n     */\n    addLogoutHint(logoutHint: string): void {\n        this.parameters.set(\n            AADServerParamKeys.LOGOUT_HINT,\n            encodeURIComponent(logoutHint)\n        );\n    }\n\n    /**\n     * Utility to create a URL from the params map\n     */\n    createQueryString(): string {\n        const queryParameterArray: Array<string> = new Array<string>();\n\n        this.parameters.forEach((value, key) => {\n            queryParameterArray.push(`${key}=${value}`);\n        });\n\n        return queryParameterArray.join(\"&\");\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ClientConfiguration,\n    buildClientConfiguration,\n    CommonClientConfiguration,\n} from \"../config/ClientConfiguration\";\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport { NetworkManager, NetworkResponse } from \"../network/NetworkManager\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport { Authority } from \"../authority/Authority\";\nimport { Logger } from \"../logger/Logger\";\nimport { Constants, HeaderNames } from \"../utils/Constants\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse\";\nimport { CacheManager } from \"../cache/CacheManager\";\nimport { ServerTelemetryManager } from \"../telemetry/server/ServerTelemetryManager\";\nimport { RequestThumbprint } from \"../network/RequestThumbprint\";\nimport { version, name } from \"../packageMetadata\";\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../error/ClientAuthError\";\nimport { CcsCredential, CcsCredentialType } from \"../account/CcsCredential\";\nimport { buildClientInfoFromHomeAccountId } from \"../account/ClientInfo\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { RequestParameterBuilder } from \"../request/RequestParameterBuilder\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent\";\n\n/**\n * Base application class which will construct requests to send to and handle responses from the Microsoft STS using the authorization code flow.\n * @internal\n */\nexport abstract class BaseClient {\n    // Logger object\n    public logger: Logger;\n\n    // Application config\n    protected config: CommonClientConfiguration;\n\n    // Crypto Interface\n    protected cryptoUtils: ICrypto;\n\n    // Storage Interface\n    protected cacheManager: CacheManager;\n\n    // Network Interface\n    protected networkClient: INetworkModule;\n\n    // Server Telemetry Manager\n    protected serverTelemetryManager: ServerTelemetryManager | null;\n\n    // Network Manager\n    protected networkManager: NetworkManager;\n\n    // Default authority object\n    public authority: Authority;\n\n    // Performance telemetry client\n    protected performanceClient?: IPerformanceClient;\n\n    protected constructor(\n        configuration: ClientConfiguration,\n        performanceClient?: IPerformanceClient\n    ) {\n        // Set the configuration\n        this.config = buildClientConfiguration(configuration);\n\n        // Initialize the logger\n        this.logger = new Logger(this.config.loggerOptions, name, version);\n\n        // Initialize crypto\n        this.cryptoUtils = this.config.cryptoInterface;\n\n        // Initialize storage interface\n        this.cacheManager = this.config.storageInterface;\n\n        // Set the network interface\n        this.networkClient = this.config.networkInterface;\n\n        // Set the NetworkManager\n        this.networkManager = new NetworkManager(\n            this.networkClient,\n            this.cacheManager\n        );\n\n        // Set TelemetryManager\n        this.serverTelemetryManager = this.config.serverTelemetryManager;\n\n        // set Authority\n        this.authority = this.config.authOptions.authority;\n\n        // set performance telemetry client\n        this.performanceClient = performanceClient;\n    }\n\n    /**\n     * Creates default headers for requests to token endpoint\n     */\n    protected createTokenRequestHeaders(\n        ccsCred?: CcsCredential\n    ): Record<string, string> {\n        const headers: Record<string, string> = {};\n        headers[HeaderNames.CONTENT_TYPE] = Constants.URL_FORM_CONTENT_TYPE;\n        if (!this.config.systemOptions.preventCorsPreflight && ccsCred) {\n            switch (ccsCred.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(\n                            ccsCred.credential\n                        );\n                        headers[\n                            HeaderNames.CCS_HEADER\n                        ] = `Oid:${clientInfo.uid}@${clientInfo.utid}`;\n                    } catch (e) {\n                        this.logger.verbose(\n                            \"Could not parse home account ID for CCS Header: \" +\n                                e\n                        );\n                    }\n                    break;\n                case CcsCredentialType.UPN:\n                    headers[\n                        HeaderNames.CCS_HEADER\n                    ] = `UPN: ${ccsCred.credential}`;\n                    break;\n            }\n        }\n        return headers;\n    }\n\n    /**\n     * Http post to token endpoint\n     * @param tokenEndpoint\n     * @param queryString\n     * @param headers\n     * @param thumbprint\n     */\n    protected async executePostToTokenEndpoint(\n        tokenEndpoint: string,\n        queryString: string,\n        headers: Record<string, string>,\n        thumbprint: RequestThumbprint,\n        correlationId: string\n    ): Promise<NetworkResponse<ServerAuthorizationTokenResponse>> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.BaseClientExecutePostToTokenEndpoint,\n            correlationId\n        );\n        const response =\n            await this.networkManager.sendPostRequest<ServerAuthorizationTokenResponse>(\n                thumbprint,\n                tokenEndpoint,\n                { body: queryString, headers: headers }\n            );\n        this.performanceClient?.addFields(\n            {\n                refreshTokenSize: response.body.refresh_token?.length || 0,\n                httpVerToken:\n                    response.headers?.[HeaderNames.X_MS_HTTP_VERSION] || \"\",\n            },\n            correlationId\n        );\n\n        if (\n            this.config.serverTelemetryManager &&\n            response.status < 500 &&\n            response.status !== 429\n        ) {\n            // Telemetry data successfully logged by server, clear Telemetry cache\n            this.config.serverTelemetryManager.clearTelemetryCache();\n        }\n\n        return response;\n    }\n\n    /**\n     * Updates the authority object of the client. Endpoint discovery must be completed.\n     * @param updatedAuthority\n     */\n    updateAuthority(updatedAuthority: Authority): void {\n        if (!updatedAuthority.discoveryComplete()) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n        this.authority = updatedAuthority;\n    }\n\n    /**\n     * Creates query string for the /token request\n     * @param request\n     */\n    createTokenQueryParameters(request: BaseAuthRequest): string {\n        const parameterBuilder = new RequestParameterBuilder();\n\n        if (request.tokenQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(\n                request.tokenQueryParameters\n            );\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ICrypto, SignedHttpRequestParameters } from \"./ICrypto\";\nimport { TimeUtils } from \"../utils/TimeUtils\";\nimport { UrlString } from \"../url/UrlString\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent\";\nimport { invokeAsync } from \"../utils/FunctionWrappers\";\nimport { Logger } from \"../logger/Logger\";\n\n/**\n * See eSTS docs for more info.\n * - A kid element, with the value containing an RFC 7638-compliant JWK thumbprint that is base64 encoded.\n * -  xms_ksl element, representing the storage location of the key's secret component on the client device. One of two values:\n *      - sw: software storage\n *      - uhw: hardware storage\n */\ntype ReqCnf = {\n    kid: string;\n    xms_ksl: KeyLocation;\n};\n\nexport type ReqCnfData = {\n    kid: string;\n    reqCnfString: string;\n    reqCnfHash: string;\n};\n\nconst KeyLocation = {\n    SW: \"sw\",\n    UHW: \"uhw\",\n} as const;\nexport type KeyLocation = (typeof KeyLocation)[keyof typeof KeyLocation];\n\n/** @internal */\nexport class PopTokenGenerator {\n    private cryptoUtils: ICrypto;\n    private performanceClient?: IPerformanceClient;\n\n    constructor(cryptoUtils: ICrypto, performanceClient?: IPerformanceClient) {\n        this.cryptoUtils = cryptoUtils;\n        this.performanceClient = performanceClient;\n    }\n\n    /**\n     * Generates the req_cnf validated at the RP in the POP protocol for SHR parameters\n     * and returns an object containing the keyid, the full req_cnf string and the req_cnf string hash\n     * @param request\n     * @returns\n     */\n    async generateCnf(\n        request: SignedHttpRequestParameters,\n        logger: Logger\n    ): Promise<ReqCnfData> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.PopTokenGenerateCnf,\n            request.correlationId\n        );\n\n        const reqCnf = await invokeAsync(\n            this.generateKid.bind(this),\n            PerformanceEvents.PopTokenGenerateCnf,\n            logger,\n            this.performanceClient,\n            request.correlationId\n        )(request);\n        const reqCnfString: string = this.cryptoUtils.base64Encode(\n            JSON.stringify(reqCnf)\n        );\n\n        return {\n            kid: reqCnf.kid,\n            reqCnfString,\n            reqCnfHash: await this.cryptoUtils.hashString(reqCnfString),\n        };\n    }\n\n    /**\n     * Generates key_id for a SHR token request\n     * @param request\n     * @returns\n     */\n    async generateKid(request: SignedHttpRequestParameters): Promise<ReqCnf> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.PopTokenGenerateKid,\n            request.correlationId\n        );\n\n        const kidThumbprint = await this.cryptoUtils.getPublicKeyThumbprint(\n            request\n        );\n\n        return {\n            kid: kidThumbprint,\n            xms_ksl: KeyLocation.SW,\n        };\n    }\n\n    /**\n     * Signs the POP access_token with the local generated key-pair\n     * @param accessToken\n     * @param request\n     * @returns\n     */\n    async signPopToken(\n        accessToken: string,\n        keyId: string,\n        request: SignedHttpRequestParameters\n    ): Promise<string> {\n        return this.signPayload(accessToken, keyId, request);\n    }\n\n    /**\n     * Utility function to generate the signed JWT for an access_token\n     * @param payload\n     * @param kid\n     * @param request\n     * @param claims\n     * @returns\n     */\n    async signPayload(\n        payload: string,\n        keyId: string,\n        request: SignedHttpRequestParameters,\n        claims?: object\n    ): Promise<string> {\n        // Deconstruct request to extract SHR parameters\n        const {\n            resourceRequestMethod,\n            resourceRequestUri,\n            shrClaims,\n            shrNonce,\n        } = request;\n\n        const resourceUrlString = resourceRequestUri\n            ? new UrlString(resourceRequestUri)\n            : undefined;\n        const resourceUrlComponents = resourceUrlString?.getUrlComponents();\n        return await this.cryptoUtils.signJwt(\n            {\n                at: payload,\n                ts: TimeUtils.nowSeconds(),\n                m: resourceRequestMethod?.toUpperCase(),\n                u: resourceUrlComponents?.HostNameAndPort,\n                nonce: shrNonce || this.cryptoUtils.createNewGuid(),\n                p: resourceUrlComponents?.AbsolutePath,\n                q: resourceUrlComponents?.QueryString\n                    ? [[], resourceUrlComponents.QueryString]\n                    : undefined,\n                client_claims: shrClaims || undefined,\n                ...claims,\n            },\n            keyId,\n            request.correlationId\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ISerializableTokenCache } from \"../interface/ISerializableTokenCache\";\n\n/**\n * This class instance helps track the memory changes facilitating\n * decisions to read from and write to the persistent cache\n */ export class TokenCacheContext {\n    /**\n     * boolean indicating cache change\n     */\n    hasChanged: boolean;\n    /**\n     * serializable token cache interface\n     */\n    cache: ISerializableTokenCache;\n\n    constructor(tokenCache: ISerializableTokenCache, hasChanged: boolean) {\n        this.cache = tokenCache;\n        this.hasChanged = hasChanged;\n    }\n\n    /**\n     * boolean which indicates the changes in cache\n     */\n    get cacheHasChanged(): boolean {\n        return this.hasChanged;\n    }\n\n    /**\n     * function to retrieve the token cache\n     */\n    get tokenCache(): ISerializableTokenCache {\n        return this.cache;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ServerAuthorizationTokenResponse } from \"./ServerAuthorizationTokenResponse\";\nimport { buildClientInfo } from \"../account/ClientInfo\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\nimport { ServerAuthorizationCodeResponse } from \"./ServerAuthorizationCodeResponse\";\nimport { Logger } from \"../logger/Logger\";\nimport { ServerError } from \"../error/ServerError\";\nimport { ScopeSet } from \"../request/ScopeSet\";\nimport { AuthenticationResult } from \"./AuthenticationResult\";\nimport { AccountEntity } from \"../cache/entities/AccountEntity\";\nimport { Authority } from \"../authority/Authority\";\nimport { IdTokenEntity } from \"../cache/entities/IdTokenEntity\";\nimport { AccessTokenEntity } from \"../cache/entities/AccessTokenEntity\";\nimport { RefreshTokenEntity } from \"../cache/entities/RefreshTokenEntity\";\nimport {\n    InteractionRequiredAuthError,\n    isInteractionRequiredError,\n} from \"../error/InteractionRequiredAuthError\";\nimport { CacheRecord } from \"../cache/entities/CacheRecord\";\nimport { CacheManager } from \"../cache/CacheManager\";\nimport { ProtocolUtils, RequestStateObject } from \"../utils/ProtocolUtils\";\nimport {\n    AuthenticationScheme,\n    Constants,\n    THE_FAMILY_ID,\n    HttpStatus,\n} from \"../utils/Constants\";\nimport { PopTokenGenerator } from \"../crypto/PopTokenGenerator\";\nimport { AppMetadataEntity } from \"../cache/entities/AppMetadataEntity\";\nimport { ICachePlugin } from \"../cache/interface/ICachePlugin\";\nimport { TokenCacheContext } from \"../cache/persistence/TokenCacheContext\";\nimport { ISerializableTokenCache } from \"../cache/interface/ISerializableTokenCache\";\nimport { AuthorizationCodePayload } from \"./AuthorizationCodePayload\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent\";\nimport { checkMaxAge, extractTokenClaims } from \"../account/AuthToken\";\nimport { TokenClaims } from \"../account/TokenClaims\";\n\n/**\n * Class that handles response parsing.\n * @internal\n */\nexport class ResponseHandler {\n    private clientId: string;\n    private cacheStorage: CacheManager;\n    private cryptoObj: ICrypto;\n    private logger: Logger;\n    private homeAccountIdentifier: string;\n    private serializableCache: ISerializableTokenCache | null;\n    private persistencePlugin: ICachePlugin | null;\n    private performanceClient?: IPerformanceClient;\n\n    constructor(\n        clientId: string,\n        cacheStorage: CacheManager,\n        cryptoObj: ICrypto,\n        logger: Logger,\n        serializableCache: ISerializableTokenCache | null,\n        persistencePlugin: ICachePlugin | null,\n        performanceClient?: IPerformanceClient\n    ) {\n        this.clientId = clientId;\n        this.cacheStorage = cacheStorage;\n        this.cryptoObj = cryptoObj;\n        this.logger = logger;\n        this.serializableCache = serializableCache;\n        this.persistencePlugin = persistencePlugin;\n        this.performanceClient = performanceClient;\n    }\n\n    /**\n     * Function which validates server authorization code response.\n     * @param serverResponseHash\n     * @param cachedState\n     * @param cryptoObj\n     */\n    validateServerAuthorizationCodeResponse(\n        serverResponseHash: ServerAuthorizationCodeResponse,\n        cachedState: string,\n        cryptoObj: ICrypto\n    ): void {\n        if (!serverResponseHash.state || !cachedState) {\n            throw serverResponseHash.state\n                ? createClientAuthError(\n                      ClientAuthErrorCodes.stateNotFound,\n                      \"Cached State\"\n                  )\n                : createClientAuthError(\n                      ClientAuthErrorCodes.stateNotFound,\n                      \"Server State\"\n                  );\n        }\n\n        let decodedServerResponseHash: string;\n        let decodedCachedState: string;\n\n        try {\n            decodedServerResponseHash = decodeURIComponent(\n                serverResponseHash.state\n            );\n        } catch (e) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.invalidState,\n                serverResponseHash.state\n            );\n        }\n\n        try {\n            decodedCachedState = decodeURIComponent(cachedState);\n        } catch (e) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.invalidState,\n                serverResponseHash.state\n            );\n        }\n\n        if (decodedServerResponseHash !== decodedCachedState) {\n            throw createClientAuthError(ClientAuthErrorCodes.stateMismatch);\n        }\n\n        // Check for error\n        if (\n            serverResponseHash.error ||\n            serverResponseHash.error_description ||\n            serverResponseHash.suberror\n        ) {\n            if (\n                isInteractionRequiredError(\n                    serverResponseHash.error,\n                    serverResponseHash.error_description,\n                    serverResponseHash.suberror\n                )\n            ) {\n                throw new InteractionRequiredAuthError(\n                    serverResponseHash.error || Constants.EMPTY_STRING,\n                    serverResponseHash.error_description,\n                    serverResponseHash.suberror,\n                    serverResponseHash.timestamp || Constants.EMPTY_STRING,\n                    serverResponseHash.trace_id || Constants.EMPTY_STRING,\n                    serverResponseHash.correlation_id || Constants.EMPTY_STRING,\n                    serverResponseHash.claims || Constants.EMPTY_STRING\n                );\n            }\n\n            throw new ServerError(\n                serverResponseHash.error || Constants.EMPTY_STRING,\n                serverResponseHash.error_description,\n                serverResponseHash.suberror\n            );\n        }\n\n        if (serverResponseHash.client_info) {\n            buildClientInfo(serverResponseHash.client_info, cryptoObj);\n        }\n    }\n\n    /**\n     * Function which validates server authorization token response.\n     * @param serverResponse\n     * @param refreshAccessToken\n     */\n    validateTokenResponse(\n        serverResponse: ServerAuthorizationTokenResponse,\n        refreshAccessToken?: boolean\n    ): void {\n        // Check for error\n        if (\n            serverResponse.error ||\n            serverResponse.error_description ||\n            serverResponse.suberror\n        ) {\n            const errString = `${serverResponse.error_codes} - [${serverResponse.timestamp}]: ${serverResponse.error_description} - Correlation ID: ${serverResponse.correlation_id} - Trace ID: ${serverResponse.trace_id}`;\n            const serverError = new ServerError(\n                serverResponse.error,\n                errString,\n                serverResponse.suberror\n            );\n\n            // check if 500 error\n            if (\n                refreshAccessToken &&\n                serverResponse.status &&\n                serverResponse.status >= HttpStatus.SERVER_ERROR_RANGE_START &&\n                serverResponse.status <= HttpStatus.SERVER_ERROR_RANGE_END\n            ) {\n                this.logger.warning(\n                    `executeTokenRequest:validateTokenResponse - AAD is currently unavailable and the access token is unable to be refreshed.\\n${serverError}`\n                );\n\n                // don't throw an exception, but alert the user via a log that the token was unable to be refreshed\n                return;\n                // check if 400 error\n            } else if (\n                refreshAccessToken &&\n                serverResponse.status &&\n                serverResponse.status >= HttpStatus.CLIENT_ERROR_RANGE_START &&\n                serverResponse.status <= HttpStatus.CLIENT_ERROR_RANGE_END\n            ) {\n                this.logger.warning(\n                    `executeTokenRequest:validateTokenResponse - AAD is currently available but is unable to refresh the access token.\\n${serverError}`\n                );\n\n                // don't throw an exception, but alert the user via a log that the token was unable to be refreshed\n                return;\n            }\n\n            if (\n                isInteractionRequiredError(\n                    serverResponse.error,\n                    serverResponse.error_description,\n                    serverResponse.suberror\n                )\n            ) {\n                throw new InteractionRequiredAuthError(\n                    serverResponse.error,\n                    serverResponse.error_description,\n                    serverResponse.suberror,\n                    serverResponse.timestamp || Constants.EMPTY_STRING,\n                    serverResponse.trace_id || Constants.EMPTY_STRING,\n                    serverResponse.correlation_id || Constants.EMPTY_STRING,\n                    serverResponse.claims || Constants.EMPTY_STRING\n                );\n            }\n\n            throw serverError;\n        }\n    }\n\n    /**\n     * Returns a constructed token response based on given string. Also manages the cache updates and cleanups.\n     * @param serverTokenResponse\n     * @param authority\n     */\n    async handleServerTokenResponse(\n        serverTokenResponse: ServerAuthorizationTokenResponse,\n        authority: Authority,\n        reqTimestamp: number,\n        request: BaseAuthRequest,\n        authCodePayload?: AuthorizationCodePayload,\n        userAssertionHash?: string,\n        handlingRefreshTokenResponse?: boolean,\n        forceCacheRefreshTokenResponse?: boolean,\n        serverRequestId?: string\n    ): Promise<AuthenticationResult> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.HandleServerTokenResponse,\n            serverTokenResponse.correlation_id\n        );\n\n        // create an idToken object (not entity)\n        let idTokenClaims: TokenClaims | undefined;\n        if (serverTokenResponse.id_token) {\n            idTokenClaims = extractTokenClaims(\n                serverTokenResponse.id_token || Constants.EMPTY_STRING,\n                this.cryptoObj.base64Decode\n            );\n\n            // token nonce check (TODO: Add a warning if no nonce is given?)\n            if (authCodePayload && authCodePayload.nonce) {\n                if (idTokenClaims.nonce !== authCodePayload.nonce) {\n                    throw createClientAuthError(\n                        ClientAuthErrorCodes.nonceMismatch\n                    );\n                }\n            }\n\n            // token max_age check\n            if (request.maxAge || request.maxAge === 0) {\n                const authTime = idTokenClaims.auth_time;\n                if (!authTime) {\n                    throw createClientAuthError(\n                        ClientAuthErrorCodes.authTimeNotFound\n                    );\n                }\n\n                checkMaxAge(authTime, request.maxAge);\n            }\n        }\n\n        // generate homeAccountId\n        this.homeAccountIdentifier = AccountEntity.generateHomeAccountId(\n            serverTokenResponse.client_info || Constants.EMPTY_STRING,\n            authority.authorityType,\n            this.logger,\n            this.cryptoObj,\n            idTokenClaims\n        );\n\n        // save the response tokens\n        let requestStateObj: RequestStateObject | undefined;\n        if (!!authCodePayload && !!authCodePayload.state) {\n            requestStateObj = ProtocolUtils.parseRequestState(\n                this.cryptoObj,\n                authCodePayload.state\n            );\n        }\n\n        // Add keyId from request to serverTokenResponse if defined\n        serverTokenResponse.key_id =\n            serverTokenResponse.key_id || request.sshKid || undefined;\n\n        const cacheRecord = this.generateCacheRecord(\n            serverTokenResponse,\n            authority,\n            reqTimestamp,\n            request,\n            idTokenClaims,\n            userAssertionHash,\n            authCodePayload\n        );\n        let cacheContext;\n        try {\n            if (this.persistencePlugin && this.serializableCache) {\n                this.logger.verbose(\n                    \"Persistence enabled, calling beforeCacheAccess\"\n                );\n                cacheContext = new TokenCacheContext(\n                    this.serializableCache,\n                    true\n                );\n                await this.persistencePlugin.beforeCacheAccess(cacheContext);\n            }\n            /*\n             * When saving a refreshed tokens to the cache, it is expected that the account that was used is present in the cache.\n             * If not present, we should return null, as it's the case that another application called removeAccount in between\n             * the calls to getAllAccounts and acquireTokenSilent. We should not overwrite that removal, unless explicitly flagged by\n             * the developer, as in the case of refresh token flow used in ADAL Node to MSAL Node migration.\n             */\n            if (\n                handlingRefreshTokenResponse &&\n                !forceCacheRefreshTokenResponse &&\n                cacheRecord.account\n            ) {\n                const key = cacheRecord.account.generateAccountKey();\n                const account = this.cacheStorage.getAccount(key);\n                if (!account) {\n                    this.logger.warning(\n                        \"Account used to refresh tokens not in persistence, refreshed tokens will not be stored in the cache\"\n                    );\n                    return ResponseHandler.generateAuthenticationResult(\n                        this.cryptoObj,\n                        authority,\n                        cacheRecord,\n                        false,\n                        request,\n                        idTokenClaims,\n                        requestStateObj,\n                        undefined,\n                        serverRequestId\n                    );\n                }\n            }\n            await this.cacheStorage.saveCacheRecord(\n                cacheRecord,\n                request.storeInCache\n            );\n        } finally {\n            if (\n                this.persistencePlugin &&\n                this.serializableCache &&\n                cacheContext\n            ) {\n                this.logger.verbose(\n                    \"Persistence enabled, calling afterCacheAccess\"\n                );\n                await this.persistencePlugin.afterCacheAccess(cacheContext);\n            }\n        }\n        return ResponseHandler.generateAuthenticationResult(\n            this.cryptoObj,\n            authority,\n            cacheRecord,\n            false,\n            request,\n            idTokenClaims,\n            requestStateObj,\n            serverTokenResponse,\n            serverRequestId\n        );\n    }\n\n    /**\n     * Generates CacheRecord\n     * @param serverTokenResponse\n     * @param idTokenObj\n     * @param authority\n     */\n    private generateCacheRecord(\n        serverTokenResponse: ServerAuthorizationTokenResponse,\n        authority: Authority,\n        reqTimestamp: number,\n        request: BaseAuthRequest,\n        idTokenClaims?: TokenClaims,\n        userAssertionHash?: string,\n        authCodePayload?: AuthorizationCodePayload\n    ): CacheRecord {\n        const env = authority.getPreferredCache();\n        if (!env) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.invalidCacheEnvironment\n            );\n        }\n\n        // IdToken: non AAD scenarios can have empty realm\n        let cachedIdToken: IdTokenEntity | undefined;\n        let cachedAccount: AccountEntity | undefined;\n        if (serverTokenResponse.id_token && !!idTokenClaims) {\n            cachedIdToken = IdTokenEntity.createIdTokenEntity(\n                this.homeAccountIdentifier,\n                env,\n                serverTokenResponse.id_token,\n                this.clientId,\n                idTokenClaims.tid || \"\"\n            );\n\n            cachedAccount = AccountEntity.createAccount(\n                {\n                    homeAccountId: this.homeAccountIdentifier,\n                    idTokenClaims: idTokenClaims,\n                    clientInfo: serverTokenResponse.client_info,\n                    cloudGraphHostName: authCodePayload?.cloud_graph_host_name,\n                    msGraphHost: authCodePayload?.msgraph_host,\n                },\n                authority\n            );\n        }\n\n        // AccessToken\n        let cachedAccessToken: AccessTokenEntity | null = null;\n        if (serverTokenResponse.access_token) {\n            // If scopes not returned in server response, use request scopes\n            const responseScopes = serverTokenResponse.scope\n                ? ScopeSet.fromString(serverTokenResponse.scope)\n                : new ScopeSet(request.scopes || []);\n\n            /*\n             * Use timestamp calculated before request\n             * Server may return timestamps as strings, parse to numbers if so.\n             */\n            const expiresIn: number =\n                (typeof serverTokenResponse.expires_in === \"string\"\n                    ? parseInt(serverTokenResponse.expires_in, 10)\n                    : serverTokenResponse.expires_in) || 0;\n            const extExpiresIn: number =\n                (typeof serverTokenResponse.ext_expires_in === \"string\"\n                    ? parseInt(serverTokenResponse.ext_expires_in, 10)\n                    : serverTokenResponse.ext_expires_in) || 0;\n            const refreshIn: number | undefined =\n                (typeof serverTokenResponse.refresh_in === \"string\"\n                    ? parseInt(serverTokenResponse.refresh_in, 10)\n                    : serverTokenResponse.refresh_in) || undefined;\n            const tokenExpirationSeconds = reqTimestamp + expiresIn;\n            const extendedTokenExpirationSeconds =\n                tokenExpirationSeconds + extExpiresIn;\n            const refreshOnSeconds =\n                refreshIn && refreshIn > 0\n                    ? reqTimestamp + refreshIn\n                    : undefined;\n\n            // non AAD scenarios can have empty realm\n            cachedAccessToken = AccessTokenEntity.createAccessTokenEntity(\n                this.homeAccountIdentifier,\n                env,\n                serverTokenResponse.access_token || Constants.EMPTY_STRING,\n                this.clientId,\n                idTokenClaims?.tid || authority.tenant,\n                responseScopes.printScopes(),\n                tokenExpirationSeconds,\n                extendedTokenExpirationSeconds,\n                this.cryptoObj,\n                refreshOnSeconds,\n                serverTokenResponse.token_type,\n                userAssertionHash,\n                serverTokenResponse.key_id,\n                request.claims,\n                request.requestedClaimsHash\n            );\n        }\n\n        // refreshToken\n        let cachedRefreshToken: RefreshTokenEntity | null = null;\n        if (serverTokenResponse.refresh_token) {\n            cachedRefreshToken = RefreshTokenEntity.createRefreshTokenEntity(\n                this.homeAccountIdentifier,\n                env,\n                serverTokenResponse.refresh_token || Constants.EMPTY_STRING,\n                this.clientId,\n                serverTokenResponse.foci,\n                userAssertionHash\n            );\n        }\n\n        // appMetadata\n        let cachedAppMetadata: AppMetadataEntity | null = null;\n        if (serverTokenResponse.foci) {\n            cachedAppMetadata = AppMetadataEntity.createAppMetadataEntity(\n                this.clientId,\n                env,\n                serverTokenResponse.foci\n            );\n        }\n\n        return new CacheRecord(\n            cachedAccount,\n            cachedIdToken,\n            cachedAccessToken,\n            cachedRefreshToken,\n            cachedAppMetadata\n        );\n    }\n\n    /**\n     * Creates an @AuthenticationResult from @CacheRecord , @IdToken , and a boolean that states whether or not the result is from cache.\n     *\n     * Optionally takes a state string that is set as-is in the response.\n     *\n     * @param cacheRecord\n     * @param idTokenObj\n     * @param fromTokenCache\n     * @param stateString\n     */\n    static async generateAuthenticationResult(\n        cryptoObj: ICrypto,\n        authority: Authority,\n        cacheRecord: CacheRecord,\n        fromTokenCache: boolean,\n        request: BaseAuthRequest,\n        idTokenClaims?: TokenClaims,\n        requestState?: RequestStateObject,\n        serverTokenResponse?: ServerAuthorizationTokenResponse,\n        requestId?: string\n    ): Promise<AuthenticationResult> {\n        let accessToken: string = Constants.EMPTY_STRING;\n        let responseScopes: Array<string> = [];\n        let expiresOn: Date | null = null;\n        let extExpiresOn: Date | undefined;\n        let refreshOn: Date | undefined;\n        let familyId: string = Constants.EMPTY_STRING;\n\n        if (cacheRecord.accessToken) {\n            if (\n                cacheRecord.accessToken.tokenType === AuthenticationScheme.POP\n            ) {\n                const popTokenGenerator: PopTokenGenerator =\n                    new PopTokenGenerator(cryptoObj);\n                const { secret, keyId } = cacheRecord.accessToken;\n\n                if (!keyId) {\n                    throw createClientAuthError(\n                        ClientAuthErrorCodes.keyIdMissing\n                    );\n                }\n\n                accessToken = await popTokenGenerator.signPopToken(\n                    secret,\n                    keyId,\n                    request\n                );\n            } else {\n                accessToken = cacheRecord.accessToken.secret;\n            }\n            responseScopes = ScopeSet.fromString(\n                cacheRecord.accessToken.target\n            ).asArray();\n            expiresOn = new Date(\n                Number(cacheRecord.accessToken.expiresOn) * 1000\n            );\n            extExpiresOn = new Date(\n                Number(cacheRecord.accessToken.extendedExpiresOn) * 1000\n            );\n            if (cacheRecord.accessToken.refreshOn) {\n                refreshOn = new Date(\n                    Number(cacheRecord.accessToken.refreshOn) * 1000\n                );\n            }\n        }\n\n        if (cacheRecord.appMetadata) {\n            familyId =\n                cacheRecord.appMetadata.familyId === THE_FAMILY_ID\n                    ? THE_FAMILY_ID\n                    : \"\";\n        }\n        const uid = idTokenClaims?.oid || idTokenClaims?.sub || \"\";\n        const tid = idTokenClaims?.tid || \"\";\n\n        // for hybrid + native bridge enablement, send back the native account Id\n        if (serverTokenResponse?.spa_accountid && !!cacheRecord.account) {\n            cacheRecord.account.nativeAccountId =\n                serverTokenResponse?.spa_accountid;\n        }\n\n        return {\n            authority: authority.canonicalAuthority,\n            uniqueId: uid,\n            tenantId: tid,\n            scopes: responseScopes,\n            account: cacheRecord.account\n                ? cacheRecord.account.getAccountInfo()\n                : null,\n            idToken: cacheRecord?.idToken?.secret || \"\",\n            idTokenClaims: idTokenClaims || {},\n            accessToken: accessToken,\n            fromCache: fromTokenCache,\n            expiresOn: expiresOn,\n            extExpiresOn: extExpiresOn,\n            refreshOn: refreshOn,\n            correlationId: request.correlationId,\n            requestId: requestId || Constants.EMPTY_STRING,\n            familyId: familyId,\n            tokenType:\n                cacheRecord.accessToken?.tokenType || Constants.EMPTY_STRING,\n            state: requestState\n                ? requestState.userRequestState\n                : Constants.EMPTY_STRING,\n            cloudGraphHostName:\n                cacheRecord.account?.cloudGraphHostName ||\n                Constants.EMPTY_STRING,\n            msGraphHost:\n                cacheRecord.account?.msGraphHost || Constants.EMPTY_STRING,\n            code: serverTokenResponse?.spa_code,\n            fromNativeBroker: false,\n        };\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BaseClient } from \"./BaseClient\";\nimport { CommonAuthorizationUrlRequest } from \"../request/CommonAuthorizationUrlRequest\";\nimport { CommonAuthorizationCodeRequest } from \"../request/CommonAuthorizationCodeRequest\";\nimport { Authority } from \"../authority/Authority\";\nimport { RequestParameterBuilder } from \"../request/RequestParameterBuilder\";\nimport {\n    GrantType,\n    AuthenticationScheme,\n    PromptValue,\n    Separators,\n    AADServerParamKeys,\n    HeaderNames,\n} from \"../utils/Constants\";\nimport {\n    ClientConfiguration,\n    isOidcProtocolMode,\n} from \"../config/ClientConfiguration\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse\";\nimport { NetworkResponse } from \"../network/NetworkManager\";\nimport { ResponseHandler } from \"../response/ResponseHandler\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\nimport { UrlString } from \"../url/UrlString\";\nimport { ServerAuthorizationCodeResponse } from \"../response/ServerAuthorizationCodeResponse\";\nimport { CommonEndSessionRequest } from \"../request/CommonEndSessionRequest\";\nimport { PopTokenGenerator } from \"../crypto/PopTokenGenerator\";\nimport { RequestThumbprint } from \"../network/RequestThumbprint\";\nimport { AuthorizationCodePayload } from \"../response/AuthorizationCodePayload\";\nimport { TimeUtils } from \"../utils/TimeUtils\";\nimport { AccountInfo } from \"../account/AccountInfo\";\nimport {\n    buildClientInfoFromHomeAccountId,\n    buildClientInfo,\n} from \"../account/ClientInfo\";\nimport { CcsCredentialType, CcsCredential } from \"../account/CcsCredential\";\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError\";\nimport { RequestValidator } from \"../request/RequestValidator\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent\";\nimport { invokeAsync } from \"../utils/FunctionWrappers\";\n\n/**\n * Oauth2.0 Authorization Code client\n * @internal\n */\nexport class AuthorizationCodeClient extends BaseClient {\n    // Flag to indicate if client is for hybrid spa auth code redemption\n    protected includeRedirectUri: boolean = true;\n    private oidcDefaultScopes;\n\n    constructor(\n        configuration: ClientConfiguration,\n        performanceClient?: IPerformanceClient\n    ) {\n        super(configuration, performanceClient);\n        this.oidcDefaultScopes =\n            this.config.authOptions.authority.options.OIDCOptions?.defaultScopes;\n    }\n\n    /**\n     * Creates the URL of the authorization request letting the user input credentials and consent to the\n     * application. The URL target the /authorize endpoint of the authority configured in the\n     * application object.\n     *\n     * Once the user inputs their credentials and consents, the authority will send a response to the redirect URI\n     * sent in the request and should contain an authorization code, which can then be used to acquire tokens via\n     * acquireToken(AuthorizationCodeRequest)\n     * @param request\n     */\n    async getAuthCodeUrl(\n        request: CommonAuthorizationUrlRequest\n    ): Promise<string> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.GetAuthCodeUrl,\n            request.correlationId\n        );\n\n        const queryString = await invokeAsync(\n            this.createAuthCodeUrlQueryString.bind(this),\n            PerformanceEvents.AuthClientCreateQueryString,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request);\n\n        return UrlString.appendQueryString(\n            this.authority.authorizationEndpoint,\n            queryString\n        );\n    }\n\n    /**\n     * API to acquire a token in exchange of 'authorization_code` acquired by the user in the first leg of the\n     * authorization_code_grant\n     * @param request\n     */\n    async acquireToken(\n        request: CommonAuthorizationCodeRequest,\n        authCodePayload?: AuthorizationCodePayload\n    ): Promise<AuthenticationResult> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthClientAcquireToken,\n            request.correlationId\n        );\n\n        if (!request.code) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.requestCannotBeMade\n            );\n        }\n\n        const reqTimestamp = TimeUtils.nowSeconds();\n        const response = await invokeAsync(\n            this.executeTokenRequest.bind(this),\n            PerformanceEvents.AuthClientExecuteTokenRequest,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(this.authority, request);\n\n        // Retrieve requestId from response headers\n        const requestId = response.headers?.[HeaderNames.X_MS_REQUEST_ID];\n\n        const responseHandler = new ResponseHandler(\n            this.config.authOptions.clientId,\n            this.cacheManager,\n            this.cryptoUtils,\n            this.logger,\n            this.config.serializableCache,\n            this.config.persistencePlugin,\n            this.performanceClient\n        );\n\n        // Validate response. This function throws a server error if an error is returned by the server.\n        responseHandler.validateTokenResponse(response.body);\n\n        return invokeAsync(\n            responseHandler.handleServerTokenResponse.bind(responseHandler),\n            PerformanceEvents.HandleServerTokenResponse,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(\n            response.body,\n            this.authority,\n            reqTimestamp,\n            request,\n            authCodePayload,\n            undefined,\n            undefined,\n            undefined,\n            requestId\n        );\n    }\n\n    /**\n     * Handles the hash fragment response from public client code request. Returns a code response used by\n     * the client to exchange for a token in acquireToken.\n     * @param hashFragment\n     */\n    handleFragmentResponse(\n        hashFragment: string,\n        cachedState: string\n    ): AuthorizationCodePayload {\n        // Handle responses.\n        const responseHandler = new ResponseHandler(\n            this.config.authOptions.clientId,\n            this.cacheManager,\n            this.cryptoUtils,\n            this.logger,\n            null,\n            null\n        );\n\n        const serverParams: ServerAuthorizationCodeResponse =\n            UrlString.getDeserializedCodeResponse(\n                this.config.authOptions.authority.options.OIDCOptions\n                    ?.serverResponseType,\n                hashFragment\n            );\n\n        // Get code response\n        responseHandler.validateServerAuthorizationCodeResponse(\n            serverParams,\n            cachedState,\n            this.cryptoUtils\n        );\n\n        // throw when there is no auth code in the response\n        if (!serverParams.code) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.authorizationCodeMissingFromServerResponse\n            );\n        }\n        return {\n            ...serverParams,\n            // Code param is optional in ServerAuthorizationCodeResponse but required in AuthorizationCodePaylod\n            code: serverParams.code,\n        };\n    }\n\n    /**\n     * Used to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param authorityUri\n     */\n    getLogoutUri(logoutRequest: CommonEndSessionRequest): string {\n        // Throw error if logoutRequest is null/undefined\n        if (!logoutRequest) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.logoutRequestEmpty\n            );\n        }\n        const queryString = this.createLogoutUrlQueryString(logoutRequest);\n\n        // Construct logout URI\n        return UrlString.appendQueryString(\n            this.authority.endSessionEndpoint,\n            queryString\n        );\n    }\n\n    /**\n     * Executes POST request to token endpoint\n     * @param authority\n     * @param request\n     */\n    private async executeTokenRequest(\n        authority: Authority,\n        request: CommonAuthorizationCodeRequest\n    ): Promise<NetworkResponse<ServerAuthorizationTokenResponse>> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthClientExecuteTokenRequest,\n            request.correlationId\n        );\n\n        const queryParametersString = this.createTokenQueryParameters(request);\n        const endpoint = UrlString.appendQueryString(\n            authority.tokenEndpoint,\n            queryParametersString\n        );\n\n        const requestBody = await invokeAsync(\n            this.createTokenRequestBody.bind(this),\n            PerformanceEvents.AuthClientCreateTokenRequestBody,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request);\n\n        let ccsCredential: CcsCredential | undefined = undefined;\n        if (request.clientInfo) {\n            try {\n                const clientInfo = buildClientInfo(\n                    request.clientInfo,\n                    this.cryptoUtils\n                );\n                ccsCredential = {\n                    credential: `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\n                    type: CcsCredentialType.HOME_ACCOUNT_ID,\n                };\n            } catch (e) {\n                this.logger.verbose(\n                    \"Could not parse client info for CCS Header: \" + e\n                );\n            }\n        }\n        const headers: Record<string, string> = this.createTokenRequestHeaders(\n            ccsCredential || request.ccsCredential\n        );\n\n        const thumbprint: RequestThumbprint = {\n            clientId:\n                request.tokenBodyParameters?.clientId ||\n                this.config.authOptions.clientId,\n            authority: authority.canonicalAuthority,\n            scopes: request.scopes,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n        };\n\n        return invokeAsync(\n            this.executePostToTokenEndpoint.bind(this),\n            PerformanceEvents.BaseClientExecutePostToTokenEndpoint,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(endpoint, requestBody, headers, thumbprint, request.correlationId);\n    }\n\n    /**\n     * Generates a map for all the params to be sent to the service\n     * @param request\n     */\n    private async createTokenRequestBody(\n        request: CommonAuthorizationCodeRequest\n    ): Promise<string> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthClientCreateTokenRequestBody,\n            request.correlationId\n        );\n\n        const parameterBuilder = new RequestParameterBuilder();\n\n        parameterBuilder.addClientId(\n            request.tokenBodyParameters?.[AADServerParamKeys.CLIENT_ID] ||\n                this.config.authOptions.clientId\n        );\n\n        /*\n         * For hybrid spa flow, there will be a code but no verifier\n         * In this scenario, don't include redirect uri as auth code will not be bound to redirect URI\n         */\n        if (!this.includeRedirectUri) {\n            // Just validate\n            RequestValidator.validateRedirectUri(request.redirectUri);\n        } else {\n            // Validate and include redirect uri\n            parameterBuilder.addRedirectUri(request.redirectUri);\n        }\n\n        // Add scope array, parameter builder will add default scopes and dedupe\n        parameterBuilder.addScopes(\n            request.scopes,\n            true,\n            this.oidcDefaultScopes\n        );\n\n        // add code: user set, not validated\n        parameterBuilder.addAuthorizationCode(request.code);\n\n        // Add library metadata\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        parameterBuilder.addApplicationTelemetry(\n            this.config.telemetry.application\n        );\n        parameterBuilder.addThrottling();\n\n        if (this.serverTelemetryManager && !isOidcProtocolMode(this.config)) {\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\n        }\n\n        // add code_verifier if passed\n        if (request.codeVerifier) {\n            parameterBuilder.addCodeVerifier(request.codeVerifier);\n        }\n\n        if (this.config.clientCredentials.clientSecret) {\n            parameterBuilder.addClientSecret(\n                this.config.clientCredentials.clientSecret\n            );\n        }\n\n        if (this.config.clientCredentials.clientAssertion) {\n            const clientAssertion =\n                this.config.clientCredentials.clientAssertion;\n            parameterBuilder.addClientAssertion(clientAssertion.assertion);\n            parameterBuilder.addClientAssertionType(\n                clientAssertion.assertionType\n            );\n        }\n\n        parameterBuilder.addGrantType(GrantType.AUTHORIZATION_CODE_GRANT);\n        parameterBuilder.addClientInfo();\n\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n            const popTokenGenerator = new PopTokenGenerator(\n                this.cryptoUtils,\n                this.performanceClient\n            );\n\n            const reqCnfData = await invokeAsync(\n                popTokenGenerator.generateCnf.bind(popTokenGenerator),\n                PerformanceEvents.PopTokenGenerateCnf,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(request, this.logger);\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\n            parameterBuilder.addPopToken(reqCnfData.reqCnfString);\n        } else if (request.authenticationScheme === AuthenticationScheme.SSH) {\n            if (request.sshJwk) {\n                parameterBuilder.addSshJwk(request.sshJwk);\n            } else {\n                throw createClientConfigurationError(\n                    ClientConfigurationErrorCodes.missingSshJwk\n                );\n            }\n        }\n\n        const correlationId =\n            request.correlationId ||\n            this.config.cryptoInterface.createNewGuid();\n        parameterBuilder.addCorrelationId(correlationId);\n\n        if (\n            !StringUtils.isEmptyObj(request.claims) ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)\n        ) {\n            parameterBuilder.addClaims(\n                request.claims,\n                this.config.authOptions.clientCapabilities\n            );\n        }\n\n        let ccsCred: CcsCredential | undefined = undefined;\n        if (request.clientInfo) {\n            try {\n                const clientInfo = buildClientInfo(\n                    request.clientInfo,\n                    this.cryptoUtils\n                );\n                ccsCred = {\n                    credential: `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`,\n                    type: CcsCredentialType.HOME_ACCOUNT_ID,\n                };\n            } catch (e) {\n                this.logger.verbose(\n                    \"Could not parse client info for CCS Header: \" + e\n                );\n            }\n        } else {\n            ccsCred = request.ccsCredential;\n        }\n\n        // Adds these as parameters in the request instead of headers to prevent CORS preflight request\n        if (this.config.systemOptions.preventCorsPreflight && ccsCred) {\n            switch (ccsCred.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(\n                            ccsCred.credential\n                        );\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\n                            \"Could not parse home account ID for CCS Header: \" +\n                                e\n                        );\n                    }\n                    break;\n                case CcsCredentialType.UPN:\n                    parameterBuilder.addCcsUpn(ccsCred.credential);\n                    break;\n            }\n        }\n\n        if (request.tokenBodyParameters) {\n            parameterBuilder.addExtraQueryParameters(\n                request.tokenBodyParameters\n            );\n        }\n\n        // Add hybrid spa parameters if not already provided\n        if (\n            request.enableSpaAuthorizationCode &&\n            (!request.tokenBodyParameters ||\n                !request.tokenBodyParameters[\n                    AADServerParamKeys.RETURN_SPA_CODE\n                ])\n        ) {\n            parameterBuilder.addExtraQueryParameters({\n                [AADServerParamKeys.RETURN_SPA_CODE]: \"1\",\n            });\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n\n    /**\n     * This API validates the `AuthorizationCodeUrlRequest` and creates a URL\n     * @param request\n     */\n    private async createAuthCodeUrlQueryString(\n        request: CommonAuthorizationUrlRequest\n    ): Promise<string> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthClientCreateQueryString,\n            request.correlationId\n        );\n\n        const parameterBuilder = new RequestParameterBuilder();\n\n        parameterBuilder.addClientId(\n            request.extraQueryParameters?.[AADServerParamKeys.CLIENT_ID] ||\n                this.config.authOptions.clientId\n        );\n\n        const requestScopes = [\n            ...(request.scopes || []),\n            ...(request.extraScopesToConsent || []),\n        ];\n        parameterBuilder.addScopes(requestScopes, true, this.oidcDefaultScopes);\n\n        // validate the redirectUri (to be a non null value)\n        parameterBuilder.addRedirectUri(request.redirectUri);\n\n        // generate the correlationId if not set by the user and add\n        const correlationId =\n            request.correlationId ||\n            this.config.cryptoInterface.createNewGuid();\n        parameterBuilder.addCorrelationId(correlationId);\n\n        // add response_mode. If not passed in it defaults to query.\n        parameterBuilder.addResponseMode(request.responseMode);\n\n        // add response_type = code\n        parameterBuilder.addResponseTypeCode();\n\n        // add library info parameters\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        if (!isOidcProtocolMode(this.config)) {\n            parameterBuilder.addApplicationTelemetry(\n                this.config.telemetry.application\n            );\n        }\n\n        // add client_info=1\n        parameterBuilder.addClientInfo();\n\n        if (request.codeChallenge && request.codeChallengeMethod) {\n            parameterBuilder.addCodeChallengeParams(\n                request.codeChallenge,\n                request.codeChallengeMethod\n            );\n        }\n\n        if (request.prompt) {\n            parameterBuilder.addPrompt(request.prompt);\n        }\n\n        if (request.domainHint) {\n            parameterBuilder.addDomainHint(request.domainHint);\n        }\n\n        // Add sid or loginHint with preference for login_hint claim (in request) -> sid -> loginHint (upn/email) -> username of AccountInfo object\n        if (request.prompt !== PromptValue.SELECT_ACCOUNT) {\n            // AAD will throw if prompt=select_account is passed with an account hint\n            if (request.sid && request.prompt === PromptValue.NONE) {\n                // SessionID is only used in silent calls\n                this.logger.verbose(\n                    \"createAuthCodeUrlQueryString: Prompt is none, adding sid from request\"\n                );\n                parameterBuilder.addSid(request.sid);\n            } else if (request.account) {\n                const accountSid = this.extractAccountSid(request.account);\n                const accountLoginHintClaim = this.extractLoginHint(\n                    request.account\n                );\n                // If login_hint claim is present, use it over sid/username\n                if (accountLoginHintClaim) {\n                    this.logger.verbose(\n                        \"createAuthCodeUrlQueryString: login_hint claim present on account\"\n                    );\n                    parameterBuilder.addLoginHint(accountLoginHintClaim);\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(\n                            request.account.homeAccountId\n                        );\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\n                            \"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\"\n                        );\n                    }\n                } else if (accountSid && request.prompt === PromptValue.NONE) {\n                    /*\n                     * If account and loginHint are provided, we will check account first for sid before adding loginHint\n                     * SessionId is only used in silent calls\n                     */\n                    this.logger.verbose(\n                        \"createAuthCodeUrlQueryString: Prompt is none, adding sid from account\"\n                    );\n                    parameterBuilder.addSid(accountSid);\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(\n                            request.account.homeAccountId\n                        );\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\n                            \"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\"\n                        );\n                    }\n                } else if (request.loginHint) {\n                    this.logger.verbose(\n                        \"createAuthCodeUrlQueryString: Adding login_hint from request\"\n                    );\n                    parameterBuilder.addLoginHint(request.loginHint);\n                    parameterBuilder.addCcsUpn(request.loginHint);\n                } else if (request.account.username) {\n                    // Fallback to account username if provided\n                    this.logger.verbose(\n                        \"createAuthCodeUrlQueryString: Adding login_hint from account\"\n                    );\n                    parameterBuilder.addLoginHint(request.account.username);\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(\n                            request.account.homeAccountId\n                        );\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\n                            \"createAuthCodeUrlQueryString: Could not parse home account ID for CCS Header\"\n                        );\n                    }\n                }\n            } else if (request.loginHint) {\n                this.logger.verbose(\n                    \"createAuthCodeUrlQueryString: No account, adding login_hint from request\"\n                );\n                parameterBuilder.addLoginHint(request.loginHint);\n                parameterBuilder.addCcsUpn(request.loginHint);\n            }\n        } else {\n            this.logger.verbose(\n                \"createAuthCodeUrlQueryString: Prompt is select_account, ignoring account hints\"\n            );\n        }\n\n        if (request.nonce) {\n            parameterBuilder.addNonce(request.nonce);\n        }\n\n        if (request.state) {\n            parameterBuilder.addState(request.state);\n        }\n\n        if (\n            request.claims ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)\n        ) {\n            parameterBuilder.addClaims(\n                request.claims,\n                this.config.authOptions.clientCapabilities\n            );\n        }\n\n        if (request.extraQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(\n                request.extraQueryParameters\n            );\n        }\n\n        if (request.nativeBroker) {\n            // signal ests that this is a WAM call\n            parameterBuilder.addNativeBroker();\n\n            // pass the req_cnf for POP\n            if (request.authenticationScheme === AuthenticationScheme.POP) {\n                const popTokenGenerator = new PopTokenGenerator(\n                    this.cryptoUtils\n                );\n                // to reduce the URL length, it is recommended to send the hash of the req_cnf instead of the whole string\n                const reqCnfData = await invokeAsync(\n                    popTokenGenerator.generateCnf.bind(popTokenGenerator),\n                    PerformanceEvents.PopTokenGenerateCnf,\n                    this.logger,\n                    this.performanceClient,\n                    request.correlationId\n                )(request, this.logger);\n                parameterBuilder.addPopToken(reqCnfData.reqCnfHash);\n            }\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n\n    /**\n     * This API validates the `EndSessionRequest` and creates a URL\n     * @param request\n     */\n    private createLogoutUrlQueryString(\n        request: CommonEndSessionRequest\n    ): string {\n        const parameterBuilder = new RequestParameterBuilder();\n\n        if (request.postLogoutRedirectUri) {\n            parameterBuilder.addPostLogoutRedirectUri(\n                request.postLogoutRedirectUri\n            );\n        }\n\n        if (request.correlationId) {\n            parameterBuilder.addCorrelationId(request.correlationId);\n        }\n\n        if (request.idTokenHint) {\n            parameterBuilder.addIdTokenHint(request.idTokenHint);\n        }\n\n        if (request.state) {\n            parameterBuilder.addState(request.state);\n        }\n\n        if (request.logoutHint) {\n            parameterBuilder.addLogoutHint(request.logoutHint);\n        }\n\n        if (request.extraQueryParameters) {\n            parameterBuilder.addExtraQueryParameters(\n                request.extraQueryParameters\n            );\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n\n    /**\n     * Helper to get sid from account. Returns null if idTokenClaims are not present or sid is not present.\n     * @param account\n     */\n    private extractAccountSid(account: AccountInfo): string | null {\n        return account.idTokenClaims?.sid || null;\n    }\n\n    private extractLoginHint(account: AccountInfo): string | null {\n        return account.idTokenClaims?.login_hint || null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Tenant Discovery Response which contains the relevant OAuth endpoints and data needed for authentication and authorization.\n */\nexport type OpenIdConfigResponse = {\n    authorization_endpoint: string;\n    token_endpoint: string;\n    end_session_endpoint?: string;\n    issuer: string;\n    jwks_uri: string;\n};\n\nexport function isOpenIdConfigResponse(response: object): boolean {\n    return (\n        response.hasOwnProperty(\"authorization_endpoint\") &&\n        response.hasOwnProperty(\"token_endpoint\") &&\n        response.hasOwnProperty(\"issuer\") &&\n        response.hasOwnProperty(\"jwks_uri\")\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const rawMetdataJSON = {\n    endpointMetadata: {\n        \"https://login.microsoftonline.com/common/\": {\n            token_endpoint:\n                \"https://login.microsoftonline.com/common/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri:\n                \"https://login.microsoftonline.com/common/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.com/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint:\n                \"https://login.microsoftonline.com/common/oauth2/v2.0/authorize\",\n            device_authorization_endpoint:\n                \"https://login.microsoftonline.com/common/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint:\n                \"https://login.microsoftonline.com/common/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint:\n                \"https://login.microsoftonline.com/common/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.com\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pas.windows.net\",\n        },\n        \"https://login.chinacloudapi.cn/common/\": {\n            token_endpoint:\n                \"https://login.chinacloudapi.cn/common/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri:\n                \"https://login.chinacloudapi.cn/common/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.partner.microsoftonline.cn/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint:\n                \"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo\",\n            authorization_endpoint:\n                \"https://login.chinacloudapi.cn/common/oauth2/v2.0/authorize\",\n            device_authorization_endpoint:\n                \"https://login.chinacloudapi.cn/common/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint:\n                \"https://login.chinacloudapi.cn/common/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint: \"https://login.chinacloudapi.cn/common/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"partner.microsoftonline.cn\",\n            cloud_graph_host_name: \"graph.chinacloudapi.cn\",\n            msgraph_host: \"microsoftgraph.chinacloudapi.cn\",\n            rbac_url: \"https://pas.chinacloudapi.cn\",\n        },\n        \"https://login.microsoftonline.us/common/\": {\n            token_endpoint:\n                \"https://login.microsoftonline.us/common/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri:\n                \"https://login.microsoftonline.us/common/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.us/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint:\n                \"https://login.microsoftonline.us/common/oauth2/v2.0/authorize\",\n            device_authorization_endpoint:\n                \"https://login.microsoftonline.us/common/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint:\n                \"https://login.microsoftonline.us/common/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint:\n                \"https://login.microsoftonline.us/common/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.us\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pasff.usgovcloudapi.net\",\n        },\n        \"https://login.microsoftonline.com/consumers/\": {\n            token_endpoint:\n                \"https://login.microsoftonline.com/consumers/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri:\n                \"https://login.microsoftonline.com/consumers/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.com/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint:\n                \"https://login.microsoftonline.com/consumers/oauth2/v2.0/authorize\",\n            device_authorization_endpoint:\n                \"https://login.microsoftonline.com/consumers/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint:\n                \"https://login.microsoftonline.com/consumers/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint:\n                \"https://login.microsoftonline.com/consumers/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.com\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pas.windows.net\",\n        },\n        \"https://login.chinacloudapi.cn/consumers/\": {\n            token_endpoint:\n                \"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri:\n                \"https://login.chinacloudapi.cn/consumers/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.partner.microsoftonline.cn/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint:\n                \"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo\",\n            authorization_endpoint:\n                \"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/authorize\",\n            device_authorization_endpoint:\n                \"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint:\n                \"https://login.chinacloudapi.cn/consumers/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint:\n                \"https://login.chinacloudapi.cn/consumers/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"partner.microsoftonline.cn\",\n            cloud_graph_host_name: \"graph.chinacloudapi.cn\",\n            msgraph_host: \"microsoftgraph.chinacloudapi.cn\",\n            rbac_url: \"https://pas.chinacloudapi.cn\",\n        },\n        \"https://login.microsoftonline.us/consumers/\": {\n            token_endpoint:\n                \"https://login.microsoftonline.us/consumers/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri:\n                \"https://login.microsoftonline.us/consumers/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.us/9188040d-6c67-4c5b-b112-36a304b66dad/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint:\n                \"https://login.microsoftonline.us/consumers/oauth2/v2.0/authorize\",\n            device_authorization_endpoint:\n                \"https://login.microsoftonline.us/consumers/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint:\n                \"https://login.microsoftonline.us/consumers/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint:\n                \"https://login.microsoftonline.us/consumers/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.us\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pasff.usgovcloudapi.net\",\n        },\n        \"https://login.microsoftonline.com/organizations/\": {\n            token_endpoint:\n                \"https://login.microsoftonline.com/organizations/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri:\n                \"https://login.microsoftonline.com/organizations/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.com/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint:\n                \"https://login.microsoftonline.com/organizations/oauth2/v2.0/authorize\",\n            device_authorization_endpoint:\n                \"https://login.microsoftonline.com/organizations/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint:\n                \"https://login.microsoftonline.com/organizations/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint:\n                \"https://login.microsoftonline.com/organizations/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.com\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pas.windows.net\",\n        },\n        \"https://login.chinacloudapi.cn/organizations/\": {\n            token_endpoint:\n                \"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri:\n                \"https://login.chinacloudapi.cn/organizations/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.partner.microsoftonline.cn/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint:\n                \"https://microsoftgraph.chinacloudapi.cn/oidc/userinfo\",\n            authorization_endpoint:\n                \"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/authorize\",\n            device_authorization_endpoint:\n                \"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint:\n                \"https://login.chinacloudapi.cn/organizations/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint:\n                \"https://login.chinacloudapi.cn/organizations/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"partner.microsoftonline.cn\",\n            cloud_graph_host_name: \"graph.chinacloudapi.cn\",\n            msgraph_host: \"microsoftgraph.chinacloudapi.cn\",\n            rbac_url: \"https://pas.chinacloudapi.cn\",\n        },\n        \"https://login.microsoftonline.us/organizations/\": {\n            token_endpoint:\n                \"https://login.microsoftonline.us/organizations/oauth2/v2.0/token\",\n            token_endpoint_auth_methods_supported: [\n                \"client_secret_post\",\n                \"private_key_jwt\",\n                \"client_secret_basic\",\n            ],\n            jwks_uri:\n                \"https://login.microsoftonline.us/organizations/discovery/v2.0/keys\",\n            response_modes_supported: [\"query\", \"fragment\", \"form_post\"],\n            subject_types_supported: [\"pairwise\"],\n            id_token_signing_alg_values_supported: [\"RS256\"],\n            response_types_supported: [\n                \"code\",\n                \"id_token\",\n                \"code id_token\",\n                \"id_token token\",\n            ],\n            scopes_supported: [\"openid\", \"profile\", \"email\", \"offline_access\"],\n            issuer: \"https://login.microsoftonline.us/{tenantid}/v2.0\",\n            request_uri_parameter_supported: false,\n            userinfo_endpoint: \"https://graph.microsoft.com/oidc/userinfo\",\n            authorization_endpoint:\n                \"https://login.microsoftonline.us/organizations/oauth2/v2.0/authorize\",\n            device_authorization_endpoint:\n                \"https://login.microsoftonline.us/organizations/oauth2/v2.0/devicecode\",\n            http_logout_supported: true,\n            frontchannel_logout_supported: true,\n            end_session_endpoint:\n                \"https://login.microsoftonline.us/organizations/oauth2/v2.0/logout\",\n            claims_supported: [\n                \"sub\",\n                \"iss\",\n                \"cloud_instance_name\",\n                \"cloud_instance_host_name\",\n                \"cloud_graph_host_name\",\n                \"msgraph_host\",\n                \"aud\",\n                \"exp\",\n                \"iat\",\n                \"auth_time\",\n                \"acr\",\n                \"nonce\",\n                \"preferred_username\",\n                \"name\",\n                \"tid\",\n                \"ver\",\n                \"at_hash\",\n                \"c_hash\",\n                \"email\",\n            ],\n            kerberos_endpoint:\n                \"https://login.microsoftonline.us/organizations/kerberos\",\n            tenant_region_scope: null,\n            cloud_instance_name: \"microsoftonline.us\",\n            cloud_graph_host_name: \"graph.windows.net\",\n            msgraph_host: \"graph.microsoft.com\",\n            rbac_url: \"https://pasff.usgovcloudapi.net\",\n        },\n    },\n    instanceDiscoveryMetadata: {\n        \"https://login.microsoftonline.com/common/\": {\n            tenant_discovery_endpoint:\n                \"https://login.microsoftonline.com/common/v2.0/.well-known/openid-configuration\",\n            \"api-version\": \"1.1\",\n            metadata: [\n                {\n                    preferred_network: \"login.microsoftonline.com\",\n                    preferred_cache: \"login.windows.net\",\n                    aliases: [\n                        \"login.microsoftonline.com\",\n                        \"login.windows.net\",\n                        \"login.microsoft.com\",\n                        \"sts.windows.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.partner.microsoftonline.cn\",\n                    preferred_cache: \"login.partner.microsoftonline.cn\",\n                    aliases: [\n                        \"login.partner.microsoftonline.cn\",\n                        \"login.chinacloudapi.cn\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.de\",\n                    preferred_cache: \"login.microsoftonline.de\",\n                    aliases: [\"login.microsoftonline.de\"],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.us\",\n                    preferred_cache: \"login.microsoftonline.us\",\n                    aliases: [\n                        \"login.microsoftonline.us\",\n                        \"login.usgovcloudapi.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login-us.microsoftonline.com\",\n                    preferred_cache: \"login-us.microsoftonline.com\",\n                    aliases: [\"login-us.microsoftonline.com\"],\n                },\n            ],\n        },\n        \"https://login.chinacloudapi.cn/common/\": {\n            tenant_discovery_endpoint:\n                \"https://login.chinacloudapi.cn/common/v2.0/.well-known/openid-configuration\",\n            \"api-version\": \"1.1\",\n            metadata: [\n                {\n                    preferred_network: \"login.microsoftonline.com\",\n                    preferred_cache: \"login.windows.net\",\n                    aliases: [\n                        \"login.microsoftonline.com\",\n                        \"login.windows.net\",\n                        \"login.microsoft.com\",\n                        \"sts.windows.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.partner.microsoftonline.cn\",\n                    preferred_cache: \"login.partner.microsoftonline.cn\",\n                    aliases: [\n                        \"login.partner.microsoftonline.cn\",\n                        \"login.chinacloudapi.cn\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.de\",\n                    preferred_cache: \"login.microsoftonline.de\",\n                    aliases: [\"login.microsoftonline.de\"],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.us\",\n                    preferred_cache: \"login.microsoftonline.us\",\n                    aliases: [\n                        \"login.microsoftonline.us\",\n                        \"login.usgovcloudapi.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login-us.microsoftonline.com\",\n                    preferred_cache: \"login-us.microsoftonline.com\",\n                    aliases: [\"login-us.microsoftonline.com\"],\n                },\n            ],\n        },\n        \"https://login.microsoftonline.us/common/\": {\n            tenant_discovery_endpoint:\n                \"https://login.microsoftonline.us/common/v2.0/.well-known/openid-configuration\",\n            \"api-version\": \"1.1\",\n            metadata: [\n                {\n                    preferred_network: \"login.microsoftonline.com\",\n                    preferred_cache: \"login.windows.net\",\n                    aliases: [\n                        \"login.microsoftonline.com\",\n                        \"login.windows.net\",\n                        \"login.microsoft.com\",\n                        \"sts.windows.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.partner.microsoftonline.cn\",\n                    preferred_cache: \"login.partner.microsoftonline.cn\",\n                    aliases: [\n                        \"login.partner.microsoftonline.cn\",\n                        \"login.chinacloudapi.cn\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.de\",\n                    preferred_cache: \"login.microsoftonline.de\",\n                    aliases: [\"login.microsoftonline.de\"],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.us\",\n                    preferred_cache: \"login.microsoftonline.us\",\n                    aliases: [\n                        \"login.microsoftonline.us\",\n                        \"login.usgovcloudapi.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login-us.microsoftonline.com\",\n                    preferred_cache: \"login-us.microsoftonline.com\",\n                    aliases: [\"login-us.microsoftonline.com\"],\n                },\n            ],\n        },\n        \"https://login.microsoftonline.com/consumers/\": {\n            tenant_discovery_endpoint:\n                \"https://login.microsoftonline.com/consumers/v2.0/.well-known/openid-configuration\",\n            \"api-version\": \"1.1\",\n            metadata: [\n                {\n                    preferred_network: \"login.microsoftonline.com\",\n                    preferred_cache: \"login.windows.net\",\n                    aliases: [\n                        \"login.microsoftonline.com\",\n                        \"login.windows.net\",\n                        \"login.microsoft.com\",\n                        \"sts.windows.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.partner.microsoftonline.cn\",\n                    preferred_cache: \"login.partner.microsoftonline.cn\",\n                    aliases: [\n                        \"login.partner.microsoftonline.cn\",\n                        \"login.chinacloudapi.cn\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.de\",\n                    preferred_cache: \"login.microsoftonline.de\",\n                    aliases: [\"login.microsoftonline.de\"],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.us\",\n                    preferred_cache: \"login.microsoftonline.us\",\n                    aliases: [\n                        \"login.microsoftonline.us\",\n                        \"login.usgovcloudapi.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login-us.microsoftonline.com\",\n                    preferred_cache: \"login-us.microsoftonline.com\",\n                    aliases: [\"login-us.microsoftonline.com\"],\n                },\n            ],\n        },\n        \"https://login.chinacloudapi.cn/consumers/\": {\n            tenant_discovery_endpoint:\n                \"https://login.chinacloudapi.cn/consumers/v2.0/.well-known/openid-configuration\",\n            \"api-version\": \"1.1\",\n            metadata: [\n                {\n                    preferred_network: \"login.microsoftonline.com\",\n                    preferred_cache: \"login.windows.net\",\n                    aliases: [\n                        \"login.microsoftonline.com\",\n                        \"login.windows.net\",\n                        \"login.microsoft.com\",\n                        \"sts.windows.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.partner.microsoftonline.cn\",\n                    preferred_cache: \"login.partner.microsoftonline.cn\",\n                    aliases: [\n                        \"login.partner.microsoftonline.cn\",\n                        \"login.chinacloudapi.cn\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.de\",\n                    preferred_cache: \"login.microsoftonline.de\",\n                    aliases: [\"login.microsoftonline.de\"],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.us\",\n                    preferred_cache: \"login.microsoftonline.us\",\n                    aliases: [\n                        \"login.microsoftonline.us\",\n                        \"login.usgovcloudapi.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login-us.microsoftonline.com\",\n                    preferred_cache: \"login-us.microsoftonline.com\",\n                    aliases: [\"login-us.microsoftonline.com\"],\n                },\n            ],\n        },\n        \"https://login.microsoftonline.us/consumers/\": {\n            tenant_discovery_endpoint:\n                \"https://login.microsoftonline.us/consumers/v2.0/.well-known/openid-configuration\",\n            \"api-version\": \"1.1\",\n            metadata: [\n                {\n                    preferred_network: \"login.microsoftonline.com\",\n                    preferred_cache: \"login.windows.net\",\n                    aliases: [\n                        \"login.microsoftonline.com\",\n                        \"login.windows.net\",\n                        \"login.microsoft.com\",\n                        \"sts.windows.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.partner.microsoftonline.cn\",\n                    preferred_cache: \"login.partner.microsoftonline.cn\",\n                    aliases: [\n                        \"login.partner.microsoftonline.cn\",\n                        \"login.chinacloudapi.cn\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.de\",\n                    preferred_cache: \"login.microsoftonline.de\",\n                    aliases: [\"login.microsoftonline.de\"],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.us\",\n                    preferred_cache: \"login.microsoftonline.us\",\n                    aliases: [\n                        \"login.microsoftonline.us\",\n                        \"login.usgovcloudapi.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login-us.microsoftonline.com\",\n                    preferred_cache: \"login-us.microsoftonline.com\",\n                    aliases: [\"login-us.microsoftonline.com\"],\n                },\n            ],\n        },\n        \"https://login.microsoftonline.com/organizations/\": {\n            tenant_discovery_endpoint:\n                \"https://login.microsoftonline.com/organizations/v2.0/.well-known/openid-configuration\",\n            \"api-version\": \"1.1\",\n            metadata: [\n                {\n                    preferred_network: \"login.microsoftonline.com\",\n                    preferred_cache: \"login.windows.net\",\n                    aliases: [\n                        \"login.microsoftonline.com\",\n                        \"login.windows.net\",\n                        \"login.microsoft.com\",\n                        \"sts.windows.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.partner.microsoftonline.cn\",\n                    preferred_cache: \"login.partner.microsoftonline.cn\",\n                    aliases: [\n                        \"login.partner.microsoftonline.cn\",\n                        \"login.chinacloudapi.cn\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.de\",\n                    preferred_cache: \"login.microsoftonline.de\",\n                    aliases: [\"login.microsoftonline.de\"],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.us\",\n                    preferred_cache: \"login.microsoftonline.us\",\n                    aliases: [\n                        \"login.microsoftonline.us\",\n                        \"login.usgovcloudapi.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login-us.microsoftonline.com\",\n                    preferred_cache: \"login-us.microsoftonline.com\",\n                    aliases: [\"login-us.microsoftonline.com\"],\n                },\n            ],\n        },\n        \"https://login.chinacloudapi.cn/organizations/\": {\n            tenant_discovery_endpoint:\n                \"https://login.chinacloudapi.cn/organizations/v2.0/.well-known/openid-configuration\",\n            \"api-version\": \"1.1\",\n            metadata: [\n                {\n                    preferred_network: \"login.microsoftonline.com\",\n                    preferred_cache: \"login.windows.net\",\n                    aliases: [\n                        \"login.microsoftonline.com\",\n                        \"login.windows.net\",\n                        \"login.microsoft.com\",\n                        \"sts.windows.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.partner.microsoftonline.cn\",\n                    preferred_cache: \"login.partner.microsoftonline.cn\",\n                    aliases: [\n                        \"login.partner.microsoftonline.cn\",\n                        \"login.chinacloudapi.cn\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.de\",\n                    preferred_cache: \"login.microsoftonline.de\",\n                    aliases: [\"login.microsoftonline.de\"],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.us\",\n                    preferred_cache: \"login.microsoftonline.us\",\n                    aliases: [\n                        \"login.microsoftonline.us\",\n                        \"login.usgovcloudapi.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login-us.microsoftonline.com\",\n                    preferred_cache: \"login-us.microsoftonline.com\",\n                    aliases: [\"login-us.microsoftonline.com\"],\n                },\n            ],\n        },\n        \"https://login.microsoftonline.us/organizations/\": {\n            tenant_discovery_endpoint:\n                \"https://login.microsoftonline.us/organizations/v2.0/.well-known/openid-configuration\",\n            \"api-version\": \"1.1\",\n            metadata: [\n                {\n                    preferred_network: \"login.microsoftonline.com\",\n                    preferred_cache: \"login.windows.net\",\n                    aliases: [\n                        \"login.microsoftonline.com\",\n                        \"login.windows.net\",\n                        \"login.microsoft.com\",\n                        \"sts.windows.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.partner.microsoftonline.cn\",\n                    preferred_cache: \"login.partner.microsoftonline.cn\",\n                    aliases: [\n                        \"login.partner.microsoftonline.cn\",\n                        \"login.chinacloudapi.cn\",\n                    ],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.de\",\n                    preferred_cache: \"login.microsoftonline.de\",\n                    aliases: [\"login.microsoftonline.de\"],\n                },\n                {\n                    preferred_network: \"login.microsoftonline.us\",\n                    preferred_cache: \"login.microsoftonline.us\",\n                    aliases: [\n                        \"login.microsoftonline.us\",\n                        \"login.usgovcloudapi.net\",\n                    ],\n                },\n                {\n                    preferred_network: \"login-us.microsoftonline.com\",\n                    preferred_cache: \"login-us.microsoftonline.com\",\n                    aliases: [\"login-us.microsoftonline.com\"],\n                },\n            ],\n        },\n    },\n};\n\nexport const EndpointMetadata = rawMetdataJSON.endpointMetadata;\nexport const InstanceDiscoveryMetadata =\n    rawMetdataJSON.instanceDiscoveryMetadata;\n\nexport const InstanceDiscoveryMetadataAliases: Set<String> = new Set();\nfor (const key in InstanceDiscoveryMetadata) {\n    for (const metadata of InstanceDiscoveryMetadata[key].metadata) {\n        for (const alias of metadata.aliases) {\n            InstanceDiscoveryMetadataAliases.add(alias);\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CloudDiscoveryMetadata } from \"./CloudDiscoveryMetadata\";\n\n/**\n * The OpenID Configuration Endpoint Response type. Used by the authority class to get relevant OAuth endpoints.\n */\nexport type CloudInstanceDiscoveryResponse = {\n    tenant_discovery_endpoint: string;\n    metadata: Array<CloudDiscoveryMetadata>;\n};\n\nexport function isCloudInstanceDiscoveryResponse(response: object): boolean {\n    return (\n        response.hasOwnProperty(\"tenant_discovery_endpoint\") &&\n        response.hasOwnProperty(\"metadata\")\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * The OpenID Configuration Endpoint Response type. Used by the authority class to get relevant OAuth endpoints.\n */\nexport type CloudInstanceDiscoveryErrorResponse = {\n    error: String;\n    error_description: String;\n    error_codes?: Array<Number>;\n    timestamp?: String;\n    trace_id?: String;\n    correlation_id?: String;\n    error_uri?: String;\n};\n\nexport function isCloudInstanceDiscoveryErrorResponse(\n    response: object\n): boolean {\n    return (\n        response.hasOwnProperty(\"error\") &&\n        response.hasOwnProperty(\"error_description\")\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport { NetworkResponse } from \"../network/NetworkManager\";\nimport { IMDSBadResponse } from \"../response/IMDSBadResponse\";\nimport {\n    Constants,\n    RegionDiscoverySources,\n    ResponseCodes,\n} from \"../utils/Constants\";\nimport { RegionDiscoveryMetadata } from \"./RegionDiscoveryMetadata\";\nimport { ImdsOptions } from \"./ImdsOptions\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent\";\nimport { invokeAsync } from \"../utils/FunctionWrappers\";\nimport { Logger } from \"../logger/Logger\";\n\nexport class RegionDiscovery {\n    // Network interface to make requests with.\n    protected networkInterface: INetworkModule;\n    // Logger\n    private logger: Logger;\n    // Performance client\n    protected performanceClient: IPerformanceClient | undefined;\n    // CorrelationId\n    protected correlationId: string | undefined;\n    // Options for the IMDS endpoint request\n    protected static IMDS_OPTIONS: ImdsOptions = {\n        headers: {\n            Metadata: \"true\",\n        },\n    };\n\n    constructor(\n        networkInterface: INetworkModule,\n        logger: Logger,\n        performanceClient?: IPerformanceClient,\n        correlationId?: string\n    ) {\n        this.networkInterface = networkInterface;\n        this.logger = logger;\n        this.performanceClient = performanceClient;\n        this.correlationId = correlationId;\n    }\n\n    /**\n     * Detect the region from the application's environment.\n     *\n     * @returns Promise<string | null>\n     */\n    public async detectRegion(\n        environmentRegion: string | undefined,\n        regionDiscoveryMetadata: RegionDiscoveryMetadata\n    ): Promise<string | null> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RegionDiscoveryDetectRegion,\n            this.correlationId\n        );\n\n        // Initialize auto detected region with the region from the envrionment\n        let autodetectedRegionName = environmentRegion;\n\n        // Check if a region was detected from the environment, if not, attempt to get the region from IMDS\n        if (!autodetectedRegionName) {\n            const options = RegionDiscovery.IMDS_OPTIONS;\n\n            try {\n                const localIMDSVersionResponse = await invokeAsync(\n                    this.getRegionFromIMDS.bind(this),\n                    PerformanceEvents.RegionDiscoveryGetRegionFromIMDS,\n                    this.logger,\n                    this.performanceClient,\n                    this.correlationId\n                )(Constants.IMDS_VERSION, options);\n                if (\n                    localIMDSVersionResponse.status ===\n                    ResponseCodes.httpSuccess\n                ) {\n                    autodetectedRegionName = localIMDSVersionResponse.body;\n                    regionDiscoveryMetadata.region_source =\n                        RegionDiscoverySources.IMDS;\n                }\n\n                // If the response using the local IMDS version failed, try to fetch the current version of IMDS and retry.\n                if (\n                    localIMDSVersionResponse.status ===\n                    ResponseCodes.httpBadRequest\n                ) {\n                    const currentIMDSVersion = await invokeAsync(\n                        this.getCurrentVersion.bind(this),\n                        PerformanceEvents.RegionDiscoveryGetCurrentVersion,\n                        this.logger,\n                        this.performanceClient,\n                        this.correlationId\n                    )(options);\n                    if (!currentIMDSVersion) {\n                        regionDiscoveryMetadata.region_source =\n                            RegionDiscoverySources.FAILED_AUTO_DETECTION;\n                        return null;\n                    }\n\n                    const currentIMDSVersionResponse = await invokeAsync(\n                        this.getRegionFromIMDS.bind(this),\n                        PerformanceEvents.RegionDiscoveryGetRegionFromIMDS,\n                        this.logger,\n                        this.performanceClient,\n                        this.correlationId\n                    )(currentIMDSVersion, options);\n                    if (\n                        currentIMDSVersionResponse.status ===\n                        ResponseCodes.httpSuccess\n                    ) {\n                        autodetectedRegionName =\n                            currentIMDSVersionResponse.body;\n                        regionDiscoveryMetadata.region_source =\n                            RegionDiscoverySources.IMDS;\n                    }\n                }\n            } catch (e) {\n                regionDiscoveryMetadata.region_source =\n                    RegionDiscoverySources.FAILED_AUTO_DETECTION;\n                return null;\n            }\n        } else {\n            regionDiscoveryMetadata.region_source =\n                RegionDiscoverySources.ENVIRONMENT_VARIABLE;\n        }\n\n        // If no region was auto detected from the environment or from the IMDS endpoint, mark the attempt as a FAILED_AUTO_DETECTION\n        if (!autodetectedRegionName) {\n            regionDiscoveryMetadata.region_source =\n                RegionDiscoverySources.FAILED_AUTO_DETECTION;\n        }\n\n        return autodetectedRegionName || null;\n    }\n\n    /**\n     * Make the call to the IMDS endpoint\n     *\n     * @param imdsEndpointUrl\n     * @returns Promise<NetworkResponse<string>>\n     */\n    private async getRegionFromIMDS(\n        version: string,\n        options: ImdsOptions\n    ): Promise<NetworkResponse<string>> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RegionDiscoveryGetRegionFromIMDS,\n            this.correlationId\n        );\n        return this.networkInterface.sendGetRequestAsync<string>(\n            `${Constants.IMDS_ENDPOINT}?api-version=${version}&format=text`,\n            options,\n            Constants.IMDS_TIMEOUT\n        );\n    }\n\n    /**\n     * Get the most recent version of the IMDS endpoint available\n     *\n     * @returns Promise<string | null>\n     */\n    private async getCurrentVersion(\n        options: ImdsOptions\n    ): Promise<string | null> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RegionDiscoveryGetCurrentVersion,\n            this.correlationId\n        );\n        try {\n            const response =\n                await this.networkInterface.sendGetRequestAsync<IMDSBadResponse>(\n                    `${Constants.IMDS_ENDPOINT}?format=json`,\n                    options\n                );\n\n            // When IMDS endpoint is called without the api version query param, bad request response comes back with latest version.\n            if (\n                response.status === ResponseCodes.httpBadRequest &&\n                response.body &&\n                response.body[\"newest-versions\"] &&\n                response.body[\"newest-versions\"].length > 0\n            ) {\n                return response.body[\"newest-versions\"][0];\n            }\n\n            return null;\n        } catch (e) {\n            return null;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthorityType } from \"./AuthorityType\";\nimport {\n    isOpenIdConfigResponse,\n    OpenIdConfigResponse,\n} from \"./OpenIdConfigResponse\";\nimport { UrlString } from \"../url/UrlString\";\nimport { IUri } from \"../url/IUri\";\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../error/ClientAuthError\";\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport {\n    AADAuthorityConstants,\n    AuthorityMetadataSource,\n    Constants,\n    RegionDiscoveryOutcomes,\n} from \"../utils/Constants\";\nimport {\n    EndpointMetadata,\n    InstanceDiscoveryMetadata,\n    InstanceDiscoveryMetadataAliases,\n} from \"./AuthorityMetadata\";\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError\";\nimport { ProtocolMode } from \"./ProtocolMode\";\nimport { ICacheManager } from \"../cache/interface/ICacheManager\";\nimport { AuthorityMetadataEntity } from \"../cache/entities/AuthorityMetadataEntity\";\nimport { AuthorityOptions, AzureCloudInstance } from \"./AuthorityOptions\";\nimport {\n    CloudInstanceDiscoveryResponse,\n    isCloudInstanceDiscoveryResponse,\n} from \"./CloudInstanceDiscoveryResponse\";\nimport {\n    CloudInstanceDiscoveryErrorResponse,\n    isCloudInstanceDiscoveryErrorResponse,\n} from \"./CloudInstanceDiscoveryErrorResponse\";\nimport { CloudDiscoveryMetadata } from \"./CloudDiscoveryMetadata\";\nimport { RegionDiscovery } from \"./RegionDiscovery\";\nimport { RegionDiscoveryMetadata } from \"./RegionDiscoveryMetadata\";\nimport { ImdsOptions } from \"./ImdsOptions\";\nimport { AzureCloudOptions } from \"../config/ClientConfiguration\";\nimport { Logger } from \"../logger/Logger\";\nimport { AuthError } from \"../error/AuthError\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent\";\nimport { invokeAsync } from \"../utils/FunctionWrappers\";\n\n/**\n * The authority class validates the authority URIs used by the user, and retrieves the OpenID Configuration Data from the\n * endpoint. It will store the pertinent config data in this object for use during token calls.\n * @internal\n */\nexport class Authority {\n    // Canonical authority url string\n    private _canonicalAuthority: UrlString;\n    // Canonicaly authority url components\n    private _canonicalAuthorityUrlComponents: IUri | null;\n    // Network interface to make requests with.\n    protected networkInterface: INetworkModule;\n    // Cache Manager to cache network responses\n    protected cacheManager: ICacheManager;\n    // Protocol mode to construct endpoints\n    private authorityOptions: AuthorityOptions;\n    // Authority metadata\n    private metadata: AuthorityMetadataEntity;\n    // Region discovery service\n    private regionDiscovery: RegionDiscovery;\n    // Region discovery metadata\n    public regionDiscoveryMetadata: RegionDiscoveryMetadata;\n    // Logger object\n    private logger: Logger;\n    // Performance client\n    protected performanceClient: IPerformanceClient | undefined;\n    // Correlation Id\n    protected correlationId: string | undefined;\n    // Reserved tenant domain names that will not be replaced with tenant id\n    private static reservedTenantDomains: Set<string> = new Set([\n        \"{tenant}\",\n        \"{tenantid}\",\n        AADAuthorityConstants.COMMON,\n        AADAuthorityConstants.CONSUMERS,\n        AADAuthorityConstants.ORGANIZATIONS,\n    ]);\n\n    constructor(\n        authority: string,\n        networkInterface: INetworkModule,\n        cacheManager: ICacheManager,\n        authorityOptions: AuthorityOptions,\n        logger: Logger,\n        performanceClient?: IPerformanceClient,\n        correlationId?: string\n    ) {\n        this.canonicalAuthority = authority;\n        this._canonicalAuthority.validateAsUri();\n        this.networkInterface = networkInterface;\n        this.cacheManager = cacheManager;\n        this.authorityOptions = authorityOptions;\n        this.regionDiscoveryMetadata = {\n            region_used: undefined,\n            region_source: undefined,\n            region_outcome: undefined,\n        };\n        this.logger = logger;\n        this.performanceClient = performanceClient;\n        this.correlationId = correlationId;\n        this.regionDiscovery = new RegionDiscovery(\n            networkInterface,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        );\n    }\n\n    /**\n     * Get {@link AuthorityType}\n     * @param authorityUri {@link IUri}\n     * @private\n     */\n    private getAuthorityType(authorityUri: IUri): AuthorityType {\n        // CIAM auth url pattern is being standardized as: <tenant>.ciamlogin.com\n        if (authorityUri.HostNameAndPort.endsWith(Constants.CIAM_AUTH_URL)) {\n            return AuthorityType.Ciam;\n        }\n\n        const pathSegments = authorityUri.PathSegments;\n        if (pathSegments.length) {\n            switch (pathSegments[0].toLowerCase()) {\n                case Constants.ADFS:\n                    return AuthorityType.Adfs;\n                case Constants.DSTS:\n                    return AuthorityType.Dsts;\n                default:\n                    break;\n            }\n        }\n        return AuthorityType.Default;\n    }\n\n    // See above for AuthorityType\n    public get authorityType(): AuthorityType {\n        return this.getAuthorityType(this.canonicalAuthorityUrlComponents);\n    }\n\n    /**\n     * ProtocolMode enum representing the way endpoints are constructed.\n     */\n    public get protocolMode(): ProtocolMode {\n        return this.authorityOptions.protocolMode;\n    }\n\n    /**\n     * Returns authorityOptions which can be used to reinstantiate a new authority instance\n     */\n    public get options(): AuthorityOptions {\n        return this.authorityOptions;\n    }\n\n    /**\n     * A URL that is the authority set by the developer\n     */\n    public get canonicalAuthority(): string {\n        return this._canonicalAuthority.urlString;\n    }\n\n    /**\n     * Sets canonical authority.\n     */\n    public set canonicalAuthority(url: string) {\n        this._canonicalAuthority = new UrlString(url);\n        this._canonicalAuthority.validateAsUri();\n        this._canonicalAuthorityUrlComponents = null;\n    }\n\n    /**\n     * Get authority components.\n     */\n    public get canonicalAuthorityUrlComponents(): IUri {\n        if (!this._canonicalAuthorityUrlComponents) {\n            this._canonicalAuthorityUrlComponents =\n                this._canonicalAuthority.getUrlComponents();\n        }\n\n        return this._canonicalAuthorityUrlComponents;\n    }\n\n    /**\n     * Get hostname and port i.e. login.microsoftonline.com\n     */\n    public get hostnameAndPort(): string {\n        return this.canonicalAuthorityUrlComponents.HostNameAndPort.toLowerCase();\n    }\n\n    /**\n     * Get tenant for authority.\n     */\n    public get tenant(): string {\n        return this.canonicalAuthorityUrlComponents.PathSegments[0];\n    }\n\n    /**\n     * OAuth /authorize endpoint for requests\n     */\n    public get authorizationEndpoint(): string {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.authorization_endpoint);\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    /**\n     * OAuth /token endpoint for requests\n     */\n    public get tokenEndpoint(): string {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.token_endpoint);\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    public get deviceCodeEndpoint(): string {\n        if (this.discoveryComplete()) {\n            return this.replacePath(\n                this.metadata.token_endpoint.replace(\"/token\", \"/devicecode\")\n            );\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    /**\n     * OAuth logout endpoint for requests\n     */\n    public get endSessionEndpoint(): string {\n        if (this.discoveryComplete()) {\n            // ROPC policies may not have end_session_endpoint set\n            if (!this.metadata.end_session_endpoint) {\n                throw createClientAuthError(\n                    ClientAuthErrorCodes.endSessionEndpointNotSupported\n                );\n            }\n            return this.replacePath(this.metadata.end_session_endpoint);\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    /**\n     * OAuth issuer for requests\n     */\n    public get selfSignedJwtAudience(): string {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.issuer);\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    /**\n     * Jwks_uri for token signing keys\n     */\n    public get jwksUri(): string {\n        if (this.discoveryComplete()) {\n            return this.replacePath(this.metadata.jwks_uri);\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    /**\n     * Returns a flag indicating that tenant name can be replaced in authority {@link IUri}\n     * @param authorityUri {@link IUri}\n     * @private\n     */\n    private canReplaceTenant(authorityUri: IUri): boolean {\n        return (\n            authorityUri.PathSegments.length === 1 &&\n            !Authority.reservedTenantDomains.has(\n                authorityUri.PathSegments[0]\n            ) &&\n            this.getAuthorityType(authorityUri) === AuthorityType.Default &&\n            this.protocolMode === ProtocolMode.AAD\n        );\n    }\n\n    /**\n     * Replaces tenant in url path with current tenant. Defaults to common.\n     * @param urlString\n     */\n    private replaceTenant(urlString: string): string {\n        return urlString.replace(/{tenant}|{tenantid}/g, this.tenant);\n    }\n\n    /**\n     * Replaces path such as tenant or policy with the current tenant or policy.\n     * @param urlString\n     */\n    private replacePath(urlString: string): string {\n        let endpoint = urlString;\n        const cachedAuthorityUrl = new UrlString(\n            this.metadata.canonical_authority\n        );\n        const cachedAuthorityUrlComponents =\n            cachedAuthorityUrl.getUrlComponents();\n        const cachedAuthorityParts = cachedAuthorityUrlComponents.PathSegments;\n        const currentAuthorityParts =\n            this.canonicalAuthorityUrlComponents.PathSegments;\n\n        currentAuthorityParts.forEach((currentPart, index) => {\n            let cachedPart = cachedAuthorityParts[index];\n            if (\n                index === 0 &&\n                this.canReplaceTenant(cachedAuthorityUrlComponents)\n            ) {\n                const tenantId = new UrlString(\n                    this.metadata.authorization_endpoint\n                ).getUrlComponents().PathSegments[0];\n                /**\n                 * Check if AAD canonical authority contains tenant domain name, for example \"testdomain.onmicrosoft.com\",\n                 * by comparing its first path segment to the corresponding authorization endpoint path segment, which is\n                 * always resolved with tenant id by OIDC.\n                 */\n                if (cachedPart !== tenantId) {\n                    this.logger.verbose(\n                        `Replacing tenant domain name ${cachedPart} with id ${tenantId}`\n                    );\n                    cachedPart = tenantId;\n                }\n            }\n            if (currentPart !== cachedPart) {\n                endpoint = endpoint.replace(\n                    `/${cachedPart}/`,\n                    `/${currentPart}/`\n                );\n            }\n        });\n\n        return this.replaceTenant(endpoint);\n    }\n\n    /**\n     * The default open id configuration endpoint for any canonical authority.\n     */\n    protected get defaultOpenIdConfigurationEndpoint(): string {\n        const canonicalAuthorityHost = this.hostnameAndPort;\n        if (\n            this.canonicalAuthority.endsWith(\"v2.0/\") ||\n            this.authorityType === AuthorityType.Adfs ||\n            (this.protocolMode !== ProtocolMode.AAD &&\n                !this.isAliasOfKnownMicrosoftAuthority(canonicalAuthorityHost))\n        ) {\n            return `${this.canonicalAuthority}.well-known/openid-configuration`;\n        }\n        return `${this.canonicalAuthority}v2.0/.well-known/openid-configuration`;\n    }\n\n    /**\n     * Boolean that returns whethr or not tenant discovery has been completed.\n     */\n    discoveryComplete(): boolean {\n        return !!this.metadata;\n    }\n\n    /**\n     * Perform endpoint discovery to discover aliases, preferred_cache, preferred_network\n     * and the /authorize, /token and logout endpoints.\n     */\n    public async resolveEndpointsAsync(): Promise<void> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthorityResolveEndpointsAsync,\n            this.correlationId\n        );\n\n        let metadataEntity = this.cacheManager.getAuthorityMetadataByAlias(\n            this.hostnameAndPort\n        );\n\n        if (!metadataEntity) {\n            metadataEntity = new AuthorityMetadataEntity();\n            metadataEntity.updateCanonicalAuthority(this.canonicalAuthority);\n        }\n\n        const cloudDiscoverySource = await invokeAsync(\n            this.updateCloudDiscoveryMetadata.bind(this),\n            PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(metadataEntity);\n        this.canonicalAuthority = this.canonicalAuthority.replace(\n            this.hostnameAndPort,\n            metadataEntity.preferred_network\n        );\n        const endpointSource = await invokeAsync(\n            this.updateEndpointMetadata.bind(this),\n            PerformanceEvents.AuthorityUpdateEndpointMetadata,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(metadataEntity);\n\n        if (\n            cloudDiscoverySource !== AuthorityMetadataSource.CACHE &&\n            endpointSource !== AuthorityMetadataSource.CACHE\n        ) {\n            // Reset the expiration time unless both values came from a successful cache lookup\n            metadataEntity.resetExpiresAt();\n            metadataEntity.updateCanonicalAuthority(this.canonicalAuthority);\n        }\n\n        const cacheKey = this.cacheManager.generateAuthorityMetadataCacheKey(\n            metadataEntity.preferred_cache\n        );\n        this.cacheManager.setAuthorityMetadata(cacheKey, metadataEntity);\n        this.metadata = metadataEntity;\n    }\n\n    /**\n     * Update AuthorityMetadataEntity with new endpoints and return where the information came from\n     * @param metadataEntity\n     */\n    private async updateEndpointMetadata(\n        metadataEntity: AuthorityMetadataEntity\n    ): Promise<AuthorityMetadataSource> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthorityUpdateEndpointMetadata,\n            this.correlationId\n        );\n        this.logger.verbose(\n            \"Attempting to get endpoint metadata from authority configuration\"\n        );\n        let metadata = this.getEndpointMetadataFromConfig();\n        if (metadata) {\n            this.logger.verbose(\n                \"Found endpoint metadata in authority configuration\"\n            );\n            metadataEntity.updateEndpointMetadata(metadata, false);\n            return AuthorityMetadataSource.CONFIG;\n        }\n\n        this.logger.verbose(\n            \"Did not find endpoint metadata in the config... Attempting to get endpoint metadata from the hardcoded values.\"\n        );\n\n        // skipAuthorityMetadataCache is used to bypass hardcoded authority metadata and force a network metadata cache lookup and network metadata request if no cached response is available.\n        if (this.authorityOptions.skipAuthorityMetadataCache) {\n            this.logger.verbose(\n                \"Skipping hardcoded metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get endpoint metadata from the network metadata cache.\"\n            );\n        } else {\n            let hardcodedMetadata =\n                this.getEndpointMetadataFromHardcodedValues();\n            if (hardcodedMetadata) {\n                this.logger.verbose(\n                    \"Found endpoint metadata from hardcoded values.\"\n                );\n                // If the user prefers to use an azure region replace the global endpoints with regional information.\n                if (\n                    this.authorityOptions.azureRegionConfiguration?.azureRegion\n                ) {\n                    hardcodedMetadata = await invokeAsync(\n                        this.updateMetadataWithRegionalInformation.bind(this),\n                        PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation,\n                        this.logger,\n                        this.performanceClient,\n                        this.correlationId\n                    )(hardcodedMetadata);\n                }\n\n                metadataEntity.updateEndpointMetadata(hardcodedMetadata, false);\n                return AuthorityMetadataSource.HARDCODED_VALUES;\n            } else {\n                this.logger.verbose(\n                    \"Did not find endpoint metadata in hardcoded values... Attempting to get endpoint metadata from the network metadata cache.\"\n                );\n            }\n        }\n\n        // Check cached metadata entity expiration status\n        const metadataEntityExpired = metadataEntity.isExpired();\n        if (\n            this.isAuthoritySameType(metadataEntity) &&\n            metadataEntity.endpointsFromNetwork &&\n            !metadataEntityExpired\n        ) {\n            // No need to update\n            this.logger.verbose(\"Found endpoint metadata in the cache.\");\n            return AuthorityMetadataSource.CACHE;\n        } else if (metadataEntityExpired) {\n            this.logger.verbose(\"The metadata entity is expired.\");\n        }\n\n        metadata = await invokeAsync(\n            this.getEndpointMetadataFromNetwork.bind(this),\n            PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )();\n        if (metadata) {\n            // If the user prefers to use an azure region replace the global endpoints with regional information.\n            if (this.authorityOptions.azureRegionConfiguration?.azureRegion) {\n                metadata = await invokeAsync(\n                    this.updateMetadataWithRegionalInformation.bind(this),\n                    PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation,\n                    this.logger,\n                    this.performanceClient,\n                    this.correlationId\n                )(metadata);\n            }\n\n            metadataEntity.updateEndpointMetadata(metadata, true);\n            return AuthorityMetadataSource.NETWORK;\n        } else {\n            // Metadata could not be obtained from the config, cache, network or hardcoded values\n            throw createClientAuthError(\n                ClientAuthErrorCodes.openIdConfigError,\n                this.defaultOpenIdConfigurationEndpoint\n            );\n        }\n    }\n\n    /**\n     * Compares the number of url components after the domain to determine if the cached\n     * authority metadata can be used for the requested authority. Protects against same domain different\n     * authority such as login.microsoftonline.com/tenant and login.microsoftonline.com/tfp/tenant/policy\n     * @param metadataEntity\n     */\n    private isAuthoritySameType(\n        metadataEntity: AuthorityMetadataEntity\n    ): boolean {\n        const cachedAuthorityUrl = new UrlString(\n            metadataEntity.canonical_authority\n        );\n        const cachedParts = cachedAuthorityUrl.getUrlComponents().PathSegments;\n\n        return (\n            cachedParts.length ===\n            this.canonicalAuthorityUrlComponents.PathSegments.length\n        );\n    }\n\n    /**\n     * Parse authorityMetadata config option\n     */\n    private getEndpointMetadataFromConfig(): OpenIdConfigResponse | null {\n        if (this.authorityOptions.authorityMetadata) {\n            try {\n                return JSON.parse(\n                    this.authorityOptions.authorityMetadata\n                ) as OpenIdConfigResponse;\n            } catch (e) {\n                throw createClientConfigurationError(\n                    ClientConfigurationErrorCodes.invalidAuthorityMetadata\n                );\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Gets OAuth endpoints from the given OpenID configuration endpoint.\n     *\n     * @param hasHardcodedMetadata boolean\n     */\n    private async getEndpointMetadataFromNetwork(): Promise<OpenIdConfigResponse | null> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthorityGetEndpointMetadataFromNetwork,\n            this.correlationId\n        );\n\n        const options: ImdsOptions = {};\n\n        /*\n         * TODO: Add a timeout if the authority exists in our library's\n         * hardcoded list of metadata\n         */\n\n        const openIdConfigurationEndpoint =\n            this.defaultOpenIdConfigurationEndpoint;\n        this.logger.verbose(\n            `Authority.getEndpointMetadataFromNetwork: attempting to retrieve OAuth endpoints from ${openIdConfigurationEndpoint}`\n        );\n\n        try {\n            const response =\n                await this.networkInterface.sendGetRequestAsync<OpenIdConfigResponse>(\n                    openIdConfigurationEndpoint,\n                    options\n                );\n            const isValidResponse = isOpenIdConfigResponse(response.body);\n            if (isValidResponse) {\n                return response.body;\n            } else {\n                this.logger.verbose(\n                    `Authority.getEndpointMetadataFromNetwork: could not parse response as OpenID configuration`\n                );\n                return null;\n            }\n        } catch (e) {\n            this.logger.verbose(\n                `Authority.getEndpointMetadataFromNetwork: ${e}`\n            );\n            return null;\n        }\n    }\n\n    /**\n     * Get OAuth endpoints for common authorities.\n     */\n    private getEndpointMetadataFromHardcodedValues(): OpenIdConfigResponse | null {\n        if (this.canonicalAuthority in EndpointMetadata) {\n            return EndpointMetadata[this.canonicalAuthority];\n        }\n\n        return null;\n    }\n\n    /**\n     * Update the retrieved metadata with regional information.\n     * User selected Azure region will be used if configured.\n     */\n    private async updateMetadataWithRegionalInformation(\n        metadata: OpenIdConfigResponse\n    ): Promise<OpenIdConfigResponse> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthorityUpdateMetadataWithRegionalInformation,\n            this.correlationId\n        );\n\n        const userConfiguredAzureRegion =\n            this.authorityOptions.azureRegionConfiguration?.azureRegion;\n\n        if (userConfiguredAzureRegion) {\n            if (\n                userConfiguredAzureRegion !==\n                Constants.AZURE_REGION_AUTO_DISCOVER_FLAG\n            ) {\n                this.regionDiscoveryMetadata.region_outcome =\n                    RegionDiscoveryOutcomes.CONFIGURED_NO_AUTO_DETECTION;\n                this.regionDiscoveryMetadata.region_used =\n                    userConfiguredAzureRegion;\n                return Authority.replaceWithRegionalInformation(\n                    metadata,\n                    userConfiguredAzureRegion\n                );\n            }\n\n            const autodetectedRegionName = await invokeAsync(\n                this.regionDiscovery.detectRegion.bind(this.regionDiscovery),\n                PerformanceEvents.RegionDiscoveryDetectRegion,\n                this.logger,\n                this.performanceClient,\n                this.correlationId\n            )(\n                this.authorityOptions.azureRegionConfiguration\n                    ?.environmentRegion,\n                this.regionDiscoveryMetadata\n            );\n\n            if (autodetectedRegionName) {\n                this.regionDiscoveryMetadata.region_outcome =\n                    RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_SUCCESSFUL;\n                this.regionDiscoveryMetadata.region_used =\n                    autodetectedRegionName;\n                return Authority.replaceWithRegionalInformation(\n                    metadata,\n                    autodetectedRegionName\n                );\n            }\n\n            this.regionDiscoveryMetadata.region_outcome =\n                RegionDiscoveryOutcomes.AUTO_DETECTION_REQUESTED_FAILED;\n        }\n\n        return metadata;\n    }\n\n    /**\n     * Updates the AuthorityMetadataEntity with new aliases, preferred_network and preferred_cache\n     * and returns where the information was retrieved from\n     * @param metadataEntity\n     * @returns AuthorityMetadataSource\n     */\n    private async updateCloudDiscoveryMetadata(\n        metadataEntity: AuthorityMetadataEntity\n    ): Promise<AuthorityMetadataSource> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthorityUpdateCloudDiscoveryMetadata,\n            this.correlationId\n        );\n        this.logger.verbose(\n            \"Attempting to get cloud discovery metadata  from authority configuration\"\n        );\n        this.logger.verbosePii(\n            `Known Authorities: ${\n                this.authorityOptions.knownAuthorities ||\n                Constants.NOT_APPLICABLE\n            }`\n        );\n        this.logger.verbosePii(\n            `Authority Metadata: ${\n                this.authorityOptions.authorityMetadata ||\n                Constants.NOT_APPLICABLE\n            }`\n        );\n        this.logger.verbosePii(\n            `Canonical Authority: ${\n                metadataEntity.canonical_authority || Constants.NOT_APPLICABLE\n            }`\n        );\n        let metadata = this.getCloudDiscoveryMetadataFromConfig();\n        if (metadata) {\n            this.logger.verbose(\n                \"Found cloud discovery metadata in authority configuration\"\n            );\n            metadataEntity.updateCloudDiscoveryMetadata(metadata, false);\n            return AuthorityMetadataSource.CONFIG;\n        }\n\n        // If the cached metadata came from config but that config was not passed to this instance, we must go to hardcoded values\n        this.logger.verbose(\n            \"Did not find cloud discovery metadata in the config... Attempting to get cloud discovery metadata from the hardcoded values.\"\n        );\n\n        if (this.options.skipAuthorityMetadataCache) {\n            this.logger.verbose(\n                \"Skipping hardcoded cloud discovery metadata cache since skipAuthorityMetadataCache is set to true. Attempting to get cloud discovery metadata from the network metadata cache.\"\n            );\n        } else {\n            const hardcodedMetadata =\n                this.getCloudDiscoveryMetadataFromHardcodedValues();\n            if (hardcodedMetadata) {\n                this.logger.verbose(\n                    \"Found cloud discovery metadata from hardcoded values.\"\n                );\n                metadataEntity.updateCloudDiscoveryMetadata(\n                    hardcodedMetadata,\n                    false\n                );\n                return AuthorityMetadataSource.HARDCODED_VALUES;\n            }\n\n            this.logger.verbose(\n                \"Did not find cloud discovery metadata in hardcoded values... Attempting to get cloud discovery metadata from the network metadata cache.\"\n            );\n        }\n\n        const metadataEntityExpired = metadataEntity.isExpired();\n        if (\n            this.isAuthoritySameType(metadataEntity) &&\n            metadataEntity.aliasesFromNetwork &&\n            !metadataEntityExpired\n        ) {\n            this.logger.verbose(\"Found cloud discovery metadata in the cache.\");\n            // No need to update\n            return AuthorityMetadataSource.CACHE;\n        } else if (metadataEntityExpired) {\n            this.logger.verbose(\"The metadata entity is expired.\");\n        }\n\n        metadata = await invokeAsync(\n            this.getCloudDiscoveryMetadataFromNetwork.bind(this),\n            PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )();\n\n        if (metadata) {\n            metadataEntity.updateCloudDiscoveryMetadata(metadata, true);\n            return AuthorityMetadataSource.NETWORK;\n        }\n\n        // Metadata could not be obtained from the config, cache, network or hardcoded values\n        throw createClientConfigurationError(\n            ClientConfigurationErrorCodes.untrustedAuthority\n        );\n    }\n\n    /**\n     * Parse cloudDiscoveryMetadata config or check knownAuthorities\n     */\n    private getCloudDiscoveryMetadataFromConfig(): CloudDiscoveryMetadata | null {\n        // CIAM does not support cloud discovery metadata\n        if (this.authorityType === AuthorityType.Ciam) {\n            this.logger.verbose(\n                \"CIAM authorities do not support cloud discovery metadata, generate the aliases from authority host.\"\n            );\n            return Authority.createCloudDiscoveryMetadataFromHost(\n                this.hostnameAndPort\n            );\n        }\n\n        // Check if network response was provided in config\n        if (this.authorityOptions.cloudDiscoveryMetadata) {\n            this.logger.verbose(\n                \"The cloud discovery metadata has been provided as a network response, in the config.\"\n            );\n            try {\n                this.logger.verbose(\n                    \"Attempting to parse the cloud discovery metadata.\"\n                );\n                const parsedResponse = JSON.parse(\n                    this.authorityOptions.cloudDiscoveryMetadata\n                ) as CloudInstanceDiscoveryResponse;\n                const metadata =\n                    Authority.getCloudDiscoveryMetadataFromNetworkResponse(\n                        parsedResponse.metadata,\n                        this.hostnameAndPort\n                    );\n                this.logger.verbose(\"Parsed the cloud discovery metadata.\");\n                if (metadata) {\n                    this.logger.verbose(\n                        \"There is returnable metadata attached to the parsed cloud discovery metadata.\"\n                    );\n                    return metadata;\n                } else {\n                    this.logger.verbose(\n                        \"There is no metadata attached to the parsed cloud discovery metadata.\"\n                    );\n                }\n            } catch (e) {\n                this.logger.verbose(\n                    \"Unable to parse the cloud discovery metadata. Throwing Invalid Cloud Discovery Metadata Error.\"\n                );\n                throw createClientConfigurationError(\n                    ClientConfigurationErrorCodes.invalidCloudDiscoveryMetadata\n                );\n            }\n        }\n\n        // If cloudDiscoveryMetadata is empty or does not contain the host, check knownAuthorities\n        if (this.isInKnownAuthorities()) {\n            this.logger.verbose(\n                \"The host is included in knownAuthorities. Creating new cloud discovery metadata from the host.\"\n            );\n            return Authority.createCloudDiscoveryMetadataFromHost(\n                this.hostnameAndPort\n            );\n        }\n\n        return null;\n    }\n\n    /**\n     * Called to get metadata from network if CloudDiscoveryMetadata was not populated by config\n     *\n     * @param hasHardcodedMetadata boolean\n     */\n    private async getCloudDiscoveryMetadataFromNetwork(): Promise<CloudDiscoveryMetadata | null> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthorityGetCloudDiscoveryMetadataFromNetwork,\n            this.correlationId\n        );\n        const instanceDiscoveryEndpoint = `${Constants.AAD_INSTANCE_DISCOVERY_ENDPT}${this.canonicalAuthority}oauth2/v2.0/authorize`;\n        const options: ImdsOptions = {};\n\n        /*\n         * TODO: Add a timeout if the authority exists in our library's\n         * hardcoded list of metadata\n         */\n\n        let match = null;\n        try {\n            const response = await this.networkInterface.sendGetRequestAsync<\n                | CloudInstanceDiscoveryResponse\n                | CloudInstanceDiscoveryErrorResponse\n            >(instanceDiscoveryEndpoint, options);\n            let typedResponseBody:\n                | CloudInstanceDiscoveryResponse\n                | CloudInstanceDiscoveryErrorResponse;\n            let metadata: Array<CloudDiscoveryMetadata>;\n            if (isCloudInstanceDiscoveryResponse(response.body)) {\n                typedResponseBody =\n                    response.body as CloudInstanceDiscoveryResponse;\n                metadata = typedResponseBody.metadata;\n\n                this.logger.verbosePii(\n                    `tenant_discovery_endpoint is: ${typedResponseBody.tenant_discovery_endpoint}`\n                );\n            } else if (isCloudInstanceDiscoveryErrorResponse(response.body)) {\n                this.logger.warning(\n                    `A CloudInstanceDiscoveryErrorResponse was returned. The cloud instance discovery network request's status code is: ${response.status}`\n                );\n\n                typedResponseBody =\n                    response.body as CloudInstanceDiscoveryErrorResponse;\n                if (typedResponseBody.error === Constants.INVALID_INSTANCE) {\n                    this.logger.error(\n                        \"The CloudInstanceDiscoveryErrorResponse error is invalid_instance.\"\n                    );\n                    return null;\n                }\n\n                this.logger.warning(\n                    `The CloudInstanceDiscoveryErrorResponse error is ${typedResponseBody.error}`\n                );\n                this.logger.warning(\n                    `The CloudInstanceDiscoveryErrorResponse error description is ${typedResponseBody.error_description}`\n                );\n\n                this.logger.warning(\n                    \"Setting the value of the CloudInstanceDiscoveryMetadata (returned from the network) to []\"\n                );\n                metadata = [];\n            } else {\n                this.logger.error(\n                    \"AAD did not return a CloudInstanceDiscoveryResponse or CloudInstanceDiscoveryErrorResponse\"\n                );\n                return null;\n            }\n\n            this.logger.verbose(\n                \"Attempting to find a match between the developer's authority and the CloudInstanceDiscoveryMetadata returned from the network request.\"\n            );\n            match = Authority.getCloudDiscoveryMetadataFromNetworkResponse(\n                metadata,\n                this.hostnameAndPort\n            );\n        } catch (error) {\n            if (error instanceof AuthError) {\n                this.logger.error(\n                    `There was a network error while attempting to get the cloud discovery instance metadata.\\nError: ${error.errorCode}\\nError Description: ${error.errorMessage}`\n                );\n            } else {\n                const typedError = error as Error;\n                this.logger.error(\n                    `A non-MSALJS error was thrown while attempting to get the cloud instance discovery metadata.\\nError: ${typedError.name}\\nError Description: ${typedError.message}`\n                );\n            }\n\n            return null;\n        }\n\n        // Custom Domain scenario, host is trusted because Instance Discovery call succeeded\n        if (!match) {\n            this.logger.warning(\n                \"The developer's authority was not found within the CloudInstanceDiscoveryMetadata returned from the network request.\"\n            );\n            this.logger.verbose(\n                \"Creating custom Authority for custom domain scenario.\"\n            );\n\n            match = Authority.createCloudDiscoveryMetadataFromHost(\n                this.hostnameAndPort\n            );\n        }\n        return match;\n    }\n\n    /**\n     * Get cloud discovery metadata for common authorities\n     */\n    private getCloudDiscoveryMetadataFromHardcodedValues(): CloudDiscoveryMetadata | null {\n        if (this.canonicalAuthority in InstanceDiscoveryMetadata) {\n            const hardcodedMetadataResponse =\n                InstanceDiscoveryMetadata[this.canonicalAuthority];\n            const metadata =\n                Authority.getCloudDiscoveryMetadataFromNetworkResponse(\n                    hardcodedMetadataResponse.metadata,\n                    this.hostnameAndPort\n                );\n            return metadata;\n        }\n\n        return null;\n    }\n\n    /**\n     * Helper function to determine if this host is included in the knownAuthorities config option\n     */\n    private isInKnownAuthorities(): boolean {\n        const matches = this.authorityOptions.knownAuthorities.filter(\n            (authority) => {\n                return (\n                    UrlString.getDomainFromUrl(authority).toLowerCase() ===\n                    this.hostnameAndPort\n                );\n            }\n        );\n\n        return matches.length > 0;\n    }\n\n    /**\n     * helper function to populate the authority based on azureCloudOptions\n     * @param authorityString\n     * @param azureCloudOptions\n     */\n    static generateAuthority(\n        authorityString: string,\n        azureCloudOptions?: AzureCloudOptions\n    ): string {\n        let authorityAzureCloudInstance;\n\n        if (\n            azureCloudOptions &&\n            azureCloudOptions.azureCloudInstance !== AzureCloudInstance.None\n        ) {\n            const tenant = azureCloudOptions.tenant\n                ? azureCloudOptions.tenant\n                : Constants.DEFAULT_COMMON_TENANT;\n            authorityAzureCloudInstance = `${azureCloudOptions.azureCloudInstance}/${tenant}/`;\n        }\n\n        return authorityAzureCloudInstance\n            ? authorityAzureCloudInstance\n            : authorityString;\n    }\n\n    /**\n     * Creates cloud discovery metadata object from a given host\n     * @param host\n     */\n    static createCloudDiscoveryMetadataFromHost(\n        host: string\n    ): CloudDiscoveryMetadata {\n        return {\n            preferred_network: host,\n            preferred_cache: host,\n            aliases: [host],\n        };\n    }\n\n    /**\n     * Searches instance discovery network response for the entry that contains the host in the aliases list\n     * @param response\n     * @param authority\n     */\n    static getCloudDiscoveryMetadataFromNetworkResponse(\n        response: CloudDiscoveryMetadata[],\n        authority: string\n    ): CloudDiscoveryMetadata | null {\n        for (let i = 0; i < response.length; i++) {\n            const metadata = response[i];\n            if (metadata.aliases.indexOf(authority) > -1) {\n                return metadata;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * helper function to generate environment from authority object\n     */\n    getPreferredCache(): string {\n        if (this.discoveryComplete()) {\n            return this.metadata.preferred_cache;\n        } else {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    /**\n     * Returns whether or not the provided host is an alias of this authority instance\n     * @param host\n     */\n    isAlias(host: string): boolean {\n        return this.metadata.aliases.indexOf(host) > -1;\n    }\n\n    /**\n     * Returns whether or not the provided host is an alias of a known Microsoft authority for purposes of endpoint discovery\n     * @param host\n     */\n    isAliasOfKnownMicrosoftAuthority(host: string): boolean {\n        return InstanceDiscoveryMetadataAliases.has(host);\n    }\n\n    /**\n     * Checks whether the provided host is that of a public cloud authority\n     *\n     * @param authority string\n     * @returns bool\n     */\n    static isPublicCloudAuthority(host: string): boolean {\n        return Constants.KNOWN_PUBLIC_CLOUDS.indexOf(host) >= 0;\n    }\n\n    /**\n     * Rebuild the authority string with the region\n     *\n     * @param host string\n     * @param region string\n     */\n    static buildRegionalAuthorityString(\n        host: string,\n        region: string,\n        queryString?: string\n    ): string {\n        // Create and validate a Url string object with the initial authority string\n        const authorityUrlInstance = new UrlString(host);\n        authorityUrlInstance.validateAsUri();\n\n        const authorityUrlParts = authorityUrlInstance.getUrlComponents();\n\n        let hostNameAndPort = `${region}.${authorityUrlParts.HostNameAndPort}`;\n\n        if (this.isPublicCloudAuthority(authorityUrlParts.HostNameAndPort)) {\n            hostNameAndPort = `${region}.${Constants.REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX}`;\n        }\n\n        // Include the query string portion of the url\n        const url = UrlString.constructAuthorityUriFromObject({\n            ...authorityUrlInstance.getUrlComponents(),\n            HostNameAndPort: hostNameAndPort,\n        }).urlString;\n\n        // Add the query string if a query string was provided\n        if (queryString) return `${url}?${queryString}`;\n\n        return url;\n    }\n\n    /**\n     * Replace the endpoints in the metadata object with their regional equivalents.\n     *\n     * @param metadata OpenIdConfigResponse\n     * @param azureRegion string\n     */\n    static replaceWithRegionalInformation(\n        metadata: OpenIdConfigResponse,\n        azureRegion: string\n    ): OpenIdConfigResponse {\n        const regionalMetadata = { ...metadata };\n        regionalMetadata.authorization_endpoint =\n            Authority.buildRegionalAuthorityString(\n                regionalMetadata.authorization_endpoint,\n                azureRegion\n            );\n        // TODO: Enquire on whether we should leave the query string or remove it before releasing the feature\n        regionalMetadata.token_endpoint =\n            Authority.buildRegionalAuthorityString(\n                regionalMetadata.token_endpoint,\n                azureRegion,\n                Constants.REGIONAL_AUTH_NON_MSI_QUERY_STRING\n            );\n\n        if (regionalMetadata.end_session_endpoint) {\n            regionalMetadata.end_session_endpoint =\n                Authority.buildRegionalAuthorityString(\n                    regionalMetadata.end_session_endpoint,\n                    azureRegion\n                );\n        }\n\n        return regionalMetadata;\n    }\n\n    /**\n     * Transform CIAM_AUTHORIY as per the below rules:\n     * If no path segments found and it is a CIAM authority (hostname ends with .ciamlogin.com), then transform it\n     *\n     * NOTE: The transformation path should go away once STS supports CIAM with the format: `tenantIdorDomain.ciamlogin.com`\n     * `ciamlogin.com` can also change in the future and we should accommodate the same\n     *\n     * @param authority\n     */\n    static transformCIAMAuthority(authority: string): string {\n        let ciamAuthority = authority.endsWith(Constants.FORWARD_SLASH)\n            ? authority\n            : `${authority}${Constants.FORWARD_SLASH}`;\n        const authorityUrl = new UrlString(authority);\n        const authorityUrlComponents = authorityUrl.getUrlComponents();\n\n        // check if transformation is needed\n        if (\n            authorityUrlComponents.PathSegments.length === 0 &&\n            authorityUrlComponents.HostNameAndPort.endsWith(\n                Constants.CIAM_AUTH_URL\n            )\n        ) {\n            const tenantIdOrDomain =\n                authorityUrlComponents.HostNameAndPort.split(\".\")[0];\n            ciamAuthority = `${ciamAuthority}${tenantIdOrDomain}${Constants.AAD_TENANT_DOMAIN_SUFFIX}`;\n        }\n\n        return ciamAuthority;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Authority } from \"./Authority\";\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError\";\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../error/ClientAuthError\";\nimport { ICacheManager } from \"../cache/interface/ICacheManager\";\nimport { AuthorityOptions } from \"./AuthorityOptions\";\nimport { Logger } from \"../logger/Logger\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent\";\nimport { invokeAsync } from \"../utils/FunctionWrappers\";\n\n/** @internal */\nexport class AuthorityFactory {\n    /**\n     * Create an authority object of the correct type based on the url\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\n     *\n     * Also performs endpoint discovery.\n     *\n     * @param authorityUri\n     * @param networkClient\n     * @param protocolMode\n     */\n    static async createDiscoveredInstance(\n        authorityUri: string,\n        networkClient: INetworkModule,\n        cacheManager: ICacheManager,\n        authorityOptions: AuthorityOptions,\n        logger: Logger,\n        performanceClient?: IPerformanceClient,\n        correlationId?: string\n    ): Promise<Authority> {\n        performanceClient?.addQueueMeasurement(\n            PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance,\n            correlationId\n        );\n\n        const authorityUriFinal =\n            Authority.transformCIAMAuthority(authorityUri);\n\n        // Initialize authority and perform discovery endpoint check.\n        const acquireTokenAuthority: Authority =\n            AuthorityFactory.createInstance(\n                authorityUriFinal,\n                networkClient,\n                cacheManager,\n                authorityOptions,\n                logger,\n                performanceClient,\n                correlationId\n            );\n\n        try {\n            await invokeAsync(\n                acquireTokenAuthority.resolveEndpointsAsync.bind(\n                    acquireTokenAuthority\n                ),\n                PerformanceEvents.AuthorityResolveEndpointsAsync,\n                logger,\n                performanceClient,\n                correlationId\n            )();\n            return acquireTokenAuthority;\n        } catch (e) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.endpointResolutionError\n            );\n        }\n    }\n\n    /**\n     * Create an authority object of the correct type based on the url\n     * Performs basic authority validation - checks to see if the authority is of a valid type (i.e. aad, b2c, adfs)\n     *\n     * Does not perform endpoint discovery.\n     *\n     * @param authorityUrl\n     * @param networkInterface\n     * @param protocolMode\n     */\n    static createInstance(\n        authorityUrl: string,\n        networkInterface: INetworkModule,\n        cacheManager: ICacheManager,\n        authorityOptions: AuthorityOptions,\n        logger: Logger,\n        performanceClient?: IPerformanceClient,\n        correlationId?: string\n    ): Authority {\n        // Throw error if authority url is empty\n        if (!authorityUrl) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.urlEmptyError\n            );\n        }\n\n        return new Authority(\n            authorityUrl,\n            networkInterface,\n            cacheManager,\n            authorityOptions,\n            logger,\n            performanceClient,\n            correlationId\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    SERVER_TELEM_CONSTANTS,\n    Separators,\n    CacheOutcome,\n    Constants,\n    RegionDiscoverySources,\n    RegionDiscoveryOutcomes,\n} from \"../../utils/Constants\";\nimport { CacheManager } from \"../../cache/CacheManager\";\nimport { AuthError } from \"../../error/AuthError\";\nimport { ServerTelemetryRequest } from \"./ServerTelemetryRequest\";\nimport { ServerTelemetryEntity } from \"../../cache/entities/ServerTelemetryEntity\";\nimport { RegionDiscoveryMetadata } from \"../../authority/RegionDiscoveryMetadata\";\n\n/** @internal */\nexport class ServerTelemetryManager {\n    private cacheManager: CacheManager;\n    private apiId: number;\n    private correlationId: string;\n    private telemetryCacheKey: string;\n    private wrapperSKU: String;\n    private wrapperVer: String;\n    private regionUsed: string | undefined;\n    private regionSource: RegionDiscoverySources | undefined;\n    private regionOutcome: RegionDiscoveryOutcomes | undefined;\n    private cacheOutcome: CacheOutcome = CacheOutcome.NOT_APPLICABLE;\n\n    constructor(\n        telemetryRequest: ServerTelemetryRequest,\n        cacheManager: CacheManager\n    ) {\n        this.cacheManager = cacheManager;\n        this.apiId = telemetryRequest.apiId;\n        this.correlationId = telemetryRequest.correlationId;\n        this.wrapperSKU = telemetryRequest.wrapperSKU || Constants.EMPTY_STRING;\n        this.wrapperVer = telemetryRequest.wrapperVer || Constants.EMPTY_STRING;\n\n        this.telemetryCacheKey =\n            SERVER_TELEM_CONSTANTS.CACHE_KEY +\n            Separators.CACHE_KEY_SEPARATOR +\n            telemetryRequest.clientId;\n    }\n\n    /**\n     * API to add MSER Telemetry to request\n     */\n    generateCurrentRequestHeaderValue(): string {\n        const request = `${this.apiId}${SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR}${this.cacheOutcome}`;\n        const platformFields = [this.wrapperSKU, this.wrapperVer].join(\n            SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR\n        );\n        const regionDiscoveryFields = this.getRegionDiscoveryFields();\n        const requestWithRegionDiscoveryFields = [\n            request,\n            regionDiscoveryFields,\n        ].join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n\n        return [\n            SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,\n            requestWithRegionDiscoveryFields,\n            platformFields,\n        ].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\n    }\n\n    /**\n     * API to add MSER Telemetry for the last failed request\n     */\n    generateLastRequestHeaderValue(): string {\n        const lastRequests = this.getLastRequests();\n\n        const maxErrors = ServerTelemetryManager.maxErrorsToSend(lastRequests);\n        const failedRequests = lastRequests.failedRequests\n            .slice(0, 2 * maxErrors)\n            .join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const errors = lastRequests.errors\n            .slice(0, maxErrors)\n            .join(SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR);\n        const errorCount = lastRequests.errors.length;\n\n        // Indicate whether this header contains all data or partial data\n        const overflow =\n            maxErrors < errorCount\n                ? SERVER_TELEM_CONSTANTS.OVERFLOW_TRUE\n                : SERVER_TELEM_CONSTANTS.OVERFLOW_FALSE;\n        const platformFields = [errorCount, overflow].join(\n            SERVER_TELEM_CONSTANTS.VALUE_SEPARATOR\n        );\n\n        return [\n            SERVER_TELEM_CONSTANTS.SCHEMA_VERSION,\n            lastRequests.cacheHits,\n            failedRequests,\n            errors,\n            platformFields,\n        ].join(SERVER_TELEM_CONSTANTS.CATEGORY_SEPARATOR);\n    }\n\n    /**\n     * API to cache token failures for MSER data capture\n     * @param error\n     */\n    cacheFailedRequest(error: unknown): void {\n        const lastRequests = this.getLastRequests();\n        if (\n            lastRequests.errors.length >=\n            SERVER_TELEM_CONSTANTS.MAX_CACHED_ERRORS\n        ) {\n            // Remove a cached error to make room, first in first out\n            lastRequests.failedRequests.shift(); // apiId\n            lastRequests.failedRequests.shift(); // correlationId\n            lastRequests.errors.shift();\n        }\n\n        lastRequests.failedRequests.push(this.apiId, this.correlationId);\n\n        if (error instanceof Error && !!error && error.toString()) {\n            if (error instanceof AuthError) {\n                if (error.subError) {\n                    lastRequests.errors.push(error.subError);\n                } else if (error.errorCode) {\n                    lastRequests.errors.push(error.errorCode);\n                } else {\n                    lastRequests.errors.push(error.toString());\n                }\n            } else {\n                lastRequests.errors.push(error.toString());\n            }\n        } else {\n            lastRequests.errors.push(SERVER_TELEM_CONSTANTS.UNKNOWN_ERROR);\n        }\n\n        this.cacheManager.setServerTelemetry(\n            this.telemetryCacheKey,\n            lastRequests\n        );\n\n        return;\n    }\n\n    /**\n     * Update server telemetry cache entry by incrementing cache hit counter\n     */\n    incrementCacheHits(): number {\n        const lastRequests = this.getLastRequests();\n        lastRequests.cacheHits += 1;\n\n        this.cacheManager.setServerTelemetry(\n            this.telemetryCacheKey,\n            lastRequests\n        );\n        return lastRequests.cacheHits;\n    }\n\n    /**\n     * Get the server telemetry entity from cache or initialize a new one\n     */\n    getLastRequests(): ServerTelemetryEntity {\n        const initialValue: ServerTelemetryEntity = new ServerTelemetryEntity();\n        const lastRequests = this.cacheManager.getServerTelemetry(\n            this.telemetryCacheKey\n        ) as ServerTelemetryEntity;\n\n        return lastRequests || initialValue;\n    }\n\n    /**\n     * Remove server telemetry cache entry\n     */\n    clearTelemetryCache(): void {\n        const lastRequests = this.getLastRequests();\n        const numErrorsFlushed =\n            ServerTelemetryManager.maxErrorsToSend(lastRequests);\n        const errorCount = lastRequests.errors.length;\n        if (numErrorsFlushed === errorCount) {\n            // All errors were sent on last request, clear Telemetry cache\n            this.cacheManager.removeItem(this.telemetryCacheKey);\n        } else {\n            // Partial data was flushed to server, construct a new telemetry cache item with errors that were not flushed\n            const serverTelemEntity = new ServerTelemetryEntity();\n            serverTelemEntity.failedRequests =\n                lastRequests.failedRequests.slice(numErrorsFlushed * 2); // failedRequests contains 2 items for each error\n            serverTelemEntity.errors =\n                lastRequests.errors.slice(numErrorsFlushed);\n\n            this.cacheManager.setServerTelemetry(\n                this.telemetryCacheKey,\n                serverTelemEntity\n            );\n        }\n    }\n\n    /**\n     * Returns the maximum number of errors that can be flushed to the server in the next network request\n     * @param serverTelemetryEntity\n     */\n    static maxErrorsToSend(\n        serverTelemetryEntity: ServerTelemetryEntity\n    ): number {\n        let i;\n        let maxErrors = 0;\n        let dataSize = 0;\n        const errorCount = serverTelemetryEntity.errors.length;\n        for (i = 0; i < errorCount; i++) {\n            // failedRequests parameter contains pairs of apiId and correlationId, multiply index by 2 to preserve pairs\n            const apiId =\n                serverTelemetryEntity.failedRequests[2 * i] ||\n                Constants.EMPTY_STRING;\n            const correlationId =\n                serverTelemetryEntity.failedRequests[2 * i + 1] ||\n                Constants.EMPTY_STRING;\n            const errorCode =\n                serverTelemetryEntity.errors[i] || Constants.EMPTY_STRING;\n\n            // Count number of characters that would be added to header, each character is 1 byte. Add 3 at the end to account for separators\n            dataSize +=\n                apiId.toString().length +\n                correlationId.toString().length +\n                errorCode.length +\n                3;\n\n            if (dataSize < SERVER_TELEM_CONSTANTS.MAX_LAST_HEADER_BYTES) {\n                // Adding this entry to the header would still keep header size below the limit\n                maxErrors += 1;\n            } else {\n                break;\n            }\n        }\n\n        return maxErrors;\n    }\n\n    /**\n     * Get the region discovery fields\n     *\n     * @returns string\n     */\n    getRegionDiscoveryFields(): string {\n        const regionDiscoveryFields: string[] = [];\n\n        regionDiscoveryFields.push(this.regionUsed || Constants.EMPTY_STRING);\n        regionDiscoveryFields.push(this.regionSource || Constants.EMPTY_STRING);\n        regionDiscoveryFields.push(\n            this.regionOutcome || Constants.EMPTY_STRING\n        );\n\n        return regionDiscoveryFields.join(\",\");\n    }\n\n    /**\n     * Update the region discovery metadata\n     *\n     * @param regionDiscoveryMetadata\n     * @returns void\n     */\n    updateRegionDiscoveryMetadata(\n        regionDiscoveryMetadata: RegionDiscoveryMetadata\n    ): void {\n        this.regionUsed = regionDiscoveryMetadata.region_used;\n        this.regionSource = regionDiscoveryMetadata.region_source;\n        this.regionOutcome = regionDiscoveryMetadata.region_outcome;\n    }\n\n    /**\n     * Set cache outcome\n     */\n    setCacheOutcome(cacheOutcome: CacheOutcome): void {\n        this.cacheOutcome = cacheOutcome;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ICrypto,\n    INetworkModule,\n    Logger,\n    AccountInfo,\n    AccountEntity,\n    BaseAuthRequest,\n    AuthenticationScheme,\n    UrlString,\n    ServerTelemetryManager,\n    ServerTelemetryRequest,\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n    Authority,\n    AuthorityOptions,\n    AuthorityFactory,\n    IPerformanceClient,\n    PerformanceEvents,\n    StringUtils,\n} from \"@azure/msal-common\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { version } from \"../packageMetadata\";\nimport { BrowserConstants } from \"../utils/BrowserConstants\";\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { ClearCacheRequest } from \"../request/ClearCacheRequest\";\nimport { createNewGuid } from \"../crypto/BrowserCrypto\";\n\nexport abstract class BaseInteractionClient {\n    protected config: BrowserConfiguration;\n    protected browserStorage: BrowserCacheManager;\n    protected browserCrypto: ICrypto;\n    protected networkClient: INetworkModule;\n    protected logger: Logger;\n    protected eventHandler: EventHandler;\n    protected navigationClient: INavigationClient;\n    protected nativeMessageHandler: NativeMessageHandler | undefined;\n    protected correlationId: string;\n    protected performanceClient: IPerformanceClient;\n\n    constructor(\n        config: BrowserConfiguration,\n        storageImpl: BrowserCacheManager,\n        browserCrypto: ICrypto,\n        logger: Logger,\n        eventHandler: EventHandler,\n        navigationClient: INavigationClient,\n        performanceClient: IPerformanceClient,\n        nativeMessageHandler?: NativeMessageHandler,\n        correlationId?: string\n    ) {\n        this.config = config;\n        this.browserStorage = storageImpl;\n        this.browserCrypto = browserCrypto;\n        this.networkClient = this.config.system.networkClient;\n        this.eventHandler = eventHandler;\n        this.navigationClient = navigationClient;\n        this.nativeMessageHandler = nativeMessageHandler;\n        this.correlationId = correlationId || createNewGuid();\n        this.logger = logger.clone(\n            BrowserConstants.MSAL_SKU,\n            version,\n            this.correlationId\n        );\n        this.performanceClient = performanceClient;\n    }\n\n    abstract acquireToken(\n        request: RedirectRequest | PopupRequest | SsoSilentRequest\n    ): Promise<AuthenticationResult | void>;\n\n    abstract logout(\n        request: EndSessionRequest | ClearCacheRequest | undefined\n    ): Promise<void>;\n\n    protected async clearCacheOnLogout(\n        account?: AccountInfo | null\n    ): Promise<void> {\n        if (account) {\n            if (\n                AccountEntity.accountInfoIsEqual(\n                    account,\n                    this.browserStorage.getActiveAccount(),\n                    false\n                )\n            ) {\n                this.logger.verbose(\"Setting active account to null\");\n                this.browserStorage.setActiveAccount(null);\n            }\n            // Clear given account.\n            try {\n                await this.browserStorage.removeAccount(\n                    AccountEntity.generateAccountCacheKey(account)\n                );\n                this.logger.verbose(\n                    \"Cleared cache items belonging to the account provided in the logout request.\"\n                );\n            } catch (error) {\n                this.logger.error(\n                    \"Account provided in logout request was not found. Local cache unchanged.\"\n                );\n            }\n        } else {\n            try {\n                this.logger.verbose(\n                    \"No account provided in logout request, clearing all cache items.\",\n                    this.correlationId\n                );\n                // Clear all accounts and tokens\n                await this.browserStorage.clear();\n                // Clear any stray keys from IndexedDB\n                await this.browserCrypto.clearKeystore();\n            } catch (e) {\n                this.logger.error(\n                    \"Attempted to clear all MSAL cache items and failed. Local cache unchanged.\"\n                );\n            }\n        }\n    }\n\n    /**\n     * Initializer function for all request APIs\n     * @param request\n     */\n    protected async initializeBaseRequest(\n        request: Partial<BaseAuthRequest>,\n        account?: AccountInfo\n    ): Promise<BaseAuthRequest> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.InitializeBaseRequest,\n            request.correlationId\n        );\n        const authority = request.authority || this.config.auth.authority;\n\n        if (account) {\n            await this.validateRequestAuthority(authority, account);\n        }\n\n        const scopes = [...((request && request.scopes) || [])];\n\n        const validatedRequest: BaseAuthRequest = {\n            ...request,\n            correlationId: this.correlationId,\n            authority,\n            scopes,\n        };\n\n        // Set authenticationScheme to BEARER if not explicitly set in the request\n        if (!validatedRequest.authenticationScheme) {\n            validatedRequest.authenticationScheme = AuthenticationScheme.BEARER;\n            this.logger.verbose(\n                'Authentication Scheme wasn\\'t explicitly set in request, defaulting to \"Bearer\" request'\n            );\n        } else {\n            if (\n                validatedRequest.authenticationScheme ===\n                AuthenticationScheme.SSH\n            ) {\n                if (!request.sshJwk) {\n                    throw createClientConfigurationError(\n                        ClientConfigurationErrorCodes.missingSshJwk\n                    );\n                }\n                if (!request.sshKid) {\n                    throw createClientConfigurationError(\n                        ClientConfigurationErrorCodes.missingSshKid\n                    );\n                }\n            }\n            this.logger.verbose(\n                `Authentication Scheme set to \"${validatedRequest.authenticationScheme}\" as configured in Auth request`\n            );\n        }\n\n        // Set requested claims hash if claims-based caching is enabled and claims were requested\n        if (\n            this.config.cache.claimsBasedCachingEnabled &&\n            request.claims &&\n            // Checks for empty stringified object \"{}\" which doesn't qualify as requested claims\n            !StringUtils.isEmptyObj(request.claims)\n        ) {\n            validatedRequest.requestedClaimsHash =\n                await this.browserCrypto.hashString(request.claims);\n        }\n\n        return validatedRequest;\n    }\n\n    /**\n     *\n     * Use to get the redirect uri configured in MSAL or null.\n     * @param requestRedirectUri\n     * @returns Redirect URL\n     *\n     */\n    getRedirectUri(requestRedirectUri?: string): string {\n        this.logger.verbose(\"getRedirectUri called\");\n        const redirectUri =\n            requestRedirectUri ||\n            this.config.auth.redirectUri ||\n            BrowserUtils.getCurrentUri();\n        return UrlString.getAbsoluteUrl(\n            redirectUri,\n            BrowserUtils.getCurrentUri()\n        );\n    }\n\n    /*\n     * If authority provided in the request does not match environment/authority specified\n     * in the account or MSAL config, we throw an error.\n     */\n    async validateRequestAuthority(\n        authority: string,\n        account: AccountInfo\n    ): Promise<void> {\n        const discoveredAuthority = await this.getDiscoveredAuthority(\n            authority\n        );\n\n        if (!discoveredAuthority.isAlias(account.environment)) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.authorityMismatch\n            );\n        }\n    }\n\n    /**\n     *\n     * @param apiId\n     * @param correlationId\n     * @param forceRefresh\n     */\n    protected initializeServerTelemetryManager(\n        apiId: number,\n        forceRefresh?: boolean\n    ): ServerTelemetryManager {\n        this.logger.verbose(\"initializeServerTelemetryManager called\");\n        const telemetryPayload: ServerTelemetryRequest = {\n            clientId: this.config.auth.clientId,\n            correlationId: this.correlationId,\n            apiId: apiId,\n            forceRefresh: forceRefresh || false,\n            wrapperSKU: this.browserStorage.getWrapperMetadata()[0],\n            wrapperVer: this.browserStorage.getWrapperMetadata()[1],\n        };\n\n        return new ServerTelemetryManager(\n            telemetryPayload,\n            this.browserStorage\n        );\n    }\n\n    /**\n     * Used to get a discovered version of the default authority.\n     * @param requestAuthority\n     * @param requestCorrelationId\n     */\n    protected async getDiscoveredAuthority(\n        requestAuthority?: string\n    ): Promise<Authority> {\n        this.logger.verbose(\"getDiscoveredAuthority called\");\n        const authorityOptions: AuthorityOptions = {\n            protocolMode: this.config.auth.protocolMode,\n            OIDCOptions: this.config.auth.OIDCOptions,\n            knownAuthorities: this.config.auth.knownAuthorities,\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n            authorityMetadata: this.config.auth.authorityMetadata,\n        };\n\n        if (requestAuthority) {\n            this.logger.verbose(\n                \"Creating discovered authority with request authority\"\n            );\n            return await AuthorityFactory.createDiscoveredInstance(\n                requestAuthority,\n                this.config.system.networkClient,\n                this.browserStorage,\n                authorityOptions,\n                this.logger\n            );\n        }\n\n        this.logger.verbose(\n            \"Creating discovered authority with configured authority\"\n        );\n        return await AuthorityFactory.createDiscoveredInstance(\n            this.config.auth.authority,\n            this.config.system.networkClient,\n            this.browserStorage,\n            authorityOptions,\n            this.logger\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ServerTelemetryManager,\n    CommonAuthorizationCodeRequest,\n    Constants,\n    AuthorizationCodeClient,\n    ClientConfiguration,\n    AuthorityOptions,\n    Authority,\n    AuthorityFactory,\n    ServerAuthorizationCodeResponse,\n    UrlString,\n    CommonEndSessionRequest,\n    ProtocolUtils,\n    ResponseMode,\n    IdTokenClaims,\n    AccountInfo,\n    AzureCloudOptions,\n    PerformanceEvents,\n    invokeAsync,\n    BaseAuthRequest,\n} from \"@azure/msal-common\";\nimport { BaseInteractionClient } from \"./BaseInteractionClient\";\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest\";\nimport { BrowserConstants, InteractionType } from \"../utils/BrowserConstants\";\nimport { version } from \"../packageMetadata\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport {\n    BrowserProtocolUtils,\n    BrowserStateObject,\n} from \"../utils/BrowserProtocolUtils\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { generatePkceCodes } from \"../crypto/PkceGenerator\";\nimport { createNewGuid } from \"../crypto/BrowserCrypto\";\n\n/**\n * Defines the class structure and helper functions used by the \"standard\", non-brokered auth flows (popup, redirect, silent (RT), silent (iframe))\n */\nexport abstract class StandardInteractionClient extends BaseInteractionClient {\n    /**\n     * Generates an auth code request tied to the url request.\n     * @param request\n     */\n    protected async initializeAuthorizationCodeRequest(\n        request: AuthorizationUrlRequest\n    ): Promise<CommonAuthorizationCodeRequest> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest,\n            request.correlationId\n        );\n        const generatedPkceParams = await invokeAsync(\n            generatePkceCodes,\n            PerformanceEvents.GeneratePkceCodes,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(this.performanceClient, this.logger, this.correlationId);\n\n        const authCodeRequest: CommonAuthorizationCodeRequest = {\n            ...request,\n            redirectUri: request.redirectUri,\n            code: Constants.EMPTY_STRING,\n            codeVerifier: generatedPkceParams.verifier,\n        };\n\n        request.codeChallenge = generatedPkceParams.challenge;\n        request.codeChallengeMethod = Constants.S256_CODE_CHALLENGE_METHOD;\n\n        return authCodeRequest;\n    }\n\n    /**\n     * Initializer for the logout request.\n     * @param logoutRequest\n     */\n    protected initializeLogoutRequest(\n        logoutRequest?: EndSessionRequest\n    ): CommonEndSessionRequest {\n        this.logger.verbose(\n            \"initializeLogoutRequest called\",\n            logoutRequest?.correlationId\n        );\n\n        const validLogoutRequest: CommonEndSessionRequest = {\n            correlationId: this.correlationId || createNewGuid(),\n            ...logoutRequest,\n        };\n\n        /**\n         * Set logout_hint to be login_hint from ID Token Claims if present\n         * and logoutHint attribute wasn't manually set in logout request\n         */\n        if (logoutRequest) {\n            // If logoutHint isn't set and an account was passed in, try to extract logoutHint from ID Token Claims\n            if (!logoutRequest.logoutHint) {\n                if (logoutRequest.account) {\n                    const logoutHint = this.getLogoutHintFromIdTokenClaims(\n                        logoutRequest.account\n                    );\n                    if (logoutHint) {\n                        this.logger.verbose(\n                            \"Setting logoutHint to login_hint ID Token Claim value for the account provided\"\n                        );\n                        validLogoutRequest.logoutHint = logoutHint;\n                    }\n                } else {\n                    this.logger.verbose(\n                        \"logoutHint was not set and account was not passed into logout request, logoutHint will not be set\"\n                    );\n                }\n            } else {\n                this.logger.verbose(\n                    \"logoutHint has already been set in logoutRequest\"\n                );\n            }\n        } else {\n            this.logger.verbose(\n                \"logoutHint will not be set since no logout request was configured\"\n            );\n        }\n\n        /*\n         * Only set redirect uri if logout request isn't provided or the set uri isn't null.\n         * Otherwise, use passed uri, config, or current page.\n         */\n        if (!logoutRequest || logoutRequest.postLogoutRedirectUri !== null) {\n            if (logoutRequest && logoutRequest.postLogoutRedirectUri) {\n                this.logger.verbose(\n                    \"Setting postLogoutRedirectUri to uri set on logout request\",\n                    validLogoutRequest.correlationId\n                );\n                validLogoutRequest.postLogoutRedirectUri =\n                    UrlString.getAbsoluteUrl(\n                        logoutRequest.postLogoutRedirectUri,\n                        BrowserUtils.getCurrentUri()\n                    );\n            } else if (this.config.auth.postLogoutRedirectUri === null) {\n                this.logger.verbose(\n                    \"postLogoutRedirectUri configured as null and no uri set on request, not passing post logout redirect\",\n                    validLogoutRequest.correlationId\n                );\n            } else if (this.config.auth.postLogoutRedirectUri) {\n                this.logger.verbose(\n                    \"Setting postLogoutRedirectUri to configured uri\",\n                    validLogoutRequest.correlationId\n                );\n                validLogoutRequest.postLogoutRedirectUri =\n                    UrlString.getAbsoluteUrl(\n                        this.config.auth.postLogoutRedirectUri,\n                        BrowserUtils.getCurrentUri()\n                    );\n            } else {\n                this.logger.verbose(\n                    \"Setting postLogoutRedirectUri to current page\",\n                    validLogoutRequest.correlationId\n                );\n                validLogoutRequest.postLogoutRedirectUri =\n                    UrlString.getAbsoluteUrl(\n                        BrowserUtils.getCurrentUri(),\n                        BrowserUtils.getCurrentUri()\n                    );\n            }\n        } else {\n            this.logger.verbose(\n                \"postLogoutRedirectUri passed as null, not setting post logout redirect uri\",\n                validLogoutRequest.correlationId\n            );\n        }\n\n        return validLogoutRequest;\n    }\n\n    /**\n     * Parses login_hint ID Token Claim out of AccountInfo object to be used as\n     * logout_hint in end session request.\n     * @param account\n     */\n    protected getLogoutHintFromIdTokenClaims(\n        account: AccountInfo\n    ): string | null {\n        const idTokenClaims: IdTokenClaims | undefined = account.idTokenClaims;\n        if (idTokenClaims) {\n            if (idTokenClaims.login_hint) {\n                return idTokenClaims.login_hint;\n            } else {\n                this.logger.verbose(\n                    \"The ID Token Claims tied to the provided account do not contain a login_hint claim, logoutHint will not be added to logout request\"\n                );\n            }\n        } else {\n            this.logger.verbose(\n                \"The provided account does not contain ID Token Claims, logoutHint will not be added to logout request\"\n            );\n        }\n\n        return null;\n    }\n\n    /**\n     * Creates an Authorization Code Client with the given authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param authorityUrl\n     */\n    protected async createAuthCodeClient(\n        serverTelemetryManager: ServerTelemetryManager,\n        authorityUrl?: string,\n        requestAzureCloudOptions?: AzureCloudOptions\n    ): Promise<AuthorizationCodeClient> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n            this.correlationId\n        );\n        // Create auth module.\n        const clientConfig = await invokeAsync(\n            this.getClientConfiguration.bind(this),\n            PerformanceEvents.StandardInteractionClientGetClientConfiguration,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(serverTelemetryManager, authorityUrl, requestAzureCloudOptions);\n        return new AuthorizationCodeClient(\n            clientConfig,\n            this.performanceClient\n        );\n    }\n\n    /**\n     * Creates a Client Configuration object with the given request authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param requestAuthority\n     * @param requestCorrelationId\n     */\n    protected async getClientConfiguration(\n        serverTelemetryManager: ServerTelemetryManager,\n        requestAuthority?: string,\n        requestAzureCloudOptions?: AzureCloudOptions\n    ): Promise<ClientConfiguration> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.StandardInteractionClientGetClientConfiguration,\n            this.correlationId\n        );\n        const discoveredAuthority = await invokeAsync(\n            this.getDiscoveredAuthority.bind(this),\n            PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(requestAuthority, requestAzureCloudOptions);\n        const logger = this.config.system.loggerOptions;\n\n        return {\n            authOptions: {\n                clientId: this.config.auth.clientId,\n                authority: discoveredAuthority,\n                clientCapabilities: this.config.auth.clientCapabilities,\n            },\n            systemOptions: {\n                tokenRenewalOffsetSeconds:\n                    this.config.system.tokenRenewalOffsetSeconds,\n                preventCorsPreflight: true,\n            },\n            loggerOptions: {\n                loggerCallback: logger.loggerCallback,\n                piiLoggingEnabled: logger.piiLoggingEnabled,\n                logLevel: logger.logLevel,\n                correlationId: this.correlationId,\n            },\n            cacheOptions: {\n                claimsBasedCachingEnabled:\n                    this.config.cache.claimsBasedCachingEnabled,\n            },\n            cryptoInterface: this.browserCrypto,\n            networkInterface: this.networkClient,\n            storageInterface: this.browserStorage,\n            serverTelemetryManager: serverTelemetryManager,\n            libraryInfo: {\n                sku: BrowserConstants.MSAL_SKU,\n                version: version,\n                cpu: Constants.EMPTY_STRING,\n                os: Constants.EMPTY_STRING,\n            },\n            telemetry: this.config.telemetry,\n        };\n    }\n\n    /**\n     * @param hash\n     * @param interactionType\n     */\n    protected validateAndExtractStateFromHash(\n        serverParams: ServerAuthorizationCodeResponse,\n        interactionType: InteractionType,\n        requestCorrelationId?: string\n    ): string {\n        this.logger.verbose(\n            \"validateAndExtractStateFromHash called\",\n            requestCorrelationId\n        );\n        if (!serverParams.state) {\n            throw createBrowserAuthError(BrowserAuthErrorCodes.noStateInHash);\n        }\n\n        const platformStateObj =\n            BrowserProtocolUtils.extractBrowserRequestState(\n                this.browserCrypto,\n                serverParams.state\n            );\n        if (!platformStateObj) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.unableToParseState\n            );\n        }\n\n        if (platformStateObj.interactionType !== interactionType) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.stateInteractionTypeMismatch\n            );\n        }\n\n        this.logger.verbose(\"Returning state from hash\", requestCorrelationId);\n        return serverParams.state;\n    }\n\n    /**\n     * Used to get a discovered version of the default authority.\n     * @param requestAuthority\n     * @param requestCorrelationId\n     */\n    protected async getDiscoveredAuthority(\n        requestAuthority?: string,\n        requestAzureCloudOptions?: AzureCloudOptions\n    ): Promise<Authority> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.StandardInteractionClientGetDiscoveredAuthority,\n            this.correlationId\n        );\n        const authorityOptions: AuthorityOptions = {\n            protocolMode: this.config.auth.protocolMode,\n            OIDCOptions: this.config.auth.OIDCOptions,\n            knownAuthorities: this.config.auth.knownAuthorities,\n            cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n            authorityMetadata: this.config.auth.authorityMetadata,\n            skipAuthorityMetadataCache:\n                this.config.auth.skipAuthorityMetadataCache,\n        };\n\n        // build authority string based on auth params, precedence - azureCloudInstance + tenant >> authority\n        const userAuthority = requestAuthority\n            ? requestAuthority\n            : this.config.auth.authority;\n\n        // fall back to the authority from config\n        const builtAuthority = Authority.generateAuthority(\n            userAuthority,\n            requestAzureCloudOptions || this.config.auth.azureCloudOptions\n        );\n        return await invokeAsync(\n            AuthorityFactory.createDiscoveredInstance.bind(AuthorityFactory),\n            PerformanceEvents.AuthorityFactoryCreateDiscoveredInstance,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(\n            builtAuthority,\n            this.config.system.networkClient,\n            this.browserStorage,\n            authorityOptions,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        );\n    }\n\n    /**\n     * Helper to initialize required request parameters for interactive APIs and ssoSilent()\n     * @param request\n     * @param interactionType\n     */\n    protected async initializeAuthorizationRequest(\n        request: RedirectRequest | PopupRequest | SsoSilentRequest,\n        interactionType: InteractionType\n    ): Promise<AuthorizationUrlRequest> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\n            this.correlationId\n        );\n\n        const redirectUri = this.getRedirectUri(request.redirectUri);\n        const browserState: BrowserStateObject = {\n            interactionType: interactionType,\n        };\n        const state = ProtocolUtils.setRequestState(\n            this.browserCrypto,\n            (request && request.state) || Constants.EMPTY_STRING,\n            browserState\n        );\n\n        const baseRequest: BaseAuthRequest = await invokeAsync(\n            this.initializeBaseRequest.bind(this),\n            PerformanceEvents.InitializeBaseRequest,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(request);\n\n        const validatedRequest: AuthorizationUrlRequest = {\n            ...baseRequest,\n            redirectUri: redirectUri,\n            state: state,\n            nonce: request.nonce || createNewGuid(),\n            responseMode: this.config.auth.OIDCOptions\n                .serverResponseType as ResponseMode,\n        };\n\n        const account =\n            request.account || this.browserStorage.getActiveAccount();\n        if (account) {\n            this.logger.verbose(\n                \"Setting validated request account\",\n                this.correlationId\n            );\n            this.logger.verbosePii(\n                `Setting validated request account: ${account.homeAccountId}`,\n                this.correlationId\n            );\n            validatedRequest.account = account;\n        }\n\n        // Check for ADAL/MSAL v1 SSO\n        if (!validatedRequest.loginHint && !account) {\n            const legacyLoginHint = this.browserStorage.getLegacyLoginHint();\n            if (legacyLoginHint) {\n                validatedRequest.loginHint = legacyLoginHint;\n            }\n        }\n\n        return validatedRequest;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AuthError,\n    InteractionRequiredAuthError,\n    InteractionRequiredAuthErrorCodes,\n    createInteractionRequiredAuthError,\n} from \"@azure/msal-common\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"./BrowserAuthError\";\n\nimport * as NativeAuthErrorCodes from \"./NativeAuthErrorCodes\";\nimport * as NativeStatusCodes from \"../broker/nativeBroker/NativeStatusCodes\";\nexport { NativeAuthErrorCodes };\n\nexport type OSError = {\n    error?: number;\n    protocol_error?: string;\n    properties?: object;\n    status?: string;\n    retryable?: boolean;\n};\n\nconst INVALID_METHOD_ERROR = -2147186943;\n\nexport const NativeAuthErrorMessages = {\n    [NativeAuthErrorCodes.userSwitch]:\n        \"User attempted to switch accounts in the native broker, which is not allowed. All new accounts must sign-in through the standard web flow first, please try again.\",\n};\n\nexport class NativeAuthError extends AuthError {\n    ext: OSError | undefined;\n\n    constructor(errorCode: string, description?: string, ext?: OSError) {\n        super(errorCode, description);\n\n        Object.setPrototypeOf(this, NativeAuthError.prototype);\n        this.name = \"NativeAuthError\";\n        this.ext = ext;\n    }\n}\n\n/**\n * These errors should result in a fallback to the 'standard' browser based auth flow.\n */\nexport function isFatalNativeAuthError(error: NativeAuthError): boolean {\n    if (\n        error.ext &&\n        error.ext.status &&\n        (error.ext.status === NativeStatusCodes.PERSISTENT_ERROR ||\n            error.ext.status === NativeStatusCodes.DISABLED)\n    ) {\n        return true;\n    }\n\n    if (\n        error.ext &&\n        error.ext.error &&\n        error.ext.error === INVALID_METHOD_ERROR\n    ) {\n        return true;\n    }\n\n    switch (error.errorCode) {\n        case NativeAuthErrorCodes.contentError:\n            return true;\n        default:\n            return false;\n    }\n}\n\n/**\n * Create the appropriate error object based on the WAM status code.\n * @param code\n * @param description\n * @param ext\n * @returns\n */\nexport function createNativeAuthError(\n    code: string,\n    description?: string,\n    ext?: OSError\n): AuthError {\n    if (ext && ext.status) {\n        switch (ext.status) {\n            case NativeStatusCodes.ACCOUNT_UNAVAILABLE:\n                return createInteractionRequiredAuthError(\n                    InteractionRequiredAuthErrorCodes.nativeAccountUnavailable\n                );\n            case NativeStatusCodes.USER_INTERACTION_REQUIRED:\n                return new InteractionRequiredAuthError(code, description);\n            case NativeStatusCodes.USER_CANCEL:\n                return createBrowserAuthError(\n                    BrowserAuthErrorCodes.userCancelled\n                );\n            case NativeStatusCodes.NO_NETWORK:\n                return createBrowserAuthError(\n                    BrowserAuthErrorCodes.noNetworkConnectivity\n                );\n        }\n    }\n\n    return new NativeAuthError(\n        code,\n        NativeAuthErrorMessages[code] || description,\n        ext\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n// Status Codes that can be thrown by WAM\nexport const USER_INTERACTION_REQUIRED = \"USER_INTERACTION_REQUIRED\";\nexport const USER_CANCEL = \"USER_CANCEL\";\nexport const NO_NETWORK = \"NO_NETWORK\";\nexport const TRANSIENT_ERROR = \"TRANSIENT_ERROR\";\nexport const PERSISTENT_ERROR = \"PERSISTENT_ERROR\";\nexport const DISABLED = \"DISABLED\";\nexport const ACCOUNT_UNAVAILABLE = \"ACCOUNT_UNAVAILABLE\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ClientConfiguration,\n    isOidcProtocolMode,\n} from \"../config/ClientConfiguration\";\nimport { BaseClient } from \"./BaseClient\";\nimport { CommonRefreshTokenRequest } from \"../request/CommonRefreshTokenRequest\";\nimport { Authority } from \"../authority/Authority\";\nimport { ServerAuthorizationTokenResponse } from \"../response/ServerAuthorizationTokenResponse\";\nimport { RequestParameterBuilder } from \"../request/RequestParameterBuilder\";\nimport {\n    GrantType,\n    AuthenticationScheme,\n    Errors,\n    HeaderNames,\n    AADServerParamKeys,\n} from \"../utils/Constants\";\nimport { ResponseHandler } from \"../response/ResponseHandler\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { PopTokenGenerator } from \"../crypto/PopTokenGenerator\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { RequestThumbprint } from \"../network/RequestThumbprint\";\nimport { NetworkResponse } from \"../network/NetworkManager\";\nimport { CommonSilentFlowRequest } from \"../request/CommonSilentFlowRequest\";\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError\";\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../error/ClientAuthError\";\nimport { ServerError } from \"../error/ServerError\";\nimport { TimeUtils } from \"../utils/TimeUtils\";\nimport { UrlString } from \"../url/UrlString\";\nimport { CcsCredentialType } from \"../account/CcsCredential\";\nimport { buildClientInfoFromHomeAccountId } from \"../account/ClientInfo\";\nimport {\n    InteractionRequiredAuthError,\n    InteractionRequiredAuthErrorCodes,\n    createInteractionRequiredAuthError,\n} from \"../error/InteractionRequiredAuthError\";\nimport { PerformanceEvents } from \"../telemetry/performance/PerformanceEvent\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { invokeAsync } from \"../utils/FunctionWrappers\";\n/**\n * OAuth2.0 refresh token client\n * @internal\n */\nexport class RefreshTokenClient extends BaseClient {\n    constructor(\n        configuration: ClientConfiguration,\n        performanceClient?: IPerformanceClient\n    ) {\n        super(configuration, performanceClient);\n    }\n    public async acquireToken(\n        request: CommonRefreshTokenRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RefreshTokenClientAcquireToken,\n            request.correlationId\n        );\n\n        const reqTimestamp = TimeUtils.nowSeconds();\n        const response = await invokeAsync(\n            this.executeTokenRequest.bind(this),\n            PerformanceEvents.RefreshTokenClientExecuteTokenRequest,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request, this.authority);\n\n        // Retrieve requestId from response headers\n        const requestId = response.headers?.[HeaderNames.X_MS_REQUEST_ID];\n        const responseHandler = new ResponseHandler(\n            this.config.authOptions.clientId,\n            this.cacheManager,\n            this.cryptoUtils,\n            this.logger,\n            this.config.serializableCache,\n            this.config.persistencePlugin\n        );\n        responseHandler.validateTokenResponse(response.body);\n\n        return invokeAsync(\n            responseHandler.handleServerTokenResponse.bind(responseHandler),\n            PerformanceEvents.HandleServerTokenResponse,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(\n            response.body,\n            this.authority,\n            reqTimestamp,\n            request,\n            undefined,\n            undefined,\n            true,\n            request.forceCache,\n            requestId\n        );\n    }\n\n    /**\n     * Gets cached refresh token and attaches to request, then calls acquireToken API\n     * @param request\n     */\n    public async acquireTokenByRefreshToken(\n        request: CommonSilentFlowRequest\n    ): Promise<AuthenticationResult> {\n        // Cannot renew token if no request object is given.\n        if (!request) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.tokenRequestEmpty\n            );\n        }\n\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken,\n            request.correlationId\n        );\n\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\n        if (!request.account) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.noAccountInSilentRequest\n            );\n        }\n\n        // try checking if FOCI is enabled for the given application\n        const isFOCI = this.cacheManager.isAppMetadataFOCI(\n            request.account.environment\n        );\n\n        // if the app is part of the family, retrive a Family refresh token if present and make a refreshTokenRequest\n        if (isFOCI) {\n            try {\n                return invokeAsync(\n                    this.acquireTokenWithCachedRefreshToken.bind(this),\n                    PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\n                    this.logger,\n                    this.performanceClient,\n                    request.correlationId\n                )(request, true);\n            } catch (e) {\n                const noFamilyRTInCache =\n                    e instanceof InteractionRequiredAuthError &&\n                    e.errorCode ===\n                        InteractionRequiredAuthErrorCodes.noTokensFound;\n                const clientMismatchErrorWithFamilyRT =\n                    e instanceof ServerError &&\n                    e.errorCode === Errors.INVALID_GRANT_ERROR &&\n                    e.subError === Errors.CLIENT_MISMATCH_ERROR;\n\n                // if family Refresh Token (FRT) cache acquisition fails or if client_mismatch error is seen with FRT, reattempt with application Refresh Token (ART)\n                if (noFamilyRTInCache || clientMismatchErrorWithFamilyRT) {\n                    return invokeAsync(\n                        this.acquireTokenWithCachedRefreshToken.bind(this),\n                        PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\n                        this.logger,\n                        this.performanceClient,\n                        request.correlationId\n                    )(request, false);\n                    // throw in all other cases\n                } else {\n                    throw e;\n                }\n            }\n        }\n        // fall back to application refresh token acquisition\n        return invokeAsync(\n            this.acquireTokenWithCachedRefreshToken.bind(this),\n            PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request, false);\n    }\n\n    /**\n     * makes a network call to acquire tokens by exchanging RefreshToken available in userCache; throws if refresh token is not cached\n     * @param request\n     */\n    private async acquireTokenWithCachedRefreshToken(\n        request: CommonSilentFlowRequest,\n        foci: boolean\n    ) {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RefreshTokenClientAcquireTokenWithCachedRefreshToken,\n            request.correlationId\n        );\n\n        // fetches family RT or application RT based on FOCI value\n        const refreshToken = this.cacheManager.getRefreshToken(\n            request.account,\n            foci\n        );\n\n        if (!refreshToken) {\n            throw createInteractionRequiredAuthError(\n                InteractionRequiredAuthErrorCodes.noTokensFound\n            );\n        }\n        // attach cached RT size to the current measurement\n\n        const refreshTokenRequest: CommonRefreshTokenRequest = {\n            ...request,\n            refreshToken: refreshToken.secret,\n            authenticationScheme:\n                request.authenticationScheme || AuthenticationScheme.BEARER,\n            ccsCredential: {\n                credential: request.account.homeAccountId,\n                type: CcsCredentialType.HOME_ACCOUNT_ID,\n            },\n        };\n\n        return invokeAsync(\n            this.acquireToken.bind(this),\n            PerformanceEvents.RefreshTokenClientAcquireToken,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(refreshTokenRequest);\n    }\n\n    /**\n     * Constructs the network message and makes a NW call to the underlying secure token service\n     * @param request\n     * @param authority\n     */\n    private async executeTokenRequest(\n        request: CommonRefreshTokenRequest,\n        authority: Authority\n    ): Promise<NetworkResponse<ServerAuthorizationTokenResponse>> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RefreshTokenClientExecuteTokenRequest,\n            request.correlationId\n        );\n\n        const queryParametersString = this.createTokenQueryParameters(request);\n        const endpoint = UrlString.appendQueryString(\n            authority.tokenEndpoint,\n            queryParametersString\n        );\n\n        const requestBody = await invokeAsync(\n            this.createTokenRequestBody.bind(this),\n            PerformanceEvents.RefreshTokenClientCreateTokenRequestBody,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request);\n        const headers: Record<string, string> = this.createTokenRequestHeaders(\n            request.ccsCredential\n        );\n        const thumbprint: RequestThumbprint = {\n            clientId:\n                request.tokenBodyParameters?.clientId ||\n                this.config.authOptions.clientId,\n            authority: authority.canonicalAuthority,\n            scopes: request.scopes,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n        };\n\n        return invokeAsync(\n            this.executePostToTokenEndpoint.bind(this),\n            PerformanceEvents.BaseClientExecutePostToTokenEndpoint,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(endpoint, requestBody, headers, thumbprint, request.correlationId);\n    }\n\n    /**\n     * Helper function to create the token request body\n     * @param request\n     */\n    private async createTokenRequestBody(\n        request: CommonRefreshTokenRequest\n    ): Promise<string> {\n        this.performanceClient?.addQueueMeasurement(\n            PerformanceEvents.RefreshTokenClientCreateTokenRequestBody,\n            request.correlationId\n        );\n\n        const correlationId = request.correlationId;\n        const parameterBuilder = new RequestParameterBuilder();\n\n        parameterBuilder.addClientId(\n            request.tokenBodyParameters?.[AADServerParamKeys.CLIENT_ID] ||\n                this.config.authOptions.clientId\n        );\n\n        if (request.redirectUri) {\n            parameterBuilder.addRedirectUri(request.redirectUri);\n        }\n\n        parameterBuilder.addScopes(\n            request.scopes,\n            true,\n            this.config.authOptions.authority.options.OIDCOptions?.defaultScopes\n        );\n\n        parameterBuilder.addGrantType(GrantType.REFRESH_TOKEN_GRANT);\n\n        parameterBuilder.addClientInfo();\n\n        parameterBuilder.addLibraryInfo(this.config.libraryInfo);\n        parameterBuilder.addApplicationTelemetry(\n            this.config.telemetry.application\n        );\n        parameterBuilder.addThrottling();\n\n        if (this.serverTelemetryManager && !isOidcProtocolMode(this.config)) {\n            parameterBuilder.addServerTelemetry(this.serverTelemetryManager);\n        }\n\n        parameterBuilder.addCorrelationId(correlationId);\n\n        parameterBuilder.addRefreshToken(request.refreshToken);\n\n        if (this.config.clientCredentials.clientSecret) {\n            parameterBuilder.addClientSecret(\n                this.config.clientCredentials.clientSecret\n            );\n        }\n\n        if (this.config.clientCredentials.clientAssertion) {\n            const clientAssertion =\n                this.config.clientCredentials.clientAssertion;\n            parameterBuilder.addClientAssertion(clientAssertion.assertion);\n            parameterBuilder.addClientAssertionType(\n                clientAssertion.assertionType\n            );\n        }\n\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n            const popTokenGenerator = new PopTokenGenerator(\n                this.cryptoUtils,\n                this.performanceClient\n            );\n            const reqCnfData = await invokeAsync(\n                popTokenGenerator.generateCnf.bind(popTokenGenerator),\n                PerformanceEvents.PopTokenGenerateCnf,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(request, this.logger);\n            // SPA PoP requires full Base64Url encoded req_cnf string (unhashed)\n            parameterBuilder.addPopToken(reqCnfData.reqCnfString);\n        } else if (request.authenticationScheme === AuthenticationScheme.SSH) {\n            if (request.sshJwk) {\n                parameterBuilder.addSshJwk(request.sshJwk);\n            } else {\n                throw createClientConfigurationError(\n                    ClientConfigurationErrorCodes.missingSshJwk\n                );\n            }\n        }\n\n        if (\n            !StringUtils.isEmptyObj(request.claims) ||\n            (this.config.authOptions.clientCapabilities &&\n                this.config.authOptions.clientCapabilities.length > 0)\n        ) {\n            parameterBuilder.addClaims(\n                request.claims,\n                this.config.authOptions.clientCapabilities\n            );\n        }\n\n        if (\n            this.config.systemOptions.preventCorsPreflight &&\n            request.ccsCredential\n        ) {\n            switch (request.ccsCredential.type) {\n                case CcsCredentialType.HOME_ACCOUNT_ID:\n                    try {\n                        const clientInfo = buildClientInfoFromHomeAccountId(\n                            request.ccsCredential.credential\n                        );\n                        parameterBuilder.addCcsOid(clientInfo);\n                    } catch (e) {\n                        this.logger.verbose(\n                            \"Could not parse home account ID for CCS Header: \" +\n                                e\n                        );\n                    }\n                    break;\n                case CcsCredentialType.UPN:\n                    parameterBuilder.addCcsUpn(\n                        request.ccsCredential.credential\n                    );\n                    break;\n            }\n        }\n\n        if (request.tokenBodyParameters) {\n            parameterBuilder.addExtraQueryParameters(\n                request.tokenBodyParameters\n            );\n        }\n\n        return parameterBuilder.createQueryString();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { BaseClient } from \"./BaseClient\";\nimport { ClientConfiguration } from \"../config/ClientConfiguration\";\nimport { CommonSilentFlowRequest } from \"../request/CommonSilentFlowRequest\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { TimeUtils } from \"../utils/TimeUtils\";\nimport { RefreshTokenClient } from \"./RefreshTokenClient\";\nimport {\n    ClientAuthError,\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError\";\nimport { ResponseHandler } from \"../response/ResponseHandler\";\nimport { CacheRecord } from \"../cache/entities/CacheRecord\";\nimport { CacheOutcome } from \"../utils/Constants\";\nimport { IPerformanceClient } from \"../telemetry/performance/IPerformanceClient\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport { checkMaxAge, extractTokenClaims } from \"../account/AuthToken\";\nimport { TokenClaims } from \"../account/TokenClaims\";\n\n/** @internal */\nexport class SilentFlowClient extends BaseClient {\n    constructor(\n        configuration: ClientConfiguration,\n        performanceClient?: IPerformanceClient\n    ) {\n        super(configuration, performanceClient);\n    }\n\n    /**\n     * Retrieves a token from cache if it is still valid, or uses the cached refresh token to renew\n     * the given token and returns the renewed token\n     * @param request\n     */\n    async acquireToken(\n        request: CommonSilentFlowRequest\n    ): Promise<AuthenticationResult> {\n        try {\n            const [authResponse, cacheOutcome] = await this.acquireCachedToken(\n                request\n            );\n\n            // if the token is not expired but must be refreshed; get a new one in the background\n            if (cacheOutcome === CacheOutcome.PROACTIVELY_REFRESHED) {\n                this.logger.info(\n                    \"SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'. It's not expired, but must be refreshed.\"\n                );\n\n                // refresh the access token in the background\n                const refreshTokenClient = new RefreshTokenClient(\n                    this.config,\n                    this.performanceClient\n                );\n\n                refreshTokenClient\n                    .acquireTokenByRefreshToken(request)\n                    .catch(() => {\n                        // do nothing, this is running in the background and no action is to be taken upon success or failure\n                    });\n            }\n\n            // return the cached token\n            return authResponse;\n        } catch (e) {\n            if (\n                e instanceof ClientAuthError &&\n                e.errorCode === ClientAuthErrorCodes.tokenRefreshRequired\n            ) {\n                const refreshTokenClient = new RefreshTokenClient(\n                    this.config,\n                    this.performanceClient\n                );\n                return refreshTokenClient.acquireTokenByRefreshToken(request);\n            } else {\n                throw e;\n            }\n        }\n    }\n\n    /**\n     * Retrieves token from cache or throws an error if it must be refreshed.\n     * @param request\n     */\n    async acquireCachedToken(\n        request: CommonSilentFlowRequest\n    ): Promise<[AuthenticationResult, CacheOutcome]> {\n        let lastCacheOutcome: CacheOutcome = CacheOutcome.NOT_APPLICABLE;\n\n        // Cannot renew token if no request object is given.\n        if (!request) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.tokenRequestEmpty\n            );\n        }\n\n        if (request.forceRefresh) {\n            // Must refresh due to present force_refresh flag.\n            lastCacheOutcome = CacheOutcome.FORCE_REFRESH_OR_CLAIMS;\n            this.serverTelemetryManager?.setCacheOutcome(\n                CacheOutcome.FORCE_REFRESH_OR_CLAIMS\n            );\n            this.logger.info(\n                \"SilentFlowClient:acquireCachedToken - Skipping cache because forceRefresh is true.\"\n            );\n            throw createClientAuthError(\n                ClientAuthErrorCodes.tokenRefreshRequired\n            );\n        } else if (\n            !this.config.cacheOptions.claimsBasedCachingEnabled &&\n            !StringUtils.isEmptyObj(request.claims)\n        ) {\n            lastCacheOutcome = CacheOutcome.FORCE_REFRESH_OR_CLAIMS;\n            // Must refresh due to request parameters.\n            this.logger.info(\n                \"SilentFlowClient:acquireCachedToken - Skipping cache because claims-based caching is disabled and claims were requested.\"\n            );\n            throw createClientAuthError(\n                ClientAuthErrorCodes.tokenRefreshRequired\n            );\n        }\n\n        // We currently do not support silent flow for account === null use cases; This will be revisited for confidential flow usecases\n        if (!request.account) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.noAccountInSilentRequest\n            );\n        }\n\n        const environment =\n            request.authority || this.authority.getPreferredCache();\n\n        const cacheRecord = this.cacheManager.readCacheRecord(\n            request.account,\n            request,\n            environment\n        );\n\n        if (!cacheRecord.accessToken) {\n            // must refresh due to non-existent access_token\n            lastCacheOutcome = CacheOutcome.NO_CACHED_ACCESS_TOKEN;\n            this.serverTelemetryManager?.setCacheOutcome(\n                CacheOutcome.NO_CACHED_ACCESS_TOKEN\n            );\n            this.logger.info(\n                \"SilentFlowClient:acquireCachedToken - No access token found in cache for the given properties.\"\n            );\n            throw createClientAuthError(\n                ClientAuthErrorCodes.tokenRefreshRequired\n            );\n        } else if (\n            TimeUtils.wasClockTurnedBack(cacheRecord.accessToken.cachedAt) ||\n            TimeUtils.isTokenExpired(\n                cacheRecord.accessToken.expiresOn,\n                this.config.systemOptions.tokenRenewalOffsetSeconds\n            )\n        ) {\n            // must refresh due to the expires_in value\n            lastCacheOutcome = CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED;\n            this.serverTelemetryManager?.setCacheOutcome(\n                CacheOutcome.CACHED_ACCESS_TOKEN_EXPIRED\n            );\n            this.logger.info(\n                `SilentFlowClient:acquireCachedToken - Cached access token is expired or will expire within ${this.config.systemOptions.tokenRenewalOffsetSeconds} seconds.`\n            );\n            throw createClientAuthError(\n                ClientAuthErrorCodes.tokenRefreshRequired\n            );\n        } else if (\n            cacheRecord.accessToken.refreshOn &&\n            TimeUtils.isTokenExpired(cacheRecord.accessToken.refreshOn, 0)\n        ) {\n            // must refresh (in the background) due to the refresh_in value\n            lastCacheOutcome = CacheOutcome.PROACTIVELY_REFRESHED;\n            this.serverTelemetryManager?.setCacheOutcome(\n                CacheOutcome.PROACTIVELY_REFRESHED\n            );\n            this.logger.info(\n                \"SilentFlowClient:acquireCachedToken - Cached access token's refreshOn property has been exceeded'.\"\n            );\n\n            // don't throw ClientAuthError.createRefreshRequiredError(), return cached token instead\n        }\n\n        if (this.config.serverTelemetryManager) {\n            this.config.serverTelemetryManager.incrementCacheHits();\n        }\n\n        return [\n            await this.generateResultFromCacheRecord(cacheRecord, request),\n            lastCacheOutcome,\n        ];\n    }\n\n    /**\n     * Helper function to build response object from the CacheRecord\n     * @param cacheRecord\n     */\n    private async generateResultFromCacheRecord(\n        cacheRecord: CacheRecord,\n        request: CommonSilentFlowRequest\n    ): Promise<AuthenticationResult> {\n        let idTokenClaims: TokenClaims | undefined;\n        if (cacheRecord.idToken) {\n            idTokenClaims = extractTokenClaims(\n                cacheRecord.idToken.secret,\n                this.config.cryptoInterface.base64Decode\n            );\n        }\n\n        // token max_age check\n        if (request.maxAge || request.maxAge === 0) {\n            const authTime = idTokenClaims?.auth_time;\n            if (!authTime) {\n                throw createClientAuthError(\n                    ClientAuthErrorCodes.authTimeNotFound\n                );\n            }\n\n            checkMaxAge(authTime, request.maxAge);\n        }\n\n        return await ResponseHandler.generateAuthenticationResult(\n            this.cryptoUtils,\n            this.authority,\n            cacheRecord,\n            true,\n            request,\n            idTokenClaims\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport {\n    CommonSilentFlowRequest,\n    SilentFlowClient,\n    ServerTelemetryManager,\n    AccountInfo,\n    AzureCloudOptions,\n    PerformanceEvents,\n    invokeAsync,\n} from \"@azure/msal-common\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { ApiId } from \"../utils/BrowserConstants\";\nimport {\n    BrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { ClearCacheRequest } from \"../request/ClearCacheRequest\";\n\nexport class SilentCacheClient extends StandardInteractionClient {\n    /**\n     * Returns unexpired tokens from the cache, if available\n     * @param silentRequest\n     */\n    async acquireToken(\n        silentRequest: CommonSilentFlowRequest\n    ): Promise<AuthenticationResult> {\n        // Telemetry manager only used to increment cacheHits here\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.acquireTokenSilent_silentFlow\n        );\n\n        const silentAuthClient = await this.createSilentFlowClient(\n            serverTelemetryManager,\n            silentRequest.authority,\n            silentRequest.azureCloudOptions\n        );\n        this.logger.verbose(\"Silent auth client created\");\n\n        try {\n            const response = await silentAuthClient.acquireCachedToken(\n                silentRequest\n            );\n            const authResponse = response[0] as AuthenticationResult;\n\n            this.performanceClient.addFields(\n                {\n                    fromCache: true,\n                },\n                silentRequest.correlationId\n            );\n            return authResponse;\n        } catch (error) {\n            if (\n                error instanceof BrowserAuthError &&\n                error.errorCode === BrowserAuthErrorCodes.cryptoKeyNotFound\n            ) {\n                this.logger.verbose(\n                    \"Signing keypair for bound access token not found. Refreshing bound access token and generating a new crypto keypair.\"\n                );\n            }\n            throw error;\n        }\n    }\n\n    /**\n     * API to silenty clear the browser cache.\n     * @param logoutRequest\n     */\n    logout(logoutRequest?: ClearCacheRequest): Promise<void> {\n        this.logger.verbose(\"logoutRedirect called\");\n        const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\n        return this.clearCacheOnLogout(validLogoutRequest?.account);\n    }\n\n    /**\n     * Creates an Silent Flow Client with the given authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param authorityUrl\n     */\n    protected async createSilentFlowClient(\n        serverTelemetryManager: ServerTelemetryManager,\n        authorityUrl?: string,\n        azureCloudOptions?: AzureCloudOptions\n    ): Promise<SilentFlowClient> {\n        // Create auth module.\n        const clientConfig = await invokeAsync(\n            this.getClientConfiguration.bind(this),\n            PerformanceEvents.StandardInteractionClientGetClientConfiguration,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(serverTelemetryManager, authorityUrl, azureCloudOptions);\n        return new SilentFlowClient(clientConfig, this.performanceClient);\n    }\n\n    async initializeSilentRequest(\n        request: SilentRequest,\n        account: AccountInfo\n    ): Promise<CommonSilentFlowRequest> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.InitializeSilentRequest,\n            this.correlationId\n        );\n\n        const baseRequest = await invokeAsync(\n            this.initializeBaseRequest.bind(this),\n            PerformanceEvents.InitializeBaseRequest,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(request, account);\n        return {\n            ...request,\n            ...baseRequest,\n            account: account,\n            forceRefresh: request.forceRefresh || false,\n        };\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    Logger,\n    ICrypto,\n    PromptValue,\n    AuthToken,\n    Constants,\n    AccountEntity,\n    AuthorityType,\n    ScopeSet,\n    TimeUtils,\n    AuthenticationScheme,\n    UrlString,\n    OIDC_DEFAULT_SCOPES,\n    PopTokenGenerator,\n    SignedHttpRequestParameters,\n    IPerformanceClient,\n    PerformanceEvents,\n    IdTokenEntity,\n    AccessTokenEntity,\n    AuthError,\n    CommonSilentFlowRequest,\n    AccountInfo,\n    CacheRecord,\n    AADServerParamKeys,\n    TokenClaims,\n    createClientAuthError,\n    ClientAuthErrorCodes,\n    invokeAsync,\n    createAuthError,\n    AuthErrorCodes,\n} from \"@azure/msal-common\";\nimport { BaseInteractionClient } from \"./BaseInteractionClient\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport {\n    NativeExtensionMethod,\n    ApiId,\n    TemporaryCacheKeys,\n    NativeConstants,\n} from \"../utils/BrowserConstants\";\nimport {\n    NativeExtensionRequestBody,\n    NativeTokenRequest,\n} from \"../broker/nativeBroker/NativeRequest\";\nimport { MATS, NativeResponse } from \"../broker/nativeBroker/NativeResponse\";\nimport {\n    NativeAuthError,\n    NativeAuthErrorCodes,\n    createNativeAuthError,\n    isFatalNativeAuthError,\n} from \"../error/NativeAuthError\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { NavigationOptions } from \"../navigation/NavigationOptions\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { SilentCacheClient } from \"./SilentCacheClient\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { base64Decode } from \"../encode/Base64Decode\";\n\nconst BrokerServerParamKeys = {\n    BROKER_CLIENT_ID: \"brk_client_id\",\n    BROKER_REDIRECT_URI: \"brk_redirect_uri\",\n};\n\nexport class NativeInteractionClient extends BaseInteractionClient {\n    protected apiId: ApiId;\n    protected accountId: string;\n    protected nativeMessageHandler: NativeMessageHandler;\n    protected silentCacheClient: SilentCacheClient;\n    protected nativeStorageManager: BrowserCacheManager;\n\n    constructor(\n        config: BrowserConfiguration,\n        browserStorage: BrowserCacheManager,\n        browserCrypto: ICrypto,\n        logger: Logger,\n        eventHandler: EventHandler,\n        navigationClient: INavigationClient,\n        apiId: ApiId,\n        performanceClient: IPerformanceClient,\n        provider: NativeMessageHandler,\n        accountId: string,\n        nativeStorageImpl: BrowserCacheManager,\n        correlationId?: string\n    ) {\n        super(\n            config,\n            browserStorage,\n            browserCrypto,\n            logger,\n            eventHandler,\n            navigationClient,\n            performanceClient,\n            provider,\n            correlationId\n        );\n        this.apiId = apiId;\n        this.accountId = accountId;\n        this.nativeMessageHandler = provider;\n        this.nativeStorageManager = nativeStorageImpl;\n        this.silentCacheClient = new SilentCacheClient(\n            config,\n            this.nativeStorageManager,\n            browserCrypto,\n            logger,\n            eventHandler,\n            navigationClient,\n            performanceClient,\n            provider,\n            correlationId\n        );\n    }\n\n    /**\n     * Acquire token from native platform via browser extension\n     * @param request\n     */\n    async acquireToken(\n        request: PopupRequest | SilentRequest | SsoSilentRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.NativeInteractionClientAcquireToken,\n            request.correlationId\n        );\n        this.logger.trace(\"NativeInteractionClient - acquireToken called.\");\n\n        // start the perf measurement\n        const nativeATMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.NativeInteractionClientAcquireToken,\n            request.correlationId\n        );\n        const reqTimestamp = TimeUtils.nowSeconds();\n\n        // initialize native request\n        const nativeRequest = await this.initializeNativeRequest(request);\n\n        // check if the tokens can be retrieved from internal cache\n        try {\n            const result = await this.acquireTokensFromCache(\n                this.accountId,\n                nativeRequest\n            );\n            nativeATMeasurement.end({\n                success: true,\n                isNativeBroker: false, // Should be true only when the result is coming directly from the broker\n                fromCache: true,\n            });\n            return result;\n        } catch (e) {\n            // continue with a native call for any and all errors\n            this.logger.info(\n                \"MSAL internal Cache does not contain tokens, proceed to make a native call\"\n            );\n        }\n\n        // fall back to native calls\n        const messageBody: NativeExtensionRequestBody = {\n            method: NativeExtensionMethod.GetToken,\n            request: nativeRequest,\n        };\n\n        const response: object = await this.nativeMessageHandler.sendMessage(\n            messageBody\n        );\n        const validatedResponse: NativeResponse =\n            this.validateNativeResponse(response);\n\n        return this.handleNativeResponse(\n            validatedResponse,\n            nativeRequest,\n            reqTimestamp\n        )\n            .then((result: AuthenticationResult) => {\n                nativeATMeasurement.end({\n                    success: true,\n                    isNativeBroker: true,\n                    requestId: result.requestId,\n                });\n                return result;\n            })\n            .catch((error: AuthError) => {\n                nativeATMeasurement.end({\n                    success: false,\n                    errorCode: error.errorCode,\n                    subErrorCode: error.subError,\n                    isNativeBroker: true,\n                });\n                throw error;\n            });\n    }\n\n    /**\n     * Creates silent flow request\n     * @param request\n     * @param cachedAccount\n     * @returns CommonSilentFlowRequest\n     */\n    private createSilentCacheRequest(\n        request: NativeTokenRequest,\n        cachedAccount: AccountInfo\n    ): CommonSilentFlowRequest {\n        return {\n            authority: request.authority,\n            correlationId: this.correlationId,\n            scopes: ScopeSet.fromString(request.scope).asArray(),\n            account: cachedAccount,\n            forceRefresh: false,\n        };\n    }\n\n    /**\n     * Fetches the tokens from the cache if un-expired\n     * @param nativeAccountId\n     * @param request\n     * @returns authenticationResult\n     */\n    protected async acquireTokensFromCache(\n        nativeAccountId: string,\n        request: NativeTokenRequest\n    ): Promise<AuthenticationResult> {\n        if (!nativeAccountId) {\n            this.logger.warning(\n                \"NativeInteractionClient:acquireTokensFromCache - No nativeAccountId provided\"\n            );\n            throw createClientAuthError(ClientAuthErrorCodes.noAccountFound);\n        }\n        // fetch the account from browser cache\n        const account = this.browserStorage.getAccountInfoFilteredBy({\n            nativeAccountId,\n        });\n        if (!account) {\n            throw createClientAuthError(ClientAuthErrorCodes.noAccountFound);\n        }\n\n        // leverage silent flow for cached tokens retrieval\n        try {\n            const silentRequest = this.createSilentCacheRequest(\n                request,\n                account\n            );\n            const result = await this.silentCacheClient.acquireToken(\n                silentRequest\n            );\n            return {\n                ...result,\n                account,\n            };\n        } catch (e) {\n            throw e;\n        }\n    }\n\n    /**\n     * Acquires a token from native platform then redirects to the redirectUri instead of returning the response\n     * @param request\n     */\n    async acquireTokenRedirect(request: RedirectRequest): Promise<void> {\n        this.logger.trace(\n            \"NativeInteractionClient - acquireTokenRedirect called.\"\n        );\n        const nativeRequest = await this.initializeNativeRequest(request);\n\n        const messageBody: NativeExtensionRequestBody = {\n            method: NativeExtensionMethod.GetToken,\n            request: nativeRequest,\n        };\n\n        try {\n            const response: object =\n                await this.nativeMessageHandler.sendMessage(messageBody);\n            this.validateNativeResponse(response);\n        } catch (e) {\n            // Only throw fatal errors here to allow application to fallback to regular redirect. Otherwise proceed and the error will be thrown in handleRedirectPromise\n            if (e instanceof NativeAuthError && isFatalNativeAuthError(e)) {\n                throw e;\n            }\n        }\n        this.browserStorage.setTemporaryCache(\n            TemporaryCacheKeys.NATIVE_REQUEST,\n            JSON.stringify(nativeRequest),\n            true\n        );\n\n        const navigationOptions: NavigationOptions = {\n            apiId: ApiId.acquireTokenRedirect,\n            timeout: this.config.system.redirectNavigationTimeout,\n            noHistory: false,\n        };\n        const redirectUri = this.config.auth.navigateToLoginRequestUrl\n            ? window.location.href\n            : this.getRedirectUri(request.redirectUri);\n        await this.navigationClient.navigateExternal(\n            redirectUri,\n            navigationOptions\n        ); // Need to treat this as external to ensure handleRedirectPromise is run again\n    }\n\n    /**\n     * If the previous page called native platform for a token using redirect APIs, send the same request again and return the response\n     */\n    async handleRedirectPromise(): Promise<AuthenticationResult | null> {\n        this.logger.trace(\n            \"NativeInteractionClient - handleRedirectPromise called.\"\n        );\n        if (!this.browserStorage.isInteractionInProgress(true)) {\n            this.logger.info(\n                \"handleRedirectPromise called but there is no interaction in progress, returning null.\"\n            );\n            return null;\n        }\n\n        // remove prompt from the request to prevent WAM from prompting twice\n        const cachedRequest = this.browserStorage.getCachedNativeRequest();\n        if (!cachedRequest) {\n            this.logger.verbose(\n                \"NativeInteractionClient - handleRedirectPromise called but there is no cached request, returning null.\"\n            );\n            return null;\n        }\n\n        const { prompt, ...request } = cachedRequest;\n        if (prompt) {\n            this.logger.verbose(\n                \"NativeInteractionClient - handleRedirectPromise called and prompt was included in the original request, removing prompt from cached request to prevent second interaction with native broker window.\"\n            );\n        }\n\n        this.browserStorage.removeItem(\n            this.browserStorage.generateCacheKey(\n                TemporaryCacheKeys.NATIVE_REQUEST\n            )\n        );\n\n        const messageBody: NativeExtensionRequestBody = {\n            method: NativeExtensionMethod.GetToken,\n            request: request,\n        };\n\n        const reqTimestamp = TimeUtils.nowSeconds();\n\n        try {\n            this.logger.verbose(\n                \"NativeInteractionClient - handleRedirectPromise sending message to native broker.\"\n            );\n            const response: object =\n                await this.nativeMessageHandler.sendMessage(messageBody);\n            this.validateNativeResponse(response);\n            const result = this.handleNativeResponse(\n                response as NativeResponse,\n                request,\n                reqTimestamp\n            );\n            this.browserStorage.setInteractionInProgress(false);\n            return result;\n        } catch (e) {\n            this.browserStorage.setInteractionInProgress(false);\n            throw e;\n        }\n    }\n\n    /**\n     * Logout from native platform via browser extension\n     * @param request\n     */\n    logout(): Promise<void> {\n        this.logger.trace(\"NativeInteractionClient - logout called.\");\n        return Promise.reject(\"Logout not implemented yet\");\n    }\n\n    /**\n     * Transform response from native platform into AuthenticationResult object which will be returned to the end user\n     * @param response\n     * @param request\n     * @param reqTimestamp\n     */\n    protected async handleNativeResponse(\n        response: NativeResponse,\n        request: NativeTokenRequest,\n        reqTimestamp: number\n    ): Promise<AuthenticationResult> {\n        this.logger.trace(\n            \"NativeInteractionClient - handleNativeResponse called.\"\n        );\n\n        if (response.account.id !== request.accountId) {\n            // User switch in native broker prompt is not supported. All users must first sign in through web flow to ensure server state is in sync\n            throw createNativeAuthError(NativeAuthErrorCodes.userSwitch);\n        }\n\n        // Get the preferred_cache domain for the given authority\n        const authority = await this.getDiscoveredAuthority(request.authority);\n\n        // generate identifiers\n        const idTokenClaims = AuthToken.extractTokenClaims(\n            response.id_token,\n            base64Decode\n        );\n        const homeAccountIdentifier = this.createHomeAccountIdentifier(\n            response,\n            idTokenClaims\n        );\n        const accountEntity = AccountEntity.createAccount(\n            {\n                homeAccountId: homeAccountIdentifier,\n                idTokenClaims: idTokenClaims,\n                clientInfo: response.client_info,\n                nativeAccountId: response.account.id,\n            },\n            authority\n        );\n\n        // generate authenticationResult\n        const result = await this.generateAuthenticationResult(\n            response,\n            request,\n            idTokenClaims,\n            accountEntity,\n            authority.canonicalAuthority,\n            reqTimestamp\n        );\n\n        // cache accounts and tokens in the appropriate storage\n        this.cacheAccount(accountEntity);\n        this.cacheNativeTokens(\n            response,\n            request,\n            homeAccountIdentifier,\n            idTokenClaims,\n            result.accessToken,\n            result.tenantId,\n            reqTimestamp\n        );\n\n        return result;\n    }\n\n    /**\n     * creates an homeAccountIdentifier for the account\n     * @param response\n     * @param idTokenObj\n     * @returns\n     */\n    protected createHomeAccountIdentifier(\n        response: NativeResponse,\n        idTokenClaims: TokenClaims\n    ): string {\n        // Save account in browser storage\n        const homeAccountIdentifier = AccountEntity.generateHomeAccountId(\n            response.client_info || Constants.EMPTY_STRING,\n            AuthorityType.Default,\n            this.logger,\n            this.browserCrypto,\n            idTokenClaims\n        );\n\n        return homeAccountIdentifier;\n    }\n\n    /**\n     * Helper to generate scopes\n     * @param response\n     * @param request\n     * @returns\n     */\n    generateScopes(\n        response: NativeResponse,\n        request: NativeTokenRequest\n    ): ScopeSet {\n        return response.scope\n            ? ScopeSet.fromString(response.scope)\n            : ScopeSet.fromString(request.scope);\n    }\n\n    /**\n     * If PoP token is requesred, records the PoP token if returned from the WAM, else generates one in the browser\n     * @param request\n     * @param response\n     */\n    async generatePopAccessToken(\n        response: NativeResponse,\n        request: NativeTokenRequest\n    ): Promise<string> {\n        if (request.tokenType === AuthenticationScheme.POP) {\n            /**\n             * This code prioritizes SHR returned from the native layer. In case of error/SHR not calculated from WAM and the AT\n             * is still received, SHR is calculated locally\n             */\n\n            // Check if native layer returned an SHR token\n            if (response.shr) {\n                this.logger.trace(\n                    \"handleNativeServerResponse: SHR is enabled in native layer\"\n                );\n                return response.shr;\n            }\n\n            // Generate SHR in msal js if WAM does not compute it when POP is enabled\n            const popTokenGenerator: PopTokenGenerator = new PopTokenGenerator(\n                this.browserCrypto\n            );\n            const shrParameters: SignedHttpRequestParameters = {\n                resourceRequestMethod: request.resourceRequestMethod,\n                resourceRequestUri: request.resourceRequestUri,\n                shrClaims: request.shrClaims,\n                shrNonce: request.shrNonce,\n            };\n\n            /**\n             * KeyID must be present in the native request from when the PoP key was generated in order for\n             * PopTokenGenerator to query the full key for signing\n             */\n            if (!request.keyId) {\n                throw createClientAuthError(ClientAuthErrorCodes.keyIdMissing);\n            }\n            return await popTokenGenerator.signPopToken(\n                response.access_token,\n                request.keyId,\n                shrParameters\n            );\n        } else {\n            return response.access_token;\n        }\n    }\n\n    /**\n     * Generates authentication result\n     * @param response\n     * @param request\n     * @param idTokenObj\n     * @param accountEntity\n     * @param authority\n     * @param reqTimestamp\n     * @returns\n     */\n    protected async generateAuthenticationResult(\n        response: NativeResponse,\n        request: NativeTokenRequest,\n        idTokenClaims: TokenClaims,\n        accountEntity: AccountEntity,\n        authority: string,\n        reqTimestamp: number\n    ): Promise<AuthenticationResult> {\n        // Add Native Broker fields to Telemetry\n        const mats = this.addTelemetryFromNativeResponse(response);\n\n        // If scopes not returned in server response, use request scopes\n        const responseScopes = response.scope\n            ? ScopeSet.fromString(response.scope)\n            : ScopeSet.fromString(request.scope);\n\n        const accountProperties = response.account.properties || {};\n        const uid =\n            accountProperties[\"UID\"] ||\n            idTokenClaims.oid ||\n            idTokenClaims.sub ||\n            Constants.EMPTY_STRING;\n        const tid =\n            accountProperties[\"TenantId\"] ||\n            idTokenClaims.tid ||\n            Constants.EMPTY_STRING;\n\n        // generate PoP token as needed\n        const responseAccessToken = await this.generatePopAccessToken(\n            response,\n            request\n        );\n        const tokenType =\n            request.tokenType === AuthenticationScheme.POP\n                ? AuthenticationScheme.POP\n                : AuthenticationScheme.BEARER;\n\n        const result: AuthenticationResult = {\n            authority: authority,\n            uniqueId: uid,\n            tenantId: tid,\n            scopes: responseScopes.asArray(),\n            account: accountEntity.getAccountInfo(),\n            idToken: response.id_token,\n            idTokenClaims: idTokenClaims,\n            accessToken: responseAccessToken,\n            fromCache: mats ? this.isResponseFromCache(mats) : false,\n            expiresOn: new Date(\n                Number(reqTimestamp + response.expires_in) * 1000\n            ),\n            tokenType: tokenType,\n            correlationId: this.correlationId,\n            state: response.state,\n            fromNativeBroker: true,\n        };\n\n        return result;\n    }\n\n    /**\n     * cache the account entity in browser storage\n     * @param accountEntity\n     */\n    cacheAccount(accountEntity: AccountEntity): void {\n        // Store the account info and hence `nativeAccountId` in browser cache\n        this.browserStorage.setAccount(accountEntity);\n\n        // Remove any existing cached tokens for this account in browser storage\n        this.browserStorage.removeAccountContext(accountEntity).catch((e) => {\n            this.logger.error(\n                `Error occurred while removing account context from browser storage. ${e}`\n            );\n        });\n    }\n\n    /**\n     * Stores the access_token and id_token in inmemory storage\n     * @param response\n     * @param request\n     * @param homeAccountIdentifier\n     * @param idTokenObj\n     * @param responseAccessToken\n     * @param tenantId\n     * @param reqTimestamp\n     */\n    cacheNativeTokens(\n        response: NativeResponse,\n        request: NativeTokenRequest,\n        homeAccountIdentifier: string,\n        idTokenClaims: TokenClaims,\n        responseAccessToken: string,\n        tenantId: string,\n        reqTimestamp: number\n    ): void {\n        const cachedIdToken: IdTokenEntity | null =\n            IdTokenEntity.createIdTokenEntity(\n                homeAccountIdentifier,\n                request.authority,\n                response.id_token || \"\",\n                request.clientId,\n                idTokenClaims.tid || \"\"\n            );\n\n        // cache accessToken in inmemory storage\n        const expiresIn: number =\n            request.tokenType === AuthenticationScheme.POP\n                ? Constants.SHR_NONCE_VALIDITY\n                : (typeof response.expires_in === \"string\"\n                      ? parseInt(response.expires_in, 10)\n                      : response.expires_in) || 0;\n        const tokenExpirationSeconds = reqTimestamp + expiresIn;\n        const responseScopes = this.generateScopes(response, request);\n\n        const cachedAccessToken: AccessTokenEntity | null =\n            AccessTokenEntity.createAccessTokenEntity(\n                homeAccountIdentifier,\n                request.authority,\n                responseAccessToken,\n                request.clientId,\n                idTokenClaims.tid || tenantId,\n                responseScopes.printScopes(),\n                tokenExpirationSeconds,\n                0,\n                this.browserCrypto\n            );\n\n        const nativeCacheRecord = new CacheRecord(\n            undefined,\n            cachedIdToken,\n            cachedAccessToken\n        );\n\n        void this.nativeStorageManager.saveCacheRecord(\n            nativeCacheRecord,\n            request.storeInCache\n        );\n    }\n\n    protected addTelemetryFromNativeResponse(\n        response: NativeResponse\n    ): MATS | null {\n        const mats = this.getMATSFromResponse(response);\n\n        if (!mats) {\n            return null;\n        }\n\n        this.performanceClient.addFields(\n            {\n                extensionId: this.nativeMessageHandler.getExtensionId(),\n                extensionVersion:\n                    this.nativeMessageHandler.getExtensionVersion(),\n                matsBrokerVersion: mats.broker_version,\n                matsAccountJoinOnStart: mats.account_join_on_start,\n                matsAccountJoinOnEnd: mats.account_join_on_end,\n                matsDeviceJoin: mats.device_join,\n                matsPromptBehavior: mats.prompt_behavior,\n                matsApiErrorCode: mats.api_error_code,\n                matsUiVisible: mats.ui_visible,\n                matsSilentCode: mats.silent_code,\n                matsSilentBiSubCode: mats.silent_bi_sub_code,\n                matsSilentMessage: mats.silent_message,\n                matsSilentStatus: mats.silent_status,\n                matsHttpStatus: mats.http_status,\n                matsHttpEventCount: mats.http_event_count,\n            },\n            this.correlationId\n        );\n\n        return mats;\n    }\n\n    /**\n     * Validates native platform response before processing\n     * @param response\n     */\n    private validateNativeResponse(response: object): NativeResponse {\n        if (\n            response.hasOwnProperty(\"access_token\") &&\n            response.hasOwnProperty(\"id_token\") &&\n            response.hasOwnProperty(\"client_info\") &&\n            response.hasOwnProperty(\"account\") &&\n            response.hasOwnProperty(\"scope\") &&\n            response.hasOwnProperty(\"expires_in\")\n        ) {\n            return response as NativeResponse;\n        } else {\n            throw createAuthError(\n                AuthErrorCodes.unexpectedError,\n                \"Response missing expected properties.\"\n            );\n        }\n    }\n\n    /**\n     * Gets MATS telemetry from native response\n     * @param response\n     * @returns\n     */\n    private getMATSFromResponse(response: NativeResponse): MATS | null {\n        if (response.properties.MATS) {\n            try {\n                return JSON.parse(response.properties.MATS);\n            } catch (e) {\n                this.logger.error(\n                    \"NativeInteractionClient - Error parsing MATS telemetry, returning null instead\"\n                );\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * Returns whether or not response came from native cache\n     * @param response\n     * @returns\n     */\n    protected isResponseFromCache(mats: MATS): boolean {\n        if (typeof mats.is_cached === \"undefined\") {\n            this.logger.verbose(\n                \"NativeInteractionClient - MATS telemetry does not contain field indicating if response was served from cache. Returning false.\"\n            );\n            return false;\n        }\n\n        return !!mats.is_cached;\n    }\n\n    /**\n     * Translates developer provided request object into NativeRequest object\n     * @param request\n     */\n    protected async initializeNativeRequest(\n        request: PopupRequest | SsoSilentRequest\n    ): Promise<NativeTokenRequest> {\n        this.logger.trace(\n            \"NativeInteractionClient - initializeNativeRequest called\"\n        );\n\n        const authority = request.authority || this.config.auth.authority;\n\n        if (request.account) {\n            await this.validateRequestAuthority(authority, request.account);\n        }\n\n        const canonicalAuthority = new UrlString(authority);\n        canonicalAuthority.validateAsUri();\n\n        // scopes are expected to be received by the native broker as \"scope\" and will be added to the request below. Other properties that should be dropped from the request to the native broker can be included in the object destructuring here.\n        const { scopes, ...remainingProperties } = request;\n        const scopeSet = new ScopeSet(scopes || []);\n        scopeSet.appendScopes(OIDC_DEFAULT_SCOPES);\n\n        const getPrompt = () => {\n            // If request is silent, prompt is always none\n            switch (this.apiId) {\n                case ApiId.ssoSilent:\n                case ApiId.acquireTokenSilent_silentFlow:\n                    this.logger.trace(\n                        \"initializeNativeRequest: silent request sets prompt to none\"\n                    );\n                    return PromptValue.NONE;\n                default:\n                    break;\n            }\n\n            // Prompt not provided, request may proceed and native broker decides if it needs to prompt\n            if (!request.prompt) {\n                this.logger.trace(\n                    \"initializeNativeRequest: prompt was not provided\"\n                );\n                return undefined;\n            }\n\n            // If request is interactive, check if prompt provided is allowed to go directly to native broker\n            switch (request.prompt) {\n                case PromptValue.NONE:\n                case PromptValue.CONSENT:\n                case PromptValue.LOGIN:\n                    this.logger.trace(\n                        \"initializeNativeRequest: prompt is compatible with native flow\"\n                    );\n                    return request.prompt;\n                default:\n                    this.logger.trace(\n                        `initializeNativeRequest: prompt = ${request.prompt} is not compatible with native flow`\n                    );\n                    throw createBrowserAuthError(\n                        BrowserAuthErrorCodes.nativePromptNotSupported\n                    );\n            }\n        };\n\n        const validatedRequest: NativeTokenRequest = {\n            ...remainingProperties,\n            accountId: this.accountId,\n            clientId: this.config.auth.clientId,\n            authority: canonicalAuthority.urlString,\n            scope: scopeSet.printScopes(),\n            redirectUri: this.getRedirectUri(request.redirectUri),\n            prompt: getPrompt(),\n            correlationId: this.correlationId,\n            tokenType: request.authenticationScheme,\n            windowTitleSubstring: document.title,\n            extraParameters: {\n                ...request.extraQueryParameters,\n                ...request.tokenQueryParameters,\n            },\n            extendedExpiryToken: false, // Make this configurable?\n        };\n\n        this.handleExtraBrokerParams(validatedRequest);\n        validatedRequest.extraParameters =\n            validatedRequest.extraParameters || {};\n        validatedRequest.extraParameters.telemetry =\n            NativeConstants.MATS_TELEMETRY;\n\n        if (request.authenticationScheme === AuthenticationScheme.POP) {\n            // add POP request type\n            const shrParameters: SignedHttpRequestParameters = {\n                resourceRequestUri: request.resourceRequestUri,\n                resourceRequestMethod: request.resourceRequestMethod,\n                shrClaims: request.shrClaims,\n                shrNonce: request.shrNonce,\n            };\n\n            const popTokenGenerator = new PopTokenGenerator(this.browserCrypto);\n            const reqCnfData = await invokeAsync(\n                popTokenGenerator.generateCnf.bind(popTokenGenerator),\n                PerformanceEvents.PopTokenGenerateCnf,\n                this.logger,\n                this.performanceClient,\n                this.correlationId\n            )(shrParameters, this.logger);\n\n            // to reduce the URL length, it is recommended to send the hash of the req_cnf instead of the whole string\n            validatedRequest.reqCnf = reqCnfData.reqCnfHash;\n            validatedRequest.keyId = reqCnfData.kid;\n        }\n\n        return validatedRequest;\n    }\n\n    /**\n     * Handles extra broker request parameters\n     * @param request {NativeTokenRequest}\n     * @private\n     */\n    private handleExtraBrokerParams(request: NativeTokenRequest): void {\n        if (!request.extraParameters) {\n            return;\n        }\n\n        if (\n            request.extraParameters.hasOwnProperty(\n                BrokerServerParamKeys.BROKER_CLIENT_ID\n            ) &&\n            request.extraParameters.hasOwnProperty(\n                BrokerServerParamKeys.BROKER_REDIRECT_URI\n            ) &&\n            request.extraParameters.hasOwnProperty(AADServerParamKeys.CLIENT_ID)\n        ) {\n            const child_client_id =\n                request.extraParameters[AADServerParamKeys.CLIENT_ID];\n            const child_redirect_uri = request.redirectUri;\n            const brk_redirect_uri =\n                request.extraParameters[\n                    BrokerServerParamKeys.BROKER_REDIRECT_URI\n                ];\n            request.extraParameters = {\n                child_client_id,\n                child_redirect_uri,\n            };\n            request.redirectUri = brk_redirect_uri;\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    NativeConstants,\n    NativeExtensionMethod,\n} from \"../../utils/BrowserConstants\";\nimport {\n    Logger,\n    AuthError,\n    createAuthError,\n    AuthErrorCodes,\n    AuthenticationScheme,\n    InProgressPerformanceEvent,\n    PerformanceEvents,\n    IPerformanceClient,\n} from \"@azure/msal-common\";\nimport {\n    NativeExtensionRequest,\n    NativeExtensionRequestBody,\n} from \"./NativeRequest\";\nimport { createNativeAuthError } from \"../../error/NativeAuthError\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../../error/BrowserAuthError\";\nimport { BrowserConfiguration } from \"../../config/Configuration\";\nimport { createNewGuid } from \"../../crypto/BrowserCrypto\";\n\ntype ResponseResolvers<T> = {\n    resolve: (value: T | PromiseLike<T>) => void;\n    reject: (\n        value: AuthError | Error | PromiseLike<Error> | PromiseLike<AuthError>\n    ) => void;\n};\n\nexport class NativeMessageHandler {\n    private extensionId: string | undefined;\n    private extensionVersion: string | undefined;\n    private logger: Logger;\n    private readonly handshakeTimeoutMs: number;\n    private timeoutId: number | undefined;\n    private resolvers: Map<string, ResponseResolvers<object>>;\n    private handshakeResolvers: Map<string, ResponseResolvers<void>>;\n    private messageChannel: MessageChannel;\n    private readonly windowListener: (event: MessageEvent) => void;\n    private readonly performanceClient: IPerformanceClient;\n    private readonly handshakeEvent: InProgressPerformanceEvent;\n\n    constructor(\n        logger: Logger,\n        handshakeTimeoutMs: number,\n        performanceClient: IPerformanceClient,\n        extensionId?: string\n    ) {\n        this.logger = logger;\n        this.handshakeTimeoutMs = handshakeTimeoutMs;\n        this.extensionId = extensionId;\n        this.resolvers = new Map(); // Used for non-handshake messages\n        this.handshakeResolvers = new Map(); // Used for handshake messages\n        this.messageChannel = new MessageChannel();\n        this.windowListener = this.onWindowMessage.bind(this); // Window event callback doesn't have access to 'this' unless it's bound\n        this.performanceClient = performanceClient;\n        this.handshakeEvent = performanceClient.startMeasurement(\n            PerformanceEvents.NativeMessageHandlerHandshake\n        );\n    }\n\n    /**\n     * Sends a given message to the extension and resolves with the extension response\n     * @param body\n     */\n    async sendMessage(body: NativeExtensionRequestBody): Promise<object> {\n        this.logger.trace(\"NativeMessageHandler - sendMessage called.\");\n        const req: NativeExtensionRequest = {\n            channel: NativeConstants.CHANNEL_ID,\n            extensionId: this.extensionId,\n            responseId: createNewGuid(),\n            body: body,\n        };\n\n        this.logger.trace(\n            \"NativeMessageHandler - Sending request to browser extension\"\n        );\n        this.logger.tracePii(\n            `NativeMessageHandler - Sending request to browser extension: ${JSON.stringify(\n                req\n            )}`\n        );\n        this.messageChannel.port1.postMessage(req);\n\n        return new Promise((resolve, reject) => {\n            this.resolvers.set(req.responseId, { resolve, reject });\n        });\n    }\n\n    /**\n     * Returns an instance of the MessageHandler that has successfully established a connection with an extension\n     * @param {Logger} logger\n     * @param {number} handshakeTimeoutMs\n     * @param {IPerformanceClient} performanceClient\n     * @param {ICrypto} crypto\n     */\n    static async createProvider(\n        logger: Logger,\n        handshakeTimeoutMs: number,\n        performanceClient: IPerformanceClient\n    ): Promise<NativeMessageHandler> {\n        logger.trace(\"NativeMessageHandler - createProvider called.\");\n        try {\n            const preferredProvider = new NativeMessageHandler(\n                logger,\n                handshakeTimeoutMs,\n                performanceClient,\n                NativeConstants.PREFERRED_EXTENSION_ID\n            );\n            await preferredProvider.sendHandshakeRequest();\n            return preferredProvider;\n        } catch (e) {\n            // If preferred extension fails for whatever reason, fallback to using any installed extension\n            const backupProvider = new NativeMessageHandler(\n                logger,\n                handshakeTimeoutMs,\n                performanceClient\n            );\n            await backupProvider.sendHandshakeRequest();\n            return backupProvider;\n        }\n    }\n\n    /**\n     * Send handshake request helper.\n     */\n    private async sendHandshakeRequest(): Promise<void> {\n        this.logger.trace(\n            \"NativeMessageHandler - sendHandshakeRequest called.\"\n        );\n        // Register this event listener before sending handshake\n        window.addEventListener(\"message\", this.windowListener, false); // false is important, because content script message processing should work first\n\n        const req: NativeExtensionRequest = {\n            channel: NativeConstants.CHANNEL_ID,\n            extensionId: this.extensionId,\n            responseId: createNewGuid(),\n            body: {\n                method: NativeExtensionMethod.HandshakeRequest,\n            },\n        };\n        this.handshakeEvent.add({\n            extensionId: this.extensionId,\n            extensionHandshakeTimeoutMs: this.handshakeTimeoutMs,\n        });\n\n        this.messageChannel.port1.onmessage = (event) => {\n            this.onChannelMessage(event);\n        };\n\n        window.postMessage(req, window.origin, [this.messageChannel.port2]);\n\n        return new Promise((resolve, reject) => {\n            this.handshakeResolvers.set(req.responseId, { resolve, reject });\n            this.timeoutId = window.setTimeout(() => {\n                /*\n                 * Throw an error if neither HandshakeResponse nor original Handshake request are received in a reasonable timeframe.\n                 * This typically suggests an event handler stopped propagation of the Handshake request but did not respond to it on the MessageChannel port\n                 */\n                window.removeEventListener(\n                    \"message\",\n                    this.windowListener,\n                    false\n                );\n                this.messageChannel.port1.close();\n                this.messageChannel.port2.close();\n                this.handshakeEvent.end({\n                    extensionHandshakeTimedOut: true,\n                    success: false,\n                });\n                reject(\n                    createBrowserAuthError(\n                        BrowserAuthErrorCodes.nativeHandshakeTimeout\n                    )\n                );\n                this.handshakeResolvers.delete(req.responseId);\n            }, this.handshakeTimeoutMs); // Use a reasonable timeout in milliseconds here\n        });\n    }\n\n    /**\n     * Invoked when a message is posted to the window. If a handshake request is received it means the extension is not installed.\n     * @param event\n     */\n    private onWindowMessage(event: MessageEvent): void {\n        this.logger.trace(\"NativeMessageHandler - onWindowMessage called\");\n        // We only accept messages from ourselves\n        if (event.source !== window) {\n            return;\n        }\n\n        const request = event.data;\n\n        if (\n            !request.channel ||\n            request.channel !== NativeConstants.CHANNEL_ID\n        ) {\n            return;\n        }\n\n        if (request.extensionId && request.extensionId !== this.extensionId) {\n            return;\n        }\n\n        if (request.body.method === NativeExtensionMethod.HandshakeRequest) {\n            const handshakeResolver = this.handshakeResolvers.get(\n                request.responseId\n            );\n            /*\n             * Filter out responses with no matched resolvers sooner to keep channel ports open while waiting for\n             * the proper response.\n             */\n            if (!handshakeResolver) {\n                this.logger.trace(\n                    `NativeMessageHandler.onWindowMessage - resolver can't be found for request ${request.responseId}`\n                );\n                return;\n            }\n\n            // If we receive this message back it means no extension intercepted the request, meaning no extension supporting handshake protocol is installed\n            this.logger.verbose(\n                request.extensionId\n                    ? `Extension with id: ${request.extensionId} not installed`\n                    : \"No extension installed\"\n            );\n            clearTimeout(this.timeoutId);\n            this.messageChannel.port1.close();\n            this.messageChannel.port2.close();\n            window.removeEventListener(\"message\", this.windowListener, false);\n            this.handshakeEvent.end({\n                success: false,\n                extensionInstalled: false,\n            });\n            handshakeResolver.reject(\n                createBrowserAuthError(\n                    BrowserAuthErrorCodes.nativeExtensionNotInstalled\n                )\n            );\n        }\n    }\n\n    /**\n     * Invoked when a message is received from the extension on the MessageChannel port\n     * @param event\n     */\n    private onChannelMessage(event: MessageEvent): void {\n        this.logger.trace(\"NativeMessageHandler - onChannelMessage called.\");\n        const request = event.data;\n\n        const resolver = this.resolvers.get(request.responseId);\n        const handshakeResolver = this.handshakeResolvers.get(\n            request.responseId\n        );\n\n        try {\n            const method = request.body.method;\n\n            if (method === NativeExtensionMethod.Response) {\n                if (!resolver) {\n                    return;\n                }\n                const response = request.body.response;\n                this.logger.trace(\n                    \"NativeMessageHandler - Received response from browser extension\"\n                );\n                this.logger.tracePii(\n                    `NativeMessageHandler - Received response from browser extension: ${JSON.stringify(\n                        response\n                    )}`\n                );\n                if (response.status !== \"Success\") {\n                    resolver.reject(\n                        createNativeAuthError(\n                            response.code,\n                            response.description,\n                            response.ext\n                        )\n                    );\n                } else if (response.result) {\n                    if (\n                        response.result[\"code\"] &&\n                        response.result[\"description\"]\n                    ) {\n                        resolver.reject(\n                            createNativeAuthError(\n                                response.result[\"code\"],\n                                response.result[\"description\"],\n                                response.result[\"ext\"]\n                            )\n                        );\n                    } else {\n                        resolver.resolve(response.result);\n                    }\n                } else {\n                    throw createAuthError(\n                        AuthErrorCodes.unexpectedError,\n                        \"Event does not contain result.\"\n                    );\n                }\n                this.resolvers.delete(request.responseId);\n            } else if (method === NativeExtensionMethod.HandshakeResponse) {\n                if (!handshakeResolver) {\n                    this.logger.trace(\n                        `NativeMessageHandler.onChannelMessage - resolver can't be found for request ${request.responseId}`\n                    );\n                    return;\n                }\n                clearTimeout(this.timeoutId); // Clear setTimeout\n                window.removeEventListener(\n                    \"message\",\n                    this.windowListener,\n                    false\n                ); // Remove 'No extension' listener\n                this.extensionId = request.extensionId;\n                this.extensionVersion = request.body.version;\n                this.logger.verbose(\n                    `NativeMessageHandler - Received HandshakeResponse from extension: ${this.extensionId}`\n                );\n                this.handshakeEvent.end({\n                    extensionInstalled: true,\n                    success: true,\n                });\n\n                handshakeResolver.resolve();\n                this.handshakeResolvers.delete(request.responseId);\n            }\n            // Do nothing if method is not Response or HandshakeResponse\n        } catch (err) {\n            this.logger.error(\"Error parsing response from WAM Extension\");\n            this.logger.errorPii(\n                `Error parsing response from WAM Extension: ${err as string}`\n            );\n            this.logger.errorPii(`Unable to parse ${event}`);\n\n            if (resolver) {\n                resolver.reject(err as AuthError);\n            } else if (handshakeResolver) {\n                handshakeResolver.reject(err as AuthError);\n            }\n        }\n    }\n\n    /**\n     * Returns the Id for the browser extension this handler is communicating with\n     * @returns\n     */\n    getExtensionId(): string | undefined {\n        return this.extensionId;\n    }\n\n    /**\n     * Returns the version for the browser extension this handler is communicating with\n     * @returns\n     */\n    getExtensionVersion(): string | undefined {\n        return this.extensionVersion;\n    }\n\n    /**\n     * Returns boolean indicating whether or not the request should attempt to use native broker\n     * @param logger\n     * @param config\n     * @param nativeExtensionProvider\n     * @param authenticationScheme\n     */\n    static isNativeAvailable(\n        config: BrowserConfiguration,\n        logger: Logger,\n        nativeExtensionProvider?: NativeMessageHandler,\n        authenticationScheme?: AuthenticationScheme\n    ): boolean {\n        logger.trace(\"isNativeAvailable called\");\n        if (!config.system.allowNativeBroker) {\n            logger.trace(\n                \"isNativeAvailable: allowNativeBroker is not enabled, returning false\"\n            );\n            // Developer disabled WAM\n            return false;\n        }\n\n        if (!nativeExtensionProvider) {\n            logger.trace(\n                \"isNativeAvailable: WAM extension provider is not initialized, returning false\"\n            );\n            // Extension is not available\n            return false;\n        }\n\n        if (authenticationScheme) {\n            switch (authenticationScheme) {\n                case AuthenticationScheme.BEARER:\n                case AuthenticationScheme.POP:\n                    logger.trace(\n                        \"isNativeAvailable: authenticationScheme is supported, returning true\"\n                    );\n                    return true;\n                default:\n                    logger.trace(\n                        \"isNativeAvailable: authenticationScheme is not supported, returning false\"\n                    );\n                    return false;\n            }\n        }\n\n        return true;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AuthorizationCodePayload,\n    CommonAuthorizationCodeRequest,\n    AuthorizationCodeClient,\n    AuthorityFactory,\n    Authority,\n    INetworkModule,\n    CcsCredential,\n    Logger,\n    ServerError,\n    IPerformanceClient,\n    PerformanceEvents,\n    invokeAsync,\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"@azure/msal-common\";\n\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { TemporaryCacheKeys } from \"../utils/BrowserConstants\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\n\nexport type InteractionParams = {};\n\n/**\n * Abstract class which defines operations for a browser interaction handling class.\n */\nexport class InteractionHandler {\n    protected authModule: AuthorizationCodeClient;\n    protected browserStorage: BrowserCacheManager;\n    protected authCodeRequest: CommonAuthorizationCodeRequest;\n    protected logger: Logger;\n    protected performanceClient: IPerformanceClient;\n\n    constructor(\n        authCodeModule: AuthorizationCodeClient,\n        storageImpl: BrowserCacheManager,\n        authCodeRequest: CommonAuthorizationCodeRequest,\n        logger: Logger,\n        performanceClient: IPerformanceClient\n    ) {\n        this.authModule = authCodeModule;\n        this.browserStorage = storageImpl;\n        this.authCodeRequest = authCodeRequest;\n        this.logger = logger;\n        this.performanceClient = performanceClient;\n    }\n\n    /**\n     * Function to handle response parameters from hash.\n     * @param locationHash\n     */\n    async handleCodeResponseFromHash(\n        locationHash: string,\n        state: string,\n        authority: Authority,\n        networkModule: INetworkModule\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.HandleCodeResponseFromHash,\n            this.authCodeRequest.correlationId\n        );\n        // Check that location hash isn't empty.\n        if (!locationHash) {\n            throw createBrowserAuthError(BrowserAuthErrorCodes.hashEmptyError);\n        }\n\n        // Handle code response.\n        const stateKey = this.browserStorage.generateStateKey(state);\n        const requestState = this.browserStorage.getTemporaryCache(stateKey);\n        if (!requestState) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.stateNotFound,\n                \"Cached State\"\n            );\n        }\n\n        let authCodeResponse;\n        try {\n            authCodeResponse = this.authModule.handleFragmentResponse(\n                locationHash,\n                requestState\n            );\n        } catch (e) {\n            if (\n                e instanceof ServerError &&\n                e.subError === BrowserAuthErrorCodes.userCancelled\n            ) {\n                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.userCancelled\n                );\n            } else {\n                throw e;\n            }\n        }\n\n        return invokeAsync(\n            this.handleCodeResponseFromServer.bind(this),\n            PerformanceEvents.HandleCodeResponseFromServer,\n            this.logger,\n            this.performanceClient,\n            this.authCodeRequest.correlationId\n        )(authCodeResponse, state, authority, networkModule);\n    }\n\n    /**\n     * Process auth code response from AAD\n     * @param authCodeResponse\n     * @param state\n     * @param authority\n     * @param networkModule\n     * @returns\n     */\n    async handleCodeResponseFromServer(\n        authCodeResponse: AuthorizationCodePayload,\n        state: string,\n        authority: Authority,\n        networkModule: INetworkModule,\n        validateNonce: boolean = true\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.HandleCodeResponseFromServer,\n            this.authCodeRequest.correlationId\n        );\n        this.logger.trace(\n            \"InteractionHandler.handleCodeResponseFromServer called\"\n        );\n\n        // Handle code response.\n        const stateKey = this.browserStorage.generateStateKey(state);\n        const requestState = this.browserStorage.getTemporaryCache(stateKey);\n        if (!requestState) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.stateNotFound,\n                \"Cached State\"\n            );\n        }\n\n        // Get cached items\n        const nonceKey = this.browserStorage.generateNonceKey(requestState);\n        const cachedNonce = this.browserStorage.getTemporaryCache(nonceKey);\n\n        // Assign code to request\n        this.authCodeRequest.code = authCodeResponse.code;\n\n        // Check for new cloud instance\n        if (authCodeResponse.cloud_instance_host_name) {\n            await invokeAsync(\n                this.updateTokenEndpointAuthority.bind(this),\n                PerformanceEvents.UpdateTokenEndpointAuthority,\n                this.logger,\n                this.performanceClient,\n                this.authCodeRequest.correlationId\n            )(\n                authCodeResponse.cloud_instance_host_name,\n                authority,\n                networkModule\n            );\n        }\n\n        // Nonce validation not needed when redirect not involved (e.g. hybrid spa, renewing token via rt)\n        if (validateNonce) {\n            authCodeResponse.nonce = cachedNonce || undefined;\n        }\n\n        authCodeResponse.state = requestState;\n\n        // Add CCS parameters if available\n        if (authCodeResponse.client_info) {\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\n        } else {\n            const cachedCcsCred = this.checkCcsCredentials();\n            if (cachedCcsCred) {\n                this.authCodeRequest.ccsCredential = cachedCcsCred;\n            }\n        }\n\n        // Acquire token with retrieved code.\n        const tokenResponse = (await invokeAsync(\n            this.authModule.acquireToken.bind(this.authModule),\n            PerformanceEvents.AuthClientAcquireToken,\n            this.logger,\n            this.performanceClient,\n            this.authCodeRequest.correlationId\n        )(this.authCodeRequest, authCodeResponse)) as AuthenticationResult;\n        this.browserStorage.cleanRequestByState(state);\n        return tokenResponse;\n    }\n\n    /**\n     * Updates authority based on cloudInstanceHostname\n     * @param cloudInstanceHostname\n     * @param authority\n     * @param networkModule\n     */\n    protected async updateTokenEndpointAuthority(\n        cloudInstanceHostname: string,\n        authority: Authority,\n        networkModule: INetworkModule\n    ): Promise<void> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.UpdateTokenEndpointAuthority,\n            this.authCodeRequest.correlationId\n        );\n        const cloudInstanceAuthorityUri = `https://${cloudInstanceHostname}/${authority.tenant}/`;\n        const cloudInstanceAuthority =\n            await AuthorityFactory.createDiscoveredInstance(\n                cloudInstanceAuthorityUri,\n                networkModule,\n                this.browserStorage,\n                authority.options,\n                this.logger,\n                this.performanceClient,\n                this.authCodeRequest.correlationId\n            );\n        this.authModule.updateAuthority(cloudInstanceAuthority);\n    }\n\n    /**\n     * Looks up ccs creds in the cache\n     */\n    protected checkCcsCredentials(): CcsCredential | null {\n        // Look up ccs credential in temp cache\n        const cachedCcsCred = this.browserStorage.getTemporaryCache(\n            TemporaryCacheKeys.CCS_CREDENTIAL,\n            true\n        );\n        if (cachedCcsCred) {\n            try {\n                return JSON.parse(cachedCcsCred) as CcsCredential;\n            } catch (e) {\n                this.authModule.logger.error(\n                    \"Cache credential could not be parsed\"\n                );\n                this.authModule.logger.errorPii(\n                    `Cache credential could not be parsed: ${cachedCcsCred}`\n                );\n            }\n        }\n        return null;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    CommonAuthorizationCodeRequest,\n    AuthorizationCodeClient,\n    ThrottlingUtils,\n    CommonEndSessionRequest,\n    UrlString,\n    AuthError,\n    OIDC_DEFAULT_SCOPES,\n    Constants,\n    ProtocolUtils,\n    ServerAuthorizationCodeResponse,\n    PerformanceEvents,\n    IPerformanceClient,\n    Logger,\n    ICrypto,\n    ProtocolMode,\n    ServerResponseType,\n} from \"@azure/msal-common\";\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport { EventType } from \"../event/EventType\";\nimport {\n    InteractionType,\n    ApiId,\n    BrowserConstants,\n} from \"../utils/BrowserConstants\";\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest\";\nimport { NavigationOptions } from \"../navigation/NavigationOptions\";\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { NativeInteractionClient } from \"./NativeInteractionClient\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport {\n    InteractionHandler,\n    InteractionParams,\n} from \"../interaction_handler/InteractionHandler\";\nimport { PopupWindowAttributes } from \"../request/PopupWindowAttributes\";\nimport { EventError } from \"../event/EventMessage\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\n\nexport type PopupParams = InteractionParams & {\n    popup?: Window | null;\n    popupName: string;\n    popupWindowAttributes: PopupWindowAttributes;\n};\n\nexport class PopupClient extends StandardInteractionClient {\n    private currentWindow: Window | undefined;\n    protected nativeStorage: BrowserCacheManager;\n\n    constructor(\n        config: BrowserConfiguration,\n        storageImpl: BrowserCacheManager,\n        browserCrypto: ICrypto,\n        logger: Logger,\n        eventHandler: EventHandler,\n        navigationClient: INavigationClient,\n        performanceClient: IPerformanceClient,\n        nativeStorageImpl: BrowserCacheManager,\n        nativeMessageHandler?: NativeMessageHandler,\n        correlationId?: string\n    ) {\n        super(\n            config,\n            storageImpl,\n            browserCrypto,\n            logger,\n            eventHandler,\n            navigationClient,\n            performanceClient,\n            nativeMessageHandler,\n            correlationId\n        );\n        // Properly sets this reference for the unload event.\n        this.unloadWindow = this.unloadWindow.bind(this);\n        this.nativeStorage = nativeStorageImpl;\n    }\n\n    /**\n     * Acquires tokens by opening a popup window to the /authorize endpoint of the authority\n     * @param request\n     */\n    acquireToken(request: PopupRequest): Promise<AuthenticationResult> {\n        try {\n            const popupName = this.generatePopupName(\n                request.scopes || OIDC_DEFAULT_SCOPES,\n                request.authority || this.config.auth.authority\n            );\n            const popupWindowAttributes = request.popupWindowAttributes || {};\n\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n            if (this.config.system.asyncPopups) {\n                this.logger.verbose(\"asyncPopups set to true, acquiring token\");\n                // Passes on popup position and dimensions if in request\n                return this.acquireTokenPopupAsync(\n                    request,\n                    popupName,\n                    popupWindowAttributes\n                );\n            } else {\n                // asyncPopups flag is set to false. Opens popup before acquiring token.\n                this.logger.verbose(\n                    \"asyncPopup set to false, opening popup before acquiring token\"\n                );\n                const popup = this.openSizedPopup(\n                    \"about:blank\",\n                    popupName,\n                    popupWindowAttributes\n                );\n                return this.acquireTokenPopupAsync(\n                    request,\n                    popupName,\n                    popupWindowAttributes,\n                    popup\n                );\n            }\n        } catch (e) {\n            return Promise.reject(e);\n        }\n    }\n\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest\n     */\n    logout(logoutRequest?: EndSessionPopupRequest): Promise<void> {\n        try {\n            this.logger.verbose(\"logoutPopup called\");\n            const validLogoutRequest =\n                this.initializeLogoutRequest(logoutRequest);\n\n            const popupName = this.generateLogoutPopupName(validLogoutRequest);\n            const authority = logoutRequest && logoutRequest.authority;\n            const mainWindowRedirectUri =\n                logoutRequest && logoutRequest.mainWindowRedirectUri;\n            const popupWindowAttributes =\n                logoutRequest?.popupWindowAttributes || {};\n\n            // asyncPopups flag is true. Acquires token without first opening popup. Popup will be opened later asynchronously.\n            if (this.config.system.asyncPopups) {\n                this.logger.verbose(\"asyncPopups set to true\");\n                // Passes on popup position and dimensions if in request\n                return this.logoutPopupAsync(\n                    validLogoutRequest,\n                    popupName,\n                    popupWindowAttributes,\n                    authority,\n                    undefined,\n                    mainWindowRedirectUri\n                );\n            } else {\n                // asyncPopups flag is set to false. Opens popup before logging out.\n                this.logger.verbose(\"asyncPopup set to false, opening popup\");\n                const popup = this.openSizedPopup(\n                    \"about:blank\",\n                    popupName,\n                    popupWindowAttributes\n                );\n                return this.logoutPopupAsync(\n                    validLogoutRequest,\n                    popupName,\n                    popupWindowAttributes,\n                    authority,\n                    popup,\n                    mainWindowRedirectUri\n                );\n            }\n        } catch (e) {\n            // Since this function is synchronous we need to reject\n            return Promise.reject(e);\n        }\n    }\n\n    /**\n     * Helper which obtains an access_token for your API via opening a popup window in the user's browser\n     * @param validRequest\n     * @param popupName\n     * @param popup\n     * @param popupWindowAttributes\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    protected async acquireTokenPopupAsync(\n        request: PopupRequest,\n        popupName: string,\n        popupWindowAttributes: PopupWindowAttributes,\n        popup?: Window | null\n    ): Promise<AuthenticationResult> {\n        this.logger.verbose(\"acquireTokenPopupAsync called\");\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.acquireTokenPopup\n        );\n\n        this.performanceClient.setPreQueueTime(\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\n            request.correlationId\n        );\n        const validRequest = await this.initializeAuthorizationRequest(\n            request,\n            InteractionType.Popup\n        );\n        this.browserStorage.updateCacheEntries(\n            validRequest.state,\n            validRequest.nonce,\n            validRequest.authority,\n            validRequest.loginHint || Constants.EMPTY_STRING,\n            validRequest.account || null\n        );\n\n        try {\n            // Create auth code request and generate PKCE params\n            this.performanceClient.setPreQueueTime(\n                PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest,\n                request.correlationId\n            );\n            const authCodeRequest: CommonAuthorizationCodeRequest =\n                await this.initializeAuthorizationCodeRequest(validRequest);\n\n            // Initialize the client\n            this.performanceClient.setPreQueueTime(\n                PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n                request.correlationId\n            );\n            const authClient: AuthorizationCodeClient =\n                await this.createAuthCodeClient(\n                    serverTelemetryManager,\n                    validRequest.authority,\n                    validRequest.azureCloudOptions\n                );\n            this.logger.verbose(\"Auth code client created\");\n\n            const isNativeBroker = NativeMessageHandler.isNativeAvailable(\n                this.config,\n                this.logger,\n                this.nativeMessageHandler,\n                request.authenticationScheme\n            );\n            // Start measurement for server calls with native brokering enabled\n            let fetchNativeAccountIdMeasurement;\n            if (isNativeBroker) {\n                fetchNativeAccountIdMeasurement =\n                    this.performanceClient.startMeasurement(\n                        PerformanceEvents.FetchAccountIdWithNativeBroker,\n                        request.correlationId\n                    );\n            }\n\n            // Create acquire token url.\n            const navigateUrl = await authClient.getAuthCodeUrl({\n                ...validRequest,\n                nativeBroker: isNativeBroker,\n            });\n\n            // Create popup interaction handler.\n            const interactionHandler = new InteractionHandler(\n                authClient,\n                this.browserStorage,\n                authCodeRequest,\n                this.logger,\n                this.performanceClient\n            );\n\n            // Show the UI once the url has been created. Get the window handle for the popup.\n            const popupParameters: PopupParams = {\n                popup,\n                popupName,\n                popupWindowAttributes,\n            };\n            const popupWindow: Window = this.initiateAuthRequest(\n                navigateUrl,\n                popupParameters\n            );\n            this.eventHandler.emitEvent(\n                EventType.POPUP_OPENED,\n                InteractionType.Popup,\n                { popupWindow },\n                null\n            );\n\n            // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\n            const hash = await this.monitorPopupForHash(popupWindow);\n            // Deserialize hash fragment response parameters.\n            const serverParams: ServerAuthorizationCodeResponse =\n                UrlString.getDeserializedHash(hash);\n            const state = this.validateAndExtractStateFromHash(\n                serverParams,\n                InteractionType.Popup,\n                validRequest.correlationId\n            );\n            // Remove throttle if it exists\n            ThrottlingUtils.removeThrottle(\n                this.browserStorage,\n                this.config.auth.clientId,\n                authCodeRequest\n            );\n\n            if (serverParams.accountId) {\n                this.logger.verbose(\n                    \"Account id found in hash, calling WAM for token\"\n                );\n                // end measurement for server call with native brokering enabled\n                if (fetchNativeAccountIdMeasurement) {\n                    fetchNativeAccountIdMeasurement.end({\n                        success: true,\n                        isNativeBroker: true,\n                    });\n                }\n\n                if (!this.nativeMessageHandler) {\n                    throw createBrowserAuthError(\n                        BrowserAuthErrorCodes.nativeConnectionNotEstablished\n                    );\n                }\n                const nativeInteractionClient = new NativeInteractionClient(\n                    this.config,\n                    this.browserStorage,\n                    this.browserCrypto,\n                    this.logger,\n                    this.eventHandler,\n                    this.navigationClient,\n                    ApiId.acquireTokenPopup,\n                    this.performanceClient,\n                    this.nativeMessageHandler,\n                    serverParams.accountId,\n                    this.nativeStorage,\n                    validRequest.correlationId\n                );\n                const { userRequestState } = ProtocolUtils.parseRequestState(\n                    this.browserCrypto,\n                    state\n                );\n                return nativeInteractionClient\n                    .acquireToken({\n                        ...validRequest,\n                        state: userRequestState,\n                        prompt: undefined, // Server should handle the prompt, ideally native broker can do this part silently\n                    })\n                    .finally(() => {\n                        this.browserStorage.cleanRequestByState(state);\n                    });\n            }\n\n            // Handle response from hash string.\n            const result = await interactionHandler.handleCodeResponseFromHash(\n                hash,\n                state,\n                authClient.authority,\n                this.networkClient\n            );\n\n            return result;\n        } catch (e) {\n            if (popup) {\n                // Close the synchronous popup if an error is thrown before the window unload event is registered\n                popup.close();\n            }\n\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.browserStorage.cleanRequestByState(validRequest.state);\n            throw e;\n        }\n    }\n\n    /**\n     *\n     * @param validRequest\n     * @param popupName\n     * @param requestAuthority\n     * @param popup\n     * @param mainWindowRedirectUri\n     * @param popupWindowAttributes\n     */\n    protected async logoutPopupAsync(\n        validRequest: CommonEndSessionRequest,\n        popupName: string,\n        popupWindowAttributes: PopupWindowAttributes,\n        requestAuthority?: string,\n        popup?: Window | null,\n        mainWindowRedirectUri?: string\n    ): Promise<void> {\n        this.logger.verbose(\"logoutPopupAsync called\");\n        this.eventHandler.emitEvent(\n            EventType.LOGOUT_START,\n            InteractionType.Popup,\n            validRequest\n        );\n\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.logoutPopup\n        );\n\n        try {\n            // Clear cache on logout\n            await this.clearCacheOnLogout(validRequest.account);\n\n            // Initialize the client\n            this.performanceClient.setPreQueueTime(\n                PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n                validRequest.correlationId\n            );\n            const authClient = await this.createAuthCodeClient(\n                serverTelemetryManager,\n                requestAuthority\n            );\n            this.logger.verbose(\"Auth code client created\");\n\n            try {\n                authClient.authority.endSessionEndpoint;\n            } catch {\n                if (\n                    validRequest.account?.homeAccountId &&\n                    validRequest.postLogoutRedirectUri &&\n                    authClient.authority.protocolMode === ProtocolMode.OIDC\n                ) {\n                    void this.browserStorage.removeAccount(\n                        validRequest.account?.homeAccountId\n                    );\n\n                    this.eventHandler.emitEvent(\n                        EventType.LOGOUT_SUCCESS,\n                        InteractionType.Popup,\n                        validRequest\n                    );\n\n                    if (mainWindowRedirectUri) {\n                        const navigationOptions: NavigationOptions = {\n                            apiId: ApiId.logoutPopup,\n                            timeout:\n                                this.config.system.redirectNavigationTimeout,\n                            noHistory: false,\n                        };\n                        const absoluteUrl = UrlString.getAbsoluteUrl(\n                            mainWindowRedirectUri,\n                            BrowserUtils.getCurrentUri()\n                        );\n                        await this.navigationClient.navigateInternal(\n                            absoluteUrl,\n                            navigationOptions\n                        );\n                    }\n\n                    if (popup) {\n                        popup.close();\n                    }\n\n                    return;\n                }\n            }\n\n            // Create logout string and navigate user window to logout.\n            const logoutUri: string = authClient.getLogoutUri(validRequest);\n\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_SUCCESS,\n                InteractionType.Popup,\n                validRequest\n            );\n\n            // Open the popup window to requestUrl.\n            const popupWindow = this.openPopup(logoutUri, {\n                popupName,\n                popupWindowAttributes,\n                popup,\n            });\n            this.eventHandler.emitEvent(\n                EventType.POPUP_OPENED,\n                InteractionType.Popup,\n                { popupWindow },\n                null\n            );\n\n            await this.waitForLogoutPopup(popupWindow);\n\n            if (mainWindowRedirectUri) {\n                const navigationOptions: NavigationOptions = {\n                    apiId: ApiId.logoutPopup,\n                    timeout: this.config.system.redirectNavigationTimeout,\n                    noHistory: false,\n                };\n                const absoluteUrl = UrlString.getAbsoluteUrl(\n                    mainWindowRedirectUri,\n                    BrowserUtils.getCurrentUri()\n                );\n\n                this.logger.verbose(\n                    \"Redirecting main window to url specified in the request\"\n                );\n                this.logger.verbosePii(\n                    `Redirecting main window to: ${absoluteUrl}`\n                );\n                await this.navigationClient.navigateInternal(\n                    absoluteUrl,\n                    navigationOptions\n                );\n            } else {\n                this.logger.verbose(\"No main window navigation requested\");\n            }\n        } catch (e) {\n            if (popup) {\n                // Close the synchronous popup if an error is thrown before the window unload event is registered\n                popup.close();\n            }\n\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.browserStorage.setInteractionInProgress(false);\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_FAILURE,\n                InteractionType.Popup,\n                null,\n                e as EventError\n            );\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_END,\n                InteractionType.Popup\n            );\n            throw e;\n        }\n\n        this.eventHandler.emitEvent(\n            EventType.LOGOUT_END,\n            InteractionType.Popup\n        );\n    }\n\n    /**\n     * Opens a popup window with given request Url.\n     * @param requestUrl\n     */\n    initiateAuthRequest(requestUrl: string, params: PopupParams): Window {\n        // Check that request url is not empty.\n        if (requestUrl) {\n            this.logger.infoPii(`Navigate to: ${requestUrl}`);\n            // Open the popup window to requestUrl.\n            return this.openPopup(requestUrl, params);\n        } else {\n            // Throw error if request URL is empty.\n            this.logger.error(\"Navigate url is empty\");\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.emptyNavigateUri\n            );\n        }\n    }\n\n    /**\n     * Monitors a window until it loads a url with the same origin.\n     * @param popupWindow - window that is being monitored\n     * @param timeout - timeout for processing hash once popup is redirected back to application\n     */\n    monitorPopupForHash(popupWindow: Window): Promise<string> {\n        return new Promise((resolve, reject) => {\n            /*\n             * Polling for popups needs to be tick-based,\n             * since a non-trivial amount of time can be spent on interaction (which should not count against the timeout).\n             */\n            const maxTicks =\n                this.config.system.windowHashTimeout /\n                this.config.system.pollIntervalMilliseconds;\n            let ticks = 0;\n\n            this.logger.verbose(\n                \"PopupHandler.monitorPopupForHash - polling started\"\n            );\n\n            const intervalId = setInterval(() => {\n                // Window is closed\n                if (popupWindow.closed) {\n                    this.logger.error(\n                        \"PopupHandler.monitorPopupForHash - window closed\"\n                    );\n                    this.cleanPopup();\n                    clearInterval(intervalId);\n                    reject(\n                        createBrowserAuthError(\n                            BrowserAuthErrorCodes.userCancelled\n                        )\n                    );\n                    return;\n                }\n\n                let href = Constants.EMPTY_STRING;\n                let serverResponseString = Constants.EMPTY_STRING;\n                try {\n                    /*\n                     * Will throw if cross origin,\n                     * which should be caught and ignored\n                     * since we need the interval to keep running while on STS UI.\n                     */\n                    href = popupWindow.location.href;\n                    serverResponseString =\n                        this.extractServerResponseStringFromPopup(\n                            popupWindow,\n                            href\n                        );\n                } catch (e) {}\n\n                // Don't process blank pages or cross domain\n                if (!href || href === \"about:blank\") {\n                    return;\n                }\n\n                this.logger.verbose(\n                    \"PopupHandler.monitorPopupForHash - popup window is on same origin as caller\"\n                );\n\n                /*\n                 * Only run clock when we are on same domain for popups\n                 * as popup operations can take a long time.\n                 */\n                ticks++;\n\n                if (serverResponseString) {\n                    this.logger.verbose(\n                        \"PopupHandler.monitorPopupForHash - found hash in url\"\n                    );\n                    clearInterval(intervalId);\n                    this.cleanPopup(popupWindow);\n\n                    if (\n                        UrlString.hashContainsKnownProperties(\n                            serverResponseString\n                        )\n                    ) {\n                        this.logger.verbose(\n                            \"PopupHandler.monitorPopupForHash - hash contains known properties, returning.\"\n                        );\n                        resolve(serverResponseString);\n                    } else {\n                        this.logger.error(\n                            \"PopupHandler.monitorPopupForHash - found hash in url but it does not contain known properties. Check that your router is not changing the hash prematurely.\"\n                        );\n                        this.logger.errorPii(\n                            `PopupHandler.monitorPopupForHash - hash found: ${serverResponseString}`\n                        );\n                        reject(\n                            createBrowserAuthError(\n                                BrowserAuthErrorCodes.hashDoesNotContainKnownProperties\n                            )\n                        );\n                    }\n                } else if (ticks > maxTicks) {\n                    this.logger.error(\n                        \"PopupHandler.monitorPopupForHash - unable to find hash in url, timing out\"\n                    );\n                    clearInterval(intervalId);\n                    reject(\n                        createBrowserAuthError(\n                            BrowserAuthErrorCodes.monitorPopupTimeout\n                        )\n                    );\n                }\n            }, this.config.system.pollIntervalMilliseconds);\n        });\n    }\n\n    /**\n     * Waits for user interaction in logout popup window\n     * @param popupWindow\n     * @returns\n     */\n    waitForLogoutPopup(popupWindow: Window): Promise<void> {\n        return new Promise((resolve) => {\n            this.logger.verbose(\n                \"PopupHandler.waitForLogoutPopup - polling started\"\n            );\n\n            const intervalId = setInterval(() => {\n                // Window is closed\n                if (popupWindow.closed) {\n                    this.logger.error(\n                        \"PopupHandler.waitForLogoutPopup - window closed\"\n                    );\n                    this.cleanPopup();\n                    clearInterval(intervalId);\n                    resolve();\n                }\n\n                let href: string = Constants.EMPTY_STRING;\n                try {\n                    /*\n                     * Will throw if cross origin,\n                     * which should be caught and ignored\n                     * since we need the interval to keep running while on STS UI.\n                     */\n                    href = popupWindow.location.href;\n                } catch (e) {}\n\n                // Don't process blank pages or cross domain\n                if (!href || href === \"about:blank\") {\n                    return;\n                }\n\n                this.logger.verbose(\n                    \"PopupHandler.waitForLogoutPopup - popup window is on same origin as caller, closing.\"\n                );\n\n                clearInterval(intervalId);\n                this.cleanPopup(popupWindow);\n                resolve();\n            }, this.config.system.pollIntervalMilliseconds);\n        });\n    }\n\n    /**\n     * @hidden\n     *\n     * Configures popup window for login.\n     *\n     * @param urlNavigate\n     * @param title\n     * @param popUpWidth\n     * @param popUpHeight\n     * @param popupWindowAttributes\n     * @ignore\n     * @hidden\n     */\n    openPopup(urlNavigate: string, popupParams: PopupParams): Window {\n        try {\n            let popupWindow;\n            // Popup window passed in, setting url to navigate to\n            if (popupParams.popup) {\n                popupWindow = popupParams.popup;\n                this.logger.verbosePii(\n                    `Navigating popup window to: ${urlNavigate}`\n                );\n                popupWindow.location.assign(urlNavigate);\n            } else if (typeof popupParams.popup === \"undefined\") {\n                // Popup will be undefined if it was not passed in\n                this.logger.verbosePii(\n                    `Opening popup window to: ${urlNavigate}`\n                );\n                popupWindow = this.openSizedPopup(\n                    urlNavigate,\n                    popupParams.popupName,\n                    popupParams.popupWindowAttributes\n                );\n            }\n\n            // Popup will be null if popups are blocked\n            if (!popupWindow) {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.emptyWindowError\n                );\n            }\n            if (popupWindow.focus) {\n                popupWindow.focus();\n            }\n            this.currentWindow = popupWindow;\n            window.addEventListener(\"beforeunload\", this.unloadWindow);\n\n            return popupWindow;\n        } catch (e) {\n            this.logger.error(\n                \"error opening popup \" + (e as AuthError).message\n            );\n            this.browserStorage.setInteractionInProgress(false);\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.popupWindowError\n            );\n        }\n    }\n\n    /**\n     * Helper function to set popup window dimensions and position\n     * @param urlNavigate\n     * @param popupName\n     * @param popupWindowAttributes\n     * @returns\n     */\n    openSizedPopup(\n        urlNavigate: string,\n        popupName: string,\n        popupWindowAttributes: PopupWindowAttributes\n    ): Window | null {\n        /**\n         * adding winLeft and winTop to account for dual monitor\n         * using screenLeft and screenTop for IE8 and earlier\n         */\n        const winLeft = window.screenLeft ? window.screenLeft : window.screenX;\n        const winTop = window.screenTop ? window.screenTop : window.screenY;\n        /**\n         * window.innerWidth displays browser window\"s height and width excluding toolbars\n         * using document.documentElement.clientWidth for IE8 and earlier\n         */\n        const winWidth =\n            window.innerWidth ||\n            document.documentElement.clientWidth ||\n            document.body.clientWidth;\n        const winHeight =\n            window.innerHeight ||\n            document.documentElement.clientHeight ||\n            document.body.clientHeight;\n\n        let width = popupWindowAttributes.popupSize?.width;\n        let height = popupWindowAttributes.popupSize?.height;\n        let top = popupWindowAttributes.popupPosition?.top;\n        let left = popupWindowAttributes.popupPosition?.left;\n\n        if (!width || width < 0 || width > winWidth) {\n            this.logger.verbose(\n                \"Default popup window width used. Window width not configured or invalid.\"\n            );\n            width = BrowserConstants.POPUP_WIDTH;\n        }\n\n        if (!height || height < 0 || height > winHeight) {\n            this.logger.verbose(\n                \"Default popup window height used. Window height not configured or invalid.\"\n            );\n            height = BrowserConstants.POPUP_HEIGHT;\n        }\n\n        if (!top || top < 0 || top > winHeight) {\n            this.logger.verbose(\n                \"Default popup window top position used. Window top not configured or invalid.\"\n            );\n            top = Math.max(\n                0,\n                winHeight / 2 - BrowserConstants.POPUP_HEIGHT / 2 + winTop\n            );\n        }\n\n        if (!left || left < 0 || left > winWidth) {\n            this.logger.verbose(\n                \"Default popup window left position used. Window left not configured or invalid.\"\n            );\n            left = Math.max(\n                0,\n                winWidth / 2 - BrowserConstants.POPUP_WIDTH / 2 + winLeft\n            );\n        }\n\n        return window.open(\n            urlNavigate,\n            popupName,\n            `width=${width}, height=${height}, top=${top}, left=${left}, scrollbars=yes`\n        );\n    }\n\n    /**\n     * Event callback to unload main window.\n     */\n    unloadWindow(e: Event): void {\n        this.browserStorage.cleanRequestByInteractionType(\n            InteractionType.Popup\n        );\n        if (this.currentWindow) {\n            this.currentWindow.close();\n        }\n        // Guarantees browser unload will happen, so no other errors will be thrown.\n        e.preventDefault();\n    }\n\n    /**\n     * Closes popup, removes any state vars created during popup calls.\n     * @param popupWindow\n     */\n    cleanPopup(popupWindow?: Window): void {\n        if (popupWindow) {\n            // Close window.\n            popupWindow.close();\n        }\n        // Remove window unload function\n        window.removeEventListener(\"beforeunload\", this.unloadWindow);\n\n        // Interaction is completed - remove interaction status.\n        this.browserStorage.setInteractionInProgress(false);\n    }\n\n    /**\n     * Generates the name for the popup based on the client id and request\n     * @param clientId\n     * @param request\n     */\n    generatePopupName(scopes: Array<string>, authority: string): string {\n        return `${BrowserConstants.POPUP_NAME_PREFIX}.${\n            this.config.auth.clientId\n        }.${scopes.join(\"-\")}.${authority}.${this.correlationId}`;\n    }\n\n    /**\n     * Generates the name for the popup based on the client id and request for logouts\n     * @param clientId\n     * @param request\n     */\n    generateLogoutPopupName(request: CommonEndSessionRequest): string {\n        const homeAccountId = request.account && request.account.homeAccountId;\n        return `${BrowserConstants.POPUP_NAME_PREFIX}.${this.config.auth.clientId}.${homeAccountId}.${this.correlationId}`;\n    }\n\n    /**\n     * Extracts the server response from the popup window\n     */\n    extractServerResponseStringFromPopup(\n        popupWindow: Window,\n        href: string\n    ): string {\n        let serverResponseString;\n        if (\n            this.config.auth.OIDCOptions?.serverResponseType ===\n            ServerResponseType.QUERY\n        ) {\n            serverResponseString = UrlString.parseQueryServerResponse(href);\n        } else {\n            serverResponseString = popupWindow.location.hash;\n        }\n        return serverResponseString;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AuthorizationCodeClient,\n    CommonAuthorizationCodeRequest,\n    ICrypto,\n    Authority,\n    INetworkModule,\n    Logger,\n    ServerError,\n    IPerformanceClient,\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"@azure/msal-common\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { ApiId, TemporaryCacheKeys } from \"../utils/BrowserConstants\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { InteractionHandler, InteractionParams } from \"./InteractionHandler\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { NavigationOptions } from \"../navigation/NavigationOptions\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\n\nexport type RedirectParams = InteractionParams & {\n    navigationClient: INavigationClient;\n    redirectTimeout: number;\n    redirectStartPage: string;\n    onRedirectNavigate?: (url: string) => void | boolean;\n};\n\nexport class RedirectHandler extends InteractionHandler {\n    private browserCrypto: ICrypto;\n\n    constructor(\n        authCodeModule: AuthorizationCodeClient,\n        storageImpl: BrowserCacheManager,\n        authCodeRequest: CommonAuthorizationCodeRequest,\n        logger: Logger,\n        browserCrypto: ICrypto,\n        performanceClient: IPerformanceClient\n    ) {\n        super(\n            authCodeModule,\n            storageImpl,\n            authCodeRequest,\n            logger,\n            performanceClient\n        );\n        this.browserCrypto = browserCrypto;\n    }\n\n    /**\n     * Redirects window to given URL.\n     * @param urlNavigate\n     */\n    async initiateAuthRequest(\n        requestUrl: string,\n        params: RedirectParams\n    ): Promise<void> {\n        this.logger.verbose(\"RedirectHandler.initiateAuthRequest called\");\n        // Navigate if valid URL\n        if (requestUrl) {\n            // Cache start page, returns to this page after redirectUri if navigateToLoginRequestUrl is true\n            if (params.redirectStartPage) {\n                this.logger.verbose(\n                    \"RedirectHandler.initiateAuthRequest: redirectStartPage set, caching start page\"\n                );\n                this.browserStorage.setTemporaryCache(\n                    TemporaryCacheKeys.ORIGIN_URI,\n                    params.redirectStartPage,\n                    true\n                );\n            }\n\n            // Set interaction status in the library.\n            this.browserStorage.setTemporaryCache(\n                TemporaryCacheKeys.CORRELATION_ID,\n                this.authCodeRequest.correlationId,\n                true\n            );\n            this.browserStorage.cacheCodeRequest(this.authCodeRequest);\n            this.logger.infoPii(\n                `RedirectHandler.initiateAuthRequest: Navigate to: ${requestUrl}`\n            );\n            const navigationOptions: NavigationOptions = {\n                apiId: ApiId.acquireTokenRedirect,\n                timeout: params.redirectTimeout,\n                noHistory: false,\n            };\n\n            // If onRedirectNavigate is implemented, invoke it and provide requestUrl\n            if (typeof params.onRedirectNavigate === \"function\") {\n                this.logger.verbose(\n                    \"RedirectHandler.initiateAuthRequest: Invoking onRedirectNavigate callback\"\n                );\n                const navigate = params.onRedirectNavigate(requestUrl);\n\n                // Returning false from onRedirectNavigate will stop navigation\n                if (navigate !== false) {\n                    this.logger.verbose(\n                        \"RedirectHandler.initiateAuthRequest: onRedirectNavigate did not return false, navigating\"\n                    );\n                    await params.navigationClient.navigateExternal(\n                        requestUrl,\n                        navigationOptions\n                    );\n                    return;\n                } else {\n                    this.logger.verbose(\n                        \"RedirectHandler.initiateAuthRequest: onRedirectNavigate returned false, stopping navigation\"\n                    );\n                    return;\n                }\n            } else {\n                // Navigate window to request URL\n                this.logger.verbose(\n                    \"RedirectHandler.initiateAuthRequest: Navigating window to navigate url\"\n                );\n                await params.navigationClient.navigateExternal(\n                    requestUrl,\n                    navigationOptions\n                );\n                return;\n            }\n        } else {\n            // Throw error if request URL is empty.\n            this.logger.info(\n                \"RedirectHandler.initiateAuthRequest: Navigate url is empty\"\n            );\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.emptyNavigateUri\n            );\n        }\n    }\n\n    /**\n     * Handle authorization code response in the window.\n     * @param hash\n     */\n    async handleCodeResponseFromHash(\n        locationHash: string,\n        state: string,\n        authority: Authority,\n        networkModule: INetworkModule\n    ): Promise<AuthenticationResult> {\n        this.logger.verbose(\"RedirectHandler.handleCodeResponse called\");\n\n        // Check that location hash isn't empty.\n        if (!locationHash) {\n            throw createBrowserAuthError(BrowserAuthErrorCodes.hashEmptyError);\n        }\n\n        // Interaction is completed - remove interaction status.\n        this.browserStorage.setInteractionInProgress(false);\n\n        // Handle code response.\n        const stateKey = this.browserStorage.generateStateKey(state);\n        const requestState = this.browserStorage.getTemporaryCache(stateKey);\n        if (!requestState) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.stateNotFound,\n                \"Cached State\"\n            );\n        }\n\n        let authCodeResponse;\n        try {\n            authCodeResponse = this.authModule.handleFragmentResponse(\n                locationHash,\n                requestState\n            );\n        } catch (e) {\n            if (\n                e instanceof ServerError &&\n                e.subError === BrowserAuthErrorCodes.userCancelled\n            ) {\n                // Translate server error caused by user closing native prompt to corresponding first class MSAL error\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.userCancelled\n                );\n            } else {\n                throw e;\n            }\n        }\n\n        // Get cached items\n        const nonceKey = this.browserStorage.generateNonceKey(requestState);\n        const cachedNonce = this.browserStorage.getTemporaryCache(nonceKey);\n\n        // Assign code to request\n        this.authCodeRequest.code = authCodeResponse.code;\n\n        // Check for new cloud instance\n        if (authCodeResponse.cloud_instance_host_name) {\n            await this.updateTokenEndpointAuthority(\n                authCodeResponse.cloud_instance_host_name,\n                authority,\n                networkModule\n            );\n        }\n\n        authCodeResponse.nonce = cachedNonce || undefined;\n        authCodeResponse.state = requestState;\n\n        // Add CCS parameters if available\n        if (authCodeResponse.client_info) {\n            this.authCodeRequest.clientInfo = authCodeResponse.client_info;\n        } else {\n            const cachedCcsCred = this.checkCcsCredentials();\n            if (cachedCcsCred) {\n                this.authCodeRequest.ccsCredential = cachedCcsCred;\n            }\n        }\n\n        // Acquire token with retrieved code.\n        const tokenResponse = (await this.authModule.acquireToken(\n            this.authCodeRequest,\n            authCodeResponse\n        )) as AuthenticationResult;\n\n        this.browserStorage.cleanRequestByState(state);\n        return tokenResponse;\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    CommonAuthorizationCodeRequest,\n    AuthorizationCodeClient,\n    UrlString,\n    AuthError,\n    ServerTelemetryManager,\n    Constants,\n    ProtocolUtils,\n    ServerAuthorizationCodeResponse,\n    ThrottlingUtils,\n    ICrypto,\n    Logger,\n    IPerformanceClient,\n    PerformanceEvents,\n    ProtocolMode,\n} from \"@azure/msal-common\";\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport {\n    ApiId,\n    InteractionType,\n    TemporaryCacheKeys,\n} from \"../utils/BrowserConstants\";\nimport { RedirectHandler } from \"../interaction_handler/RedirectHandler\";\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport { EventType } from \"../event/EventType\";\nimport { NavigationOptions } from \"../navigation/NavigationOptions\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { NativeInteractionClient } from \"./NativeInteractionClient\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { EventError } from \"../event/EventMessage\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\n\nexport class RedirectClient extends StandardInteractionClient {\n    protected nativeStorage: BrowserCacheManager;\n\n    constructor(\n        config: BrowserConfiguration,\n        storageImpl: BrowserCacheManager,\n        browserCrypto: ICrypto,\n        logger: Logger,\n        eventHandler: EventHandler,\n        navigationClient: INavigationClient,\n        performanceClient: IPerformanceClient,\n        nativeStorageImpl: BrowserCacheManager,\n        nativeMessageHandler?: NativeMessageHandler,\n        correlationId?: string\n    ) {\n        super(\n            config,\n            storageImpl,\n            browserCrypto,\n            logger,\n            eventHandler,\n            navigationClient,\n            performanceClient,\n            nativeMessageHandler,\n            correlationId\n        );\n        this.nativeStorage = nativeStorageImpl;\n    }\n\n    /**\n     * Redirects the page to the /authorize endpoint of the IDP\n     * @param request\n     */\n    async acquireToken(request: RedirectRequest): Promise<void> {\n        this.performanceClient.setPreQueueTime(\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\n            request.correlationId\n        );\n        const validRequest = await this.initializeAuthorizationRequest(\n            request,\n            InteractionType.Redirect\n        );\n        this.browserStorage.updateCacheEntries(\n            validRequest.state,\n            validRequest.nonce,\n            validRequest.authority,\n            validRequest.loginHint || Constants.EMPTY_STRING,\n            validRequest.account || null\n        );\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.acquireTokenRedirect\n        );\n\n        const handleBackButton = (event: PageTransitionEvent) => {\n            // Clear temporary cache if the back button is clicked during the redirect flow.\n            if (event.persisted) {\n                this.logger.verbose(\n                    \"Page was restored from back/forward cache. Clearing temporary cache.\"\n                );\n                this.browserStorage.cleanRequestByState(validRequest.state);\n                this.eventHandler.emitEvent(\n                    EventType.RESTORE_FROM_BFCACHE,\n                    InteractionType.Redirect\n                );\n            }\n        };\n\n        try {\n            // Create auth code request and generate PKCE params\n            this.performanceClient.setPreQueueTime(\n                PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest,\n                request.correlationId\n            );\n            const authCodeRequest: CommonAuthorizationCodeRequest =\n                await this.initializeAuthorizationCodeRequest(validRequest);\n\n            // Initialize the client\n            this.performanceClient.setPreQueueTime(\n                PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n                request.correlationId\n            );\n            const authClient: AuthorizationCodeClient =\n                await this.createAuthCodeClient(\n                    serverTelemetryManager,\n                    validRequest.authority,\n                    validRequest.azureCloudOptions\n                );\n            this.logger.verbose(\"Auth code client created\");\n\n            // Create redirect interaction handler.\n            const interactionHandler = new RedirectHandler(\n                authClient,\n                this.browserStorage,\n                authCodeRequest,\n                this.logger,\n                this.browserCrypto,\n                this.performanceClient\n            );\n\n            // Create acquire token url.\n            const navigateUrl = await authClient.getAuthCodeUrl({\n                ...validRequest,\n                nativeBroker: NativeMessageHandler.isNativeAvailable(\n                    this.config,\n                    this.logger,\n                    this.nativeMessageHandler,\n                    request.authenticationScheme\n                ),\n            });\n\n            const redirectStartPage = this.getRedirectStartPage(\n                request.redirectStartPage\n            );\n            this.logger.verbosePii(`Redirect start page: ${redirectStartPage}`);\n\n            // Clear temporary cache if the back button is clicked during the redirect flow.\n            window.addEventListener(\"pageshow\", handleBackButton);\n\n            // Show the UI once the url has been created. Response will come back in the hash, which will be handled in the handleRedirectCallback function.\n            return await interactionHandler.initiateAuthRequest(navigateUrl, {\n                navigationClient: this.navigationClient,\n                redirectTimeout: this.config.system.redirectNavigationTimeout,\n                redirectStartPage: redirectStartPage,\n                onRedirectNavigate: request.onRedirectNavigate,\n            });\n        } catch (e) {\n            if (e instanceof AuthError) {\n                e.setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            window.removeEventListener(\"pageshow\", handleBackButton);\n            this.browserStorage.cleanRequestByState(validRequest.state);\n            throw e;\n        }\n    }\n\n    /**\n     * Checks if navigateToLoginRequestUrl is set, and:\n     * - if true, performs logic to cache and navigate\n     * - if false, handles hash string and parses response\n     * @param hash\n     */\n    async handleRedirectPromise(\n        hash?: string\n    ): Promise<AuthenticationResult | null> {\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.handleRedirectPromise\n        );\n        try {\n            if (!this.browserStorage.isInteractionInProgress(true)) {\n                this.logger.info(\n                    \"handleRedirectPromise called but there is no interaction in progress, returning null.\"\n                );\n                return null;\n            }\n            const responseHash = this.getRedirectResponseHash(\n                hash || window.location.hash\n            );\n            if (!responseHash) {\n                // Not a recognized server response hash or hash not associated with a redirect request\n                this.logger.info(\n                    \"handleRedirectPromise did not detect a response hash as a result of a redirect. Cleaning temporary cache.\"\n                );\n                this.browserStorage.cleanRequestByInteractionType(\n                    InteractionType.Redirect\n                );\n                return null;\n            }\n\n            let state: string;\n            try {\n                // Deserialize hash fragment response parameters.\n                const serverParams: ServerAuthorizationCodeResponse =\n                    UrlString.getDeserializedHash(responseHash);\n                state = this.validateAndExtractStateFromHash(\n                    serverParams,\n                    InteractionType.Redirect\n                );\n                this.logger.verbose(\"State extracted from hash\");\n            } catch (e) {\n                this.logger.info(\n                    `handleRedirectPromise was unable to extract state due to: ${e}`\n                );\n                this.browserStorage.cleanRequestByInteractionType(\n                    InteractionType.Redirect\n                );\n                return null;\n            }\n\n            // If navigateToLoginRequestUrl is true, get the url where the redirect request was initiated\n            const loginRequestUrl =\n                this.browserStorage.getTemporaryCache(\n                    TemporaryCacheKeys.ORIGIN_URI,\n                    true\n                ) || Constants.EMPTY_STRING;\n            const loginRequestUrlNormalized =\n                UrlString.removeHashFromUrl(loginRequestUrl);\n            const currentUrlNormalized = UrlString.removeHashFromUrl(\n                window.location.href\n            );\n\n            if (\n                loginRequestUrlNormalized === currentUrlNormalized &&\n                this.config.auth.navigateToLoginRequestUrl\n            ) {\n                // We are on the page we need to navigate to - handle hash\n                this.logger.verbose(\n                    \"Current page is loginRequestUrl, handling hash\"\n                );\n                const handleHashResult = await this.handleHash(\n                    responseHash,\n                    state,\n                    serverTelemetryManager\n                );\n\n                if (loginRequestUrl.indexOf(\"#\") > -1) {\n                    // Replace current hash with non-msal hash, if present\n                    BrowserUtils.replaceHash(loginRequestUrl);\n                }\n\n                return handleHashResult;\n            } else if (!this.config.auth.navigateToLoginRequestUrl) {\n                this.logger.verbose(\n                    \"NavigateToLoginRequestUrl set to false, handling hash\"\n                );\n                return this.handleHash(\n                    responseHash,\n                    state,\n                    serverTelemetryManager\n                );\n            } else if (\n                !BrowserUtils.isInIframe() ||\n                this.config.system.allowRedirectInIframe\n            ) {\n                /*\n                 * Returned from authority using redirect - need to perform navigation before processing response\n                 * Cache the hash to be retrieved after the next redirect\n                 */\n                this.browserStorage.setTemporaryCache(\n                    TemporaryCacheKeys.URL_HASH,\n                    responseHash,\n                    true\n                );\n                const navigationOptions: NavigationOptions = {\n                    apiId: ApiId.handleRedirectPromise,\n                    timeout: this.config.system.redirectNavigationTimeout,\n                    noHistory: true,\n                };\n\n                /**\n                 * Default behavior is to redirect to the start page and not process the hash now.\n                 * The start page is expected to also call handleRedirectPromise which will process the hash in one of the checks above.\n                 */\n                let processHashOnRedirect: boolean = true;\n                if (!loginRequestUrl || loginRequestUrl === \"null\") {\n                    // Redirect to home page if login request url is null (real null or the string null)\n                    const homepage = BrowserUtils.getHomepage();\n                    // Cache the homepage under ORIGIN_URI to ensure cached hash is processed on homepage\n                    this.browserStorage.setTemporaryCache(\n                        TemporaryCacheKeys.ORIGIN_URI,\n                        homepage,\n                        true\n                    );\n                    this.logger.warning(\n                        \"Unable to get valid login request url from cache, redirecting to home page\"\n                    );\n                    processHashOnRedirect =\n                        await this.navigationClient.navigateInternal(\n                            homepage,\n                            navigationOptions\n                        );\n                } else {\n                    // Navigate to page that initiated the redirect request\n                    this.logger.verbose(\n                        `Navigating to loginRequestUrl: ${loginRequestUrl}`\n                    );\n                    processHashOnRedirect =\n                        await this.navigationClient.navigateInternal(\n                            loginRequestUrl,\n                            navigationOptions\n                        );\n                }\n\n                // If navigateInternal implementation returns false, handle the hash now\n                if (!processHashOnRedirect) {\n                    return this.handleHash(\n                        responseHash,\n                        state,\n                        serverTelemetryManager\n                    );\n                }\n            }\n\n            return null;\n        } catch (e) {\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.browserStorage.cleanRequestByInteractionType(\n                InteractionType.Redirect\n            );\n            throw e;\n        }\n    }\n\n    /**\n     * Gets the response hash for a redirect request\n     * Returns null if interactionType in the state value is not \"redirect\" or the hash does not contain known properties\n     * @param hash\n     */\n    protected getRedirectResponseHash(hash: string): string | null {\n        this.logger.verbose(\"getRedirectResponseHash called\");\n        // Get current location hash from window or cache.\n        const isResponseHash: boolean =\n            UrlString.hashContainsKnownProperties(hash);\n\n        if (isResponseHash) {\n            BrowserUtils.clearHash(window);\n            this.logger.verbose(\n                \"Hash contains known properties, returning response hash\"\n            );\n            return hash;\n        }\n\n        const cachedHash = this.browserStorage.getTemporaryCache(\n            TemporaryCacheKeys.URL_HASH,\n            true\n        );\n        this.browserStorage.removeItem(\n            this.browserStorage.generateCacheKey(TemporaryCacheKeys.URL_HASH)\n        );\n\n        this.logger.verbose(\n            \"Hash does not contain known properties, returning cached hash\"\n        );\n        return cachedHash;\n    }\n\n    /**\n     * Checks if hash exists and handles in window.\n     * @param hash\n     * @param state\n     */\n    protected async handleHash(\n        hash: string,\n        state: string,\n        serverTelemetryManager: ServerTelemetryManager\n    ): Promise<AuthenticationResult> {\n        const cachedRequest = this.browserStorage.getCachedRequest(state);\n        this.logger.verbose(\"handleHash called, retrieved cached request\");\n\n        const serverParams: ServerAuthorizationCodeResponse =\n            UrlString.getDeserializedHash(hash);\n\n        if (serverParams.accountId) {\n            this.logger.verbose(\n                \"Account id found in hash, calling WAM for token\"\n            );\n            if (!this.nativeMessageHandler) {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.nativeConnectionNotEstablished\n                );\n            }\n            const nativeInteractionClient = new NativeInteractionClient(\n                this.config,\n                this.browserStorage,\n                this.browserCrypto,\n                this.logger,\n                this.eventHandler,\n                this.navigationClient,\n                ApiId.acquireTokenPopup,\n                this.performanceClient,\n                this.nativeMessageHandler,\n                serverParams.accountId,\n                this.nativeStorage,\n                cachedRequest.correlationId\n            );\n            const { userRequestState } = ProtocolUtils.parseRequestState(\n                this.browserCrypto,\n                state\n            );\n            return nativeInteractionClient\n                .acquireToken({\n                    ...cachedRequest,\n                    state: userRequestState,\n                    prompt: undefined, // Server should handle the prompt, ideally native broker can do this part silently\n                })\n                .finally(() => {\n                    this.browserStorage.cleanRequestByState(state);\n                });\n        }\n\n        // Hash contains known properties - handle and return in callback\n        const currentAuthority = this.browserStorage.getCachedAuthority(state);\n        if (!currentAuthority) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.noCachedAuthorityError\n            );\n        }\n        this.performanceClient.setPreQueueTime(\n            PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n            cachedRequest.correlationId\n        );\n        const authClient = await this.createAuthCodeClient(\n            serverTelemetryManager,\n            currentAuthority\n        );\n        this.logger.verbose(\"Auth code client created\");\n        ThrottlingUtils.removeThrottle(\n            this.browserStorage,\n            this.config.auth.clientId,\n            cachedRequest\n        );\n        const interactionHandler = new RedirectHandler(\n            authClient,\n            this.browserStorage,\n            cachedRequest,\n            this.logger,\n            this.browserCrypto,\n            this.performanceClient\n        );\n        return await interactionHandler.handleCodeResponseFromHash(\n            hash,\n            state,\n            authClient.authority,\n            this.networkClient\n        );\n    }\n\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    async logout(logoutRequest?: EndSessionRequest): Promise<void> {\n        this.logger.verbose(\"logoutRedirect called\");\n        const validLogoutRequest = this.initializeLogoutRequest(logoutRequest);\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.logout\n        );\n\n        try {\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_START,\n                InteractionType.Redirect,\n                logoutRequest\n            );\n\n            // Clear cache on logout\n            await this.clearCacheOnLogout(validLogoutRequest.account);\n\n            const navigationOptions: NavigationOptions = {\n                apiId: ApiId.logout,\n                timeout: this.config.system.redirectNavigationTimeout,\n                noHistory: false,\n            };\n            this.performanceClient.setPreQueueTime(\n                PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n                validLogoutRequest.correlationId\n            );\n            const authClient = await this.createAuthCodeClient(\n                serverTelemetryManager,\n                logoutRequest && logoutRequest.authority\n            );\n            this.logger.verbose(\"Auth code client created\");\n\n            if (authClient.authority.protocolMode === ProtocolMode.OIDC) {\n                try {\n                    authClient.authority.endSessionEndpoint;\n                } catch {\n                    if (validLogoutRequest.account?.homeAccountId) {\n                        void this.browserStorage.removeAccount(\n                            validLogoutRequest.account?.homeAccountId\n                        );\n\n                        this.eventHandler.emitEvent(\n                            EventType.LOGOUT_SUCCESS,\n                            InteractionType.Redirect,\n                            validLogoutRequest\n                        );\n\n                        return;\n                    }\n                }\n            }\n\n            // Create logout string and navigate user window to logout.\n            const logoutUri: string =\n                authClient.getLogoutUri(validLogoutRequest);\n\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_SUCCESS,\n                InteractionType.Redirect,\n                validLogoutRequest\n            );\n            // Check if onRedirectNavigate is implemented, and invoke it if so\n            if (\n                logoutRequest &&\n                typeof logoutRequest.onRedirectNavigate === \"function\"\n            ) {\n                const navigate = logoutRequest.onRedirectNavigate(logoutUri);\n\n                if (navigate !== false) {\n                    this.logger.verbose(\n                        \"Logout onRedirectNavigate did not return false, navigating\"\n                    );\n                    // Ensure interaction is in progress\n                    if (!this.browserStorage.getInteractionInProgress()) {\n                        this.browserStorage.setInteractionInProgress(true);\n                    }\n                    await this.navigationClient.navigateExternal(\n                        logoutUri,\n                        navigationOptions\n                    );\n                    return;\n                } else {\n                    // Ensure interaction is not in progress\n                    this.browserStorage.setInteractionInProgress(false);\n                    this.logger.verbose(\n                        \"Logout onRedirectNavigate returned false, stopping navigation\"\n                    );\n                }\n            } else {\n                // Ensure interaction is in progress\n                if (!this.browserStorage.getInteractionInProgress()) {\n                    this.browserStorage.setInteractionInProgress(true);\n                }\n                await this.navigationClient.navigateExternal(\n                    logoutUri,\n                    navigationOptions\n                );\n                return;\n            }\n        } catch (e) {\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_FAILURE,\n                InteractionType.Redirect,\n                null,\n                e as EventError\n            );\n            this.eventHandler.emitEvent(\n                EventType.LOGOUT_END,\n                InteractionType.Redirect\n            );\n            throw e;\n        }\n\n        this.eventHandler.emitEvent(\n            EventType.LOGOUT_END,\n            InteractionType.Redirect\n        );\n    }\n\n    /**\n     * Use to get the redirectStartPage either from request or use current window\n     * @param requestStartPage\n     */\n    protected getRedirectStartPage(requestStartPage?: string): string {\n        const redirectStartPage = requestStartPage || window.location.href;\n        return UrlString.getAbsoluteUrl(\n            redirectStartPage,\n            BrowserUtils.getCurrentUri()\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    UrlString,\n    CommonAuthorizationCodeRequest,\n    AuthorizationCodeClient,\n    Constants,\n    Logger,\n    IPerformanceClient,\n    PerformanceEvents,\n    invokeAsync,\n} from \"@azure/msal-common\";\nimport { InteractionHandler } from \"./InteractionHandler\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport {\n    BrowserSystemOptions,\n    DEFAULT_IFRAME_TIMEOUT_MS,\n} from \"../config/Configuration\";\n\nexport class SilentHandler extends InteractionHandler {\n    private navigateFrameWait: number;\n    private pollIntervalMilliseconds: number;\n\n    constructor(\n        authCodeModule: AuthorizationCodeClient,\n        storageImpl: BrowserCacheManager,\n        authCodeRequest: CommonAuthorizationCodeRequest,\n        logger: Logger,\n        systemOptions: Required<\n            Pick<\n                BrowserSystemOptions,\n                \"navigateFrameWait\" | \"pollIntervalMilliseconds\"\n            >\n        >,\n        performanceClient: IPerformanceClient\n    ) {\n        super(\n            authCodeModule,\n            storageImpl,\n            authCodeRequest,\n            logger,\n            performanceClient\n        );\n        this.navigateFrameWait = systemOptions.navigateFrameWait;\n        this.pollIntervalMilliseconds = systemOptions.pollIntervalMilliseconds;\n    }\n\n    /**\n     * Creates a hidden iframe to given URL using user-requested scopes as an id.\n     * @param urlNavigate\n     * @param userRequestScopes\n     */\n    async initiateAuthRequest(requestUrl: string): Promise<HTMLIFrameElement> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.SilentHandlerInitiateAuthRequest,\n            this.authCodeRequest.correlationId\n        );\n\n        if (!requestUrl) {\n            // Throw error if request URL is empty.\n            this.logger.info(\"Navigate url is empty\");\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.emptyNavigateUri\n            );\n        }\n\n        if (this.navigateFrameWait) {\n            return await invokeAsync(\n                this.loadFrame.bind(this),\n                PerformanceEvents.SilentHandlerLoadFrame,\n                this.logger,\n                this.performanceClient,\n                this.authCodeRequest.correlationId\n            )(requestUrl);\n        }\n        return this.loadFrameSync(requestUrl);\n    }\n\n    /**\n     * Monitors an iframe content window until it loads a url with a known hash, or hits a specified timeout.\n     * @param iframe\n     * @param timeout\n     */\n    monitorIframeForHash(\n        iframe: HTMLIFrameElement,\n        timeout: number\n    ): Promise<string> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.SilentHandlerMonitorIframeForHash,\n            this.authCodeRequest.correlationId\n        );\n\n        return new Promise((resolve, reject) => {\n            if (timeout < DEFAULT_IFRAME_TIMEOUT_MS) {\n                this.logger.warning(\n                    `system.loadFrameTimeout or system.iframeHashTimeout set to lower (${timeout}ms) than the default (${DEFAULT_IFRAME_TIMEOUT_MS}ms). This may result in timeouts.`\n                );\n            }\n\n            /*\n             * Polling for iframes can be purely timing based,\n             * since we don't need to account for interaction.\n             */\n            const nowMark = window.performance.now();\n            const timeoutMark = nowMark + timeout;\n\n            const intervalId = setInterval(() => {\n                if (window.performance.now() > timeoutMark) {\n                    this.removeHiddenIframe(iframe);\n                    clearInterval(intervalId);\n                    reject(\n                        createBrowserAuthError(\n                            BrowserAuthErrorCodes.monitorWindowTimeout\n                        )\n                    );\n                    return;\n                }\n\n                let href: string = Constants.EMPTY_STRING;\n                const contentWindow = iframe.contentWindow;\n                try {\n                    /*\n                     * Will throw if cross origin,\n                     * which should be caught and ignored\n                     * since we need the interval to keep running while on STS UI.\n                     */\n                    href = contentWindow\n                        ? contentWindow.location.href\n                        : Constants.EMPTY_STRING;\n                } catch (e) {}\n\n                if (!href || href === \"about:blank\") {\n                    return;\n                }\n\n                const contentHash = contentWindow\n                    ? contentWindow.location.hash\n                    : Constants.EMPTY_STRING;\n                if (contentHash) {\n                    if (UrlString.hashContainsKnownProperties(contentHash)) {\n                        // Success case\n                        this.removeHiddenIframe(iframe);\n                        clearInterval(intervalId);\n                        resolve(contentHash);\n                        return;\n                    } else {\n                        // Hash is present but incorrect\n                        this.logger.error(\n                            \"SilentHandler:monitorIFrameForHash - a hash is present in the iframe but it does not contain known properties. It's likely that the hash has been replaced by code running on the redirectUri page.\"\n                        );\n                        this.logger.errorPii(\n                            `SilentHandler:monitorIFrameForHash - the url detected in the iframe is: ${href}`\n                        );\n                        this.removeHiddenIframe(iframe);\n                        clearInterval(intervalId);\n                        reject(\n                            createBrowserAuthError(\n                                BrowserAuthErrorCodes.hashDoesNotContainKnownProperties\n                            )\n                        );\n                        return;\n                    }\n                } else {\n                    // No hash is present\n                    this.logger.error(\n                        \"SilentHandler:monitorIFrameForHash - the request has returned to the redirectUri but a hash is not present in the iframe. It's likely that the hash has been removed or the page has been redirected by code running on the redirectUri page.\"\n                    );\n                    this.logger.errorPii(\n                        `SilentHandler:monitorIFrameForHash - the url detected in the iframe is: ${href}`\n                    );\n                    this.removeHiddenIframe(iframe);\n                    clearInterval(intervalId);\n                    reject(\n                        createBrowserAuthError(\n                            BrowserAuthErrorCodes.hashEmptyError\n                        )\n                    );\n                    return;\n                }\n            }, this.pollIntervalMilliseconds);\n        });\n    }\n\n    /**\n     * @hidden\n     * Loads iframe with authorization endpoint URL\n     * @ignore\n     */\n    private loadFrame(urlNavigate: string): Promise<HTMLIFrameElement> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.SilentHandlerLoadFrame,\n            this.authCodeRequest.correlationId\n        );\n\n        /*\n         * This trick overcomes iframe navigation in IE\n         * IE does not load the page consistently in iframe\n         */\n\n        return new Promise((resolve, reject) => {\n            const frameHandle = this.createHiddenIframe();\n\n            setTimeout(() => {\n                if (!frameHandle) {\n                    reject(\"Unable to load iframe\");\n                    return;\n                }\n\n                frameHandle.src = urlNavigate;\n\n                resolve(frameHandle);\n            }, this.navigateFrameWait);\n        });\n    }\n\n    /**\n     * @hidden\n     * Loads the iframe synchronously when the navigateTimeFrame is set to `0`\n     * @param urlNavigate\n     * @param frameName\n     * @param logger\n     */\n    private loadFrameSync(urlNavigate: string): HTMLIFrameElement {\n        const frameHandle = this.createHiddenIframe();\n\n        frameHandle.src = urlNavigate;\n\n        return frameHandle;\n    }\n\n    /**\n     * @hidden\n     * Creates a new hidden iframe or gets an existing one for silent token renewal.\n     * @ignore\n     */\n    private createHiddenIframe(): HTMLIFrameElement {\n        const authFrame = document.createElement(\"iframe\");\n\n        authFrame.style.visibility = \"hidden\";\n        authFrame.style.position = \"absolute\";\n        authFrame.style.width = authFrame.style.height = \"0\";\n        authFrame.style.border = \"0\";\n        authFrame.setAttribute(\n            \"sandbox\",\n            \"allow-scripts allow-same-origin allow-forms\"\n        );\n        document.getElementsByTagName(\"body\")[0].appendChild(authFrame);\n\n        return authFrame;\n    }\n\n    /**\n     * @hidden\n     * Removes a hidden iframe from the page.\n     * @ignore\n     */\n    private removeHiddenIframe(iframe: HTMLIFrameElement): void {\n        if (document.body === iframe.parentNode) {\n            document.body.removeChild(iframe);\n        }\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ICrypto,\n    Logger,\n    PromptValue,\n    CommonAuthorizationCodeRequest,\n    AuthorizationCodeClient,\n    AuthError,\n    Constants,\n    UrlString,\n    ServerAuthorizationCodeResponse,\n    ProtocolUtils,\n    IPerformanceClient,\n    PerformanceEvents,\n    invokeAsync,\n} from \"@azure/msal-common\";\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { InteractionType, ApiId } from \"../utils/BrowserConstants\";\nimport { SilentHandler } from \"../interaction_handler/SilentHandler\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport { NativeInteractionClient } from \"./NativeInteractionClient\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\n\nexport class SilentIframeClient extends StandardInteractionClient {\n    protected apiId: ApiId;\n    protected nativeStorage: BrowserCacheManager;\n\n    constructor(\n        config: BrowserConfiguration,\n        storageImpl: BrowserCacheManager,\n        browserCrypto: ICrypto,\n        logger: Logger,\n        eventHandler: EventHandler,\n        navigationClient: INavigationClient,\n        apiId: ApiId,\n        performanceClient: IPerformanceClient,\n        nativeStorageImpl: BrowserCacheManager,\n        nativeMessageHandler?: NativeMessageHandler,\n        correlationId?: string\n    ) {\n        super(\n            config,\n            storageImpl,\n            browserCrypto,\n            logger,\n            eventHandler,\n            navigationClient,\n            performanceClient,\n            nativeMessageHandler,\n            correlationId\n        );\n        this.apiId = apiId;\n        this.nativeStorage = nativeStorageImpl;\n    }\n\n    /**\n     * Acquires a token silently by opening a hidden iframe to the /authorize endpoint with prompt=none or prompt=no_session\n     * @param request\n     */\n    async acquireToken(\n        request: SsoSilentRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.SilentIframeClientAcquireToken,\n            request.correlationId\n        );\n        // Check that we have some SSO data\n        if (\n            !request.loginHint &&\n            !request.sid &&\n            (!request.account || !request.account.username)\n        ) {\n            this.logger.warning(\n                \"No user hint provided. The authorization server may need more information to complete this request.\"\n            );\n        }\n\n        // Check that prompt is set to none or no_session, throw error if it is set to anything else.\n        if (\n            request.prompt &&\n            request.prompt !== PromptValue.NONE &&\n            request.prompt !== PromptValue.NO_SESSION\n        ) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.silentPromptValueError\n            );\n        }\n\n        // Create silent request\n        const silentRequest: AuthorizationUrlRequest = await invokeAsync(\n            this.initializeAuthorizationRequest.bind(this),\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(\n            {\n                ...request,\n                prompt: request.prompt || PromptValue.NONE,\n            },\n            InteractionType.Silent\n        );\n        this.browserStorage.updateCacheEntries(\n            silentRequest.state,\n            silentRequest.nonce,\n            silentRequest.authority,\n            silentRequest.loginHint || Constants.EMPTY_STRING,\n            silentRequest.account || null\n        );\n\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            this.apiId\n        );\n\n        try {\n            // Initialize the client\n            const authClient: AuthorizationCodeClient = await invokeAsync(\n                this.createAuthCodeClient.bind(this),\n                PerformanceEvents.StandardInteractionClientCreateAuthCodeClient,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(\n                serverTelemetryManager,\n                silentRequest.authority,\n                silentRequest.azureCloudOptions\n            );\n\n            return await invokeAsync(\n                this.silentTokenHelper.bind(this),\n                PerformanceEvents.SilentIframeClientTokenHelper,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(authClient, silentRequest);\n        } catch (e) {\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.browserStorage.cleanRequestByState(silentRequest.state);\n            throw e;\n        }\n    }\n\n    /**\n     * Currently Unsupported\n     */\n    logout(): Promise<void> {\n        // Synchronous so we must reject\n        return Promise.reject(\n            createBrowserAuthError(\n                BrowserAuthErrorCodes.silentLogoutUnsupported\n            )\n        );\n    }\n\n    /**\n     * Helper which acquires an authorization code silently using a hidden iframe from given url\n     * using the scopes requested as part of the id, and exchanges the code for a set of OAuth tokens.\n     * @param navigateUrl\n     * @param userRequestScopes\n     */\n    protected async silentTokenHelper(\n        authClient: AuthorizationCodeClient,\n        silentRequest: AuthorizationUrlRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.SilentIframeClientTokenHelper,\n            silentRequest.correlationId\n        );\n\n        // Create auth code request and generate PKCE params\n        const authCodeRequest: CommonAuthorizationCodeRequest =\n            await invokeAsync(\n                this.initializeAuthorizationCodeRequest.bind(this),\n                PerformanceEvents.StandardInteractionClientInitializeAuthorizationCodeRequest,\n                this.logger,\n                this.performanceClient,\n                silentRequest.correlationId\n            )(silentRequest);\n\n        // Create authorize request url\n        const navigateUrl = await invokeAsync(\n            authClient.getAuthCodeUrl.bind(authClient),\n            PerformanceEvents.GetAuthCodeUrl,\n            this.logger,\n            this.performanceClient,\n            silentRequest.correlationId\n        )({\n            ...silentRequest,\n            nativeBroker: NativeMessageHandler.isNativeAvailable(\n                this.config,\n                this.logger,\n                this.nativeMessageHandler,\n                silentRequest.authenticationScheme\n            ),\n        });\n\n        // Create silent handler\n        const silentHandler = new SilentHandler(\n            authClient,\n            this.browserStorage,\n            authCodeRequest,\n            this.logger,\n            this.config.system,\n            this.performanceClient\n        );\n        // Get the frame handle for the silent request\n        const msalFrame = await invokeAsync(\n            silentHandler.initiateAuthRequest.bind(silentHandler),\n            PerformanceEvents.SilentHandlerInitiateAuthRequest,\n            this.logger,\n            this.performanceClient,\n            silentRequest.correlationId\n        )(navigateUrl);\n        // Monitor the window for the hash. Return the string value and close the popup when the hash is received. Default timeout is 60 seconds.\n        const hash = await invokeAsync(\n            silentHandler.monitorIframeForHash.bind(silentHandler),\n            PerformanceEvents.SilentHandlerMonitorIframeForHash,\n            this.logger,\n            this.performanceClient,\n            silentRequest.correlationId\n        )(msalFrame, this.config.system.iframeHashTimeout);\n        // Deserialize hash fragment response parameters.\n        const serverParams: ServerAuthorizationCodeResponse =\n            UrlString.getDeserializedHash(hash);\n        const state = this.validateAndExtractStateFromHash(\n            serverParams,\n            InteractionType.Silent,\n            authCodeRequest.correlationId\n        );\n\n        if (serverParams.accountId) {\n            this.logger.verbose(\n                \"Account id found in hash, calling WAM for token\"\n            );\n            if (!this.nativeMessageHandler) {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.nativeConnectionNotEstablished\n                );\n            }\n            const nativeInteractionClient = new NativeInteractionClient(\n                this.config,\n                this.browserStorage,\n                this.browserCrypto,\n                this.logger,\n                this.eventHandler,\n                this.navigationClient,\n                this.apiId,\n                this.performanceClient,\n                this.nativeMessageHandler,\n                serverParams.accountId,\n                this.browserStorage,\n                this.correlationId\n            );\n            const { userRequestState } = ProtocolUtils.parseRequestState(\n                this.browserCrypto,\n                state\n            );\n            return invokeAsync(\n                nativeInteractionClient.acquireToken.bind(\n                    nativeInteractionClient\n                ),\n                PerformanceEvents.NativeInteractionClientAcquireToken,\n                this.logger,\n                this.performanceClient,\n                silentRequest.correlationId\n            )({\n                ...silentRequest,\n                state: userRequestState,\n                prompt: silentRequest.prompt || PromptValue.NONE,\n            }).finally(() => {\n                this.browserStorage.cleanRequestByState(state);\n            });\n        }\n\n        // Handle response from hash string\n        return invokeAsync(\n            silentHandler.handleCodeResponseFromHash.bind(silentHandler),\n            PerformanceEvents.HandleCodeResponseFromHash,\n            this.logger,\n            this.performanceClient,\n            silentRequest.correlationId\n        )(hash, state, authClient.authority, this.networkClient);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport {\n    CommonSilentFlowRequest,\n    ServerTelemetryManager,\n    RefreshTokenClient,\n    AuthError,\n    AzureCloudOptions,\n    PerformanceEvents,\n    invokeAsync,\n} from \"@azure/msal-common\";\nimport { ApiId } from \"../utils/BrowserConstants\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\n\nexport class SilentRefreshClient extends StandardInteractionClient {\n    /**\n     * Exchanges the refresh token for new tokens\n     * @param request\n     */\n    async acquireToken(\n        request: CommonSilentFlowRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.SilentRefreshClientAcquireToken,\n            request.correlationId\n        );\n\n        const baseRequest = await invokeAsync(\n            this.initializeBaseRequest.bind(this),\n            PerformanceEvents.InitializeBaseRequest,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request, request.account);\n        const silentRequest: CommonSilentFlowRequest = {\n            ...request,\n            ...baseRequest,\n        };\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            ApiId.acquireTokenSilent_silentFlow\n        );\n\n        const refreshTokenClient = await this.createRefreshTokenClient(\n            serverTelemetryManager,\n            silentRequest.authority,\n            silentRequest.azureCloudOptions\n        );\n        this.logger.verbose(\"Refresh token client created\");\n        // Send request to renew token. Auth module will throw errors if token cannot be renewed.\n        return invokeAsync(\n            refreshTokenClient.acquireTokenByRefreshToken.bind(\n                refreshTokenClient\n            ),\n            PerformanceEvents.RefreshTokenClientAcquireTokenByRefreshToken,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(silentRequest)\n            .then((result) => result as AuthenticationResult)\n            .then((result: AuthenticationResult) => {\n                this.performanceClient.addFields(\n                    {\n                        fromCache: result.fromCache,\n                        requestId: result.requestId,\n                    },\n                    request.correlationId\n                );\n\n                return result;\n            })\n            .catch((e: AuthError) => {\n                (e as AuthError).setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n                throw e;\n            });\n    }\n\n    /**\n     * Currently Unsupported\n     */\n    logout(): Promise<void> {\n        // Synchronous so we must reject\n        return Promise.reject(\n            createBrowserAuthError(\n                BrowserAuthErrorCodes.silentLogoutUnsupported\n            )\n        );\n    }\n\n    /**\n     * Creates a Refresh Client with the given authority, or the default authority.\n     * @param serverTelemetryManager\n     * @param authorityUrl\n     */\n    protected async createRefreshTokenClient(\n        serverTelemetryManager: ServerTelemetryManager,\n        authorityUrl?: string,\n        azureCloudOptions?: AzureCloudOptions\n    ): Promise<RefreshTokenClient> {\n        // Create auth module.\n        const clientConfig = await invokeAsync(\n            this.getClientConfiguration.bind(this),\n            PerformanceEvents.StandardInteractionClientGetClientConfiguration,\n            this.logger,\n            this.performanceClient,\n            this.correlationId\n        )(serverTelemetryManager, authorityUrl, azureCloudOptions);\n        return new RefreshTokenClient(clientConfig, this.performanceClient);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AccessTokenEntity,\n    ICrypto,\n    IdTokenEntity,\n    Logger,\n    ScopeSet,\n    Authority,\n    AuthorityOptions,\n    ExternalTokenResponse,\n    AccountEntity,\n    AuthToken,\n    RefreshTokenEntity,\n    Constants,\n    CacheRecord,\n    TokenClaims,\n} from \"@azure/msal-common\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport { BrowserCacheManager } from \"./BrowserCacheManager\";\nimport { ITokenCache } from \"./ITokenCache\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { base64Decode } from \"../encode/Base64Decode\";\n\nexport type LoadTokenOptions = {\n    clientInfo?: string;\n    expiresOn?: number;\n    extendedExpiresOn?: number;\n};\n\n/**\n * Token cache manager\n */\nexport class TokenCache implements ITokenCache {\n    // Flag to indicate if in browser environment\n    public isBrowserEnvironment: boolean;\n    // Input configuration by developer/user\n    protected config: BrowserConfiguration;\n    // Browser cache storage\n    private storage: BrowserCacheManager;\n    // Logger\n    private logger: Logger;\n    // Crypto class\n    private cryptoObj: ICrypto;\n\n    constructor(\n        configuration: BrowserConfiguration,\n        storage: BrowserCacheManager,\n        logger: Logger,\n        cryptoObj: ICrypto\n    ) {\n        this.isBrowserEnvironment = typeof window !== \"undefined\";\n        this.config = configuration;\n        this.storage = storage;\n        this.logger = logger;\n        this.cryptoObj = cryptoObj;\n    }\n\n    // Move getAllAccounts here and cache utility APIs\n\n    /**\n     * API to load tokens to msal-browser cache.\n     * @param request\n     * @param response\n     * @param options\n     * @returns `AuthenticationResult` for the response that was loaded.\n     */\n    loadExternalTokens(\n        request: SilentRequest,\n        response: ExternalTokenResponse,\n        options: LoadTokenOptions\n    ): AuthenticationResult {\n        this.logger.info(\"TokenCache - loadExternalTokens called\");\n\n        if (!response.id_token) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.unableToLoadToken\n            );\n        }\n\n        const idTokenClaims = AuthToken.extractTokenClaims(\n            response.id_token,\n            base64Decode\n        );\n\n        let cacheRecord: CacheRecord;\n        let authority: Authority | undefined;\n        let cacheRecordAccount: AccountEntity;\n\n        if (request.account) {\n            cacheRecordAccount = AccountEntity.createFromAccountInfo(\n                request.account\n            );\n            cacheRecord = new CacheRecord(\n                cacheRecordAccount,\n                this.loadIdToken(\n                    response.id_token,\n                    cacheRecordAccount.homeAccountId,\n                    request.account.environment,\n                    request.account.tenantId\n                ),\n                this.loadAccessToken(\n                    request,\n                    response,\n                    cacheRecordAccount.homeAccountId,\n                    request.account.environment,\n                    request.account.tenantId,\n                    options\n                ),\n                this.loadRefreshToken(\n                    request,\n                    response,\n                    cacheRecordAccount.homeAccountId,\n                    request.account.environment\n                )\n            );\n        } else if (request.authority) {\n            const authorityUrl = Authority.generateAuthority(\n                request.authority,\n                request.azureCloudOptions\n            );\n            const authorityOptions: AuthorityOptions = {\n                protocolMode: this.config.auth.protocolMode,\n                knownAuthorities: this.config.auth.knownAuthorities,\n                cloudDiscoveryMetadata: this.config.auth.cloudDiscoveryMetadata,\n                authorityMetadata: this.config.auth.authorityMetadata,\n                skipAuthorityMetadataCache:\n                    this.config.auth.skipAuthorityMetadataCache,\n            };\n            authority = new Authority(\n                authorityUrl,\n                this.config.system.networkClient,\n                this.storage,\n                authorityOptions,\n                this.logger\n            );\n\n            // \"clientInfo\" from options takes precedence over \"clientInfo\" in response\n            if (options.clientInfo) {\n                this.logger.trace(\"TokenCache - homeAccountId from options\");\n                cacheRecordAccount = this.loadAccount(\n                    idTokenClaims,\n                    authority,\n                    options.clientInfo\n                );\n                cacheRecord = new CacheRecord(\n                    cacheRecordAccount,\n                    this.loadIdToken(\n                        response.id_token,\n                        cacheRecordAccount.homeAccountId,\n                        authority.hostnameAndPort,\n                        authority.tenant\n                    ),\n                    this.loadAccessToken(\n                        request,\n                        response,\n                        cacheRecordAccount.homeAccountId,\n                        authority.hostnameAndPort,\n                        authority.tenant,\n                        options\n                    ),\n                    this.loadRefreshToken(\n                        request,\n                        response,\n                        cacheRecordAccount.homeAccountId,\n                        authority.hostnameAndPort\n                    )\n                );\n            } else if (response.client_info) {\n                this.logger.trace(\"TokenCache - homeAccountId from response\");\n                cacheRecordAccount = this.loadAccount(\n                    idTokenClaims,\n                    authority,\n                    response.client_info\n                );\n                cacheRecord = new CacheRecord(\n                    cacheRecordAccount,\n                    this.loadIdToken(\n                        response.id_token,\n                        cacheRecordAccount.homeAccountId,\n                        authority.hostnameAndPort,\n                        authority.tenant\n                    ),\n                    this.loadAccessToken(\n                        request,\n                        response,\n                        cacheRecordAccount.homeAccountId,\n                        authority.hostnameAndPort,\n                        authority.tenant,\n                        options\n                    ),\n                    this.loadRefreshToken(\n                        request,\n                        response,\n                        cacheRecordAccount.homeAccountId,\n                        authority.hostnameAndPort\n                    )\n                );\n            } else {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.unableToLoadToken\n                );\n            }\n        } else {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.unableToLoadToken\n            );\n        }\n\n        return this.generateAuthenticationResult(\n            request,\n            idTokenClaims,\n            cacheRecord,\n            cacheRecordAccount,\n            authority\n        );\n    }\n\n    /**\n     * Helper function to load account to msal-browser cache\n     * @param idToken\n     * @param environment\n     * @param clientInfo\n     * @param authorityType\n     * @param requestHomeAccountId\n     * @returns `AccountEntity`\n     */\n    private loadAccount(\n        idTokenClaims: TokenClaims,\n        authority: Authority,\n        clientInfo?: string,\n        requestHomeAccountId?: string\n    ): AccountEntity {\n        let homeAccountId;\n        if (requestHomeAccountId) {\n            homeAccountId = requestHomeAccountId;\n        } else if (authority.authorityType !== undefined && clientInfo) {\n            homeAccountId = AccountEntity.generateHomeAccountId(\n                clientInfo,\n                authority.authorityType,\n                this.logger,\n                this.cryptoObj,\n                idTokenClaims\n            );\n        }\n\n        if (!homeAccountId) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.unableToLoadToken\n            );\n        }\n\n        const accountEntity = AccountEntity.createAccount(\n            {\n                homeAccountId,\n                idTokenClaims: idTokenClaims,\n                clientInfo,\n                environment: authority.hostnameAndPort,\n            },\n            authority\n        );\n\n        if (this.isBrowserEnvironment) {\n            this.logger.verbose(\"TokenCache - loading account\");\n\n            this.storage.setAccount(accountEntity);\n            return accountEntity;\n        } else {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.unableToLoadToken\n            );\n        }\n    }\n\n    /**\n     * Helper function to load id tokens to msal-browser cache\n     * @param idToken\n     * @param homeAccountId\n     * @param environment\n     * @param tenantId\n     * @returns `IdTokenEntity`\n     */\n    private loadIdToken(\n        idToken: string,\n        homeAccountId: string,\n        environment: string,\n        tenantId: string\n    ): IdTokenEntity {\n        const idTokenEntity = IdTokenEntity.createIdTokenEntity(\n            homeAccountId,\n            environment,\n            idToken,\n            this.config.auth.clientId,\n            tenantId\n        );\n\n        if (this.isBrowserEnvironment) {\n            this.logger.verbose(\"TokenCache - loading id token\");\n            this.storage.setIdTokenCredential(idTokenEntity);\n            return idTokenEntity;\n        } else {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.unableToLoadToken\n            );\n        }\n    }\n\n    /**\n     * Helper function to load access tokens to msal-browser cache\n     * @param request\n     * @param response\n     * @param homeAccountId\n     * @param environment\n     * @param tenantId\n     * @returns `AccessTokenEntity`\n     */\n    private loadAccessToken(\n        request: SilentRequest,\n        response: ExternalTokenResponse,\n        homeAccountId: string,\n        environment: string,\n        tenantId: string,\n        options: LoadTokenOptions\n    ): AccessTokenEntity | null {\n        if (!response.access_token) {\n            this.logger.verbose(\n                \"TokenCache - No access token provided for caching\"\n            );\n            return null;\n        }\n\n        if (!response.expires_in) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.unableToLoadToken\n            );\n        }\n\n        if (!options.extendedExpiresOn) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.unableToLoadToken\n            );\n        }\n\n        const scopes = new ScopeSet(request.scopes).printScopes();\n        const expiresOn =\n            options.expiresOn ||\n            response.expires_in + new Date().getTime() / 1000;\n        const extendedExpiresOn = options.extendedExpiresOn;\n\n        const accessTokenEntity = AccessTokenEntity.createAccessTokenEntity(\n            homeAccountId,\n            environment,\n            response.access_token,\n            this.config.auth.clientId,\n            tenantId,\n            scopes,\n            expiresOn,\n            extendedExpiresOn,\n            this.cryptoObj\n        );\n\n        if (this.isBrowserEnvironment) {\n            this.logger.verbose(\"TokenCache - loading access token\");\n            this.storage.setAccessTokenCredential(accessTokenEntity);\n            return accessTokenEntity;\n        } else {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.unableToLoadToken\n            );\n        }\n    }\n\n    /**\n     * Helper function to load refresh tokens to msal-browser cache\n     * @param request\n     * @param response\n     * @param homeAccountId\n     * @param environment\n     * @returns `RefreshTokenEntity`\n     */\n    private loadRefreshToken(\n        request: SilentRequest,\n        response: ExternalTokenResponse,\n        homeAccountId: string,\n        environment: string\n    ): RefreshTokenEntity | null {\n        if (!response.refresh_token) {\n            this.logger.verbose(\n                \"TokenCache - No refresh token provided for caching\"\n            );\n            return null;\n        }\n\n        const refreshTokenEntity = RefreshTokenEntity.createRefreshTokenEntity(\n            homeAccountId,\n            environment,\n            response.refresh_token,\n            this.config.auth.clientId\n        );\n\n        if (this.isBrowserEnvironment) {\n            this.logger.verbose(\"TokenCache - loading refresh token\");\n            this.storage.setRefreshTokenCredential(refreshTokenEntity);\n            return refreshTokenEntity;\n        } else {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.unableToLoadToken\n            );\n        }\n    }\n\n    /**\n     * Helper function to generate an `AuthenticationResult` for the result.\n     * @param request\n     * @param idTokenObj\n     * @param cacheRecord\n     * @param authority\n     * @returns `AuthenticationResult`\n     */\n    private generateAuthenticationResult(\n        request: SilentRequest,\n        idTokenClaims: TokenClaims,\n        cacheRecord: CacheRecord,\n        accountEntity: AccountEntity,\n        authority?: Authority\n    ): AuthenticationResult {\n        let accessToken: string = Constants.EMPTY_STRING;\n        let responseScopes: Array<string> = [];\n        let expiresOn: Date | null = null;\n        let extExpiresOn: Date | undefined;\n\n        if (cacheRecord?.accessToken) {\n            accessToken = cacheRecord.accessToken.secret;\n            responseScopes = ScopeSet.fromString(\n                cacheRecord.accessToken.target\n            ).asArray();\n            expiresOn = new Date(\n                Number(cacheRecord.accessToken.expiresOn) * 1000\n            );\n            extExpiresOn = new Date(\n                Number(cacheRecord.accessToken.extendedExpiresOn) * 1000\n            );\n        }\n\n        const uid =\n            idTokenClaims.oid || idTokenClaims.sub || Constants.EMPTY_STRING;\n        const tid = idTokenClaims.tid || Constants.EMPTY_STRING;\n\n        return {\n            authority: authority\n                ? authority.canonicalAuthority\n                : Constants.EMPTY_STRING,\n            uniqueId: uid,\n            tenantId: tid,\n            scopes: responseScopes,\n            account: accountEntity.getAccountInfo(),\n            idToken: cacheRecord.idToken?.secret || \"\",\n            idTokenClaims: idTokenClaims || {},\n            accessToken: accessToken,\n            fromCache: true,\n            expiresOn: expiresOn,\n            correlationId: request.correlationId || Constants.EMPTY_STRING,\n            requestId: Constants.EMPTY_STRING,\n            extExpiresOn: extExpiresOn,\n            familyId: Constants.EMPTY_STRING,\n            tokenType:\n                cacheRecord?.accessToken?.tokenType || Constants.EMPTY_STRING,\n            state: Constants.EMPTY_STRING,\n            cloudGraphHostName:\n                accountEntity.cloudGraphHostName || Constants.EMPTY_STRING,\n            msGraphHost: accountEntity.msGraphHost || Constants.EMPTY_STRING,\n            code: undefined,\n            fromNativeBroker: false,\n        };\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ICrypto,\n    Logger,\n    CommonAuthorizationCodeRequest,\n    AuthError,\n    Constants,\n    IPerformanceClient,\n    PerformanceEvents,\n    invokeAsync,\n} from \"@azure/msal-common\";\nimport { StandardInteractionClient } from \"./StandardInteractionClient\";\nimport { AuthorizationUrlRequest } from \"../request/AuthorizationUrlRequest\";\nimport { BrowserConfiguration } from \"../config/Configuration\";\nimport { BrowserCacheManager } from \"../cache/BrowserCacheManager\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { InteractionType, ApiId } from \"../utils/BrowserConstants\";\nimport { SilentHandler } from \"../interaction_handler/SilentHandler\";\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest\";\nimport { HybridSpaAuthorizationCodeClient } from \"./HybridSpaAuthorizationCodeClient\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\n\nexport class SilentAuthCodeClient extends StandardInteractionClient {\n    private apiId: ApiId;\n\n    constructor(\n        config: BrowserConfiguration,\n        storageImpl: BrowserCacheManager,\n        browserCrypto: ICrypto,\n        logger: Logger,\n        eventHandler: EventHandler,\n        navigationClient: INavigationClient,\n        apiId: ApiId,\n        performanceClient: IPerformanceClient,\n        nativeMessageHandler?: NativeMessageHandler,\n        correlationId?: string\n    ) {\n        super(\n            config,\n            storageImpl,\n            browserCrypto,\n            logger,\n            eventHandler,\n            navigationClient,\n            performanceClient,\n            nativeMessageHandler,\n            correlationId\n        );\n        this.apiId = apiId;\n    }\n\n    /**\n     * Acquires a token silently by redeeming an authorization code against the /token endpoint\n     * @param request\n     */\n    async acquireToken(\n        request: AuthorizationCodeRequest\n    ): Promise<AuthenticationResult> {\n        // Auth code payload is required\n        if (!request.code) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.authCodeRequired\n            );\n        }\n\n        // Create silent request\n        const silentRequest: AuthorizationUrlRequest = await invokeAsync(\n            this.initializeAuthorizationRequest.bind(this),\n            PerformanceEvents.StandardInteractionClientInitializeAuthorizationRequest,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request, InteractionType.Silent);\n        this.browserStorage.updateCacheEntries(\n            silentRequest.state,\n            silentRequest.nonce,\n            silentRequest.authority,\n            silentRequest.loginHint || Constants.EMPTY_STRING,\n            silentRequest.account || null\n        );\n\n        const serverTelemetryManager = this.initializeServerTelemetryManager(\n            this.apiId\n        );\n\n        try {\n            // Create auth code request (PKCE not needed)\n            const authCodeRequest: CommonAuthorizationCodeRequest = {\n                ...silentRequest,\n                code: request.code,\n            };\n\n            // Initialize the client\n            const clientConfig = await invokeAsync(\n                this.getClientConfiguration.bind(this),\n                PerformanceEvents.StandardInteractionClientGetClientConfiguration,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(serverTelemetryManager, silentRequest.authority);\n            const authClient: HybridSpaAuthorizationCodeClient =\n                new HybridSpaAuthorizationCodeClient(clientConfig);\n            this.logger.verbose(\"Auth code client created\");\n\n            // Create silent handler\n            const silentHandler = new SilentHandler(\n                authClient,\n                this.browserStorage,\n                authCodeRequest,\n                this.logger,\n                this.config.system,\n                this.performanceClient\n            );\n\n            // Handle auth code parameters from request\n            return invokeAsync(\n                silentHandler.handleCodeResponseFromServer.bind(silentHandler),\n                PerformanceEvents.HandleCodeResponseFromServer,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(\n                {\n                    code: request.code,\n                    msgraph_host: request.msGraphHost,\n                    cloud_graph_host_name: request.cloudGraphHostName,\n                    cloud_instance_host_name: request.cloudInstanceHostName,\n                },\n                silentRequest.state,\n                authClient.authority,\n                this.networkClient,\n                false\n            );\n        } catch (e) {\n            if (e instanceof AuthError) {\n                (e as AuthError).setCorrelationId(this.correlationId);\n                serverTelemetryManager.cacheFailedRequest(e);\n            }\n            this.browserStorage.cleanRequestByState(silentRequest.state);\n            throw e;\n        }\n    }\n\n    /**\n     * Currently Unsupported\n     */\n    logout(): Promise<void> {\n        // Synchronous so we must reject\n        return Promise.reject(\n            createBrowserAuthError(\n                BrowserAuthErrorCodes.silentLogoutUnsupported\n            )\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { CryptoOps } from \"../crypto/CryptoOps\";\nimport {\n    InteractionRequiredAuthError,\n    AccountInfo,\n    Constants,\n    INetworkModule,\n    Logger,\n    CommonSilentFlowRequest,\n    ICrypto,\n    DEFAULT_CRYPTO_IMPLEMENTATION,\n    AuthError,\n    PerformanceEvents,\n    PerformanceCallbackFunction,\n    IPerformanceClient,\n    BaseAuthRequest,\n    PromptValue,\n    InProgressPerformanceEvent,\n    RequestThumbprint,\n    ServerError,\n    AccountEntity,\n    ServerResponseType,\n    UrlString,\n    invokeAsync,\n    createClientAuthError,\n    ClientAuthErrorCodes,\n    AccountFilter,\n} from \"@azure/msal-common\";\nimport {\n    BrowserCacheManager,\n    DEFAULT_BROWSER_CACHE_MANAGER,\n} from \"../cache/BrowserCacheManager\";\nimport { BrowserConfiguration, CacheOptions } from \"../config/Configuration\";\nimport {\n    InteractionType,\n    ApiId,\n    BrowserCacheLocation,\n    WrapperSKU,\n    TemporaryCacheKeys,\n    CacheLookupPolicy,\n    DEFAULT_REQUEST,\n    BrowserConstants,\n} from \"../utils/BrowserConstants\";\nimport { BrowserUtils } from \"../utils/BrowserUtils\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { SsoSilentRequest } from \"../request/SsoSilentRequest\";\nimport { EventCallbackFunction, EventError } from \"../event/EventMessage\";\nimport { EventType } from \"../event/EventType\";\nimport { EndSessionRequest } from \"../request/EndSessionRequest\";\nimport {\n    BrowserConfigurationAuthErrorCodes,\n    createBrowserConfigurationAuthError,\n} from \"../error/BrowserConfigurationAuthError\";\nimport { EndSessionPopupRequest } from \"../request/EndSessionPopupRequest\";\nimport { INavigationClient } from \"../navigation/INavigationClient\";\nimport { EventHandler } from \"../event/EventHandler\";\nimport { PopupClient } from \"../interaction_client/PopupClient\";\nimport { RedirectClient } from \"../interaction_client/RedirectClient\";\nimport { SilentIframeClient } from \"../interaction_client/SilentIframeClient\";\nimport { SilentRefreshClient } from \"../interaction_client/SilentRefreshClient\";\nimport { TokenCache } from \"../cache/TokenCache\";\nimport { ITokenCache } from \"../cache/ITokenCache\";\nimport { NativeInteractionClient } from \"../interaction_client/NativeInteractionClient\";\nimport { NativeMessageHandler } from \"../broker/nativeBroker/NativeMessageHandler\";\nimport { SilentRequest } from \"../request/SilentRequest\";\nimport {\n    NativeAuthError,\n    isFatalNativeAuthError,\n} from \"../error/NativeAuthError\";\nimport { SilentCacheClient } from \"../interaction_client/SilentCacheClient\";\nimport { SilentAuthCodeClient } from \"../interaction_client/SilentAuthCodeClient\";\nimport {\n    createBrowserAuthError,\n    BrowserAuthErrorCodes,\n} from \"../error/BrowserAuthError\";\nimport { AuthorizationCodeRequest } from \"../request/AuthorizationCodeRequest\";\nimport { NativeTokenRequest } from \"../broker/nativeBroker/NativeRequest\";\nimport { StandardOperatingContext } from \"../operatingcontext/StandardOperatingContext\";\nimport { BaseOperatingContext } from \"../operatingcontext/BaseOperatingContext\";\nimport { IController } from \"./IController\";\nimport { AuthenticationResult } from \"../response/AuthenticationResult\";\nimport { ClearCacheRequest } from \"../request/ClearCacheRequest\";\nimport { createNewGuid } from \"../crypto/BrowserCrypto\";\n\nexport class StandardController implements IController {\n    // OperatingContext\n    protected readonly operatingContext: StandardOperatingContext;\n\n    // Crypto interface implementation\n    protected readonly browserCrypto: ICrypto;\n\n    // Storage interface implementation\n    protected readonly browserStorage: BrowserCacheManager;\n\n    // Native Cache in memory storage implementation\n    protected readonly nativeInternalStorage: BrowserCacheManager;\n\n    // Network interface implementation\n    protected readonly networkClient: INetworkModule;\n\n    // Navigation interface implementation\n    protected navigationClient: INavigationClient;\n\n    // Input configuration by developer/user\n    protected readonly config: BrowserConfiguration;\n\n    // Token cache implementation\n    private tokenCache: TokenCache;\n\n    // Logger\n    protected logger: Logger;\n\n    // Flag to indicate if in browser environment\n    protected isBrowserEnvironment: boolean;\n\n    protected readonly eventHandler: EventHandler;\n\n    // Redirect Response Object\n    protected readonly redirectResponse: Map<\n        string,\n        Promise<AuthenticationResult | null>\n    >;\n\n    // Native Extension Provider\n    protected nativeExtensionProvider: NativeMessageHandler | undefined;\n\n    // Hybrid auth code responses\n    private hybridAuthCodeResponses: Map<string, Promise<AuthenticationResult>>;\n\n    // Performance telemetry client\n    protected readonly performanceClient: IPerformanceClient;\n\n    // Flag representing whether or not the initialize API has been called and completed\n    protected initialized: boolean;\n\n    // Active requests\n    private activeSilentTokenRequests: Map<\n        string,\n        Promise<AuthenticationResult>\n    >;\n    private atsAsyncMeasurement?: InProgressPerformanceEvent = undefined;\n\n    private ssoSilentMeasurement?: InProgressPerformanceEvent;\n    private acquireTokenByCodeAsyncMeasurement?: InProgressPerformanceEvent;\n    /**\n     * @constructor\n     * Constructor for the PublicClientApplication used to instantiate the PublicClientApplication object\n     *\n     * Important attributes in the Configuration object for auth are:\n     * - clientID: the application ID of your application. You can obtain one by registering your application with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview\n     * - authority: the authority URL for your application.\n     * - redirect_uri: the uri of your application registered in the portal.\n     *\n     * In Azure AD, authority is a URL indicating the Azure active directory that MSAL uses to obtain tokens.\n     * It is of the form https://login.microsoftonline.com/{Enter_the_Tenant_Info_Here}\n     * If your application supports Accounts in one organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with the Tenant Id or Tenant name (for example, contoso.microsoft.com).\n     * If your application supports Accounts in any organizational directory, replace \"Enter_the_Tenant_Info_Here\" value with organizations.\n     * If your application supports Accounts in any organizational directory and personal Microsoft accounts, replace \"Enter_the_Tenant_Info_Here\" value with common.\n     * To restrict support to Personal Microsoft accounts only, replace \"Enter_the_Tenant_Info_Here\" value with consumers.\n     *\n     * In Azure B2C, authority is of the form https://{instance}/tfp/{tenant}/{policyName}/\n     * Full B2C functionality will be available in this library in future versions.\n     *\n     * @param configuration Object for the MSAL PublicClientApplication instance\n     */\n    constructor(operatingContext: StandardOperatingContext) {\n        this.operatingContext = operatingContext;\n        this.isBrowserEnvironment =\n            this.operatingContext.isBrowserEnvironment();\n        // Set the configuration.\n        this.config = operatingContext.getConfig();\n        this.initialized = false;\n\n        // Initialize logger\n        this.logger = this.operatingContext.getLogger();\n\n        // Initialize the network module class.\n        this.networkClient = this.config.system.networkClient;\n\n        // Initialize the navigation client class.\n        this.navigationClient = this.config.system.navigationClient;\n\n        // Initialize redirectResponse Map\n        this.redirectResponse = new Map();\n\n        // Initial hybrid spa map\n        this.hybridAuthCodeResponses = new Map();\n\n        // Initialize performance client\n        this.performanceClient = this.config.telemetry.client;\n\n        // Initialize the crypto class.\n        this.browserCrypto = this.isBrowserEnvironment\n            ? new CryptoOps(this.logger, this.performanceClient)\n            : DEFAULT_CRYPTO_IMPLEMENTATION;\n\n        this.eventHandler = new EventHandler(this.logger, this.browserCrypto);\n\n        // Initialize the browser storage class.\n        this.browserStorage = this.isBrowserEnvironment\n            ? new BrowserCacheManager(\n                  this.config.auth.clientId,\n                  this.config.cache,\n                  this.browserCrypto,\n                  this.logger\n              )\n            : DEFAULT_BROWSER_CACHE_MANAGER(\n                  this.config.auth.clientId,\n                  this.logger\n              );\n\n        // initialize in memory storage for native flows\n        const nativeCacheOptions: Required<CacheOptions> = {\n            cacheLocation: BrowserCacheLocation.MemoryStorage,\n            temporaryCacheLocation: BrowserCacheLocation.MemoryStorage,\n            storeAuthStateInCookie: false,\n            secureCookies: false,\n            cacheMigrationEnabled: false,\n            claimsBasedCachingEnabled: false,\n        };\n        this.nativeInternalStorage = new BrowserCacheManager(\n            this.config.auth.clientId,\n            nativeCacheOptions,\n            this.browserCrypto,\n            this.logger\n        );\n\n        // Initialize the token cache\n        this.tokenCache = new TokenCache(\n            this.config,\n            this.browserStorage,\n            this.logger,\n            this.browserCrypto\n        );\n\n        this.activeSilentTokenRequests = new Map();\n\n        // Register listener functions\n        this.trackPageVisibility = this.trackPageVisibility.bind(this);\n\n        // Register listener functions\n        this.trackPageVisibilityWithMeasurement =\n            this.trackPageVisibilityWithMeasurement.bind(this);\n    }\n\n    static async createController(\n        operatingContext: BaseOperatingContext\n    ): Promise<IController> {\n        const controller = new StandardController(operatingContext);\n        await controller.initialize();\n        return controller;\n    }\n\n    private trackPageVisibility(): void {\n        if (!this.atsAsyncMeasurement) {\n            return;\n        }\n        this.logger.info(\"Perf: Visibility change detected\");\n        this.atsAsyncMeasurement.increment({\n            visibilityChangeCount: 1,\n        });\n    }\n\n    /**\n     * Initializer function to perform async startup tasks such as connecting to WAM extension\n     */\n    async initialize(): Promise<void> {\n        this.logger.trace(\"initialize called\");\n        if (this.initialized) {\n            this.logger.info(\n                \"initialize has already been called, exiting early.\"\n            );\n            return;\n        }\n\n        const allowNativeBroker = this.config.system.allowNativeBroker;\n        const initMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.InitializeClientApplication\n        );\n        this.eventHandler.emitEvent(EventType.INITIALIZE_START);\n\n        if (allowNativeBroker) {\n            try {\n                this.nativeExtensionProvider =\n                    await NativeMessageHandler.createProvider(\n                        this.logger,\n                        this.config.system.nativeBrokerHandshakeTimeout,\n                        this.performanceClient\n                    );\n            } catch (e) {\n                this.logger.verbose(e as string);\n            }\n        }\n\n        if (!this.config.cache.claimsBasedCachingEnabled) {\n            this.logger.verbose(\n                \"Claims-based caching is disabled. Clearing the previous cache with claims\"\n            );\n\n            await invokeAsync(\n                this.browserStorage.clearTokensAndKeysWithClaims.bind(\n                    this.browserStorage\n                ),\n                PerformanceEvents.ClearTokensAndKeysWithClaims,\n                this.logger,\n                this.performanceClient\n            )(this.performanceClient);\n        }\n\n        this.initialized = true;\n        this.eventHandler.emitEvent(EventType.INITIALIZE_END);\n\n        initMeasurement.end({ allowNativeBroker, success: true });\n    }\n\n    // #region Redirect Flow\n\n    /**\n     * Event handler function which allows users to fire events after the PublicClientApplication object\n     * has loaded during redirect flows. This should be invoked on all page loads involved in redirect\n     * auth flows.\n     * @param hash Hash to process. Defaults to the current value of window.location.hash. Only needs to be provided explicitly if the response to be handled is not contained in the current value.\n     * @returns Token response or null. If the return value is null, then no auth redirect was detected.\n     */\n    async handleRedirectPromise(\n        hash?: string\n    ): Promise<AuthenticationResult | null> {\n        this.logger.verbose(\"handleRedirectPromise called\");\n        // Block token acquisition before initialize has been called\n        BrowserUtils.blockAPICallsBeforeInitialize(this.initialized);\n\n        let foundServerResponse = hash;\n\n        if (\n            this.config.auth.OIDCOptions?.serverResponseType ===\n            ServerResponseType.QUERY\n        ) {\n            const url = window.location.href;\n            foundServerResponse = UrlString.parseQueryServerResponse(url);\n        }\n\n        const loggedInAccounts = this.getAllAccounts();\n        if (this.isBrowserEnvironment) {\n            /**\n             * Store the promise on the PublicClientApplication instance if this is the first invocation of handleRedirectPromise,\n             * otherwise return the promise from the first invocation. Prevents race conditions when handleRedirectPromise is called\n             * several times concurrently.\n             */\n            const redirectResponseKey =\n                foundServerResponse || Constants.EMPTY_STRING;\n            let response = this.redirectResponse.get(redirectResponseKey);\n            if (typeof response === \"undefined\") {\n                this.eventHandler.emitEvent(\n                    EventType.HANDLE_REDIRECT_START,\n                    InteractionType.Redirect\n                );\n                this.logger.verbose(\n                    \"handleRedirectPromise has been called for the first time, storing the promise\"\n                );\n\n                const request: NativeTokenRequest | null =\n                    this.browserStorage.getCachedNativeRequest();\n                let redirectResponse: Promise<AuthenticationResult | null>;\n                if (\n                    request &&\n                    NativeMessageHandler.isNativeAvailable(\n                        this.config,\n                        this.logger,\n                        this.nativeExtensionProvider\n                    ) &&\n                    this.nativeExtensionProvider &&\n                    !foundServerResponse\n                ) {\n                    this.logger.trace(\n                        \"handleRedirectPromise - acquiring token from native platform\"\n                    );\n                    const nativeClient = new NativeInteractionClient(\n                        this.config,\n                        this.browserStorage,\n                        this.browserCrypto,\n                        this.logger,\n                        this.eventHandler,\n                        this.navigationClient,\n                        ApiId.handleRedirectPromise,\n                        this.performanceClient,\n                        this.nativeExtensionProvider,\n                        request.accountId,\n                        this.nativeInternalStorage,\n                        request.correlationId\n                    );\n                    redirectResponse = nativeClient.handleRedirectPromise();\n                } else {\n                    this.logger.trace(\n                        \"handleRedirectPromise - acquiring token from web flow\"\n                    );\n                    const correlationId =\n                        this.browserStorage.getTemporaryCache(\n                            TemporaryCacheKeys.CORRELATION_ID,\n                            true\n                        ) || Constants.EMPTY_STRING;\n                    const redirectClient =\n                        this.createRedirectClient(correlationId);\n                    redirectResponse =\n                        redirectClient.handleRedirectPromise(\n                            foundServerResponse\n                        );\n                }\n\n                response = redirectResponse\n                    .then((result: AuthenticationResult | null) => {\n                        if (result) {\n                            // Emit login event if number of accounts change\n\n                            const isLoggingIn =\n                                loggedInAccounts.length <\n                                this.getAllAccounts().length;\n                            if (isLoggingIn) {\n                                this.eventHandler.emitEvent(\n                                    EventType.LOGIN_SUCCESS,\n                                    InteractionType.Redirect,\n                                    result\n                                );\n                                this.logger.verbose(\n                                    \"handleRedirectResponse returned result, login success\"\n                                );\n                            } else {\n                                this.eventHandler.emitEvent(\n                                    EventType.ACQUIRE_TOKEN_SUCCESS,\n                                    InteractionType.Redirect,\n                                    result\n                                );\n                                this.logger.verbose(\n                                    \"handleRedirectResponse returned result, acquire token success\"\n                                );\n                            }\n                        }\n                        this.eventHandler.emitEvent(\n                            EventType.HANDLE_REDIRECT_END,\n                            InteractionType.Redirect\n                        );\n\n                        return result;\n                    })\n                    .catch((e) => {\n                        // Emit login event if there is an account\n                        if (loggedInAccounts.length > 0) {\n                            this.eventHandler.emitEvent(\n                                EventType.ACQUIRE_TOKEN_FAILURE,\n                                InteractionType.Redirect,\n                                null,\n                                e as EventError\n                            );\n                        } else {\n                            this.eventHandler.emitEvent(\n                                EventType.LOGIN_FAILURE,\n                                InteractionType.Redirect,\n                                null,\n                                e as EventError\n                            );\n                        }\n                        this.eventHandler.emitEvent(\n                            EventType.HANDLE_REDIRECT_END,\n                            InteractionType.Redirect\n                        );\n\n                        throw e;\n                    });\n                this.redirectResponse.set(redirectResponseKey, response);\n            } else {\n                this.logger.verbose(\n                    \"handleRedirectPromise has been called previously, returning the result from the first call\"\n                );\n            }\n\n            return response;\n        }\n        this.logger.verbose(\n            \"handleRedirectPromise returns null, not browser environment\"\n        );\n        return null;\n    }\n\n    /**\n     * Use when you want to obtain an access_token for your API by redirecting the user's browser window to the authorization endpoint. This function redirects\n     * the page, so any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    async acquireTokenRedirect(request: RedirectRequest): Promise<void> {\n        // Preflight request\n        const correlationId = this.getRequestCorrelationId(request);\n        this.logger.verbose(\"acquireTokenRedirect called\", correlationId);\n        this.preflightBrowserEnvironmentCheck(InteractionType.Redirect);\n\n        // If logged in, emit acquire token events\n        const isLoggedIn = this.getAllAccounts().length > 0;\n        if (isLoggedIn) {\n            this.eventHandler.emitEvent(\n                EventType.ACQUIRE_TOKEN_START,\n                InteractionType.Redirect,\n                request\n            );\n        } else {\n            this.eventHandler.emitEvent(\n                EventType.LOGIN_START,\n                InteractionType.Redirect,\n                request\n            );\n        }\n\n        let result: Promise<void>;\n\n        if (this.nativeExtensionProvider && this.canUseNative(request)) {\n            const nativeClient = new NativeInteractionClient(\n                this.config,\n                this.browserStorage,\n                this.browserCrypto,\n                this.logger,\n                this.eventHandler,\n                this.navigationClient,\n                ApiId.acquireTokenRedirect,\n                this.performanceClient,\n                this.nativeExtensionProvider,\n                this.getNativeAccountId(request),\n                this.nativeInternalStorage,\n                request.correlationId\n            );\n            result = nativeClient\n                .acquireTokenRedirect(request)\n                .catch((e: AuthError) => {\n                    if (\n                        e instanceof NativeAuthError &&\n                        isFatalNativeAuthError(e)\n                    ) {\n                        this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                        const redirectClient = this.createRedirectClient(\n                            request.correlationId\n                        );\n                        return redirectClient.acquireToken(request);\n                    } else if (e instanceof InteractionRequiredAuthError) {\n                        this.logger.verbose(\n                            \"acquireTokenRedirect - Resolving interaction required error thrown by native broker by falling back to web flow\"\n                        );\n                        const redirectClient = this.createRedirectClient(\n                            request.correlationId\n                        );\n                        return redirectClient.acquireToken(request);\n                    }\n                    this.getBrowserStorage().setInteractionInProgress(false);\n                    throw e;\n                });\n        } else {\n            const redirectClient = this.createRedirectClient(\n                request.correlationId\n            );\n            result = redirectClient.acquireToken(request);\n        }\n\n        return result.catch((e) => {\n            // If logged in, emit acquire token events\n            if (isLoggedIn) {\n                this.eventHandler.emitEvent(\n                    EventType.ACQUIRE_TOKEN_FAILURE,\n                    InteractionType.Redirect,\n                    null,\n                    e\n                );\n            } else {\n                this.eventHandler.emitEvent(\n                    EventType.LOGIN_FAILURE,\n                    InteractionType.Redirect,\n                    null,\n                    e\n                );\n            }\n            throw e;\n        });\n    }\n\n    // #endregion\n\n    // #region Popup Flow\n\n    /**\n     * Use when you want to obtain an access_token for your API via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    acquireTokenPopup(request: PopupRequest): Promise<AuthenticationResult> {\n        const correlationId = this.getRequestCorrelationId(request);\n        const atPopupMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.AcquireTokenPopup,\n            correlationId\n        );\n\n        try {\n            this.logger.verbose(\"acquireTokenPopup called\", correlationId);\n            this.preflightBrowserEnvironmentCheck(InteractionType.Popup);\n        } catch (e) {\n            // Since this function is syncronous we need to reject\n            return Promise.reject(e);\n        }\n\n        // If logged in, emit acquire token events\n        const loggedInAccounts = this.getAllAccounts();\n        if (loggedInAccounts.length > 0) {\n            this.eventHandler.emitEvent(\n                EventType.ACQUIRE_TOKEN_START,\n                InteractionType.Popup,\n                request\n            );\n        } else {\n            this.eventHandler.emitEvent(\n                EventType.LOGIN_START,\n                InteractionType.Popup,\n                request\n            );\n        }\n\n        let result: Promise<AuthenticationResult>;\n\n        if (this.canUseNative(request)) {\n            result = this.acquireTokenNative(request, ApiId.acquireTokenPopup)\n                .then((response) => {\n                    this.getBrowserStorage().setInteractionInProgress(false);\n                    atPopupMeasurement.end({\n                        success: true,\n                        isNativeBroker: true,\n                        requestId: response.requestId,\n                    });\n                    return response;\n                })\n                .catch((e: AuthError) => {\n                    if (\n                        e instanceof NativeAuthError &&\n                        isFatalNativeAuthError(e)\n                    ) {\n                        this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                        const popupClient = this.createPopupClient(\n                            request.correlationId\n                        );\n                        return popupClient.acquireToken(request);\n                    } else if (e instanceof InteractionRequiredAuthError) {\n                        this.logger.verbose(\n                            \"acquireTokenPopup - Resolving interaction required error thrown by native broker by falling back to web flow\"\n                        );\n                        const popupClient = this.createPopupClient(\n                            request.correlationId\n                        );\n                        return popupClient.acquireToken(request);\n                    }\n                    this.getBrowserStorage().setInteractionInProgress(false);\n                    throw e;\n                });\n        } else {\n            const popupClient = this.createPopupClient(request.correlationId);\n            result = popupClient.acquireToken(request);\n        }\n\n        return result\n            .then((result) => {\n                /*\n                 *  If logged in, emit acquire token events\n                 */\n                const isLoggingIn =\n                    loggedInAccounts.length < this.getAllAccounts().length;\n                if (isLoggingIn) {\n                    this.eventHandler.emitEvent(\n                        EventType.LOGIN_SUCCESS,\n                        InteractionType.Popup,\n                        result\n                    );\n                } else {\n                    this.eventHandler.emitEvent(\n                        EventType.ACQUIRE_TOKEN_SUCCESS,\n                        InteractionType.Popup,\n                        result\n                    );\n                }\n\n                atPopupMeasurement.add({\n                    accessTokenSize: result.accessToken.length,\n                    idTokenSize: result.idToken.length,\n                });\n                atPopupMeasurement.end({\n                    success: true,\n                    requestId: result.requestId,\n                });\n                return result;\n            })\n            .catch((e: AuthError) => {\n                if (loggedInAccounts.length > 0) {\n                    this.eventHandler.emitEvent(\n                        EventType.ACQUIRE_TOKEN_FAILURE,\n                        InteractionType.Popup,\n                        null,\n                        e\n                    );\n                } else {\n                    this.eventHandler.emitEvent(\n                        EventType.LOGIN_FAILURE,\n                        InteractionType.Popup,\n                        null,\n                        e\n                    );\n                }\n\n                atPopupMeasurement.end({\n                    errorCode: e.errorCode,\n                    subErrorCode: e.subError,\n                    success: false,\n                });\n                // Since this function is syncronous we need to reject\n                return Promise.reject(e);\n            });\n    }\n\n    private trackPageVisibilityWithMeasurement(): void {\n        const measurement =\n            this.ssoSilentMeasurement ||\n            this.acquireTokenByCodeAsyncMeasurement;\n        if (!measurement) {\n            return;\n        }\n\n        this.logger.info(\n            \"Perf: Visibility change detected in \",\n            measurement.event.name\n        );\n        measurement.increment({\n            visibilityChangeCount: 1,\n        });\n    }\n    // #endregion\n\n    // #region Silent Flow\n\n    /**\n     * This function uses a hidden iframe to fetch an authorization code from the eSTS. There are cases where this may not work:\n     * - Any browser using a form of Intelligent Tracking Prevention\n     * - If there is not an established session with the service\n     *\n     * In these cases, the request must be done inside a popup or full frame redirect.\n     *\n     * For the cases where interaction is required, you cannot send a request with prompt=none.\n     *\n     * If your refresh token has expired, you can use this function to fetch a new set of tokens silently as long as\n     * you session on the server still exists.\n     * @param request {@link SsoSilentRequest}\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async ssoSilent(request: SsoSilentRequest): Promise<AuthenticationResult> {\n        const correlationId = this.getRequestCorrelationId(request);\n        const validRequest = {\n            ...request,\n            // will be PromptValue.NONE or PromptValue.NO_SESSION\n            prompt: request.prompt,\n            correlationId: correlationId,\n        };\n        this.preflightBrowserEnvironmentCheck(InteractionType.Silent);\n        this.ssoSilentMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.SsoSilent,\n            correlationId\n        );\n        this.ssoSilentMeasurement?.increment({\n            visibilityChangeCount: 0,\n        });\n        document.addEventListener(\n            \"visibilitychange\",\n            this.trackPageVisibilityWithMeasurement\n        );\n        this.logger.verbose(\"ssoSilent called\", correlationId);\n        this.eventHandler.emitEvent(\n            EventType.SSO_SILENT_START,\n            InteractionType.Silent,\n            validRequest\n        );\n\n        let result: Promise<AuthenticationResult>;\n\n        if (this.canUseNative(validRequest)) {\n            result = this.acquireTokenNative(\n                validRequest,\n                ApiId.ssoSilent\n            ).catch((e: AuthError) => {\n                // If native token acquisition fails for availability reasons fallback to standard flow\n                if (e instanceof NativeAuthError && isFatalNativeAuthError(e)) {\n                    this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                    const silentIframeClient = this.createSilentIframeClient(\n                        validRequest.correlationId\n                    );\n                    return silentIframeClient.acquireToken(validRequest);\n                }\n                throw e;\n            });\n        } else {\n            const silentIframeClient = this.createSilentIframeClient(\n                validRequest.correlationId\n            );\n            result = silentIframeClient.acquireToken(validRequest);\n        }\n\n        return result\n            .then((response) => {\n                this.eventHandler.emitEvent(\n                    EventType.SSO_SILENT_SUCCESS,\n                    InteractionType.Silent,\n                    response\n                );\n                this.ssoSilentMeasurement?.add({\n                    accessTokenSize: response.accessToken.length,\n                    idTokenSize: response.idToken.length,\n                });\n                this.ssoSilentMeasurement?.end({\n                    success: true,\n                    isNativeBroker: response.fromNativeBroker,\n                    requestId: response.requestId,\n                });\n                return response;\n            })\n            .catch((e: AuthError) => {\n                this.eventHandler.emitEvent(\n                    EventType.SSO_SILENT_FAILURE,\n                    InteractionType.Silent,\n                    null,\n                    e\n                );\n                this.ssoSilentMeasurement?.end({\n                    errorCode: e.errorCode,\n                    subErrorCode: e.subError,\n                    success: false,\n                });\n                throw e;\n            })\n            .finally(() => {\n                document.removeEventListener(\n                    \"visibilitychange\",\n                    this.trackPageVisibilityWithMeasurement\n                );\n            });\n    }\n\n    /**\n     * This function redeems an authorization code (passed as code) from the eSTS token endpoint.\n     * This authorization code should be acquired server-side using a confidential client to acquire a spa_code.\n     * This API is not indended for normal authorization code acquisition and redemption.\n     *\n     * Redemption of this authorization code will not require PKCE, as it was acquired by a confidential client.\n     *\n     * @param request {@link AuthorizationCodeRequest}\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    async acquireTokenByCode(\n        request: AuthorizationCodeRequest\n    ): Promise<AuthenticationResult> {\n        const correlationId = this.getRequestCorrelationId(request);\n        this.preflightBrowserEnvironmentCheck(InteractionType.Silent);\n        this.logger.trace(\"acquireTokenByCode called\", correlationId);\n        this.eventHandler.emitEvent(\n            EventType.ACQUIRE_TOKEN_BY_CODE_START,\n            InteractionType.Silent,\n            request\n        );\n        const atbcMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.AcquireTokenByCode,\n            request.correlationId\n        );\n\n        try {\n            if (request.code && request.nativeAccountId) {\n                // Throw error in case server returns both spa_code and spa_accountid in exchange for auth code.\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.spaCodeAndNativeAccountIdPresent\n                );\n            } else if (request.code) {\n                const hybridAuthCode = request.code;\n                let response = this.hybridAuthCodeResponses.get(hybridAuthCode);\n                if (!response) {\n                    this.logger.verbose(\n                        \"Initiating new acquireTokenByCode request\",\n                        correlationId\n                    );\n                    response = this.acquireTokenByCodeAsync({\n                        ...request,\n                        correlationId,\n                    })\n                        .then((result: AuthenticationResult) => {\n                            this.eventHandler.emitEvent(\n                                EventType.ACQUIRE_TOKEN_BY_CODE_SUCCESS,\n                                InteractionType.Silent,\n                                result\n                            );\n                            this.hybridAuthCodeResponses.delete(hybridAuthCode);\n                            atbcMeasurement.add({\n                                accessTokenSize: result.accessToken.length,\n                                idTokenSize: result.idToken.length,\n                            });\n                            atbcMeasurement.end({\n                                success: true,\n                                isNativeBroker: result.fromNativeBroker,\n                                requestId: result.requestId,\n                            });\n                            return result;\n                        })\n                        .catch((error: AuthError) => {\n                            this.hybridAuthCodeResponses.delete(hybridAuthCode);\n                            this.eventHandler.emitEvent(\n                                EventType.ACQUIRE_TOKEN_BY_CODE_FAILURE,\n                                InteractionType.Silent,\n                                null,\n                                error\n                            );\n                            atbcMeasurement.end({\n                                errorCode: error.errorCode,\n                                subErrorCode: error.subError,\n                                success: false,\n                            });\n                            throw error;\n                        });\n                    this.hybridAuthCodeResponses.set(hybridAuthCode, response);\n                } else {\n                    this.logger.verbose(\n                        \"Existing acquireTokenByCode request found\",\n                        request.correlationId\n                    );\n                    atbcMeasurement.discard();\n                }\n                return response;\n            } else if (request.nativeAccountId) {\n                if (this.canUseNative(request, request.nativeAccountId)) {\n                    return this.acquireTokenNative(\n                        request,\n                        ApiId.acquireTokenByCode,\n                        request.nativeAccountId\n                    ).catch((e: AuthError) => {\n                        // If native token acquisition fails for availability reasons fallback to standard flow\n                        if (\n                            e instanceof NativeAuthError &&\n                            isFatalNativeAuthError(e)\n                        ) {\n                            this.nativeExtensionProvider = undefined; // If extension gets uninstalled during session prevent future requests from continuing to attempt\n                        }\n                        throw e;\n                    });\n                } else {\n                    throw createBrowserAuthError(\n                        BrowserAuthErrorCodes.unableToAcquireTokenFromNativePlatform\n                    );\n                }\n            } else {\n                throw createBrowserAuthError(\n                    BrowserAuthErrorCodes.authCodeOrNativeAccountIdRequired\n                );\n            }\n        } catch (e) {\n            this.eventHandler.emitEvent(\n                EventType.ACQUIRE_TOKEN_BY_CODE_FAILURE,\n                InteractionType.Silent,\n                null,\n                e as EventError\n            );\n            atbcMeasurement.end({\n                errorCode: (e instanceof AuthError && e.errorCode) || undefined,\n                subErrorCode:\n                    (e instanceof AuthError && e.subError) || undefined,\n                success: false,\n            });\n            throw e;\n        }\n    }\n\n    /**\n     * Creates a SilentAuthCodeClient to redeem an authorization code.\n     * @param request\n     * @returns Result of the operation to redeem the authorization code\n     */\n    private async acquireTokenByCodeAsync(\n        request: AuthorizationCodeRequest\n    ): Promise<AuthenticationResult> {\n        this.logger.trace(\n            \"acquireTokenByCodeAsync called\",\n            request.correlationId\n        );\n        this.acquireTokenByCodeAsyncMeasurement =\n            this.performanceClient.startMeasurement(\n                PerformanceEvents.AcquireTokenByCodeAsync,\n                request.correlationId\n            );\n        this.acquireTokenByCodeAsyncMeasurement?.increment({\n            visibilityChangeCount: 0,\n        });\n        document.addEventListener(\n            \"visibilitychange\",\n            this.trackPageVisibilityWithMeasurement\n        );\n        const silentAuthCodeClient = this.createSilentAuthCodeClient(\n            request.correlationId\n        );\n        const silentTokenResult = await silentAuthCodeClient\n            .acquireToken(request)\n            .then((response) => {\n                this.acquireTokenByCodeAsyncMeasurement?.end({\n                    success: true,\n                    fromCache: response.fromCache,\n                    isNativeBroker: response.fromNativeBroker,\n                    requestId: response.requestId,\n                });\n                return response;\n            })\n            .catch((tokenRenewalError: AuthError) => {\n                this.acquireTokenByCodeAsyncMeasurement?.end({\n                    errorCode: tokenRenewalError.errorCode,\n                    subErrorCode: tokenRenewalError.subError,\n                    success: false,\n                });\n                throw tokenRenewalError;\n            })\n            .finally(() => {\n                document.removeEventListener(\n                    \"visibilitychange\",\n                    this.trackPageVisibilityWithMeasurement\n                );\n            });\n        return silentTokenResult;\n    }\n\n    /**\n     * Attempt to acquire an access token from the cache\n     * @param silentCacheClient SilentCacheClient\n     * @param commonRequest CommonSilentFlowRequest\n     * @param silentRequest SilentRequest\n     * @returns A promise that, when resolved, returns the access token\n     */\n    protected async acquireTokenFromCache(\n        silentCacheClient: SilentCacheClient,\n        commonRequest: CommonSilentFlowRequest,\n        silentRequest: SilentRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.AcquireTokenFromCache,\n            commonRequest.correlationId\n        );\n        switch (silentRequest.cacheLookupPolicy) {\n            case CacheLookupPolicy.Default:\n            case CacheLookupPolicy.AccessToken:\n            case CacheLookupPolicy.AccessTokenAndRefreshToken:\n                return invokeAsync(\n                    silentCacheClient.acquireToken.bind(silentCacheClient),\n                    PerformanceEvents.SilentCacheClientAcquireToken,\n                    this.logger,\n                    this.performanceClient,\n                    commonRequest.correlationId\n                )(commonRequest);\n            default:\n                throw createClientAuthError(\n                    ClientAuthErrorCodes.tokenRefreshRequired\n                );\n        }\n    }\n\n    /**\n     * Attempt to acquire an access token via a refresh token\n     * @param commonRequest CommonSilentFlowRequest\n     * @param silentRequest SilentRequest\n     * @returns A promise that, when resolved, returns the access token\n     */\n    public async acquireTokenByRefreshToken(\n        commonRequest: CommonSilentFlowRequest,\n        silentRequest: SilentRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.AcquireTokenByRefreshToken,\n            commonRequest.correlationId\n        );\n        switch (silentRequest.cacheLookupPolicy) {\n            case CacheLookupPolicy.Default:\n            case CacheLookupPolicy.AccessTokenAndRefreshToken:\n            case CacheLookupPolicy.RefreshToken:\n            case CacheLookupPolicy.RefreshTokenAndNetwork:\n                const silentRefreshClient = this.createSilentRefreshClient(\n                    commonRequest.correlationId\n                );\n\n                return invokeAsync(\n                    silentRefreshClient.acquireToken.bind(silentRefreshClient),\n                    PerformanceEvents.SilentRefreshClientAcquireToken,\n                    this.logger,\n                    this.performanceClient,\n                    commonRequest.correlationId\n                )(commonRequest);\n            default:\n                throw createClientAuthError(\n                    ClientAuthErrorCodes.tokenRefreshRequired\n                );\n        }\n    }\n\n    /**\n     * Attempt to acquire an access token via an iframe\n     * @param request CommonSilentFlowRequest\n     * @returns A promise that, when resolved, returns the access token\n     */\n    protected async acquireTokenBySilentIframe(\n        request: CommonSilentFlowRequest\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.AcquireTokenBySilentIframe,\n            request.correlationId\n        );\n\n        const silentIframeClient = this.createSilentIframeClient(\n            request.correlationId\n        );\n\n        return invokeAsync(\n            silentIframeClient.acquireToken.bind(silentIframeClient),\n            PerformanceEvents.SilentIframeClientAcquireToken,\n            this.logger,\n            this.performanceClient,\n            request.correlationId\n        )(request);\n    }\n\n    // #endregion\n\n    // #region Logout\n\n    /**\n     * Deprecated logout function. Use logoutRedirect or logoutPopup instead\n     * @param logoutRequest\n     * @deprecated\n     */\n    async logout(logoutRequest?: EndSessionRequest): Promise<void> {\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\n        this.logger.warning(\n            \"logout API is deprecated and will be removed in msal-browser v3.0.0. Use logoutRedirect instead.\",\n            correlationId\n        );\n        return this.logoutRedirect({\n            correlationId,\n            ...logoutRequest,\n        });\n    }\n\n    /**\n     * Use to log out the current user, and redirect the user to the postLogoutRedirectUri.\n     * Default behaviour is to redirect the user to `window.location.href`.\n     * @param logoutRequest\n     */\n    async logoutRedirect(logoutRequest?: EndSessionRequest): Promise<void> {\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\n        this.preflightBrowserEnvironmentCheck(InteractionType.Redirect);\n\n        const redirectClient = this.createRedirectClient(correlationId);\n        return redirectClient.logout(logoutRequest);\n    }\n\n    /**\n     * Clears local cache for the current user then opens a popup window prompting the user to sign-out of the server\n     * @param logoutRequest\n     */\n    logoutPopup(logoutRequest?: EndSessionPopupRequest): Promise<void> {\n        try {\n            const correlationId = this.getRequestCorrelationId(logoutRequest);\n            this.preflightBrowserEnvironmentCheck(InteractionType.Popup);\n            const popupClient = this.createPopupClient(correlationId);\n            return popupClient.logout(logoutRequest);\n        } catch (e) {\n            // Since this function is syncronous we need to reject\n            return Promise.reject(e);\n        }\n    }\n\n    /**\n     * Creates a cache interaction client to clear broswer cache.\n     * @param logoutRequest\n     */\n    async clearCache(logoutRequest?: ClearCacheRequest): Promise<void> {\n        const correlationId = this.getRequestCorrelationId(logoutRequest);\n        const cacheClient = this.createSilentCacheClient(correlationId);\n        return cacheClient.logout(logoutRequest);\n    }\n\n    // #endregion\n\n    // #region Account APIs\n\n    /**\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\n     * @returns Array of AccountInfo objects in cache\n     */\n    getAllAccounts(accountFilter?: AccountFilter): AccountInfo[] {\n        this.logger.verbose(\"getAllAccounts called\");\n        return this.isBrowserEnvironment\n            ? this.browserStorage.getAllAccounts(accountFilter)\n            : [];\n    }\n\n    /**\n     * Returns the first account found in the cache that matches the account filter passed in.\n     * @param accountFilter\n     * @returns The first account found in the cache matching the provided filter or null if no account could be found.\n     */\n    getAccount(accountFilter: AccountFilter): AccountInfo | null {\n        this.logger.trace(\"getAccount called\");\n        if (Object.keys(accountFilter).length === 0) {\n            this.logger.warning(\"getAccount: No accountFilter provided\");\n            return null;\n        }\n\n        const account: AccountInfo | null =\n            this.browserStorage.getAccountInfoFilteredBy(accountFilter);\n\n        if (account) {\n            this.logger.verbose(\n                \"getAccount: Account matching provided filter found, returning\"\n            );\n            return account;\n        } else {\n            this.logger.verbose(\n                \"getAccount: No matching account found, returning null\"\n            );\n            return null;\n        }\n    }\n\n    /**\n     * Returns the signed in account matching username.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found.\n     * This API is provided for convenience but getAccountById should be used for best reliability\n     * @param username\n     * @returns The account object stored in MSAL\n     */\n    getAccountByUsername(username: string): AccountInfo | null {\n        this.logger.trace(\"getAccountByUsername called\");\n        if (!username) {\n            this.logger.warning(\"getAccountByUsername: No username provided\");\n            return null;\n        }\n\n        const account = this.browserStorage.getAccountInfoFilteredBy({\n            username,\n        });\n        if (account) {\n            this.logger.verbose(\n                \"getAccountByUsername: Account matching username found, returning\"\n            );\n            this.logger.verbosePii(\n                `getAccountByUsername: Returning signed-in accounts matching username: ${username}`\n            );\n            return account;\n        } else {\n            this.logger.verbose(\n                \"getAccountByUsername: No matching account found, returning null\"\n            );\n            return null;\n        }\n    }\n\n    /**\n     * Returns the signed in account matching homeAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param homeAccountId\n     * @returns The account object stored in MSAL\n     */\n    getAccountByHomeId(homeAccountId: string): AccountInfo | null {\n        this.logger.trace(\"getAccountByHomeId called\");\n        if (!homeAccountId) {\n            this.logger.warning(\n                \"getAccountByHomeId: No homeAccountId provided\"\n            );\n            return null;\n        }\n\n        const account = this.browserStorage.getAccountInfoFilteredBy({\n            homeAccountId,\n        });\n        if (account) {\n            this.logger.verbose(\n                \"getAccountByHomeId: Account matching homeAccountId found, returning\"\n            );\n            this.logger.verbosePii(\n                `getAccountByHomeId: Returning signed-in accounts matching homeAccountId: ${homeAccountId}`\n            );\n            return account;\n        } else {\n            this.logger.verbose(\n                \"getAccountByHomeId: No matching account found, returning null\"\n            );\n            return null;\n        }\n    }\n\n    /**\n     * Returns the signed in account matching localAccountId.\n     * (the account object is created at the time of successful login)\n     * or null when no matching account is found\n     * @param localAccountId\n     * @returns The account object stored in MSAL\n     */\n    getAccountByLocalId(localAccountId: string): AccountInfo | null {\n        this.logger.trace(\"getAccountByLocalId called\");\n        if (!localAccountId) {\n            this.logger.warning(\n                \"getAccountByLocalId: No localAccountId provided\"\n            );\n            return null;\n        }\n\n        const account = this.browserStorage.getAccountInfoFilteredBy({\n            localAccountId,\n        });\n        if (account) {\n            this.logger.verbose(\n                \"getAccountByLocalId: Account matching localAccountId found, returning\"\n            );\n            this.logger.verbosePii(\n                `getAccountByLocalId: Returning signed-in accounts matching localAccountId: ${localAccountId}`\n            );\n            return account;\n        } else {\n            this.logger.verbose(\n                \"getAccountByLocalId: No matching account found, returning null\"\n            );\n            return null;\n        }\n    }\n\n    /**\n     * Sets the account to use as the active account. If no account is passed to the acquireToken APIs, then MSAL will use this active account.\n     * @param account\n     */\n    setActiveAccount(account: AccountInfo | null): void {\n        this.browserStorage.setActiveAccount(account);\n    }\n\n    /**\n     * Gets the currently active account\n     */\n    getActiveAccount(): AccountInfo | null {\n        return this.browserStorage.getActiveAccount();\n    }\n\n    // #endregion\n\n    /**\n     * Hydrates the cache with the tokens from an AuthenticationResult\n     * @param result\n     * @param request\n     * @returns\n     */\n    async hydrateCache(\n        result: AuthenticationResult,\n        request:\n            | SilentRequest\n            | SsoSilentRequest\n            | RedirectRequest\n            | PopupRequest\n    ): Promise<void> {\n        this.logger.verbose(\"hydrateCache called\");\n\n        // Account gets saved to browser storage regardless of native or not\n        const accountEntity = AccountEntity.createFromAccountInfo(\n            result.account,\n            result.cloudGraphHostName,\n            result.msGraphHost\n        );\n        this.browserStorage.setAccount(accountEntity);\n\n        if (result.fromNativeBroker) {\n            this.logger.verbose(\n                \"Response was from native broker, storing in-memory\"\n            );\n            // Tokens from native broker are stored in-memory\n            return this.nativeInternalStorage.hydrateCache(result, request);\n        } else {\n            return this.browserStorage.hydrateCache(result, request);\n        }\n    }\n\n    // #region Helpers\n\n    /**\n     * Helper to validate app environment before making an auth request\n     *\n     * @protected\n     * @param {InteractionType} interactionType What kind of interaction is being used\n     * @param {boolean} [isAppEmbedded=false] Whether to set interaction in progress temp cache flag\n     */\n    public preflightBrowserEnvironmentCheck(\n        interactionType: InteractionType,\n        isAppEmbedded: boolean = false\n    ): void {\n        this.logger.verbose(\"preflightBrowserEnvironmentCheck started\");\n        // Block request if not in browser environment\n        BrowserUtils.blockNonBrowserEnvironment(this.isBrowserEnvironment);\n\n        // Block redirects if in an iframe\n        BrowserUtils.blockRedirectInIframe(\n            interactionType,\n            this.config.system.allowRedirectInIframe\n        );\n\n        // Block auth requests inside a hidden iframe\n        BrowserUtils.blockReloadInHiddenIframes();\n\n        // Block redirectUri opened in a popup from calling MSAL APIs\n        BrowserUtils.blockAcquireTokenInPopups();\n\n        // Block token acquisition before initialize has been called\n        BrowserUtils.blockAPICallsBeforeInitialize(this.initialized);\n\n        // Block redirects if memory storage is enabled but storeAuthStateInCookie is not\n        if (\n            interactionType === InteractionType.Redirect &&\n            this.config.cache.cacheLocation ===\n                BrowserCacheLocation.MemoryStorage &&\n            !this.config.cache.storeAuthStateInCookie\n        ) {\n            throw createBrowserConfigurationAuthError(\n                BrowserConfigurationAuthErrorCodes.inMemRedirectUnavailable\n            );\n        }\n\n        if (\n            interactionType === InteractionType.Redirect ||\n            interactionType === InteractionType.Popup\n        ) {\n            this.preflightInteractiveRequest(!isAppEmbedded);\n        }\n    }\n\n    /**\n     * Preflight check for interactive requests\n     *\n     * @protected\n     * @param {boolean} setInteractionInProgress Whether to set interaction in progress temp cache flag\n     */\n    protected preflightInteractiveRequest(\n        setInteractionInProgress: boolean\n    ): void {\n        this.logger.verbose(\n            \"preflightInteractiveRequest called, validating app environment\"\n        );\n        // block the reload if it occurred inside a hidden iframe\n        BrowserUtils.blockReloadInHiddenIframes();\n\n        // Set interaction in progress temporary cache or throw if alread set.\n        if (setInteractionInProgress) {\n            this.getBrowserStorage().setInteractionInProgress(true);\n        }\n    }\n\n    /**\n     * Acquire a token from native device (e.g. WAM)\n     * @param request\n     */\n    public async acquireTokenNative(\n        request: PopupRequest | SilentRequest | SsoSilentRequest,\n        apiId: ApiId,\n        accountId?: string\n    ): Promise<AuthenticationResult> {\n        this.logger.trace(\"acquireTokenNative called\");\n        if (!this.nativeExtensionProvider) {\n            throw createBrowserAuthError(\n                BrowserAuthErrorCodes.nativeConnectionNotEstablished\n            );\n        }\n\n        const nativeClient = new NativeInteractionClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            apiId,\n            this.performanceClient,\n            this.nativeExtensionProvider,\n            accountId || this.getNativeAccountId(request),\n            this.nativeInternalStorage,\n            request.correlationId\n        );\n\n        return nativeClient.acquireToken(request);\n    }\n\n    /**\n     * Returns boolean indicating if this request can use the native broker\n     * @param request\n     */\n    public canUseNative(\n        request: RedirectRequest | PopupRequest | SsoSilentRequest,\n        accountId?: string\n    ): boolean {\n        this.logger.trace(\"canUseNative called\");\n        if (\n            !NativeMessageHandler.isNativeAvailable(\n                this.config,\n                this.logger,\n                this.nativeExtensionProvider,\n                request.authenticationScheme\n            )\n        ) {\n            this.logger.trace(\n                \"canUseNative: isNativeAvailable returned false, returning false\"\n            );\n            return false;\n        }\n\n        if (request.prompt) {\n            switch (request.prompt) {\n                case PromptValue.NONE:\n                case PromptValue.CONSENT:\n                case PromptValue.LOGIN:\n                    this.logger.trace(\n                        \"canUseNative: prompt is compatible with native flow\"\n                    );\n                    break;\n                default:\n                    this.logger.trace(\n                        `canUseNative: prompt = ${request.prompt} is not compatible with native flow, returning false`\n                    );\n                    return false;\n            }\n        }\n\n        if (!accountId && !this.getNativeAccountId(request)) {\n            this.logger.trace(\n                \"canUseNative: nativeAccountId is not available, returning false\"\n            );\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Get the native accountId from the account\n     * @param request\n     * @returns\n     */\n    public getNativeAccountId(\n        request: RedirectRequest | PopupRequest | SsoSilentRequest\n    ): string {\n        const account =\n            request.account ||\n            this.browserStorage.getAccountInfoByHints(\n                request.loginHint,\n                request.sid\n            ) ||\n            this.getActiveAccount();\n\n        return (account && account.nativeAccountId) || \"\";\n    }\n\n    /**\n     * Returns new instance of the Popup Interaction Client\n     * @param correlationId\n     */\n    public createPopupClient(correlationId?: string): PopupClient {\n        return new PopupClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            this.performanceClient,\n            this.nativeInternalStorage,\n            this.nativeExtensionProvider,\n            correlationId\n        );\n    }\n\n    /**\n     * Returns new instance of the Redirect Interaction Client\n     * @param correlationId\n     */\n    protected createRedirectClient(correlationId?: string): RedirectClient {\n        return new RedirectClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            this.performanceClient,\n            this.nativeInternalStorage,\n            this.nativeExtensionProvider,\n            correlationId\n        );\n    }\n\n    /**\n     * Returns new instance of the Silent Iframe Interaction Client\n     * @param correlationId\n     */\n    public createSilentIframeClient(\n        correlationId?: string\n    ): SilentIframeClient {\n        return new SilentIframeClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            ApiId.ssoSilent,\n            this.performanceClient,\n            this.nativeInternalStorage,\n            this.nativeExtensionProvider,\n            correlationId\n        );\n    }\n\n    /**\n     * Returns new instance of the Silent Cache Interaction Client\n     */\n    protected createSilentCacheClient(\n        correlationId?: string\n    ): SilentCacheClient {\n        return new SilentCacheClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            this.performanceClient,\n            this.nativeExtensionProvider,\n            correlationId\n        );\n    }\n\n    /**\n     * Returns new instance of the Silent Refresh Interaction Client\n     */\n    protected createSilentRefreshClient(\n        correlationId?: string\n    ): SilentRefreshClient {\n        return new SilentRefreshClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            this.performanceClient,\n            this.nativeExtensionProvider,\n            correlationId\n        );\n    }\n\n    /**\n     * Returns new instance of the Silent AuthCode Interaction Client\n     */\n    protected createSilentAuthCodeClient(\n        correlationId?: string\n    ): SilentAuthCodeClient {\n        return new SilentAuthCodeClient(\n            this.config,\n            this.browserStorage,\n            this.browserCrypto,\n            this.logger,\n            this.eventHandler,\n            this.navigationClient,\n            ApiId.acquireTokenByCode,\n            this.performanceClient,\n            this.nativeExtensionProvider,\n            correlationId\n        );\n    }\n\n    /**\n     * Adds event callbacks to array\n     * @param callback\n     */\n    addEventCallback(callback: EventCallbackFunction): string | null {\n        return this.eventHandler.addEventCallback(callback);\n    }\n\n    /**\n     * Removes callback with provided id from callback array\n     * @param callbackId\n     */\n    removeEventCallback(callbackId: string): void {\n        this.eventHandler.removeEventCallback(callbackId);\n    }\n\n    /**\n     * Registers a callback to receive performance events.\n     *\n     * @param {PerformanceCallbackFunction} callback\n     * @returns {string}\n     */\n    addPerformanceCallback(callback: PerformanceCallbackFunction): string {\n        return this.performanceClient.addPerformanceCallback(callback);\n    }\n\n    /**\n     * Removes a callback registered with addPerformanceCallback.\n     *\n     * @param {string} callbackId\n     * @returns {boolean}\n     */\n    removePerformanceCallback(callbackId: string): boolean {\n        return this.performanceClient.removePerformanceCallback(callbackId);\n    }\n\n    /**\n     * Adds event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    enableAccountStorageEvents(): void {\n        this.eventHandler.enableAccountStorageEvents();\n    }\n\n    /**\n     * Removes event listener that emits an event when a user account is added or removed from localstorage in a different browser tab or window\n     */\n    disableAccountStorageEvents(): void {\n        this.eventHandler.disableAccountStorageEvents();\n    }\n\n    /**\n     * Gets the token cache for the application.\n     */\n    getTokenCache(): ITokenCache {\n        return this.tokenCache;\n    }\n\n    /**\n     * Returns the logger instance\n     */\n    public getLogger(): Logger {\n        return this.logger;\n    }\n\n    /**\n     * Replaces the default logger set in configurations with new Logger with new configurations\n     * @param logger Logger instance\n     */\n    setLogger(logger: Logger): void {\n        this.logger = logger;\n    }\n\n    /**\n     * Called by wrapper libraries (Angular & React) to set SKU and Version passed down to telemetry, logger, etc.\n     * @param sku\n     * @param version\n     */\n    initializeWrapperLibrary(sku: WrapperSKU, version: string): void {\n        // Validate the SKU passed in is one we expect\n        this.browserStorage.setWrapperMetadata(sku, version);\n    }\n\n    /**\n     * Sets navigation client\n     * @param navigationClient\n     */\n    setNavigationClient(navigationClient: INavigationClient): void {\n        this.navigationClient = navigationClient;\n    }\n\n    /**\n     * Returns the configuration object\n     */\n    public getConfiguration(): BrowserConfiguration {\n        return this.config;\n    }\n\n    /**\n     * Returns the performance client\n     */\n    public getPerformanceClient(): IPerformanceClient {\n        return this.performanceClient;\n    }\n\n    /**\n     * Returns the browser storage\n     */\n    public getBrowserStorage(): BrowserCacheManager {\n        return this.browserStorage;\n    }\n\n    /**\n     * Returns the browser env indicator\n     */\n    public isBrowserEnv(): boolean {\n        return this.isBrowserEnvironment;\n    }\n\n    /**\n     * Returns the event handler\n     */\n    getEventHandler(): EventHandler {\n        return this.eventHandler;\n    }\n\n    /**\n     * Generates a correlation id for a request if none is provided.\n     *\n     * @protected\n     * @param {?Partial<BaseAuthRequest>} [request]\n     * @returns {string}\n     */\n    protected getRequestCorrelationId(\n        request?: Partial<BaseAuthRequest>\n    ): string {\n        if (request?.correlationId) {\n            return request.correlationId;\n        }\n\n        if (this.isBrowserEnvironment) {\n            return createNewGuid();\n        }\n\n        /*\n         * Included for fallback for non-browser environments,\n         * and to ensure this method always returns a string.\n         */\n        return Constants.EMPTY_STRING;\n    }\n\n    // #endregion\n\n    /**\n     * Use when initiating the login process by redirecting the user's browser to the authorization endpoint. This function redirects the page, so\n     * any code that follows this function will not execute.\n     *\n     * IMPORTANT: It is NOT recommended to have code that is dependent on the resolution of the Promise. This function will navigate away from the current\n     * browser window. It currently returns a Promise in order to reflect the asynchronous nature of the code running in this function.\n     *\n     * @param request\n     */\n    async loginRedirect(request?: RedirectRequest): Promise<void> {\n        const correlationId: string = this.getRequestCorrelationId(request);\n        this.logger.verbose(\"loginRedirect called\", correlationId);\n        return this.acquireTokenRedirect({\n            correlationId,\n            ...(request || DEFAULT_REQUEST),\n        });\n    }\n\n    /**\n     * Use when initiating the login process via opening a popup window in the user's browser\n     *\n     * @param request\n     *\n     * @returns A promise that is fulfilled when this function has completed, or rejected if an error was raised.\n     */\n    loginPopup(request?: PopupRequest): Promise<AuthenticationResult> {\n        const correlationId: string = this.getRequestCorrelationId(request);\n        this.logger.verbose(\"loginPopup called\", correlationId);\n        return this.acquireTokenPopup({\n            correlationId,\n            ...(request || DEFAULT_REQUEST),\n        });\n    }\n\n    /**\n     * Silently acquire an access token for a given set of scopes. Returns currently processing promise if parallel requests are made.\n     *\n     * @param {@link (SilentRequest:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse} object\n     */\n    async acquireTokenSilent(\n        request: SilentRequest\n    ): Promise<AuthenticationResult> {\n        const correlationId = this.getRequestCorrelationId(request);\n        const atsMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.AcquireTokenSilent,\n            correlationId\n        );\n        atsMeasurement.add({\n            cacheLookupPolicy: request.cacheLookupPolicy,\n        });\n\n        this.preflightBrowserEnvironmentCheck(InteractionType.Silent);\n        this.logger.verbose(\"acquireTokenSilent called\", correlationId);\n\n        const account = request.account || this.getActiveAccount();\n        if (!account) {\n            throw createBrowserAuthError(BrowserAuthErrorCodes.noAccountError);\n        }\n\n        const thumbprint: RequestThumbprint = {\n            clientId: this.config.auth.clientId,\n            authority: request.authority || Constants.EMPTY_STRING,\n            scopes: request.scopes,\n            homeAccountIdentifier: account.homeAccountId,\n            claims: request.claims,\n            authenticationScheme: request.authenticationScheme,\n            resourceRequestMethod: request.resourceRequestMethod,\n            resourceRequestUri: request.resourceRequestUri,\n            shrClaims: request.shrClaims,\n            sshKid: request.sshKid,\n        };\n        const silentRequestKey = JSON.stringify(thumbprint);\n\n        const cachedResponse =\n            this.activeSilentTokenRequests.get(silentRequestKey);\n        if (typeof cachedResponse === \"undefined\") {\n            this.logger.verbose(\n                \"acquireTokenSilent called for the first time, storing active request\",\n                correlationId\n            );\n\n            const response = invokeAsync(\n                this.acquireTokenSilentAsync.bind(this),\n                PerformanceEvents.AcquireTokenSilentAsync,\n                this.logger,\n                this.performanceClient,\n                correlationId\n            )(\n                {\n                    ...request,\n                    correlationId,\n                },\n                account\n            )\n                .then((result) => {\n                    this.activeSilentTokenRequests.delete(silentRequestKey);\n                    atsMeasurement.add({\n                        accessTokenSize: result.accessToken.length,\n                        idTokenSize: result.idToken.length,\n                    });\n                    atsMeasurement.end({\n                        success: true,\n                        fromCache: result.fromCache,\n                        isNativeBroker: result.fromNativeBroker,\n                        cacheLookupPolicy: request.cacheLookupPolicy,\n                        requestId: result.requestId,\n                    });\n                    return result;\n                })\n                .catch((error: AuthError) => {\n                    this.activeSilentTokenRequests.delete(silentRequestKey);\n                    atsMeasurement.end({\n                        errorCode: error.errorCode,\n                        subErrorCode: error.subError,\n                        success: false,\n                    });\n                    throw error;\n                });\n            this.activeSilentTokenRequests.set(silentRequestKey, response);\n            return response;\n        } else {\n            this.logger.verbose(\n                \"acquireTokenSilent has been called previously, returning the result from the first call\",\n                correlationId\n            );\n            // Discard measurements for memoized calls, as they are usually only a couple of ms and will artificially deflate metrics\n            atsMeasurement.discard();\n            return cachedResponse;\n        }\n    }\n\n    /**\n     * Silently acquire an access token for a given set of scopes. Will use cached token if available, otherwise will attempt to acquire a new token from the network via refresh token.\n     * @param {@link (SilentRequest:type)}\n     * @param {@link (AccountInfo:type)}\n     * @returns {Promise.<AuthenticationResult>} - a promise that is fulfilled when this function has completed, or rejected if an error was raised. Returns the {@link AuthResponse}\n     */\n    protected async acquireTokenSilentAsync(\n        request: SilentRequest,\n        account: AccountInfo\n    ): Promise<AuthenticationResult> {\n        this.performanceClient.addQueueMeasurement(\n            PerformanceEvents.AcquireTokenSilentAsync,\n            request.correlationId\n        );\n\n        this.eventHandler.emitEvent(\n            EventType.ACQUIRE_TOKEN_START,\n            InteractionType.Silent,\n            request\n        );\n        this.atsAsyncMeasurement = this.performanceClient.startMeasurement(\n            PerformanceEvents.AcquireTokenSilentAsync,\n            request.correlationId\n        );\n        this.atsAsyncMeasurement?.increment({\n            visibilityChangeCount: 0,\n        });\n        document.addEventListener(\"visibilitychange\", this.trackPageVisibility);\n        let result: Promise<AuthenticationResult>;\n        if (\n            NativeMessageHandler.isNativeAvailable(\n                this.config,\n                this.logger,\n                this.nativeExtensionProvider,\n                request.authenticationScheme\n            ) &&\n            account.nativeAccountId\n        ) {\n            this.logger.verbose(\n                \"acquireTokenSilent - attempting to acquire token from native platform\"\n            );\n            const silentRequest: SilentRequest = {\n                ...request,\n                account,\n            };\n            result = this.acquireTokenNative(\n                silentRequest,\n                ApiId.acquireTokenSilent_silentFlow\n            ).catch(async (e: AuthError) => {\n                // If native token acquisition fails for availability reasons fallback to web flow\n                if (e instanceof NativeAuthError && isFatalNativeAuthError(e)) {\n                    this.logger.verbose(\n                        \"acquireTokenSilent - native platform unavailable, falling back to web flow\"\n                    );\n                    this.nativeExtensionProvider = undefined; // Prevent future requests from continuing to attempt\n\n                    // Cache will not contain tokens, given that previous WAM requests succeeded. Skip cache and RT renewal and go straight to iframe renewal\n                    const silentIframeClient = this.createSilentIframeClient(\n                        request.correlationId\n                    );\n                    return silentIframeClient.acquireToken(request);\n                }\n                throw e;\n            });\n        } else {\n            this.logger.verbose(\n                \"acquireTokenSilent - attempting to acquire token from web flow\"\n            );\n\n            const silentCacheClient = this.createSilentCacheClient(\n                request.correlationId\n            );\n\n            const silentRequest = await invokeAsync(\n                silentCacheClient.initializeSilentRequest.bind(\n                    silentCacheClient\n                ),\n                PerformanceEvents.InitializeSilentRequest,\n                this.logger,\n                this.performanceClient,\n                request.correlationId\n            )(request, account);\n\n            const requestWithCLP = {\n                ...request,\n                // set the request's CacheLookupPolicy to Default if it was not optionally passed in\n                cacheLookupPolicy:\n                    request.cacheLookupPolicy || CacheLookupPolicy.Default,\n            };\n\n            result = invokeAsync(\n                this.acquireTokenFromCache.bind(this),\n                PerformanceEvents.AcquireTokenFromCache,\n                this.logger,\n                this.performanceClient,\n                silentRequest.correlationId\n            )(silentCacheClient, silentRequest, requestWithCLP).catch(\n                (cacheError: AuthError) => {\n                    if (\n                        requestWithCLP.cacheLookupPolicy ===\n                        CacheLookupPolicy.AccessToken\n                    ) {\n                        throw cacheError;\n                    }\n\n                    // block the reload if it occurred inside a hidden iframe\n                    BrowserUtils.blockReloadInHiddenIframes();\n                    this.eventHandler.emitEvent(\n                        EventType.ACQUIRE_TOKEN_NETWORK_START,\n                        InteractionType.Silent,\n                        silentRequest\n                    );\n\n                    return invokeAsync(\n                        this.acquireTokenByRefreshToken.bind(this),\n                        PerformanceEvents.AcquireTokenByRefreshToken,\n                        this.logger,\n                        this.performanceClient,\n                        silentRequest.correlationId\n                    )(silentRequest, requestWithCLP).catch(\n                        (refreshTokenError: AuthError) => {\n                            const isServerError =\n                                refreshTokenError instanceof ServerError;\n                            const isInteractionRequiredError =\n                                refreshTokenError instanceof\n                                InteractionRequiredAuthError;\n                            const isInvalidGrantError =\n                                refreshTokenError.errorCode ===\n                                BrowserConstants.INVALID_GRANT_ERROR;\n\n                            if (\n                                (!isServerError ||\n                                    !isInvalidGrantError ||\n                                    isInteractionRequiredError ||\n                                    requestWithCLP.cacheLookupPolicy ===\n                                        CacheLookupPolicy.AccessTokenAndRefreshToken ||\n                                    requestWithCLP.cacheLookupPolicy ===\n                                        CacheLookupPolicy.RefreshToken) &&\n                                requestWithCLP.cacheLookupPolicy !==\n                                    CacheLookupPolicy.Skip\n                            ) {\n                                throw refreshTokenError;\n                            }\n\n                            this.logger.verbose(\n                                \"Refresh token expired/invalid or CacheLookupPolicy is set to Skip, attempting acquire token by iframe.\",\n                                request.correlationId\n                            );\n                            return invokeAsync(\n                                this.acquireTokenBySilentIframe.bind(this),\n                                PerformanceEvents.AcquireTokenBySilentIframe,\n                                this.logger,\n                                this.performanceClient,\n                                silentRequest.correlationId\n                            )(silentRequest);\n                        }\n                    );\n                }\n            );\n        }\n\n        return result\n            .then((response) => {\n                this.eventHandler.emitEvent(\n                    EventType.ACQUIRE_TOKEN_SUCCESS,\n                    InteractionType.Silent,\n                    response\n                );\n                this.atsAsyncMeasurement?.end({\n                    success: true,\n                    fromCache: response.fromCache,\n                    isNativeBroker: response.fromNativeBroker,\n                    requestId: response.requestId,\n                });\n                return response;\n            })\n            .catch((tokenRenewalError: AuthError) => {\n                this.eventHandler.emitEvent(\n                    EventType.ACQUIRE_TOKEN_FAILURE,\n                    InteractionType.Silent,\n                    null,\n                    tokenRenewalError\n                );\n                this.atsAsyncMeasurement?.end({\n                    errorCode: tokenRenewalError.errorCode,\n                    subErrorCode: tokenRenewalError.subError,\n                    success: false,\n                });\n                throw tokenRenewalError;\n            })\n            .finally(() => {\n                document.removeEventListener(\n                    \"visibilitychange\",\n                    this.trackPageVisibility\n                );\n            });\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"@azure/msal-common\";\nimport * as BrowserAuthErrorCodes from \"./BrowserAuthErrorCodes\";\nexport { BrowserAuthErrorCodes }; // Allow importing as \"BrowserAuthErrorCodes\"\n\nconst ErrorLink = \"For more visit: aka.ms/msaljs/browser-errors\";\n\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n */\nexport const BrowserAuthErrorMessages = {\n    [BrowserAuthErrorCodes.pkceNotCreated]:\n        \"The PKCE code challenge and verifier could not be generated.\",\n    [BrowserAuthErrorCodes.cryptoNonExistent]:\n        \"The crypto object or function is not available.\",\n    [BrowserAuthErrorCodes.emptyNavigateUri]:\n        \"Navigation URI is empty. Please check stack trace for more info.\",\n    [BrowserAuthErrorCodes.hashEmptyError]: `Hash value cannot be processed because it is empty. Please verify that your redirectUri is not clearing the hash. ${ErrorLink}`,\n    [BrowserAuthErrorCodes.noStateInHash]:\n        \"Hash does not contain state. Please verify that the request originated from msal.\",\n    [BrowserAuthErrorCodes.hashDoesNotContainKnownProperties]: `Hash does not contain known properites. Please verify that your redirectUri is not changing the hash.  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.unableToParseState]:\n        \"Unable to parse state. Please verify that the request originated from msal.\",\n    [BrowserAuthErrorCodes.stateInteractionTypeMismatch]:\n        \"Hash contains state but the interaction type does not match the caller.\",\n    [BrowserAuthErrorCodes.interactionInProgress]: `Interaction is currently in progress. Please ensure that this interaction has been completed before calling an interactive API.   ${ErrorLink}`,\n    [BrowserAuthErrorCodes.popupWindowError]:\n        \"Error opening popup window. This can happen if you are using IE or if popups are blocked in the browser.\",\n    [BrowserAuthErrorCodes.emptyWindowError]:\n        \"window.open returned null or undefined window object.\",\n    [BrowserAuthErrorCodes.userCancelled]: \"User cancelled the flow.\",\n    [BrowserAuthErrorCodes.monitorPopupTimeout]: `Token acquisition in popup failed due to timeout.  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.monitorWindowTimeout]: `Token acquisition in iframe failed due to timeout.  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.redirectInIframe]:\n        \"Redirects are not supported for iframed or brokered applications. Please ensure you are using MSAL.js in a top frame of the window if using the redirect APIs, or use the popup APIs.\",\n    [BrowserAuthErrorCodes.blockIframeReload]: `Request was blocked inside an iframe because MSAL detected an authentication response.  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.blockNestedPopups]:\n        \"Request was blocked inside a popup because MSAL detected it was running in a popup.\",\n    [BrowserAuthErrorCodes.iframeClosedPrematurely]:\n        \"The iframe being monitored was closed prematurely.\",\n    [BrowserAuthErrorCodes.silentLogoutUnsupported]:\n        \"Silent logout not supported. Please call logoutRedirect or logoutPopup instead.\",\n    [BrowserAuthErrorCodes.noAccountError]:\n        \"No account object provided to acquireTokenSilent and no active account has been set. Please call setActiveAccount or provide an account on the request.\",\n    [BrowserAuthErrorCodes.silentPromptValueError]:\n        \"The value given for the prompt value is not valid for silent requests - must be set to 'none' or 'no_session'.\",\n    [BrowserAuthErrorCodes.noTokenRequestCacheError]:\n        \"No token request found in cache.\",\n    [BrowserAuthErrorCodes.unableToParseTokenRequestCacheError]:\n        \"The cached token request could not be parsed.\",\n    [BrowserAuthErrorCodes.noCachedAuthorityError]:\n        \"No cached authority found.\",\n    [BrowserAuthErrorCodes.authRequestNotSetError]:\n        \"Auth Request not set. Please ensure initiateAuthRequest was called from the InteractionHandler\",\n    [BrowserAuthErrorCodes.invalidCacheType]: \"Invalid cache type\",\n    [BrowserAuthErrorCodes.nonBrowserEnvironment]:\n        \"Login and token requests are not supported in non-browser environments.\",\n    [BrowserAuthErrorCodes.databaseNotOpen]: \"Database is not open!\",\n    [BrowserAuthErrorCodes.noNetworkConnectivity]:\n        \"No network connectivity. Check your internet connection.\",\n    [BrowserAuthErrorCodes.postRequestFailed]:\n        \"Network request failed: If the browser threw a CORS error, check that the redirectUri is registered in the Azure App Portal as type 'SPA'\",\n    [BrowserAuthErrorCodes.getRequestFailed]:\n        \"Network request failed. Please check the network trace to determine root cause.\",\n    [BrowserAuthErrorCodes.failedToParseResponse]:\n        \"Failed to parse network response. Check network trace.\",\n    [BrowserAuthErrorCodes.unableToLoadToken]: \"Error loading token to cache.\",\n    [BrowserAuthErrorCodes.cryptoKeyNotFound]:\n        \"Cryptographic Key or Keypair not found in browser storage.\",\n    [BrowserAuthErrorCodes.authCodeRequired]:\n        \"An authorization code must be provided (as the `code` property on the request) to this flow.\",\n    [BrowserAuthErrorCodes.authCodeOrNativeAccountIdRequired]:\n        \"An authorization code or nativeAccountId must be provided to this flow.\",\n    [BrowserAuthErrorCodes.spaCodeAndNativeAccountIdPresent]:\n        \"Request cannot contain both spa code and native account id.\",\n    [BrowserAuthErrorCodes.databaseUnavailable]:\n        \"IndexedDB, which is required for persistent cryptographic key storage, is unavailable. This may be caused by browser privacy features which block persistent storage in third-party contexts.\",\n    [BrowserAuthErrorCodes.unableToAcquireTokenFromNativePlatform]: `Unable to acquire token from native platform.  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.nativeHandshakeTimeout]:\n        \"Timed out while attempting to establish connection to browser extension\",\n    [BrowserAuthErrorCodes.nativeExtensionNotInstalled]:\n        \"Native extension is not installed. If you think this is a mistake call the initialize function.\",\n    [BrowserAuthErrorCodes.nativeConnectionNotEstablished]: `Connection to native platform has not been established. Please install a compatible browser extension and run initialize().  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.uninitializedPublicClientApplication]: `You must call and await the initialize function before attempting to call any other MSAL API.  ${ErrorLink}`,\n    [BrowserAuthErrorCodes.nativePromptNotSupported]:\n        \"The provided prompt is not supported by the native platform. This request should be routed to the web based flow.\",\n    [BrowserAuthErrorCodes.invalidBase64String]:\n        \"Invalid base64 encoded string.\",\n};\n\n/**\n * BrowserAuthErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use exported BrowserAuthErrorCodes instead.\n * In your app you can do :\n * ```\n * import { BrowserAuthErrorCodes } from \"@azure/msal-browser\";\n * ```\n */\nexport const BrowserAuthErrorMessage = {\n    pkceNotGenerated: {\n        code: BrowserAuthErrorCodes.pkceNotCreated,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.pkceNotCreated],\n    },\n    cryptoDoesNotExist: {\n        code: BrowserAuthErrorCodes.cryptoNonExistent,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.cryptoNonExistent],\n    },\n    emptyNavigateUriError: {\n        code: BrowserAuthErrorCodes.emptyNavigateUri,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.emptyNavigateUri],\n    },\n    hashEmptyError: {\n        code: BrowserAuthErrorCodes.hashEmptyError,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.hashEmptyError],\n    },\n    hashDoesNotContainStateError: {\n        code: BrowserAuthErrorCodes.noStateInHash,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.noStateInHash],\n    },\n    hashDoesNotContainKnownPropertiesError: {\n        code: BrowserAuthErrorCodes.hashDoesNotContainKnownProperties,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.hashDoesNotContainKnownProperties\n        ],\n    },\n    unableToParseStateError: {\n        code: BrowserAuthErrorCodes.unableToParseState,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.unableToParseState\n        ],\n    },\n    stateInteractionTypeMismatchError: {\n        code: BrowserAuthErrorCodes.stateInteractionTypeMismatch,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.stateInteractionTypeMismatch\n        ],\n    },\n    interactionInProgress: {\n        code: BrowserAuthErrorCodes.interactionInProgress,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.interactionInProgress\n        ],\n    },\n    popupWindowError: {\n        code: BrowserAuthErrorCodes.popupWindowError,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.popupWindowError],\n    },\n    emptyWindowError: {\n        code: BrowserAuthErrorCodes.emptyWindowError,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.emptyWindowError],\n    },\n    userCancelledError: {\n        code: BrowserAuthErrorCodes.userCancelled,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.userCancelled],\n    },\n    monitorPopupTimeoutError: {\n        code: BrowserAuthErrorCodes.monitorPopupTimeout,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.monitorPopupTimeout\n        ],\n    },\n    monitorIframeTimeoutError: {\n        code: BrowserAuthErrorCodes.monitorWindowTimeout,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.monitorWindowTimeout\n        ],\n    },\n    redirectInIframeError: {\n        code: BrowserAuthErrorCodes.redirectInIframe,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.redirectInIframe],\n    },\n    blockTokenRequestsInHiddenIframeError: {\n        code: BrowserAuthErrorCodes.blockIframeReload,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.blockIframeReload],\n    },\n    blockAcquireTokenInPopupsError: {\n        code: BrowserAuthErrorCodes.blockNestedPopups,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.blockNestedPopups],\n    },\n    iframeClosedPrematurelyError: {\n        code: BrowserAuthErrorCodes.iframeClosedPrematurely,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.iframeClosedPrematurely\n        ],\n    },\n    silentLogoutUnsupportedError: {\n        code: BrowserAuthErrorCodes.silentLogoutUnsupported,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.silentLogoutUnsupported\n        ],\n    },\n    noAccountError: {\n        code: BrowserAuthErrorCodes.noAccountError,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.noAccountError],\n    },\n    silentPromptValueError: {\n        code: BrowserAuthErrorCodes.silentPromptValueError,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.silentPromptValueError\n        ],\n    },\n    noTokenRequestCacheError: {\n        code: BrowserAuthErrorCodes.noTokenRequestCacheError,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.noTokenRequestCacheError\n        ],\n    },\n    unableToParseTokenRequestCacheError: {\n        code: BrowserAuthErrorCodes.unableToParseTokenRequestCacheError,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.unableToParseTokenRequestCacheError\n        ],\n    },\n    noCachedAuthorityError: {\n        code: BrowserAuthErrorCodes.noCachedAuthorityError,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.noCachedAuthorityError\n        ],\n    },\n    authRequestNotSet: {\n        code: BrowserAuthErrorCodes.authRequestNotSetError,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.authRequestNotSetError\n        ],\n    },\n    invalidCacheType: {\n        code: BrowserAuthErrorCodes.invalidCacheType,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.invalidCacheType],\n    },\n    notInBrowserEnvironment: {\n        code: BrowserAuthErrorCodes.nonBrowserEnvironment,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.nonBrowserEnvironment\n        ],\n    },\n    databaseNotOpen: {\n        code: BrowserAuthErrorCodes.databaseNotOpen,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.databaseNotOpen],\n    },\n    noNetworkConnectivity: {\n        code: BrowserAuthErrorCodes.noNetworkConnectivity,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.noNetworkConnectivity\n        ],\n    },\n    postRequestFailed: {\n        code: BrowserAuthErrorCodes.postRequestFailed,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.postRequestFailed],\n    },\n    getRequestFailed: {\n        code: BrowserAuthErrorCodes.getRequestFailed,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.getRequestFailed],\n    },\n    failedToParseNetworkResponse: {\n        code: BrowserAuthErrorCodes.failedToParseResponse,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.failedToParseResponse\n        ],\n    },\n    unableToLoadTokenError: {\n        code: BrowserAuthErrorCodes.unableToLoadToken,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.unableToLoadToken],\n    },\n    signingKeyNotFoundInStorage: {\n        code: BrowserAuthErrorCodes.cryptoKeyNotFound,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.cryptoKeyNotFound],\n    },\n    authCodeRequired: {\n        code: BrowserAuthErrorCodes.authCodeRequired,\n        desc: BrowserAuthErrorMessages[BrowserAuthErrorCodes.authCodeRequired],\n    },\n    authCodeOrNativeAccountRequired: {\n        code: BrowserAuthErrorCodes.authCodeOrNativeAccountIdRequired,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.authCodeOrNativeAccountIdRequired\n        ],\n    },\n    spaCodeAndNativeAccountPresent: {\n        code: BrowserAuthErrorCodes.spaCodeAndNativeAccountIdPresent,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.spaCodeAndNativeAccountIdPresent\n        ],\n    },\n    databaseUnavailable: {\n        code: BrowserAuthErrorCodes.databaseUnavailable,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.databaseUnavailable\n        ],\n    },\n    unableToAcquireTokenFromNativePlatform: {\n        code: BrowserAuthErrorCodes.unableToAcquireTokenFromNativePlatform,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.unableToAcquireTokenFromNativePlatform\n        ],\n    },\n    nativeHandshakeTimeout: {\n        code: BrowserAuthErrorCodes.nativeHandshakeTimeout,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.nativeHandshakeTimeout\n        ],\n    },\n    nativeExtensionNotInstalled: {\n        code: BrowserAuthErrorCodes.nativeExtensionNotInstalled,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.nativeExtensionNotInstalled\n        ],\n    },\n    nativeConnectionNotEstablished: {\n        code: BrowserAuthErrorCodes.nativeConnectionNotEstablished,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.nativeConnectionNotEstablished\n        ],\n    },\n    uninitializedPublicClientApplication: {\n        code: BrowserAuthErrorCodes.uninitializedPublicClientApplication,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.uninitializedPublicClientApplication\n        ],\n    },\n    nativePromptNotSupported: {\n        code: BrowserAuthErrorCodes.nativePromptNotSupported,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.nativePromptNotSupported\n        ],\n    },\n    invalidBase64StringError: {\n        code: BrowserAuthErrorCodes.invalidBase64String,\n        desc: BrowserAuthErrorMessages[\n            BrowserAuthErrorCodes.invalidBase64String\n        ],\n    },\n};\n\n/**\n * Browser library error class thrown by the MSAL.js library for SPAs\n */\nexport class BrowserAuthError extends AuthError {\n    constructor(errorCode: string) {\n        super(errorCode, BrowserAuthErrorMessages[errorCode]);\n\n        Object.setPrototypeOf(this, BrowserAuthError.prototype);\n        this.name = \"BrowserAuthError\";\n    }\n}\n\nexport function createBrowserAuthError(errorCode: string): BrowserAuthError {\n    return new BrowserAuthError(errorCode);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const pkceNotCreated = \"pkce_not_created\";\nexport const cryptoNonExistent = \"crypto_nonexistent\";\nexport const emptyNavigateUri = \"empty_navigate_uri\";\nexport const hashEmptyError = \"hash_empty_error\";\nexport const noStateInHash = \"no_state_in_hash\";\nexport const hashDoesNotContainKnownProperties =\n    \"hash_does_not_contain_known_properties\";\nexport const unableToParseState = \"unable_to_parse_state\";\nexport const stateInteractionTypeMismatch = \"state_interaction_type_mismatch\";\nexport const interactionInProgress = \"interaction_in_progress\";\nexport const popupWindowError = \"popup_window_error\";\nexport const emptyWindowError = \"empty_window_error\";\nexport const userCancelled = \"user_cancelled\";\nexport const monitorPopupTimeout = \"monitor_popup_timeout\";\nexport const monitorWindowTimeout = \"monitor_window_timeout\";\nexport const redirectInIframe = \"redirect_in_iframe\";\nexport const blockIframeReload = \"block_iframe_reload\";\nexport const blockNestedPopups = \"block_nested_popups\";\nexport const iframeClosedPrematurely = \"iframe_closed_prematurely\";\nexport const silentLogoutUnsupported = \"silent_logout_unsupported\";\nexport const noAccountError = \"no_account_error\";\nexport const silentPromptValueError = \"silent_prompt_value_error\";\nexport const noTokenRequestCacheError = \"no_token_request_cache_error\";\nexport const unableToParseTokenRequestCacheError =\n    \"unable_to_parse_token_request_cache_error\";\nexport const noCachedAuthorityError = \"no_cached_authority_error\";\nexport const authRequestNotSetError = \"auth_request_not_set_error\";\nexport const invalidCacheType = \"invalid_cache_type\";\nexport const nonBrowserEnvironment = \"non_browser_environment\";\nexport const databaseNotOpen = \"database_not_open\";\nexport const noNetworkConnectivity = \"no_network_connectivity\";\nexport const postRequestFailed = \"post_request_failed\";\nexport const getRequestFailed = \"get_request_failed\";\nexport const failedToParseResponse = \"failed_to_parse_response\";\nexport const unableToLoadToken = \"unable_to_load_token\";\nexport const cryptoKeyNotFound = \"crypto_key_not_found\";\nexport const authCodeRequired = \"auth_code_required\";\nexport const authCodeOrNativeAccountIdRequired =\n    \"auth_code_or_nativeAccountId_required\";\nexport const spaCodeAndNativeAccountIdPresent =\n    \"spa_code_and_nativeAccountId_present\";\nexport const databaseUnavailable = \"database_unavailable\";\nexport const unableToAcquireTokenFromNativePlatform =\n    \"unable_to_acquire_token_from_native_platform\";\nexport const nativeHandshakeTimeout = \"native_handshake_timeout\";\nexport const nativeExtensionNotInstalled = \"native_extension_not_installed\";\nexport const nativeConnectionNotEstablished =\n    \"native_connection_not_established\";\nexport const uninitializedPublicClientApplication =\n    \"uninitialized_public_client_application\";\nexport const nativePromptNotSupported = \"native_prompt_not_supported\";\nexport const invalidBase64String = \"invalid_base64_string\";\n","/* eslint-disable header/header */\nexport const name = \"@azure/msal-browser\";\nexport const version = \"3.2.0\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { OIDC_DEFAULT_SCOPES } from \"@azure/msal-common\";\nimport { PopupRequest } from \"../request/PopupRequest\";\nimport { RedirectRequest } from \"../request/RedirectRequest\";\n\n/**\n * Constants\n */\nexport const BrowserConstants = {\n    /**\n     * Interaction in progress cache value\n     */\n    INTERACTION_IN_PROGRESS_VALUE: \"interaction_in_progress\",\n    /**\n     * Invalid grant error code\n     */\n    INVALID_GRANT_ERROR: \"invalid_grant\",\n    /**\n     * Default popup window width\n     */\n    POPUP_WIDTH: 483,\n    /**\n     * Default popup window height\n     */\n    POPUP_HEIGHT: 600,\n    /**\n     * Name of the popup window starts with\n     */\n    POPUP_NAME_PREFIX: \"msal\",\n    /**\n     * Default popup monitor poll interval in milliseconds\n     */\n    DEFAULT_POLL_INTERVAL_MS: 30,\n    /**\n     * Msal-browser SKU\n     */\n    MSAL_SKU: \"msal.js.browser\",\n};\n\nexport const NativeConstants = {\n    CHANNEL_ID: \"53ee284d-920a-4b59-9d30-a60315b26836\",\n    PREFERRED_EXTENSION_ID: \"ppnbnpeolgkicgegkbkbjmhlideopiji\",\n    MATS_TELEMETRY: \"MATS\",\n};\n\nexport const NativeExtensionMethod = {\n    HandshakeRequest: \"Handshake\",\n    HandshakeResponse: \"HandshakeResponse\",\n    GetToken: \"GetToken\",\n    Response: \"Response\",\n} as const;\nexport type NativeExtensionMethod =\n    (typeof NativeExtensionMethod)[keyof typeof NativeExtensionMethod];\n\nexport const BrowserCacheLocation = {\n    LocalStorage: \"localStorage\",\n    SessionStorage: \"sessionStorage\",\n    MemoryStorage: \"memoryStorage\",\n} as const;\nexport type BrowserCacheLocation =\n    (typeof BrowserCacheLocation)[keyof typeof BrowserCacheLocation];\n\n/**\n * HTTP Request types supported by MSAL.\n */\nexport const HTTP_REQUEST_TYPE = {\n    GET: \"GET\",\n    POST: \"POST\",\n} as const;\nexport type HTTP_REQUEST_TYPE =\n    (typeof HTTP_REQUEST_TYPE)[keyof typeof HTTP_REQUEST_TYPE];\n\n/**\n * Temporary cache keys for MSAL, deleted after any request.\n */\nexport const TemporaryCacheKeys = {\n    AUTHORITY: \"authority\",\n    ACQUIRE_TOKEN_ACCOUNT: \"acquireToken.account\",\n    SESSION_STATE: \"session.state\",\n    REQUEST_STATE: \"request.state\",\n    NONCE_IDTOKEN: \"nonce.id_token\",\n    ORIGIN_URI: \"request.origin\",\n    RENEW_STATUS: \"token.renew.status\",\n    URL_HASH: \"urlHash\",\n    REQUEST_PARAMS: \"request.params\",\n    SCOPES: \"scopes\",\n    INTERACTION_STATUS_KEY: \"interaction.status\",\n    CCS_CREDENTIAL: \"ccs.credential\",\n    CORRELATION_ID: \"request.correlationId\",\n    NATIVE_REQUEST: \"request.native\",\n    REDIRECT_CONTEXT: \"request.redirect.context\",\n} as const;\nexport type TemporaryCacheKeys =\n    (typeof TemporaryCacheKeys)[keyof typeof TemporaryCacheKeys];\n\nexport const StaticCacheKeys = {\n    ACCOUNT_KEYS: \"msal.account.keys\",\n    TOKEN_KEYS: \"msal.token.keys\",\n} as const;\nexport type StaticCacheKeys =\n    (typeof StaticCacheKeys)[keyof typeof StaticCacheKeys];\n\n/**\n * Cache keys stored in-memory\n */\nexport const InMemoryCacheKeys = {\n    WRAPPER_SKU: \"wrapper.sku\",\n    WRAPPER_VER: \"wrapper.version\",\n} as const;\nexport type InMemoryCacheKeys =\n    (typeof InMemoryCacheKeys)[keyof typeof InMemoryCacheKeys];\n\n/**\n * API Codes for Telemetry purposes.\n * Before adding a new code you must claim it in the MSAL Telemetry tracker as these number spaces are shared across all MSALs\n * 0-99 Silent Flow\n * 800-899 Auth Code Flow\n */\nexport const ApiId = {\n    acquireTokenRedirect: 861,\n    acquireTokenPopup: 862,\n    ssoSilent: 863,\n    acquireTokenSilent_authCode: 864,\n    handleRedirectPromise: 865,\n    acquireTokenByCode: 866,\n    acquireTokenSilent_silentFlow: 61,\n    logout: 961,\n    logoutPopup: 962,\n} as const;\nexport type ApiId = (typeof ApiId)[keyof typeof ApiId];\n\n/*\n * Interaction type of the API - used for state and telemetry\n */\nexport enum InteractionType {\n    Redirect = \"redirect\",\n    Popup = \"popup\",\n    Silent = \"silent\",\n    None = \"none\",\n}\n\n/**\n * Types of interaction currently in progress.\n * Used in events in wrapper libraries to invoke functions when certain interaction is in progress or all interactions are complete.\n */\nexport const InteractionStatus = {\n    /**\n     * Initial status before interaction occurs\n     */\n    Startup: \"startup\",\n    /**\n     * Status set when all login calls occuring\n     */\n    Login: \"login\",\n    /**\n     * Status set when logout call occuring\n     */\n    Logout: \"logout\",\n    /**\n     * Status set for acquireToken calls\n     */\n    AcquireToken: \"acquireToken\",\n    /**\n     * Status set for ssoSilent calls\n     */\n    SsoSilent: \"ssoSilent\",\n    /**\n     * Status set when handleRedirect in progress\n     */\n    HandleRedirect: \"handleRedirect\",\n    /**\n     * Status set when interaction is complete\n     */\n    None: \"none\",\n} as const;\nexport type InteractionStatus =\n    (typeof InteractionStatus)[keyof typeof InteractionStatus];\n\nexport const DEFAULT_REQUEST: RedirectRequest | PopupRequest = {\n    scopes: OIDC_DEFAULT_SCOPES,\n};\n\n/**\n * JWK Key Format string (Type MUST be defined for window crypto APIs)\n */\nexport const KEY_FORMAT_JWK = \"jwk\";\n\n// Supported wrapper SKUs\nexport const WrapperSKU = {\n    React: \"@azure/msal-react\",\n    Angular: \"@azure/msal-angular\",\n} as const;\nexport type WrapperSKU = (typeof WrapperSKU)[keyof typeof WrapperSKU];\n\n// DatabaseStorage Constants\nexport const DB_NAME = \"msal.db\";\nexport const DB_VERSION = 1;\nexport const DB_TABLE_NAME = `${DB_NAME}.keys`;\n\nexport const CacheLookupPolicy = {\n    /*\n     * acquireTokenSilent will attempt to retrieve an access token from the cache. If the access token is expired\n     * or cannot be found the refresh token will be used to acquire a new one. Finally, if the refresh token\n     * is expired acquireTokenSilent will attempt to acquire new access and refresh tokens.\n     */\n    Default: 0, // 0 is falsy, is equivalent to not passing in a CacheLookupPolicy\n    /*\n     * acquireTokenSilent will only look for access tokens in the cache. It will not attempt to renew access or\n     * refresh tokens.\n     */\n    AccessToken: 1,\n    /*\n     * acquireTokenSilent will attempt to retrieve an access token from the cache. If the access token is expired or\n     * cannot be found, the refresh token will be used to acquire a new one. If the refresh token is expired, it\n     * will not be renewed and acquireTokenSilent will fail.\n     */\n    AccessTokenAndRefreshToken: 2,\n    /*\n     * acquireTokenSilent will not attempt to retrieve access tokens from the cache and will instead attempt to\n     * exchange the cached refresh token for a new access token. If the refresh token is expired, it will not be\n     * renewed and acquireTokenSilent will fail.\n     */\n    RefreshToken: 3,\n    /*\n     * acquireTokenSilent will not look in the cache for the access token. It will go directly to network with the\n     * cached refresh token. If the refresh token is expired an attempt will be made to renew it. This is equivalent to\n     * setting \"forceRefresh: true\".\n     */\n    RefreshTokenAndNetwork: 4,\n    /*\n     * acquireTokenSilent will attempt to renew both access and refresh tokens. It will not look in the cache. This will\n     * always fail if 3rd party cookies are blocked by the browser.\n     */\n    Skip: 5,\n} as const;\nexport type CacheLookupPolicy =\n    (typeof CacheLookupPolicy)[keyof typeof CacheLookupPolicy];\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { TokenClaims } from \"./TokenClaims\";\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../error/ClientAuthError\";\n\n/**\n * Extract token by decoding the rawToken\n *\n * @param encodedToken\n */\nexport function extractTokenClaims(\n    encodedToken: string,\n    base64Decode: (input: string) => string\n): TokenClaims {\n    const jswPayload = getJWSPayload(encodedToken);\n\n    // token will be decoded to get the username\n    try {\n        // base64Decode() should throw an error if there is an issue\n        const base64Decoded = base64Decode(jswPayload);\n        return JSON.parse(base64Decoded) as TokenClaims;\n    } catch (err) {\n        throw createClientAuthError(ClientAuthErrorCodes.tokenParsingError);\n    }\n}\n\n/**\n * decode a JWT\n *\n * @param authToken\n */\nexport function getJWSPayload(authToken: string): string {\n    if (!authToken) {\n        throw createClientAuthError(ClientAuthErrorCodes.nullOrEmptyToken);\n    }\n    const tokenPartsRegex = /^([^\\.\\s]*)\\.([^\\.\\s]+)\\.([^\\.\\s]*)$/;\n    const matches = tokenPartsRegex.exec(authToken);\n    if (!matches || matches.length < 4) {\n        throw createClientAuthError(ClientAuthErrorCodes.tokenParsingError);\n    }\n    /**\n     * const crackedToken = {\n     *  header: matches[1],\n     *  JWSPayload: matches[2],\n     *  JWSSig: matches[3],\n     * };\n     */\n\n    return matches[2];\n}\n\n/**\n * Determine if the token's max_age has transpired\n */\nexport function checkMaxAge(authTime: number, maxAge: number): void {\n    /*\n     * per https://openid.net/specs/openid-connect-core-1_0.html#AuthRequest\n     * To force an immediate re-authentication: If an app requires that a user re-authenticate prior to access,\n     * provide a value of 0 for the max_age parameter and the AS will force a fresh login.\n     */\n    const fiveMinuteSkew = 300000; // five minutes in milliseconds\n    if (maxAge === 0 || Date.now() - fiveMinuteSkew > authTime + maxAge) {\n        throw createClientAuthError(ClientAuthErrorCodes.maxAgeTranspired);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../error/ClientAuthError\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport { Separators, Constants } from \"../utils/Constants\";\n\n/**\n * Client info object which consists of two IDs. Need to add more info here.\n */\nexport type ClientInfo = {\n    uid: string;\n    utid: string;\n};\n\n/**\n * Function to build a client info object from server clientInfo string\n * @param rawClientInfo\n * @param crypto\n */\nexport function buildClientInfo(\n    rawClientInfo: string,\n    crypto: ICrypto\n): ClientInfo {\n    if (!rawClientInfo) {\n        throw createClientAuthError(ClientAuthErrorCodes.clientInfoEmptyError);\n    }\n\n    try {\n        const decodedClientInfo: string = crypto.base64Decode(rawClientInfo);\n        return JSON.parse(decodedClientInfo) as ClientInfo;\n    } catch (e) {\n        throw createClientAuthError(\n            ClientAuthErrorCodes.clientInfoDecodingError\n        );\n    }\n}\n\n/**\n * Function to build a client info object from cached homeAccountId string\n * @param homeAccountId\n */\nexport function buildClientInfoFromHomeAccountId(\n    homeAccountId: string\n): ClientInfo {\n    if (!homeAccountId) {\n        throw createClientAuthError(\n            ClientAuthErrorCodes.clientInfoDecodingError\n        );\n    }\n    const clientInfoParts: string[] = homeAccountId.split(\n        Separators.CLIENT_INFO_SEPARATOR,\n        2\n    );\n    return {\n        uid: clientInfoParts[0],\n        utid:\n            clientInfoParts.length < 2\n                ? Constants.EMPTY_STRING\n                : clientInfoParts[1],\n    };\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { ProtocolMode } from \"./ProtocolMode\";\nimport { OIDCOptions } from \"./OIDCOptions\";\nimport { AzureRegionConfiguration } from \"./AzureRegionConfiguration\";\n\nexport type AuthorityOptions = {\n    protocolMode: ProtocolMode;\n    OIDCOptions?: OIDCOptions | null;\n    knownAuthorities: Array<string>;\n    cloudDiscoveryMetadata: string;\n    authorityMetadata: string;\n    skipAuthorityMetadataCache?: boolean;\n    azureRegionConfiguration?: AzureRegionConfiguration;\n};\n\nexport const AzureCloudInstance = {\n    // AzureCloudInstance is not specified.\n    None: \"none\",\n\n    // Microsoft Azure public cloud\n    AzurePublic: \"https://login.microsoftonline.com\",\n\n    // Microsoft PPE\n    AzurePpe: \"https://login.windows-ppe.net\",\n\n    // Microsoft Chinese national/regional cloud\n    AzureChina: \"https://login.chinacloudapi.cn\",\n\n    // Microsoft German national/regional cloud (\"Black Forest\")\n    AzureGermany: \"https://login.microsoftonline.de\",\n\n    // US Government cloud\n    AzureUsGovernment: \"https://login.microsoftonline.us\",\n} as const;\nexport type AzureCloudInstance =\n    (typeof AzureCloudInstance)[keyof typeof AzureCloudInstance];\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Authority types supported by MSAL.\n */\nexport const AuthorityType = {\n    Default: 0,\n    Adfs: 1,\n    Dsts: 2,\n    Ciam: 3,\n} as const;\nexport type AuthorityType = (typeof AuthorityType)[keyof typeof AuthorityType];\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Protocol modes supported by MSAL.\n */\nexport const ProtocolMode = {\n    AAD: \"AAD\",\n    OIDC: \"OIDC\",\n} as const;\nexport type ProtocolMode = (typeof ProtocolMode)[keyof typeof ProtocolMode];\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    AccountFilter,\n    CredentialFilter,\n    ValidCredentialType,\n    AppMetadataFilter,\n    AppMetadataCache,\n    TokenKeys,\n} from \"./utils/CacheTypes\";\nimport { CacheRecord } from \"./entities/CacheRecord\";\nimport {\n    CredentialType,\n    APP_METADATA,\n    THE_FAMILY_ID,\n    AUTHORITY_METADATA_CONSTANTS,\n    AuthenticationScheme,\n    Separators,\n} from \"../utils/Constants\";\nimport { CredentialEntity } from \"./entities/CredentialEntity\";\nimport { ScopeSet } from \"../request/ScopeSet\";\nimport { AccountEntity } from \"./entities/AccountEntity\";\nimport { AccessTokenEntity } from \"./entities/AccessTokenEntity\";\nimport { IdTokenEntity } from \"./entities/IdTokenEntity\";\nimport { RefreshTokenEntity } from \"./entities/RefreshTokenEntity\";\nimport { ICacheManager } from \"./interface/ICacheManager\";\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../error/ClientAuthError\";\nimport { AccountInfo } from \"../account/AccountInfo\";\nimport { AppMetadataEntity } from \"./entities/AppMetadataEntity\";\nimport { ServerTelemetryEntity } from \"./entities/ServerTelemetryEntity\";\nimport { ThrottlingEntity } from \"./entities/ThrottlingEntity\";\nimport { extractTokenClaims } from \"../account/AuthToken\";\nimport { ICrypto } from \"../crypto/ICrypto\";\nimport { AuthorityMetadataEntity } from \"./entities/AuthorityMetadataEntity\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\nimport { Logger } from \"../logger/Logger\";\nimport { name, version } from \"../packageMetadata\";\nimport { StoreInCache } from \"../request/StoreInCache\";\n\n/**\n * Interface class which implement cache storage functions used by MSAL to perform validity checks, and store tokens.\n * @internal\n */\nexport abstract class CacheManager implements ICacheManager {\n    protected clientId: string;\n    protected cryptoImpl: ICrypto;\n    // Instance of logger for functions defined in the msal-common layer\n    private commonLogger: Logger;\n\n    constructor(clientId: string, cryptoImpl: ICrypto, logger: Logger) {\n        this.clientId = clientId;\n        this.cryptoImpl = cryptoImpl;\n        this.commonLogger = logger.clone(name, version);\n    }\n\n    /**\n     * fetch the account entity from the platform cache\n     *  @param accountKey\n     */\n    abstract getAccount(accountKey: string): AccountEntity | null;\n\n    /**\n     * set account entity in the platform cache\n     * @param account\n     */\n    abstract setAccount(account: AccountEntity): void;\n\n    /**\n     * fetch the idToken entity from the platform cache\n     * @param idTokenKey\n     */\n    abstract getIdTokenCredential(idTokenKey: string): IdTokenEntity | null;\n\n    /**\n     * set idToken entity to the platform cache\n     * @param idToken\n     */\n    abstract setIdTokenCredential(idToken: IdTokenEntity): void;\n\n    /**\n     * fetch the idToken entity from the platform cache\n     * @param accessTokenKey\n     */\n    abstract getAccessTokenCredential(\n        accessTokenKey: string\n    ): AccessTokenEntity | null;\n\n    /**\n     * set idToken entity to the platform cache\n     * @param accessToken\n     */\n    abstract setAccessTokenCredential(accessToken: AccessTokenEntity): void;\n\n    /**\n     * fetch the idToken entity from the platform cache\n     * @param refreshTokenKey\n     */\n    abstract getRefreshTokenCredential(\n        refreshTokenKey: string\n    ): RefreshTokenEntity | null;\n\n    /**\n     * set idToken entity to the platform cache\n     * @param refreshToken\n     */\n    abstract setRefreshTokenCredential(refreshToken: RefreshTokenEntity): void;\n\n    /**\n     * fetch appMetadata entity from the platform cache\n     * @param appMetadataKey\n     */\n    abstract getAppMetadata(appMetadataKey: string): AppMetadataEntity | null;\n\n    /**\n     * set appMetadata entity to the platform cache\n     * @param appMetadata\n     */\n    abstract setAppMetadata(appMetadata: AppMetadataEntity): void;\n\n    /**\n     * fetch server telemetry entity from the platform cache\n     * @param serverTelemetryKey\n     */\n    abstract getServerTelemetry(\n        serverTelemetryKey: string\n    ): ServerTelemetryEntity | null;\n\n    /**\n     * set server telemetry entity to the platform cache\n     * @param serverTelemetryKey\n     * @param serverTelemetry\n     */\n    abstract setServerTelemetry(\n        serverTelemetryKey: string,\n        serverTelemetry: ServerTelemetryEntity\n    ): void;\n\n    /**\n     * fetch cloud discovery metadata entity from the platform cache\n     * @param key\n     */\n    abstract getAuthorityMetadata(key: string): AuthorityMetadataEntity | null;\n\n    /**\n     *\n     */\n    abstract getAuthorityMetadataKeys(): Array<string>;\n\n    /**\n     * set cloud discovery metadata entity to the platform cache\n     * @param key\n     * @param value\n     */\n    abstract setAuthorityMetadata(\n        key: string,\n        value: AuthorityMetadataEntity\n    ): void;\n\n    /**\n     * fetch throttling entity from the platform cache\n     * @param throttlingCacheKey\n     */\n    abstract getThrottlingCache(\n        throttlingCacheKey: string\n    ): ThrottlingEntity | null;\n\n    /**\n     * set throttling entity to the platform cache\n     * @param throttlingCacheKey\n     * @param throttlingCache\n     */\n    abstract setThrottlingCache(\n        throttlingCacheKey: string,\n        throttlingCache: ThrottlingEntity\n    ): void;\n\n    /**\n     * Function to remove an item from cache given its key.\n     * @param key\n     */\n    abstract removeItem(key: string): void;\n\n    /**\n     * Function which returns boolean whether cache contains a specific key.\n     * @param key\n     */\n    abstract containsKey(key: string, type?: string): boolean;\n\n    /**\n     * Function which retrieves all current keys from the cache.\n     */\n    abstract getKeys(): string[];\n\n    /**\n     * Function which retrieves all account keys from the cache\n     */\n    abstract getAccountKeys(): string[];\n\n    /**\n     * Function which retrieves all token keys from the cache\n     */\n    abstract getTokenKeys(): TokenKeys;\n\n    /**\n     * Function which clears cache.\n     */\n    abstract clear(): Promise<void>;\n\n    /**\n     * Function which updates an outdated credential cache key\n     */\n    abstract updateCredentialCacheKey(\n        currentCacheKey: string,\n        credential: ValidCredentialType\n    ): string;\n\n    /**\n     * Returns all the accounts in the cache that match the optional filter. If no filter is provided, all accounts are returned.\n     * @param accountFilter - (Optional) filter to narrow down the accounts returned\n     * @returns Array of AccountInfo objects in cache\n     */\n    getAllAccounts(accountFilter?: AccountFilter): AccountInfo[] {\n        if (accountFilter) {\n            return this.getAccountsFilteredBy(accountFilter).map(\n                (accountEntity) => {\n                    return accountEntity.getAccountInfo();\n                }\n            );\n        }\n\n        const allAccountKeys = this.getAccountKeys();\n        if (allAccountKeys.length < 1) {\n            return [];\n        }\n\n        const accountEntities: AccountEntity[] = allAccountKeys.reduce(\n            (accounts: AccountEntity[], key: string) => {\n                const entity: AccountEntity | null = this.getAccount(key);\n\n                if (!entity) {\n                    return accounts;\n                }\n                accounts.push(entity);\n                return accounts;\n            },\n            []\n        );\n\n        const allAccounts = accountEntities.map<AccountInfo>(\n            (accountEntity) => {\n                return this.getAccountInfoFromEntity(accountEntity);\n            }\n        );\n        return allAccounts;\n    }\n\n    /**\n     * Gets accountInfo object based on provided filters\n     */\n    getAccountInfoFilteredBy(accountFilter: AccountFilter): AccountInfo | null {\n        const allAccounts = this.getAccountsFilteredBy(accountFilter);\n        if (allAccounts.length > 0) {\n            return this.getAccountInfoFromEntity(allAccounts[0]);\n        } else {\n            return null;\n        }\n    }\n\n    private getAccountInfoFromEntity(\n        accountEntity: AccountEntity\n    ): AccountInfo {\n        const accountInfo = accountEntity.getAccountInfo();\n        const idToken = this.getIdToken(accountInfo);\n        if (idToken) {\n            accountInfo.idToken = idToken.secret;\n            accountInfo.idTokenClaims = extractTokenClaims(\n                idToken.secret,\n                this.cryptoImpl.base64Decode\n            );\n        }\n        return accountInfo;\n    }\n\n    /**\n     * saves a cache record\n     * @param cacheRecord\n     */\n    async saveCacheRecord(\n        cacheRecord: CacheRecord,\n        storeInCache?: StoreInCache\n    ): Promise<void> {\n        if (!cacheRecord) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.invalidCacheRecord\n            );\n        }\n\n        if (!!cacheRecord.account) {\n            this.setAccount(cacheRecord.account);\n        }\n\n        if (!!cacheRecord.idToken && storeInCache?.idToken !== false) {\n            this.setIdTokenCredential(cacheRecord.idToken);\n        }\n\n        if (!!cacheRecord.accessToken && storeInCache?.accessToken !== false) {\n            await this.saveAccessToken(cacheRecord.accessToken);\n        }\n\n        if (\n            !!cacheRecord.refreshToken &&\n            storeInCache?.refreshToken !== false\n        ) {\n            this.setRefreshTokenCredential(cacheRecord.refreshToken);\n        }\n\n        if (!!cacheRecord.appMetadata) {\n            this.setAppMetadata(cacheRecord.appMetadata);\n        }\n    }\n\n    /**\n     * saves access token credential\n     * @param credential\n     */\n    private async saveAccessToken(\n        credential: AccessTokenEntity\n    ): Promise<void> {\n        const accessTokenFilter: CredentialFilter = {\n            clientId: credential.clientId,\n            credentialType: credential.credentialType,\n            environment: credential.environment,\n            homeAccountId: credential.homeAccountId,\n            realm: credential.realm,\n            tokenType: credential.tokenType,\n            requestedClaimsHash: credential.requestedClaimsHash,\n        };\n\n        const tokenKeys = this.getTokenKeys();\n        const currentScopes = ScopeSet.fromString(credential.target);\n\n        const removedAccessTokens: Array<Promise<void>> = [];\n        tokenKeys.accessToken.forEach((key) => {\n            if (\n                !this.accessTokenKeyMatchesFilter(key, accessTokenFilter, false)\n            ) {\n                return;\n            }\n\n            const tokenEntity = this.getAccessTokenCredential(key);\n\n            if (\n                tokenEntity &&\n                this.credentialMatchesFilter(tokenEntity, accessTokenFilter)\n            ) {\n                const tokenScopeSet = ScopeSet.fromString(tokenEntity.target);\n                if (tokenScopeSet.intersectingScopeSets(currentScopes)) {\n                    removedAccessTokens.push(this.removeAccessToken(key));\n                }\n            }\n        });\n        await Promise.all(removedAccessTokens);\n        this.setAccessTokenCredential(credential);\n    }\n\n    /**\n     * Retrieve accounts matching all provided filters; if no filter is set, get all accounts\n     * Not checking for casing as keys are all generated in lower case, remember to convert to lower case if object properties are compared\n     * @param accountFilter - An object containing Account properties to filter by\n     */\n    getAccountsFilteredBy(accountFilter: AccountFilter): AccountEntity[] {\n        const allAccountKeys = this.getAccountKeys();\n        const matchingAccounts: AccountEntity[] = [];\n\n        allAccountKeys.forEach((cacheKey) => {\n            if (\n                !this.isAccountKey(\n                    cacheKey,\n                    accountFilter.homeAccountId,\n                    accountFilter.tenantId\n                )\n            ) {\n                // Don't parse value if the key doesn't match the account filters\n                return;\n            }\n\n            const entity: AccountEntity | null = this.getAccount(cacheKey);\n\n            if (!entity) {\n                return;\n            }\n\n            if (\n                !!accountFilter.homeAccountId &&\n                !this.matchHomeAccountId(entity, accountFilter.homeAccountId)\n            ) {\n                return;\n            }\n\n            if (\n                !!accountFilter.localAccountId &&\n                !this.matchLocalAccountId(entity, accountFilter.localAccountId)\n            ) {\n                return;\n            }\n\n            if (\n                !!accountFilter.username &&\n                !this.matchUsername(entity, accountFilter.username)\n            ) {\n                return;\n            }\n\n            if (\n                !!accountFilter.environment &&\n                !this.matchEnvironment(entity, accountFilter.environment)\n            ) {\n                return;\n            }\n\n            if (\n                !!accountFilter.realm &&\n                !this.matchRealm(entity, accountFilter.realm)\n            ) {\n                return;\n            }\n\n            // tenantId is another name for realm\n            if (\n                !!accountFilter.tenantId &&\n                !this.matchRealm(entity, accountFilter.tenantId)\n            ) {\n                return;\n            }\n\n            if (\n                !!accountFilter.nativeAccountId &&\n                !this.matchNativeAccountId(\n                    entity,\n                    accountFilter.nativeAccountId\n                )\n            ) {\n                return;\n            }\n\n            if (\n                !!accountFilter.loginHint &&\n                !this.matchLoginHint(entity, accountFilter.loginHint)\n            ) {\n                return;\n            }\n\n            if (\n                !!accountFilter.authorityType &&\n                !this.matchAuthorityType(entity, accountFilter.authorityType)\n            ) {\n                return;\n            }\n\n            if (\n                !!accountFilter.name &&\n                !this.matchName(entity, accountFilter.name)\n            ) {\n                return;\n            }\n\n            matchingAccounts.push(entity);\n        });\n\n        return matchingAccounts;\n    }\n\n    /**\n     * Returns true if the given key matches our account key schema. Also matches homeAccountId and/or tenantId if provided\n     * @param key\n     * @param homeAccountId\n     * @param tenantId\n     * @returns\n     */\n    isAccountKey(\n        key: string,\n        homeAccountId?: string,\n        tenantId?: string\n    ): boolean {\n        if (key.split(Separators.CACHE_KEY_SEPARATOR).length < 3) {\n            // Account cache keys contain 3 items separated by '-' (each item may also contain '-')\n            return false;\n        }\n\n        if (\n            homeAccountId &&\n            !key.toLowerCase().includes(homeAccountId.toLowerCase())\n        ) {\n            return false;\n        }\n\n        if (tenantId && !key.toLowerCase().includes(tenantId.toLowerCase())) {\n            return false;\n        }\n\n        // Do not check environment as aliasing can cause false negatives\n\n        return true;\n    }\n\n    /**\n     * Returns true if the given key matches our credential key schema.\n     * @param key\n     */\n    isCredentialKey(key: string): boolean {\n        if (key.split(Separators.CACHE_KEY_SEPARATOR).length < 6) {\n            // Credential cache keys contain 6 items separated by '-' (each item may also contain '-')\n            return false;\n        }\n\n        const lowerCaseKey = key.toLowerCase();\n        // Credential keys must indicate what credential type they represent\n        if (\n            lowerCaseKey.indexOf(CredentialType.ID_TOKEN.toLowerCase()) ===\n                -1 &&\n            lowerCaseKey.indexOf(CredentialType.ACCESS_TOKEN.toLowerCase()) ===\n                -1 &&\n            lowerCaseKey.indexOf(\n                CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()\n            ) === -1 &&\n            lowerCaseKey.indexOf(CredentialType.REFRESH_TOKEN.toLowerCase()) ===\n                -1\n        ) {\n            return false;\n        }\n\n        if (\n            lowerCaseKey.indexOf(CredentialType.REFRESH_TOKEN.toLowerCase()) >\n            -1\n        ) {\n            // Refresh tokens must contain the client id or family id\n            const clientIdValidation = `${CredentialType.REFRESH_TOKEN}${Separators.CACHE_KEY_SEPARATOR}${this.clientId}${Separators.CACHE_KEY_SEPARATOR}`;\n            const familyIdValidation = `${CredentialType.REFRESH_TOKEN}${Separators.CACHE_KEY_SEPARATOR}${THE_FAMILY_ID}${Separators.CACHE_KEY_SEPARATOR}`;\n            if (\n                lowerCaseKey.indexOf(clientIdValidation.toLowerCase()) === -1 &&\n                lowerCaseKey.indexOf(familyIdValidation.toLowerCase()) === -1\n            ) {\n                return false;\n            }\n        } else if (lowerCaseKey.indexOf(this.clientId.toLowerCase()) === -1) {\n            // Tokens must contain the clientId\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Returns whether or not the given credential entity matches the filter\n     * @param entity\n     * @param filter\n     * @returns\n     */\n    credentialMatchesFilter(\n        entity: ValidCredentialType,\n        filter: CredentialFilter\n    ): boolean {\n        if (!!filter.clientId && !this.matchClientId(entity, filter.clientId)) {\n            return false;\n        }\n\n        if (\n            !!filter.userAssertionHash &&\n            !this.matchUserAssertionHash(entity, filter.userAssertionHash)\n        ) {\n            return false;\n        }\n\n        /*\n         * homeAccountId can be undefined, and we want to filter out cached items that have a homeAccountId of \"\"\n         * because we don't want a client_credential request to return a cached token that has a homeAccountId\n         */\n        if (\n            typeof filter.homeAccountId === \"string\" &&\n            !this.matchHomeAccountId(entity, filter.homeAccountId)\n        ) {\n            return false;\n        }\n\n        if (\n            !!filter.environment &&\n            !this.matchEnvironment(entity, filter.environment)\n        ) {\n            return false;\n        }\n\n        if (!!filter.realm && !this.matchRealm(entity, filter.realm)) {\n            return false;\n        }\n\n        if (\n            !!filter.credentialType &&\n            !this.matchCredentialType(entity, filter.credentialType)\n        ) {\n            return false;\n        }\n\n        if (!!filter.familyId && !this.matchFamilyId(entity, filter.familyId)) {\n            return false;\n        }\n\n        /*\n         * idTokens do not have \"target\", target specific refreshTokens do exist for some types of authentication\n         * Resource specific refresh tokens case will be added when the support is deemed necessary\n         */\n        if (!!filter.target && !this.matchTarget(entity, filter.target)) {\n            return false;\n        }\n\n        // If request OR cached entity has requested Claims Hash, check if they match\n        if (filter.requestedClaimsHash || entity.requestedClaimsHash) {\n            // Don't match if either is undefined or they are different\n            if (entity.requestedClaimsHash !== filter.requestedClaimsHash) {\n                return false;\n            }\n        }\n\n        // Access Token with Auth Scheme specific matching\n        if (\n            entity.credentialType ===\n            CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME\n        ) {\n            if (\n                !!filter.tokenType &&\n                !this.matchTokenType(entity, filter.tokenType)\n            ) {\n                return false;\n            }\n\n            // KeyId (sshKid) in request must match cached SSH certificate keyId because SSH cert is bound to a specific key\n            if (filter.tokenType === AuthenticationScheme.SSH) {\n                if (filter.keyId && !this.matchKeyId(entity, filter.keyId)) {\n                    return false;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * retrieve appMetadata matching all provided filters; if no filter is set, get all appMetadata\n     * @param filter\n     */\n    getAppMetadataFilteredBy(filter: AppMetadataFilter): AppMetadataCache {\n        return this.getAppMetadataFilteredByInternal(\n            filter.environment,\n            filter.clientId\n        );\n    }\n\n    /**\n     * Support function to help match appMetadata\n     * @param environment\n     * @param clientId\n     */\n    private getAppMetadataFilteredByInternal(\n        environment?: string,\n        clientId?: string\n    ): AppMetadataCache {\n        const allCacheKeys = this.getKeys();\n        const matchingAppMetadata: AppMetadataCache = {};\n\n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-appMetadata type cache entities\n            if (!this.isAppMetadata(cacheKey)) {\n                return;\n            }\n\n            // Attempt retrieval\n            const entity = this.getAppMetadata(cacheKey);\n\n            if (!entity) {\n                return;\n            }\n\n            if (!!environment && !this.matchEnvironment(entity, environment)) {\n                return;\n            }\n\n            if (!!clientId && !this.matchClientId(entity, clientId)) {\n                return;\n            }\n\n            matchingAppMetadata[cacheKey] = entity;\n        });\n\n        return matchingAppMetadata;\n    }\n\n    /**\n     * retrieve authorityMetadata that contains a matching alias\n     * @param filter\n     */\n    getAuthorityMetadataByAlias(host: string): AuthorityMetadataEntity | null {\n        const allCacheKeys = this.getAuthorityMetadataKeys();\n        let matchedEntity = null;\n\n        allCacheKeys.forEach((cacheKey) => {\n            // don't parse any non-authorityMetadata type cache entities\n            if (\n                !this.isAuthorityMetadata(cacheKey) ||\n                cacheKey.indexOf(this.clientId) === -1\n            ) {\n                return;\n            }\n\n            // Attempt retrieval\n            const entity = this.getAuthorityMetadata(cacheKey);\n\n            if (!entity) {\n                return;\n            }\n\n            if (entity.aliases.indexOf(host) === -1) {\n                return;\n            }\n\n            matchedEntity = entity;\n        });\n\n        return matchedEntity;\n    }\n\n    /**\n     * Removes all accounts and related tokens from cache.\n     */\n    async removeAllAccounts(): Promise<void> {\n        const allAccountKeys = this.getAccountKeys();\n        const removedAccounts: Array<Promise<void>> = [];\n\n        allAccountKeys.forEach((cacheKey) => {\n            removedAccounts.push(this.removeAccount(cacheKey));\n        });\n\n        await Promise.all(removedAccounts);\n    }\n\n    /**\n     * Removes the account and related tokens for a given account key\n     * @param account\n     */\n    async removeAccount(accountKey: string): Promise<void> {\n        const account = this.getAccount(accountKey);\n        if (!account) {\n            return;\n        }\n        await this.removeAccountContext(account);\n        this.removeItem(accountKey);\n    }\n\n    /**\n     * Removes credentials associated with the provided account\n     * @param account\n     */\n    async removeAccountContext(account: AccountEntity): Promise<void> {\n        const allTokenKeys = this.getTokenKeys();\n        const accountId = account.generateAccountId();\n        const removedCredentials: Array<Promise<void>> = [];\n\n        allTokenKeys.idToken.forEach((key) => {\n            if (key.indexOf(accountId) === 0) {\n                this.removeIdToken(key);\n            }\n        });\n\n        allTokenKeys.accessToken.forEach((key) => {\n            if (key.indexOf(accountId) === 0) {\n                removedCredentials.push(this.removeAccessToken(key));\n            }\n        });\n\n        allTokenKeys.refreshToken.forEach((key) => {\n            if (key.indexOf(accountId) === 0) {\n                this.removeRefreshToken(key);\n            }\n        });\n\n        await Promise.all(removedCredentials);\n    }\n\n    /**\n     * returns a boolean if the given credential is removed\n     * @param credential\n     */\n    async removeAccessToken(key: string): Promise<void> {\n        const credential = this.getAccessTokenCredential(key);\n        if (!credential) {\n            return;\n        }\n\n        // Remove Token Binding Key from key store for PoP Tokens Credentials\n        if (\n            credential.credentialType.toLowerCase() ===\n            CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME.toLowerCase()\n        ) {\n            if (credential.tokenType === AuthenticationScheme.POP) {\n                const accessTokenWithAuthSchemeEntity =\n                    credential as AccessTokenEntity;\n                const kid = accessTokenWithAuthSchemeEntity.keyId;\n\n                if (kid) {\n                    try {\n                        await this.cryptoImpl.removeTokenBindingKey(kid);\n                    } catch (error) {\n                        throw createClientAuthError(\n                            ClientAuthErrorCodes.bindingKeyNotRemoved\n                        );\n                    }\n                }\n            }\n        }\n\n        return this.removeItem(key);\n    }\n\n    /**\n     * Removes all app metadata objects from cache.\n     */\n    removeAppMetadata(): boolean {\n        const allCacheKeys = this.getKeys();\n        allCacheKeys.forEach((cacheKey) => {\n            if (this.isAppMetadata(cacheKey)) {\n                this.removeItem(cacheKey);\n            }\n        });\n\n        return true;\n    }\n\n    /**\n     * Retrieve the cached credentials into a cacherecord\n     * @param account\n     * @param clientId\n     * @param scopes\n     * @param environment\n     * @param authScheme\n     */\n    readCacheRecord(\n        account: AccountInfo,\n        request: BaseAuthRequest,\n        environment: string\n    ): CacheRecord {\n        const tokenKeys = this.getTokenKeys();\n        const cachedAccount = this.readAccountFromCache(account);\n        const cachedIdToken = this.getIdToken(account, tokenKeys);\n        const cachedAccessToken = this.getAccessToken(\n            account,\n            request,\n            tokenKeys\n        );\n        const cachedRefreshToken = this.getRefreshToken(\n            account,\n            false,\n            tokenKeys\n        );\n        const cachedAppMetadata = this.readAppMetadataFromCache(environment);\n\n        if (cachedAccount && cachedIdToken) {\n            cachedAccount.idTokenClaims = extractTokenClaims(\n                cachedIdToken.secret,\n                this.cryptoImpl.base64Decode\n            );\n        }\n\n        return {\n            account: cachedAccount,\n            idToken: cachedIdToken,\n            accessToken: cachedAccessToken,\n            refreshToken: cachedRefreshToken,\n            appMetadata: cachedAppMetadata,\n        };\n    }\n\n    /**\n     * Retrieve AccountEntity from cache\n     * @param account\n     */\n    readAccountFromCache(account: AccountInfo): AccountEntity | null {\n        const accountKey: string =\n            AccountEntity.generateAccountCacheKey(account);\n        return this.getAccount(accountKey);\n    }\n\n    /**\n     * Retrieve IdTokenEntity from cache\n     * @param clientId\n     * @param account\n     * @param inputRealm\n     */\n    getIdToken(\n        account: AccountInfo,\n        tokenKeys?: TokenKeys\n    ): IdTokenEntity | null {\n        this.commonLogger.trace(\"CacheManager - getIdToken called\");\n        const idTokenFilter: CredentialFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: CredentialType.ID_TOKEN,\n            clientId: this.clientId,\n            realm: account.tenantId,\n        };\n\n        const idTokens: IdTokenEntity[] = this.getIdTokensByFilter(\n            idTokenFilter,\n            tokenKeys\n        );\n        const numIdTokens = idTokens.length;\n\n        if (numIdTokens < 1) {\n            this.commonLogger.info(\"CacheManager:getIdToken - No token found\");\n            return null;\n        } else if (numIdTokens > 1) {\n            this.commonLogger.info(\n                \"CacheManager:getIdToken - Multiple id tokens found, clearing them\"\n            );\n            idTokens.forEach((idToken) => {\n                this.removeIdToken(idToken.generateCredentialKey());\n            });\n            return null;\n        }\n\n        this.commonLogger.info(\"CacheManager:getIdToken - Returning id token\");\n        return idTokens[0];\n    }\n\n    /**\n     * Gets all idTokens matching the given filter\n     * @param filter\n     * @returns\n     */\n    getIdTokensByFilter(\n        filter: CredentialFilter,\n        tokenKeys?: TokenKeys\n    ): IdTokenEntity[] {\n        const idTokenKeys =\n            (tokenKeys && tokenKeys.idToken) || this.getTokenKeys().idToken;\n\n        const idTokens: IdTokenEntity[] = [];\n        idTokenKeys.forEach((key) => {\n            if (\n                !this.idTokenKeyMatchesFilter(key, {\n                    clientId: this.clientId,\n                    ...filter,\n                })\n            ) {\n                return;\n            }\n\n            const idToken = this.getIdTokenCredential(key);\n            if (idToken && this.credentialMatchesFilter(idToken, filter)) {\n                idTokens.push(idToken);\n            }\n        });\n\n        return idTokens;\n    }\n\n    /**\n     * Validate the cache key against filter before retrieving and parsing cache value\n     * @param key\n     * @param filter\n     * @returns\n     */\n    idTokenKeyMatchesFilter(\n        inputKey: string,\n        filter: CredentialFilter\n    ): boolean {\n        const key = inputKey.toLowerCase();\n        if (\n            filter.clientId &&\n            key.indexOf(filter.clientId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        if (\n            filter.homeAccountId &&\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Removes idToken from the cache\n     * @param key\n     */\n    removeIdToken(key: string): void {\n        this.removeItem(key);\n    }\n\n    /**\n     * Removes refresh token from the cache\n     * @param key\n     */\n    removeRefreshToken(key: string): void {\n        this.removeItem(key);\n    }\n\n    /**\n     * Retrieve AccessTokenEntity from cache\n     * @param clientId\n     * @param account\n     * @param scopes\n     * @param authScheme\n     */\n    getAccessToken(\n        account: AccountInfo,\n        request: BaseAuthRequest,\n        tokenKeys?: TokenKeys\n    ): AccessTokenEntity | null {\n        this.commonLogger.trace(\"CacheManager - getAccessToken called\");\n        const scopes = ScopeSet.createSearchScopes(request.scopes);\n        const authScheme =\n            request.authenticationScheme || AuthenticationScheme.BEARER;\n        /*\n         * Distinguish between Bearer and PoP/SSH token cache types\n         * Cast to lowercase to handle \"bearer\" from ADFS\n         */\n        const credentialType =\n            authScheme &&\n            authScheme.toLowerCase() !==\n                AuthenticationScheme.BEARER.toLowerCase()\n                ? CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME\n                : CredentialType.ACCESS_TOKEN;\n\n        const accessTokenFilter: CredentialFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: credentialType,\n            clientId: this.clientId,\n            realm: account.tenantId,\n            target: scopes,\n            tokenType: authScheme,\n            keyId: request.sshKid,\n            requestedClaimsHash: request.requestedClaimsHash,\n        };\n\n        const accessTokenKeys =\n            (tokenKeys && tokenKeys.accessToken) ||\n            this.getTokenKeys().accessToken;\n        const accessTokens: AccessTokenEntity[] = [];\n\n        accessTokenKeys.forEach((key) => {\n            // Validate key\n            if (\n                this.accessTokenKeyMatchesFilter(key, accessTokenFilter, true)\n            ) {\n                const accessToken = this.getAccessTokenCredential(key);\n\n                // Validate value\n                if (\n                    accessToken &&\n                    this.credentialMatchesFilter(accessToken, accessTokenFilter)\n                ) {\n                    accessTokens.push(accessToken);\n                }\n            }\n        });\n\n        const numAccessTokens = accessTokens.length;\n        if (numAccessTokens < 1) {\n            this.commonLogger.info(\n                \"CacheManager:getAccessToken - No token found\"\n            );\n            return null;\n        } else if (numAccessTokens > 1) {\n            this.commonLogger.info(\n                \"CacheManager:getAccessToken - Multiple access tokens found, clearing them\"\n            );\n            accessTokens.forEach((accessToken) => {\n                void this.removeAccessToken(\n                    accessToken.generateCredentialKey()\n                );\n            });\n            return null;\n        }\n\n        this.commonLogger.info(\n            \"CacheManager:getAccessToken - Returning access token\"\n        );\n        return accessTokens[0];\n    }\n\n    /**\n     * Validate the cache key against filter before retrieving and parsing cache value\n     * @param key\n     * @param filter\n     * @param keyMustContainAllScopes\n     * @returns\n     */\n    accessTokenKeyMatchesFilter(\n        inputKey: string,\n        filter: CredentialFilter,\n        keyMustContainAllScopes: boolean\n    ): boolean {\n        const key = inputKey.toLowerCase();\n        if (\n            filter.clientId &&\n            key.indexOf(filter.clientId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        if (\n            filter.homeAccountId &&\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        if (filter.realm && key.indexOf(filter.realm.toLowerCase()) === -1) {\n            return false;\n        }\n\n        if (\n            filter.requestedClaimsHash &&\n            key.indexOf(filter.requestedClaimsHash.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        if (filter.target) {\n            const scopes = filter.target.asArray();\n            for (let i = 0; i < scopes.length; i++) {\n                if (\n                    keyMustContainAllScopes &&\n                    !key.includes(scopes[i].toLowerCase())\n                ) {\n                    // When performing a cache lookup a missing scope would be a cache miss\n                    return false;\n                } else if (\n                    !keyMustContainAllScopes &&\n                    key.includes(scopes[i].toLowerCase())\n                ) {\n                    // When performing a cache write, any token with a subset of requested scopes should be replaced\n                    return true;\n                }\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Gets all access tokens matching the filter\n     * @param filter\n     * @returns\n     */\n    getAccessTokensByFilter(filter: CredentialFilter): AccessTokenEntity[] {\n        const tokenKeys = this.getTokenKeys();\n\n        const accessTokens: AccessTokenEntity[] = [];\n        tokenKeys.accessToken.forEach((key) => {\n            if (!this.accessTokenKeyMatchesFilter(key, filter, true)) {\n                return;\n            }\n\n            const accessToken = this.getAccessTokenCredential(key);\n            if (\n                accessToken &&\n                this.credentialMatchesFilter(accessToken, filter)\n            ) {\n                accessTokens.push(accessToken);\n            }\n        });\n\n        return accessTokens;\n    }\n\n    /**\n     * Helper to retrieve the appropriate refresh token from cache\n     * @param clientId\n     * @param account\n     * @param familyRT\n     */\n    getRefreshToken(\n        account: AccountInfo,\n        familyRT: boolean,\n        tokenKeys?: TokenKeys\n    ): RefreshTokenEntity | null {\n        this.commonLogger.trace(\"CacheManager - getRefreshToken called\");\n        const id = familyRT ? THE_FAMILY_ID : undefined;\n        const refreshTokenFilter: CredentialFilter = {\n            homeAccountId: account.homeAccountId,\n            environment: account.environment,\n            credentialType: CredentialType.REFRESH_TOKEN,\n            clientId: this.clientId,\n            familyId: id,\n        };\n\n        const refreshTokenKeys =\n            (tokenKeys && tokenKeys.refreshToken) ||\n            this.getTokenKeys().refreshToken;\n        const refreshTokens: RefreshTokenEntity[] = [];\n\n        refreshTokenKeys.forEach((key) => {\n            // Validate key\n            if (this.refreshTokenKeyMatchesFilter(key, refreshTokenFilter)) {\n                const refreshToken = this.getRefreshTokenCredential(key);\n                // Validate value\n                if (\n                    refreshToken &&\n                    this.credentialMatchesFilter(\n                        refreshToken,\n                        refreshTokenFilter\n                    )\n                ) {\n                    refreshTokens.push(refreshToken);\n                }\n            }\n        });\n\n        const numRefreshTokens = refreshTokens.length;\n        if (numRefreshTokens < 1) {\n            this.commonLogger.info(\n                \"CacheManager:getRefreshToken - No refresh token found.\"\n            );\n            return null;\n        }\n        // address the else case after remove functions address environment aliases\n\n        this.commonLogger.info(\n            \"CacheManager:getRefreshToken - returning refresh token\"\n        );\n        return refreshTokens[0] as RefreshTokenEntity;\n    }\n\n    /**\n     * Validate the cache key against filter before retrieving and parsing cache value\n     * @param key\n     * @param filter\n     */\n    refreshTokenKeyMatchesFilter(\n        inputKey: string,\n        filter: CredentialFilter\n    ): boolean {\n        const key = inputKey.toLowerCase();\n        if (\n            filter.familyId &&\n            key.indexOf(filter.familyId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        // If familyId is used, clientId is not in the key\n        if (\n            !filter.familyId &&\n            filter.clientId &&\n            key.indexOf(filter.clientId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        if (\n            filter.homeAccountId &&\n            key.indexOf(filter.homeAccountId.toLowerCase()) === -1\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Retrieve AppMetadataEntity from cache\n     */\n    readAppMetadataFromCache(environment: string): AppMetadataEntity | null {\n        const appMetadataFilter: AppMetadataFilter = {\n            environment,\n            clientId: this.clientId,\n        };\n\n        const appMetadata: AppMetadataCache =\n            this.getAppMetadataFilteredBy(appMetadataFilter);\n        const appMetadataEntries: AppMetadataEntity[] = Object.keys(\n            appMetadata\n        ).map((key) => appMetadata[key]);\n\n        const numAppMetadata = appMetadataEntries.length;\n        if (numAppMetadata < 1) {\n            return null;\n        } else if (numAppMetadata > 1) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.multipleMatchingAppMetadata\n            );\n        }\n\n        return appMetadataEntries[0] as AppMetadataEntity;\n    }\n\n    /**\n     * Return the family_id value associated  with FOCI\n     * @param environment\n     * @param clientId\n     */\n    isAppMetadataFOCI(environment: string): boolean {\n        const appMetadata = this.readAppMetadataFromCache(environment);\n        return !!(appMetadata && appMetadata.familyId === THE_FAMILY_ID);\n    }\n\n    /**\n     * helper to match account ids\n     * @param value\n     * @param homeAccountId\n     */\n    private matchHomeAccountId(\n        entity: AccountEntity | CredentialEntity,\n        homeAccountId: string\n    ): boolean {\n        return !!(\n            typeof entity.homeAccountId === \"string\" &&\n            homeAccountId === entity.homeAccountId\n        );\n    }\n\n    /**\n     * helper to match account ids\n     * @param entity\n     * @param localAccountId\n     * @returns\n     */\n    private matchLocalAccountId(\n        entity: AccountEntity,\n        localAccountId: string\n    ): boolean {\n        return !!(\n            typeof entity.localAccountId === \"string\" &&\n            localAccountId === entity.localAccountId\n        );\n    }\n\n    /**\n     * helper to match usernames\n     * @param entity\n     * @param username\n     * @returns\n     */\n    private matchUsername(entity: AccountEntity, username: string): boolean {\n        return !!(\n            typeof entity.username === \"string\" &&\n            username.toLowerCase() === entity.username.toLowerCase()\n        );\n    }\n\n    /**\n     * helper to match names\n     * @param entity\n     * @param name\n     * @returns true if the downcased name properties are present and match in the filter and the entity\n     */\n    private matchName(entity: AccountEntity, name: string): boolean {\n        return !!(name.toLowerCase() === entity.name?.toLowerCase());\n    }\n\n    /**\n     * helper to match assertion\n     * @param value\n     * @param oboAssertion\n     */\n    private matchUserAssertionHash(\n        entity: CredentialEntity,\n        userAssertionHash: string\n    ): boolean {\n        return !!(\n            entity.userAssertionHash &&\n            userAssertionHash === entity.userAssertionHash\n        );\n    }\n\n    /**\n     * helper to match environment\n     * @param value\n     * @param environment\n     */\n    private matchEnvironment(\n        entity: AccountEntity | CredentialEntity | AppMetadataEntity,\n        environment: string\n    ): boolean {\n        const cloudMetadata = this.getAuthorityMetadataByAlias(environment);\n        if (\n            cloudMetadata &&\n            cloudMetadata.aliases.indexOf(entity.environment) > -1\n        ) {\n            return true;\n        }\n\n        return false;\n    }\n\n    /**\n     * helper to match credential type\n     * @param entity\n     * @param credentialType\n     */\n    private matchCredentialType(\n        entity: CredentialEntity,\n        credentialType: string\n    ): boolean {\n        return (\n            entity.credentialType &&\n            credentialType.toLowerCase() === entity.credentialType.toLowerCase()\n        );\n    }\n\n    /**\n     * helper to match client ids\n     * @param entity\n     * @param clientId\n     */\n    private matchClientId(\n        entity: CredentialEntity | AppMetadataEntity,\n        clientId: string\n    ): boolean {\n        return !!(entity.clientId && clientId === entity.clientId);\n    }\n\n    /**\n     * helper to match family ids\n     * @param entity\n     * @param familyId\n     */\n    private matchFamilyId(\n        entity: CredentialEntity | AppMetadataEntity,\n        familyId: string\n    ): boolean {\n        return !!(entity.familyId && familyId === entity.familyId);\n    }\n\n    /**\n     * helper to match realm\n     * @param entity\n     * @param realm\n     */\n    private matchRealm(\n        entity: AccountEntity | CredentialEntity,\n        realm: string\n    ): boolean {\n        return !!(entity.realm && realm === entity.realm);\n    }\n\n    /**\n     * helper to match nativeAccountId\n     * @param entity\n     * @param nativeAccountId\n     * @returns boolean indicating the match result\n     */\n    private matchNativeAccountId(\n        entity: AccountEntity,\n        nativeAccountId: string\n    ): boolean {\n        return !!(\n            entity.nativeAccountId && nativeAccountId === entity.nativeAccountId\n        );\n    }\n\n    /**\n     * helper to match loginHint which can be either:\n     * 1. login_hint ID token claim\n     * 2. username in cached account object\n     * 3. upn in ID token claims\n     * @param entity\n     * @param loginHint\n     * @returns\n     */\n    private matchLoginHint(entity: AccountEntity, loginHint: string): boolean {\n        if (entity.idTokenClaims?.login_hint === loginHint) {\n            return true;\n        }\n\n        if (entity.username === loginHint) {\n            return true;\n        }\n\n        if (entity.idTokenClaims?.upn === loginHint) {\n            return true;\n        }\n\n        return false;\n    }\n\n    private matchAuthorityType(\n        entity: AccountEntity,\n        authorityType: string\n    ): boolean {\n        return !!(\n            entity.authorityType &&\n            authorityType.toLowerCase() === entity.authorityType.toLowerCase()\n        );\n    }\n\n    /**\n     * Returns true if the target scopes are a subset of the current entity's scopes, false otherwise.\n     * @param entity\n     * @param target\n     */\n    private matchTarget(entity: CredentialEntity, target: ScopeSet): boolean {\n        const isNotAccessTokenCredential =\n            entity.credentialType !== CredentialType.ACCESS_TOKEN &&\n            entity.credentialType !==\n                CredentialType.ACCESS_TOKEN_WITH_AUTH_SCHEME;\n\n        if (isNotAccessTokenCredential || !entity.target) {\n            return false;\n        }\n\n        const entityScopeSet: ScopeSet = ScopeSet.fromString(entity.target);\n\n        return entityScopeSet.containsScopeSet(target);\n    }\n\n    /**\n     * Returns true if the credential's tokenType or Authentication Scheme matches the one in the request, false otherwise\n     * @param entity\n     * @param tokenType\n     */\n    private matchTokenType(\n        entity: CredentialEntity,\n        tokenType: AuthenticationScheme\n    ): boolean {\n        return !!(entity.tokenType && entity.tokenType === tokenType);\n    }\n\n    /**\n     * Returns true if the credential's keyId matches the one in the request, false otherwise\n     * @param entity\n     * @param tokenType\n     */\n    private matchKeyId(entity: CredentialEntity, keyId: string): boolean {\n        return !!(entity.keyId && entity.keyId === keyId);\n    }\n\n    /**\n     * returns if a given cache entity is of the type appmetadata\n     * @param key\n     */\n    private isAppMetadata(key: string): boolean {\n        return key.indexOf(APP_METADATA) !== -1;\n    }\n\n    /**\n     * returns if a given cache entity is of the type authoritymetadata\n     * @param key\n     */\n    protected isAuthorityMetadata(key: string): boolean {\n        return key.indexOf(AUTHORITY_METADATA_CONSTANTS.CACHE_KEY) !== -1;\n    }\n\n    /**\n     * returns cache key used for cloud instance metadata\n     */\n    generateAuthorityMetadataCacheKey(authority: string): string {\n        return `${AUTHORITY_METADATA_CONSTANTS.CACHE_KEY}-${this.clientId}-${authority}`;\n    }\n\n    /**\n     * Helper to convert serialized data to object\n     * @param obj\n     * @param json\n     */\n    static toObject<T>(obj: T, json: object): T {\n        for (const propertyName in json) {\n            obj[propertyName] = json[propertyName];\n        }\n        return obj;\n    }\n}\n\n/** @internal */\nexport class DefaultStorageClass extends CacheManager {\n    setAccount(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getAccount(): AccountEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    setIdTokenCredential(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getIdTokenCredential(): IdTokenEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    setAccessTokenCredential(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getAccessTokenCredential(): AccessTokenEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    setRefreshTokenCredential(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getRefreshTokenCredential(): RefreshTokenEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    setAppMetadata(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getAppMetadata(): AppMetadataEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    setServerTelemetry(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getServerTelemetry(): ServerTelemetryEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    setAuthorityMetadata(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getAuthorityMetadata(): AuthorityMetadataEntity | null {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getAuthorityMetadataKeys(): Array<string> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    setThrottlingCache(): void {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getThrottlingCache(): ThrottlingEntity {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    removeItem(): boolean {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    containsKey(): boolean {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getKeys(): string[] {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getAccountKeys(): string[] {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    getTokenKeys(): TokenKeys {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    async clear(): Promise<void> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n    updateCredentialCacheKey(): string {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Separators, CacheAccountType, Constants } from \"../../utils/Constants\";\nimport { Authority } from \"../../authority/Authority\";\nimport { ICrypto } from \"../../crypto/ICrypto\";\nimport { buildClientInfo } from \"../../account/ClientInfo\";\nimport { AccountInfo } from \"../../account/AccountInfo\";\nimport {\n    createClientAuthError,\n    ClientAuthErrorCodes,\n} from \"../../error/ClientAuthError\";\nimport { AuthorityType } from \"../../authority/AuthorityType\";\nimport { Logger } from \"../../logger/Logger\";\nimport { TokenClaims } from \"../../account/TokenClaims\";\nimport { ProtocolMode } from \"../../authority/ProtocolMode\";\n\n/**\n * Type that defines required and optional parameters for an Account field (based on universal cache schema implemented by all MSALs).\n *\n * Key : Value Schema\n *\n * Key: <home_account_id>-<environment>-<realm*>\n *\n * Value Schema:\n * {\n *      homeAccountId: home account identifier for the auth scheme,\n *      environment: entity that issued the token, represented as a full host\n *      realm: Full tenant or organizational identifier that the account belongs to\n *      localAccountId: Original tenant-specific accountID, usually used for legacy cases\n *      username: primary username that represents the user, usually corresponds to preferred_username in the v2 endpt\n *      authorityType: Accounts authority type as a string\n *      name: Full name for the account, including given name and family name,\n *      lastModificationTime: last time this entity was modified in the cache\n *      lastModificationApp:\n *      idTokenClaims: Object containing claims parsed from ID token\n *      nativeAccountId: Account identifier on the native device\n * }\n * @internal\n */\nexport class AccountEntity {\n    homeAccountId: string;\n    environment: string;\n    realm: string;\n    localAccountId: string;\n    username: string;\n    authorityType: string;\n    clientInfo?: string;\n    name?: string;\n    lastModificationTime?: string;\n    lastModificationApp?: string;\n    cloudGraphHostName?: string;\n    msGraphHost?: string;\n    idTokenClaims?: TokenClaims;\n    nativeAccountId?: string;\n\n    /**\n     * Generate Account Id key component as per the schema: <home_account_id>-<environment>\n     */\n    generateAccountId(): string {\n        const accountId: Array<string> = [this.homeAccountId, this.environment];\n        return accountId.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * Generate Account Cache Key as per the schema: <home_account_id>-<environment>-<realm*>\n     */\n    generateAccountKey(): string {\n        return AccountEntity.generateAccountCacheKey({\n            homeAccountId: this.homeAccountId,\n            environment: this.environment,\n            tenantId: this.realm,\n            username: this.username,\n            localAccountId: this.localAccountId,\n        });\n    }\n\n    /**\n     * Returns the AccountInfo interface for this account.\n     */\n    getAccountInfo(): AccountInfo {\n        return {\n            homeAccountId: this.homeAccountId,\n            environment: this.environment,\n            tenantId: this.realm,\n            username: this.username,\n            localAccountId: this.localAccountId,\n            name: this.name,\n            idTokenClaims: this.idTokenClaims,\n            nativeAccountId: this.nativeAccountId,\n            authorityType: this.authorityType,\n        };\n    }\n\n    /**\n     * Generates account key from interface\n     * @param accountInterface\n     */\n    static generateAccountCacheKey(accountInterface: AccountInfo): string {\n        const accountKey = [\n            accountInterface.homeAccountId,\n            accountInterface.environment || Constants.EMPTY_STRING,\n            accountInterface.tenantId || Constants.EMPTY_STRING,\n        ];\n\n        return accountKey.join(Separators.CACHE_KEY_SEPARATOR).toLowerCase();\n    }\n\n    /**\n     * Build Account cache from IdToken, clientInfo and authority/policy. Associated with AAD.\n     * @param accountDetails\n     */\n    static createAccount(\n        accountDetails: {\n            homeAccountId: string;\n            idTokenClaims: TokenClaims;\n            clientInfo?: string;\n            cloudGraphHostName?: string;\n            msGraphHost?: string;\n            environment?: string;\n            nativeAccountId?: string;\n        },\n        authority: Authority\n    ): AccountEntity {\n        const account: AccountEntity = new AccountEntity();\n\n        if (authority.authorityType === AuthorityType.Adfs) {\n            account.authorityType = CacheAccountType.ADFS_ACCOUNT_TYPE;\n        } else if (authority.protocolMode === ProtocolMode.AAD) {\n            account.authorityType = CacheAccountType.MSSTS_ACCOUNT_TYPE;\n        } else {\n            account.authorityType = CacheAccountType.GENERIC_ACCOUNT_TYPE;\n        }\n\n        account.clientInfo = accountDetails.clientInfo;\n        account.homeAccountId = accountDetails.homeAccountId;\n        account.nativeAccountId = accountDetails.nativeAccountId;\n\n        const env =\n            accountDetails.environment ||\n            (authority && authority.getPreferredCache());\n\n        if (!env) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.invalidCacheEnvironment\n            );\n        }\n\n        account.environment = env;\n        // non AAD scenarios can have empty realm\n        account.realm =\n            accountDetails.idTokenClaims.tid || Constants.EMPTY_STRING;\n\n        account.idTokenClaims = accountDetails.idTokenClaims;\n\n        // How do you account for MSA CID here?\n        account.localAccountId =\n            accountDetails.idTokenClaims.oid ||\n            accountDetails.idTokenClaims.sub ||\n            Constants.EMPTY_STRING;\n\n        /*\n         * In B2C scenarios the emails claim is used instead of preferred_username and it is an array.\n         * In most cases it will contain a single email. This field should not be relied upon if a custom\n         * policy is configured to return more than 1 email.\n         */\n        const preferredUsername =\n            accountDetails.idTokenClaims.preferred_username ||\n            accountDetails.idTokenClaims.upn;\n        const email = accountDetails.idTokenClaims.emails\n            ? accountDetails.idTokenClaims.emails[0]\n            : null;\n\n        account.username = preferredUsername || email || Constants.EMPTY_STRING;\n        account.name = accountDetails.idTokenClaims.name;\n\n        account.cloudGraphHostName = accountDetails.cloudGraphHostName;\n        account.msGraphHost = accountDetails.msGraphHost;\n\n        return account;\n    }\n\n    /**\n     * Creates an AccountEntity object from AccountInfo\n     * @param accountInfo\n     * @param cloudGraphHostName\n     * @param msGraphHost\n     * @returns\n     */\n    static createFromAccountInfo(\n        accountInfo: AccountInfo,\n        cloudGraphHostName?: string,\n        msGraphHost?: string\n    ): AccountEntity {\n        const account: AccountEntity = new AccountEntity();\n\n        account.authorityType =\n            accountInfo.authorityType || CacheAccountType.GENERIC_ACCOUNT_TYPE;\n        account.homeAccountId = accountInfo.homeAccountId;\n        account.localAccountId = accountInfo.localAccountId;\n        account.nativeAccountId = accountInfo.nativeAccountId;\n\n        account.realm = accountInfo.tenantId;\n        account.environment = accountInfo.environment;\n\n        account.username = accountInfo.username;\n        account.name = accountInfo.name;\n        account.idTokenClaims = accountInfo.idTokenClaims;\n\n        account.cloudGraphHostName = cloudGraphHostName;\n        account.msGraphHost = msGraphHost;\n\n        return account;\n    }\n\n    /**\n     * Generate HomeAccountId from server response\n     * @param serverClientInfo\n     * @param authType\n     */\n    static generateHomeAccountId(\n        serverClientInfo: string,\n        authType: AuthorityType,\n        logger: Logger,\n        cryptoObj: ICrypto,\n        idTokenClaims?: TokenClaims\n    ): string {\n        const accountId = idTokenClaims?.sub\n            ? idTokenClaims.sub\n            : Constants.EMPTY_STRING;\n\n        // since ADFS does not have tid and does not set client_info\n        if (\n            authType === AuthorityType.Adfs ||\n            authType === AuthorityType.Dsts\n        ) {\n            return accountId;\n        }\n\n        // for cases where there is clientInfo\n        if (serverClientInfo) {\n            try {\n                const clientInfo = buildClientInfo(serverClientInfo, cryptoObj);\n                if (clientInfo.uid && clientInfo.utid) {\n                    return `${clientInfo.uid}${Separators.CLIENT_INFO_SEPARATOR}${clientInfo.utid}`;\n                }\n            } catch (e) {}\n        }\n\n        // default to \"sub\" claim\n        logger.verbose(\"No client info in response\");\n        return accountId;\n    }\n\n    /**\n     * Validates an entity: checks for all expected params\n     * @param entity\n     */\n    static isAccountEntity(entity: object): boolean {\n        if (!entity) {\n            return false;\n        }\n\n        return (\n            entity.hasOwnProperty(\"homeAccountId\") &&\n            entity.hasOwnProperty(\"environment\") &&\n            entity.hasOwnProperty(\"realm\") &&\n            entity.hasOwnProperty(\"localAccountId\") &&\n            entity.hasOwnProperty(\"username\") &&\n            entity.hasOwnProperty(\"authorityType\")\n        );\n    }\n\n    /**\n     * Helper function to determine whether 2 accountInfo objects represent the same account\n     * @param accountA\n     * @param accountB\n     * @param compareClaims - If set to true idTokenClaims will also be compared to determine account equality\n     */\n    static accountInfoIsEqual(\n        accountA: AccountInfo | null,\n        accountB: AccountInfo | null,\n        compareClaims?: boolean\n    ): boolean {\n        if (!accountA || !accountB) {\n            return false;\n        }\n\n        let claimsMatch = true; // default to true so as to not fail comparison below if compareClaims: false\n        if (compareClaims) {\n            const accountAClaims = (accountA.idTokenClaims ||\n                {}) as TokenClaims;\n            const accountBClaims = (accountB.idTokenClaims ||\n                {}) as TokenClaims;\n\n            // issued at timestamp and nonce are expected to change each time a new id token is acquired\n            claimsMatch =\n                accountAClaims.iat === accountBClaims.iat &&\n                accountAClaims.nonce === accountBClaims.nonce;\n        }\n\n        return (\n            accountA.homeAccountId === accountB.homeAccountId &&\n            accountA.localAccountId === accountB.localAccountId &&\n            accountA.username === accountB.username &&\n            accountA.tenantId === accountB.tenantId &&\n            accountA.environment === accountB.environment &&\n            accountA.nativeAccountId === accountB.nativeAccountId &&\n            claimsMatch\n        );\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { INetworkModule } from \"../network/INetworkModule\";\nimport { DEFAULT_CRYPTO_IMPLEMENTATION, ICrypto } from \"../crypto/ICrypto\";\nimport { ILoggerCallback, Logger, LogLevel } from \"../logger/Logger\";\nimport { Constants } from \"../utils/Constants\";\nimport { version } from \"../packageMetadata\";\nimport { Authority } from \"../authority/Authority\";\nimport { AzureCloudInstance } from \"../authority/AuthorityOptions\";\nimport { CacheManager, DefaultStorageClass } from \"../cache/CacheManager\";\nimport { ServerTelemetryManager } from \"../telemetry/server/ServerTelemetryManager\";\nimport { ICachePlugin } from \"../cache/interface/ICachePlugin\";\nimport { ISerializableTokenCache } from \"../cache/interface/ISerializableTokenCache\";\nimport { ClientCredentials } from \"../account/ClientCredentials\";\nimport { ProtocolMode } from \"../authority/ProtocolMode\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\n\n// Token renewal offset default in seconds\nconst DEFAULT_TOKEN_RENEWAL_OFFSET_SEC = 300;\n\n/**\n * Use the configuration object to configure MSAL Modules and initialize the base interfaces for MSAL.\n *\n * This object allows you to configure important elements of MSAL functionality:\n * - authOptions                - Authentication for application\n * - cryptoInterface            - Implementation of crypto functions\n * - libraryInfo                - Library metadata\n * - telemetry                  - Telemetry options and data\n * - loggerOptions              - Logging for application\n * - networkInterface           - Network implementation\n * - storageInterface           - Storage implementation\n * - systemOptions              - Additional library options\n * - clientCredentials          - Credentials options for confidential clients\n * @internal\n */\nexport type ClientConfiguration = {\n    authOptions: AuthOptions;\n    systemOptions?: SystemOptions;\n    loggerOptions?: LoggerOptions;\n    cacheOptions?: CacheOptions;\n    storageInterface?: CacheManager;\n    networkInterface?: INetworkModule;\n    cryptoInterface?: ICrypto;\n    clientCredentials?: ClientCredentials;\n    libraryInfo?: LibraryInfo;\n    telemetry?: TelemetryOptions;\n    serverTelemetryManager?: ServerTelemetryManager | null;\n    persistencePlugin?: ICachePlugin | null;\n    serializableCache?: ISerializableTokenCache | null;\n};\n\nexport type CommonClientConfiguration = {\n    authOptions: Required<AuthOptions>;\n    systemOptions: Required<SystemOptions>;\n    loggerOptions: Required<LoggerOptions>;\n    cacheOptions: Required<CacheOptions>;\n    storageInterface: CacheManager;\n    networkInterface: INetworkModule;\n    cryptoInterface: Required<ICrypto>;\n    libraryInfo: LibraryInfo;\n    telemetry: Required<TelemetryOptions>;\n    serverTelemetryManager: ServerTelemetryManager | null;\n    clientCredentials: ClientCredentials;\n    persistencePlugin: ICachePlugin | null;\n    serializableCache: ISerializableTokenCache | null;\n};\n\n/**\n * Use this to configure the auth options in the ClientConfiguration object\n *\n * - clientId                    - Client ID of your app registered with our Application registration portal : https://portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/RegisteredAppsPreview in Microsoft Identity Platform\n * - authority                   - You can configure a specific authority, defaults to \" \" or \"https://login.microsoftonline.com/common\"\n * - knownAuthorities            - An array of URIs that are known to be valid. Used in B2C scenarios.\n * - cloudDiscoveryMetadata      - A string containing the cloud discovery response. Used in AAD scenarios.\n * - clientCapabilities          - Array of capabilities which will be added to the claims.access_token.xms_cc request property on every network request.\n * - protocolMode                - Enum that represents the protocol that msal follows. Used for configuring proper endpoints.\n * - skipAuthorityMetadataCache      - A flag to choose whether to use or not use the local metadata cache during authority initialization. Defaults to false.\n * @internal\n */\nexport type AuthOptions = {\n    clientId: string;\n    authority: Authority;\n    clientCapabilities?: Array<string>;\n    azureCloudOptions?: AzureCloudOptions;\n    skipAuthorityMetadataCache?: boolean;\n};\n\n/**\n * Use this to configure token renewal info in the Configuration object\n *\n * - tokenRenewalOffsetSeconds    - Sets the window of offset needed to renew the token before expiry\n */\nexport type SystemOptions = {\n    tokenRenewalOffsetSeconds?: number;\n    preventCorsPreflight?: boolean;\n};\n\n/**\n *  Use this to configure the logging that MSAL does, by configuring logger options in the Configuration object\n *\n * - loggerCallback                - Callback for logger\n * - piiLoggingEnabled             - Sets whether pii logging is enabled\n * - logLevel                      - Sets the level at which logging happens\n * - correlationId                 - Sets the correlationId printed by the logger\n */\nexport type LoggerOptions = {\n    loggerCallback?: ILoggerCallback;\n    piiLoggingEnabled?: boolean;\n    logLevel?: LogLevel;\n    correlationId?: string;\n};\n\n/**\n *  Use this to configure credential cache preferences in the ClientConfiguration object\n *\n * - claimsBasedCachingEnabled   - Sets whether tokens should be cached based on the claims hash. Default is false.\n */\nexport type CacheOptions = {\n    claimsBasedCachingEnabled?: boolean;\n};\n\n/**\n * Library-specific options\n */\nexport type LibraryInfo = {\n    sku: string;\n    version: string;\n    cpu: string;\n    os: string;\n};\n\n/**\n * AzureCloudInstance specific options\n *\n * - azureCloudInstance             - string enum providing short notation for soverign and public cloud authorities\n * - tenant                         - provision to provide the tenant info\n */\nexport type AzureCloudOptions = {\n    azureCloudInstance: AzureCloudInstance;\n    tenant?: string;\n};\n\nexport type TelemetryOptions = {\n    application: ApplicationTelemetry;\n};\n\n/**\n * Telemetry information sent on request\n * - appName: Unique string name of an application\n * - appVersion: Version of the application using MSAL\n */\nexport type ApplicationTelemetry = {\n    appName: string;\n    appVersion: string;\n};\n\nexport const DEFAULT_SYSTEM_OPTIONS: Required<SystemOptions> = {\n    tokenRenewalOffsetSeconds: DEFAULT_TOKEN_RENEWAL_OFFSET_SEC,\n    preventCorsPreflight: false,\n};\n\nconst DEFAULT_LOGGER_IMPLEMENTATION: Required<LoggerOptions> = {\n    loggerCallback: () => {\n        // allow users to not set loggerCallback\n    },\n    piiLoggingEnabled: false,\n    logLevel: LogLevel.Info,\n    correlationId: Constants.EMPTY_STRING,\n};\n\nconst DEFAULT_CACHE_OPTIONS: Required<CacheOptions> = {\n    claimsBasedCachingEnabled: false,\n};\n\nconst DEFAULT_NETWORK_IMPLEMENTATION: INetworkModule = {\n    async sendGetRequestAsync<T>(): Promise<T> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    async sendPostRequestAsync<T>(): Promise<T> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n};\n\nconst DEFAULT_LIBRARY_INFO: LibraryInfo = {\n    sku: Constants.SKU,\n    version: version,\n    cpu: Constants.EMPTY_STRING,\n    os: Constants.EMPTY_STRING,\n};\n\nconst DEFAULT_CLIENT_CREDENTIALS: ClientCredentials = {\n    clientSecret: Constants.EMPTY_STRING,\n    clientAssertion: undefined,\n};\n\nconst DEFAULT_AZURE_CLOUD_OPTIONS: AzureCloudOptions = {\n    azureCloudInstance: AzureCloudInstance.None,\n    tenant: `${Constants.DEFAULT_COMMON_TENANT}`,\n};\n\nconst DEFAULT_TELEMETRY_OPTIONS: Required<TelemetryOptions> = {\n    application: {\n        appName: \"\",\n        appVersion: \"\",\n    },\n};\n\n/**\n * Function that sets the default options when not explicitly configured from app developer\n *\n * @param Configuration\n *\n * @returns Configuration\n */\nexport function buildClientConfiguration({\n    authOptions: userAuthOptions,\n    systemOptions: userSystemOptions,\n    loggerOptions: userLoggerOption,\n    cacheOptions: userCacheOptions,\n    storageInterface: storageImplementation,\n    networkInterface: networkImplementation,\n    cryptoInterface: cryptoImplementation,\n    clientCredentials: clientCredentials,\n    libraryInfo: libraryInfo,\n    telemetry: telemetry,\n    serverTelemetryManager: serverTelemetryManager,\n    persistencePlugin: persistencePlugin,\n    serializableCache: serializableCache,\n}: ClientConfiguration): CommonClientConfiguration {\n    const loggerOptions = {\n        ...DEFAULT_LOGGER_IMPLEMENTATION,\n        ...userLoggerOption,\n    };\n\n    return {\n        authOptions: buildAuthOptions(userAuthOptions),\n        systemOptions: { ...DEFAULT_SYSTEM_OPTIONS, ...userSystemOptions },\n        loggerOptions: loggerOptions,\n        cacheOptions: { ...DEFAULT_CACHE_OPTIONS, ...userCacheOptions },\n        storageInterface:\n            storageImplementation ||\n            new DefaultStorageClass(\n                userAuthOptions.clientId,\n                DEFAULT_CRYPTO_IMPLEMENTATION,\n                new Logger(loggerOptions)\n            ),\n        networkInterface:\n            networkImplementation || DEFAULT_NETWORK_IMPLEMENTATION,\n        cryptoInterface: cryptoImplementation || DEFAULT_CRYPTO_IMPLEMENTATION,\n        clientCredentials: clientCredentials || DEFAULT_CLIENT_CREDENTIALS,\n        libraryInfo: { ...DEFAULT_LIBRARY_INFO, ...libraryInfo },\n        telemetry: { ...DEFAULT_TELEMETRY_OPTIONS, ...telemetry },\n        serverTelemetryManager: serverTelemetryManager || null,\n        persistencePlugin: persistencePlugin || null,\n        serializableCache: serializableCache || null,\n    };\n}\n\n/**\n * Construct authoptions from the client and platform passed values\n * @param authOptions\n */\nfunction buildAuthOptions(authOptions: AuthOptions): Required<AuthOptions> {\n    return {\n        clientCapabilities: [],\n        azureCloudOptions: DEFAULT_AZURE_CLOUD_OPTIONS,\n        skipAuthorityMetadataCache: false,\n        ...authOptions,\n    };\n}\n\n/**\n * Returns true if config has protocolMode set to ProtocolMode.OIDC, false otherwise\n * @param ClientConfiguration\n */\nexport function isOidcProtocolMode(config: ClientConfiguration): boolean {\n    return (\n        config.authOptions.authority.options.protocolMode === ProtocolMode.OIDC\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\nimport { BaseAuthRequest } from \"../request/BaseAuthRequest\";\nimport { SignedHttpRequest } from \"./SignedHttpRequest\";\n\n/**\n * The PkceCodes type describes the structure\n * of objects that contain PKCE code\n * challenge and verifier pairs\n */\nexport type PkceCodes = {\n    verifier: string;\n    challenge: string;\n};\n\nexport type SignedHttpRequestParameters = Pick<\n    BaseAuthRequest,\n    \"resourceRequestMethod\" | \"resourceRequestUri\" | \"shrClaims\" | \"shrNonce\"\n> & {\n    correlationId?: string;\n};\n\n/**\n * Interface for crypto functions used by library\n */\nexport interface ICrypto {\n    /**\n     * Creates a guid randomly.\n     */\n    createNewGuid(): string;\n    /**\n     * base64 Encode string\n     * @param input\n     */\n    base64Encode(input: string): string;\n    /**\n     * base64 decode string\n     * @param input\n     */\n    base64Decode(input: string): string;\n    /**\n     * Generates an JWK RSA S256 Thumbprint\n     * @param request\n     */\n    getPublicKeyThumbprint(\n        request: SignedHttpRequestParameters\n    ): Promise<string>;\n    /**\n     * Removes cryptographic keypair from key store matching the keyId passed in\n     * @param kid\n     */\n    removeTokenBindingKey(kid: string): Promise<boolean>;\n    /**\n     * Removes all cryptographic keys from IndexedDB storage\n     */\n    clearKeystore(): Promise<boolean>;\n    /**\n     * Returns a signed proof-of-possession token with a given acces token that contains a cnf claim with the required kid.\n     * @param accessToken\n     */\n    signJwt(\n        payload: SignedHttpRequest,\n        kid: string,\n        correlationId?: string\n    ): Promise<string>;\n    /**\n     * Returns the SHA-256 hash of an input string\n     * @param plainText\n     */\n    hashString(plainText: string): Promise<string>;\n}\n\nexport const DEFAULT_CRYPTO_IMPLEMENTATION: ICrypto = {\n    createNewGuid: (): string => {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    base64Decode: (): string => {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    base64Encode: (): string => {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    async getPublicKeyThumbprint(): Promise<string> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    async removeTokenBindingKey(): Promise<boolean> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    async clearKeystore(): Promise<boolean> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    async signJwt(): Promise<string> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n    async hashString(): Promise<string> {\n        throw createClientAuthError(ClientAuthErrorCodes.methodNotImplemented);\n    },\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants } from \"../utils/Constants\";\nimport * as AuthErrorCodes from \"./AuthErrorCodes\";\nexport { AuthErrorCodes };\n\nexport const AuthErrorMessages = {\n    [AuthErrorCodes.unexpectedError]: \"Unexpected error in authentication.\",\n    [AuthErrorCodes.postRequestFailed]:\n        \"Post request failed from the network, could be a 4xx/5xx or a network unavailability. Please check the exact error code for details.\",\n};\n\n/**\n * AuthErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use AuthErrorCodes instead\n */\nexport const AuthErrorMessage = {\n    unexpectedError: {\n        code: AuthErrorCodes.unexpectedError,\n        desc: AuthErrorMessages[AuthErrorCodes.unexpectedError],\n    },\n    postRequestFailed: {\n        code: AuthErrorCodes.postRequestFailed,\n        desc: AuthErrorMessages[AuthErrorCodes.postRequestFailed],\n    },\n};\n\n/**\n * General error class thrown by the MSAL.js library.\n */\nexport class AuthError extends Error {\n    /**\n     * Short string denoting error\n     */\n    errorCode: string;\n\n    /**\n     * Detailed description of error\n     */\n    errorMessage: string;\n\n    /**\n     * Describes the subclass of an error\n     */\n    subError: string;\n\n    /**\n     * CorrelationId associated with the error\n     */\n    correlationId: string;\n\n    constructor(errorCode?: string, errorMessage?: string, suberror?: string) {\n        const errorString = errorMessage\n            ? `${errorCode}: ${errorMessage}`\n            : errorCode;\n        super(errorString);\n        Object.setPrototypeOf(this, AuthError.prototype);\n\n        this.errorCode = errorCode || Constants.EMPTY_STRING;\n        this.errorMessage = errorMessage || Constants.EMPTY_STRING;\n        this.subError = suberror || Constants.EMPTY_STRING;\n        this.name = \"AuthError\";\n    }\n\n    setCorrelationId(correlationId: string): void {\n        this.correlationId = correlationId;\n    }\n}\n\nexport function createAuthError(\n    code: string,\n    additionalMessage?: string\n): AuthError {\n    return new AuthError(\n        code,\n        additionalMessage\n            ? `${AuthErrorMessages[code]} ${additionalMessage}`\n            : AuthErrorMessages[code]\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError\";\nimport * as ClientAuthErrorCodes from \"./ClientAuthErrorCodes\";\nexport { ClientAuthErrorCodes }; // Allow importing as \"ClientAuthErrorCodes\";\n\n/**\n * ClientAuthErrorMessage class containing string constants used by error codes and messages.\n */\n\nexport const ClientAuthErrorMessages = {\n    [ClientAuthErrorCodes.clientInfoDecodingError]:\n        \"The client info could not be parsed/decoded correctly\",\n    [ClientAuthErrorCodes.clientInfoEmptyError]: \"The client info was empty\",\n    [ClientAuthErrorCodes.tokenParsingError]: \"Token cannot be parsed\",\n    [ClientAuthErrorCodes.nullOrEmptyToken]: \"The token is null or empty\",\n    [ClientAuthErrorCodes.endpointResolutionError]:\n        \"Endpoints cannot be resolved\",\n    [ClientAuthErrorCodes.networkError]: \"Network request failed\",\n    [ClientAuthErrorCodes.openIdConfigError]:\n        \"Could not retrieve endpoints. Check your authority and verify the .well-known/openid-configuration endpoint returns the required endpoints.\",\n    [ClientAuthErrorCodes.hashNotDeserialized]:\n        \"The hash parameters could not be deserialized\",\n    [ClientAuthErrorCodes.invalidState]: \"State was not the expected format\",\n    [ClientAuthErrorCodes.stateMismatch]: \"State mismatch error\",\n    [ClientAuthErrorCodes.stateNotFound]: \"State not found\",\n    [ClientAuthErrorCodes.nonceMismatch]: \"Nonce mismatch error\",\n    [ClientAuthErrorCodes.authTimeNotFound]:\n        \"Max Age was requested and the ID token is missing the auth_time variable.\" +\n        \" auth_time is an optional claim and is not enabled by default - it must be enabled.\" +\n        \" See https://aka.ms/msaljs/optional-claims for more information.\",\n    [ClientAuthErrorCodes.maxAgeTranspired]:\n        \"Max Age is set to 0, or too much time has elapsed since the last end-user authentication.\",\n    [ClientAuthErrorCodes.multipleMatchingTokens]:\n        \"The cache contains multiple tokens satisfying the requirements. \" +\n        \"Call AcquireToken again providing more requirements such as authority or account.\",\n    [ClientAuthErrorCodes.multipleMatchingAccounts]:\n        \"The cache contains multiple accounts satisfying the given parameters. Please pass more info to obtain the correct account\",\n    [ClientAuthErrorCodes.multipleMatchingAppMetadata]:\n        \"The cache contains multiple appMetadata satisfying the given parameters. Please pass more info to obtain the correct appMetadata\",\n    [ClientAuthErrorCodes.requestCannotBeMade]:\n        \"Token request cannot be made without authorization code or refresh token.\",\n    [ClientAuthErrorCodes.cannotRemoveEmptyScope]:\n        \"Cannot remove null or empty scope from ScopeSet\",\n    [ClientAuthErrorCodes.cannotAppendScopeSet]: \"Cannot append ScopeSet\",\n    [ClientAuthErrorCodes.emptyInputScopeSet]:\n        \"Empty input ScopeSet cannot be processed\",\n    [ClientAuthErrorCodes.deviceCodePollingCancelled]:\n        \"Caller has cancelled token endpoint polling during device code flow by setting DeviceCodeRequest.cancel = true.\",\n    [ClientAuthErrorCodes.deviceCodeExpired]: \"Device code is expired.\",\n    [ClientAuthErrorCodes.deviceCodeUnknownError]:\n        \"Device code stopped polling for unknown reasons.\",\n    [ClientAuthErrorCodes.noAccountInSilentRequest]:\n        \"Please pass an account object, silent flow is not supported without account information\",\n    [ClientAuthErrorCodes.invalidCacheRecord]:\n        \"Cache record object was null or undefined.\",\n    [ClientAuthErrorCodes.invalidCacheEnvironment]:\n        \"Invalid environment when attempting to create cache entry\",\n    [ClientAuthErrorCodes.noAccountFound]:\n        \"No account found in cache for given key.\",\n    [ClientAuthErrorCodes.noCryptoObject]: \"No crypto object detected.\",\n    [ClientAuthErrorCodes.unexpectedCredentialType]:\n        \"Unexpected credential type.\",\n    [ClientAuthErrorCodes.invalidAssertion]:\n        \"Client assertion must meet requirements described in https://tools.ietf.org/html/rfc7515\",\n    [ClientAuthErrorCodes.invalidClientCredential]:\n        \"Client credential (secret, certificate, or assertion) must not be empty when creating a confidential client. An application should at most have one credential\",\n    [ClientAuthErrorCodes.tokenRefreshRequired]:\n        \"Cannot return token from cache because it must be refreshed. This may be due to one of the following reasons: forceRefresh parameter is set to true, claims have been requested, there is no cached access token or it is expired.\",\n    [ClientAuthErrorCodes.userTimeoutReached]:\n        \"User defined timeout for device code polling reached\",\n    [ClientAuthErrorCodes.tokenClaimsCnfRequiredForSignedJwt]:\n        \"Cannot generate a POP jwt if the token_claims are not populated\",\n    [ClientAuthErrorCodes.authorizationCodeMissingFromServerResponse]:\n        \"Server response does not contain an authorization code to proceed\",\n    [ClientAuthErrorCodes.bindingKeyNotRemoved]:\n        \"Could not remove the credential's binding key from storage.\",\n    [ClientAuthErrorCodes.endSessionEndpointNotSupported]:\n        \"The provided authority does not support logout\",\n    [ClientAuthErrorCodes.keyIdMissing]:\n        \"A keyId value is missing from the requested bound token's cache record and is required to match the token to it's stored binding key.\",\n    [ClientAuthErrorCodes.noNetworkConnectivity]:\n        \"No network connectivity. Check your internet connection.\",\n    [ClientAuthErrorCodes.userCanceled]: \"User cancelled the flow.\",\n    [ClientAuthErrorCodes.missingTenantIdError]:\n        \"A tenant id - not common, organizations, or consumers - must be specified when using the client_credentials flow.\",\n    [ClientAuthErrorCodes.methodNotImplemented]:\n        \"This method has not been implemented\",\n};\n\n/**\n * String constants used by error codes and messages.\n * @deprecated Use ClientAuthErrorCodes instead\n */\nexport const ClientAuthErrorMessage = {\n    clientInfoDecodingError: {\n        code: ClientAuthErrorCodes.clientInfoDecodingError,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.clientInfoDecodingError\n        ],\n    },\n    clientInfoEmptyError: {\n        code: ClientAuthErrorCodes.clientInfoEmptyError,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.clientInfoEmptyError\n        ],\n    },\n    tokenParsingError: {\n        code: ClientAuthErrorCodes.tokenParsingError,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.tokenParsingError],\n    },\n    nullOrEmptyToken: {\n        code: ClientAuthErrorCodes.nullOrEmptyToken,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.nullOrEmptyToken],\n    },\n    endpointResolutionError: {\n        code: ClientAuthErrorCodes.endpointResolutionError,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.endpointResolutionError\n        ],\n    },\n    networkError: {\n        code: ClientAuthErrorCodes.networkError,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.networkError],\n    },\n    unableToGetOpenidConfigError: {\n        code: ClientAuthErrorCodes.openIdConfigError,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.openIdConfigError],\n    },\n    hashNotDeserialized: {\n        code: ClientAuthErrorCodes.hashNotDeserialized,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.hashNotDeserialized],\n    },\n    invalidStateError: {\n        code: ClientAuthErrorCodes.invalidState,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.invalidState],\n    },\n    stateMismatchError: {\n        code: ClientAuthErrorCodes.stateMismatch,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.stateMismatch],\n    },\n    stateNotFoundError: {\n        code: ClientAuthErrorCodes.stateNotFound,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.stateNotFound],\n    },\n    nonceMismatchError: {\n        code: ClientAuthErrorCodes.nonceMismatch,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.nonceMismatch],\n    },\n    authTimeNotFoundError: {\n        code: ClientAuthErrorCodes.authTimeNotFound,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.authTimeNotFound],\n    },\n    maxAgeTranspired: {\n        code: ClientAuthErrorCodes.maxAgeTranspired,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.maxAgeTranspired],\n    },\n    multipleMatchingTokens: {\n        code: ClientAuthErrorCodes.multipleMatchingTokens,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.multipleMatchingTokens\n        ],\n    },\n    multipleMatchingAccounts: {\n        code: ClientAuthErrorCodes.multipleMatchingAccounts,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.multipleMatchingAccounts\n        ],\n    },\n    multipleMatchingAppMetadata: {\n        code: ClientAuthErrorCodes.multipleMatchingAppMetadata,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.multipleMatchingAppMetadata\n        ],\n    },\n    tokenRequestCannotBeMade: {\n        code: ClientAuthErrorCodes.requestCannotBeMade,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.requestCannotBeMade],\n    },\n    removeEmptyScopeError: {\n        code: ClientAuthErrorCodes.cannotRemoveEmptyScope,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.cannotRemoveEmptyScope\n        ],\n    },\n    appendScopeSetError: {\n        code: ClientAuthErrorCodes.cannotAppendScopeSet,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.cannotAppendScopeSet\n        ],\n    },\n    emptyInputScopeSetError: {\n        code: ClientAuthErrorCodes.emptyInputScopeSet,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.emptyInputScopeSet],\n    },\n    DeviceCodePollingCancelled: {\n        code: ClientAuthErrorCodes.deviceCodePollingCancelled,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.deviceCodePollingCancelled\n        ],\n    },\n    DeviceCodeExpired: {\n        code: ClientAuthErrorCodes.deviceCodeExpired,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.deviceCodeExpired],\n    },\n    DeviceCodeUnknownError: {\n        code: ClientAuthErrorCodes.deviceCodeUnknownError,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.deviceCodeUnknownError\n        ],\n    },\n    NoAccountInSilentRequest: {\n        code: ClientAuthErrorCodes.noAccountInSilentRequest,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.noAccountInSilentRequest\n        ],\n    },\n    invalidCacheRecord: {\n        code: ClientAuthErrorCodes.invalidCacheRecord,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.invalidCacheRecord],\n    },\n    invalidCacheEnvironment: {\n        code: ClientAuthErrorCodes.invalidCacheEnvironment,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.invalidCacheEnvironment\n        ],\n    },\n    noAccountFound: {\n        code: ClientAuthErrorCodes.noAccountFound,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.noAccountFound],\n    },\n    noCryptoObj: {\n        code: ClientAuthErrorCodes.noCryptoObject,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.noCryptoObject],\n    },\n    unexpectedCredentialType: {\n        code: ClientAuthErrorCodes.unexpectedCredentialType,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.unexpectedCredentialType\n        ],\n    },\n    invalidAssertion: {\n        code: ClientAuthErrorCodes.invalidAssertion,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.invalidAssertion],\n    },\n    invalidClientCredential: {\n        code: ClientAuthErrorCodes.invalidClientCredential,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.invalidClientCredential\n        ],\n    },\n    tokenRefreshRequired: {\n        code: ClientAuthErrorCodes.tokenRefreshRequired,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.tokenRefreshRequired\n        ],\n    },\n    userTimeoutReached: {\n        code: ClientAuthErrorCodes.userTimeoutReached,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.userTimeoutReached],\n    },\n    tokenClaimsRequired: {\n        code: ClientAuthErrorCodes.tokenClaimsCnfRequiredForSignedJwt,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.tokenClaimsCnfRequiredForSignedJwt\n        ],\n    },\n    noAuthorizationCodeFromServer: {\n        code: ClientAuthErrorCodes.authorizationCodeMissingFromServerResponse,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.authorizationCodeMissingFromServerResponse\n        ],\n    },\n    bindingKeyNotRemovedError: {\n        code: ClientAuthErrorCodes.bindingKeyNotRemoved,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.bindingKeyNotRemoved\n        ],\n    },\n    logoutNotSupported: {\n        code: ClientAuthErrorCodes.endSessionEndpointNotSupported,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.endSessionEndpointNotSupported\n        ],\n    },\n    keyIdMissing: {\n        code: ClientAuthErrorCodes.keyIdMissing,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.keyIdMissing],\n    },\n    noNetworkConnectivity: {\n        code: ClientAuthErrorCodes.noNetworkConnectivity,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.noNetworkConnectivity\n        ],\n    },\n    userCanceledError: {\n        code: ClientAuthErrorCodes.userCanceled,\n        desc: ClientAuthErrorMessages[ClientAuthErrorCodes.userCanceled],\n    },\n    missingTenantIdError: {\n        code: ClientAuthErrorCodes.missingTenantIdError,\n        desc: ClientAuthErrorMessages[\n            ClientAuthErrorCodes.missingTenantIdError\n        ],\n    },\n};\n\n/**\n * Error thrown when there is an error in the client code running on the browser.\n */\nexport class ClientAuthError extends AuthError {\n    constructor(errorCode: string, additionalMessage?: string) {\n        super(\n            errorCode,\n            additionalMessage\n                ? `${ClientAuthErrorMessages[errorCode]}: ${additionalMessage}`\n                : ClientAuthErrorMessages[errorCode]\n        );\n        this.name = \"ClientAuthError\";\n\n        Object.setPrototypeOf(this, ClientAuthError.prototype);\n    }\n}\n\nexport function createClientAuthError(\n    errorCode: string,\n    additionalMessage?: string\n): ClientAuthError {\n    return new ClientAuthError(errorCode, additionalMessage);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const clientInfoDecodingError = \"client_info_decoding_error\";\nexport const clientInfoEmptyError = \"client_info_empty_error\";\nexport const tokenParsingError = \"token_parsing_error\";\nexport const nullOrEmptyToken = \"null_or_empty_token\";\nexport const endpointResolutionError = \"endpoints_resolution_error\";\nexport const networkError = \"network_error\";\nexport const openIdConfigError = \"openid_config_error\";\nexport const hashNotDeserialized = \"hash_not_deserialized\";\nexport const invalidState = \"invalid_state\";\nexport const stateMismatch = \"state_mismatch\";\nexport const stateNotFound = \"state_not_found\";\nexport const nonceMismatch = \"nonce_mismatch\";\nexport const authTimeNotFound = \"auth_time_not_found\";\nexport const maxAgeTranspired = \"max_age_transpired\";\nexport const multipleMatchingTokens = \"multiple_matching_tokens\";\nexport const multipleMatchingAccounts = \"multiple_matching_accounts\";\nexport const multipleMatchingAppMetadata = \"multiple_matching_appMetadata\";\nexport const requestCannotBeMade = \"request_cannot_be_made\";\nexport const cannotRemoveEmptyScope = \"cannot_remove_empty_scope\";\nexport const cannotAppendScopeSet = \"cannot_append_scopeset\";\nexport const emptyInputScopeSet = \"empty_input_scopeset\";\nexport const deviceCodePollingCancelled = \"device_code_polling_cancelled\";\nexport const deviceCodeExpired = \"device_code_expired\";\nexport const deviceCodeUnknownError = \"device_code_unknown_error\";\nexport const noAccountInSilentRequest = \"no_account_in_silent_request\";\nexport const invalidCacheRecord = \"invalid_cache_record\";\nexport const invalidCacheEnvironment = \"invalid_cache_environment\";\nexport const noAccountFound = \"no_account_found\";\nexport const noCryptoObject = \"no_crypto_object\";\nexport const unexpectedCredentialType = \"unexpected_credential_type\";\nexport const invalidAssertion = \"invalid_assertion\";\nexport const invalidClientCredential = \"invalid_client_credential\";\nexport const tokenRefreshRequired = \"token_refresh_required\";\nexport const userTimeoutReached = \"user_timeout_reached\";\nexport const tokenClaimsCnfRequiredForSignedJwt =\n    \"token_claims_cnf_required_for_signedjwt\";\nexport const authorizationCodeMissingFromServerResponse =\n    \"authorization_code_missing_from_server_response\";\nexport const bindingKeyNotRemoved = \"binding_key_not_removed\";\nexport const endSessionEndpointNotSupported =\n    \"end_session_endpoint_not_supported\";\nexport const keyIdMissing = \"key_id_missing\";\nexport const noNetworkConnectivity = \"no_network_connectivity\";\nexport const userCanceled = \"user_canceled\";\nexport const missingTenantIdError = \"missing_tenant_id_error\";\nexport const methodNotImplemented = \"method_not_implemented\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { AuthError } from \"./AuthError\";\nimport * as ClientConfigurationErrorCodes from \"./ClientConfigurationErrorCodes\";\nexport { ClientConfigurationErrorCodes };\n\nexport const ClientConfigurationErrorMessages = {\n    [ClientConfigurationErrorCodes.redirectUriEmpty]:\n        \"A redirect URI is required for all calls, and none has been set.\",\n    [ClientConfigurationErrorCodes.claimsRequestParsingError]:\n        \"Could not parse the given claims request object.\",\n    [ClientConfigurationErrorCodes.authorityUriInsecure]:\n        \"Authority URIs must use https.  Please see here for valid authority configuration options: https://docs.microsoft.com/en-us/azure/active-directory/develop/msal-js-initializing-client-applications#configuration-options\",\n    [ClientConfigurationErrorCodes.urlParseError]:\n        \"URL could not be parsed into appropriate segments.\",\n    [ClientConfigurationErrorCodes.urlEmptyError]: \"URL was empty or null.\",\n    [ClientConfigurationErrorCodes.emptyInputScopesError]:\n        \"Scopes cannot be passed as null, undefined or empty array because they are required to obtain an access token.\",\n    [ClientConfigurationErrorCodes.invalidPromptValue]:\n        \"Please see here for valid configuration options: https://azuread.github.io/microsoft-authentication-library-for-js/ref/modules/_azure_msal_common.html#commonauthorizationurlrequest\",\n    [ClientConfigurationErrorCodes.invalidClaims]:\n        \"Given claims parameter must be a stringified JSON object.\",\n    [ClientConfigurationErrorCodes.tokenRequestEmpty]:\n        \"Token request was empty and not found in cache.\",\n    [ClientConfigurationErrorCodes.logoutRequestEmpty]:\n        \"The logout request was null or undefined.\",\n    [ClientConfigurationErrorCodes.invalidCodeChallengeMethod]:\n        'code_challenge_method passed is invalid. Valid values are \"plain\" and \"S256\".',\n    [ClientConfigurationErrorCodes.pkceParamsMissing]:\n        \"Both params: code_challenge and code_challenge_method are to be passed if to be sent in the request\",\n    [ClientConfigurationErrorCodes.invalidCloudDiscoveryMetadata]:\n        \"Invalid cloudDiscoveryMetadata provided. Must be a stringified JSON object containing tenant_discovery_endpoint and metadata fields\",\n    [ClientConfigurationErrorCodes.invalidAuthorityMetadata]:\n        \"Invalid authorityMetadata provided. Must by a stringified JSON object containing authorization_endpoint, token_endpoint, issuer fields.\",\n    [ClientConfigurationErrorCodes.untrustedAuthority]:\n        \"The provided authority is not a trusted authority. Please include this authority in the knownAuthorities config parameter.\",\n    [ClientConfigurationErrorCodes.missingSshJwk]:\n        \"Missing sshJwk in SSH certificate request. A stringified JSON Web Key is required when using the SSH authentication scheme.\",\n    [ClientConfigurationErrorCodes.missingSshKid]:\n        \"Missing sshKid in SSH certificate request. A string that uniquely identifies the public SSH key is required when using the SSH authentication scheme.\",\n    [ClientConfigurationErrorCodes.missingNonceAuthenticationHeader]:\n        \"Unable to find an authentication header containing server nonce. Either the Authentication-Info or WWW-Authenticate headers must be present in order to obtain a server nonce.\",\n    [ClientConfigurationErrorCodes.invalidAuthenticationHeader]:\n        \"Invalid authentication header provided\",\n    [ClientConfigurationErrorCodes.cannotSetOIDCOptions]:\n        \"Cannot set OIDCOptions parameter. Please change the protocol mode to OIDC or use a non-Microsoft authority.\",\n    [ClientConfigurationErrorCodes.cannotAllowNativeBroker]:\n        \"Cannot set allowNativeBroker parameter to true when not in AAD protocol mode.\",\n    [ClientConfigurationErrorCodes.authorityMismatch]:\n        \"Authority mismatch error. Authority provided in login request or PublicClientApplication config does not match the environment of the provided account. Please use a matching account or make an interactive request to login to this authority.\",\n};\n\n/**\n * ClientConfigurationErrorMessage class containing string constants used by error codes and messages.\n * @deprecated Use ClientConfigurationErrorCodes instead\n */\nexport const ClientConfigurationErrorMessage = {\n    redirectUriNotSet: {\n        code: ClientConfigurationErrorCodes.redirectUriEmpty,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.redirectUriEmpty\n        ],\n    },\n    claimsRequestParsingError: {\n        code: ClientConfigurationErrorCodes.claimsRequestParsingError,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.claimsRequestParsingError\n        ],\n    },\n    authorityUriInsecure: {\n        code: ClientConfigurationErrorCodes.authorityUriInsecure,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.authorityUriInsecure\n        ],\n    },\n    urlParseError: {\n        code: ClientConfigurationErrorCodes.urlParseError,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.urlParseError\n        ],\n    },\n    urlEmptyError: {\n        code: ClientConfigurationErrorCodes.urlEmptyError,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.urlEmptyError\n        ],\n    },\n    emptyScopesError: {\n        code: ClientConfigurationErrorCodes.emptyInputScopesError,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.emptyInputScopesError\n        ],\n    },\n    invalidPrompt: {\n        code: ClientConfigurationErrorCodes.invalidPromptValue,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.invalidPromptValue\n        ],\n    },\n    invalidClaimsRequest: {\n        code: ClientConfigurationErrorCodes.invalidClaims,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.invalidClaims\n        ],\n    },\n    tokenRequestEmptyError: {\n        code: ClientConfigurationErrorCodes.tokenRequestEmpty,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.tokenRequestEmpty\n        ],\n    },\n    logoutRequestEmptyError: {\n        code: ClientConfigurationErrorCodes.logoutRequestEmpty,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.logoutRequestEmpty\n        ],\n    },\n    invalidCodeChallengeMethod: {\n        code: ClientConfigurationErrorCodes.invalidCodeChallengeMethod,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.invalidCodeChallengeMethod\n        ],\n    },\n    invalidCodeChallengeParams: {\n        code: ClientConfigurationErrorCodes.pkceParamsMissing,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.pkceParamsMissing\n        ],\n    },\n    invalidCloudDiscoveryMetadata: {\n        code: ClientConfigurationErrorCodes.invalidCloudDiscoveryMetadata,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.invalidCloudDiscoveryMetadata\n        ],\n    },\n    invalidAuthorityMetadata: {\n        code: ClientConfigurationErrorCodes.invalidAuthorityMetadata,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.invalidAuthorityMetadata\n        ],\n    },\n    untrustedAuthority: {\n        code: ClientConfigurationErrorCodes.untrustedAuthority,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.untrustedAuthority\n        ],\n    },\n    missingSshJwk: {\n        code: ClientConfigurationErrorCodes.missingSshJwk,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.missingSshJwk\n        ],\n    },\n    missingSshKid: {\n        code: ClientConfigurationErrorCodes.missingSshKid,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.missingSshKid\n        ],\n    },\n    missingNonceAuthenticationHeader: {\n        code: ClientConfigurationErrorCodes.missingNonceAuthenticationHeader,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.missingNonceAuthenticationHeader\n        ],\n    },\n    invalidAuthenticationHeader: {\n        code: ClientConfigurationErrorCodes.invalidAuthenticationHeader,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.invalidAuthenticationHeader\n        ],\n    },\n    cannotSetOIDCOptions: {\n        code: ClientConfigurationErrorCodes.cannotSetOIDCOptions,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.cannotSetOIDCOptions\n        ],\n    },\n    cannotAllowNativeBroker: {\n        code: ClientConfigurationErrorCodes.cannotAllowNativeBroker,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.cannotAllowNativeBroker\n        ],\n    },\n    authorityMismatch: {\n        code: ClientConfigurationErrorCodes.authorityMismatch,\n        desc: ClientConfigurationErrorMessages[\n            ClientConfigurationErrorCodes.authorityMismatch\n        ],\n    },\n};\n\n/**\n * Error thrown when there is an error in configuration of the MSAL.js library.\n */\nexport class ClientConfigurationError extends AuthError {\n    constructor(errorCode: string) {\n        super(errorCode, ClientConfigurationErrorMessages[errorCode]);\n        this.name = \"ClientConfigurationError\";\n        Object.setPrototypeOf(this, ClientConfigurationError.prototype);\n    }\n}\n\nexport function createClientConfigurationError(\n    errorCode: string\n): ClientConfigurationError {\n    return new ClientConfigurationError(errorCode);\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const redirectUriEmpty = \"redirect_uri_empty\";\nexport const claimsRequestParsingError = \"claims_request_parsing_error\";\nexport const authorityUriInsecure = \"authority_uri_insecure\";\nexport const urlParseError = \"url_parse_error\";\nexport const urlEmptyError = \"empty_url_error\";\nexport const emptyInputScopesError = \"empty_input_scopes_error\";\nexport const invalidPromptValue = \"invalid_prompt_value\";\nexport const invalidClaims = \"invalid_claims\";\nexport const tokenRequestEmpty = \"token_request_empty\";\nexport const logoutRequestEmpty = \"logout_request_empty\";\nexport const invalidCodeChallengeMethod = \"invalid_code_challenge_method\";\nexport const pkceParamsMissing = \"pkce_params_missing\";\nexport const invalidCloudDiscoveryMetadata = \"invalid_cloud_discovery_metadata\";\nexport const invalidAuthorityMetadata = \"invalid_authority_metadata\";\nexport const untrustedAuthority = \"untrusted_authority\";\nexport const missingSshJwk = \"missing_ssh_jwk\";\nexport const missingSshKid = \"missing_ssh_kid\";\nexport const missingNonceAuthenticationHeader =\n    \"missing_nonce_authentication_header\";\nexport const invalidAuthenticationHeader = \"invalid_authentication_header\";\nexport const cannotSetOIDCOptions = \"cannot_set_OIDCOptions\";\nexport const cannotAllowNativeBroker = \"cannot_allow_native_broker\";\nexport const authorityMismatch = \"authority_mismatch\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { Constants } from \"../utils/Constants\";\nimport { AuthError } from \"./AuthError\";\nimport * as InteractionRequiredAuthErrorCodes from \"./InteractionRequiredAuthErrorCodes\";\nexport { InteractionRequiredAuthErrorCodes };\n\n/**\n * InteractionRequiredServerErrorMessage contains string constants used by error codes and messages returned by the server indicating interaction is required\n */\nexport const InteractionRequiredServerErrorMessage = [\n    InteractionRequiredAuthErrorCodes.interactionRequired,\n    InteractionRequiredAuthErrorCodes.consentRequired,\n    InteractionRequiredAuthErrorCodes.loginRequired,\n];\n\nexport const InteractionRequiredAuthSubErrorMessage = [\n    \"message_only\",\n    \"additional_action\",\n    \"basic_action\",\n    \"user_password_expired\",\n    \"consent_required\",\n];\n\nconst InteractionRequiredAuthErrorMessages = {\n    [InteractionRequiredAuthErrorCodes.noTokensFound]:\n        \"No refresh token found in the cache. Please sign-in.\",\n    [InteractionRequiredAuthErrorCodes.nativeAccountUnavailable]:\n        \"The requested account is not available in the native broker. It may have been deleted or logged out. Please sign-in again using an interactive API.\",\n};\n\n/**\n * Interaction required errors defined by the SDK\n * @deprecated Use InteractionRequiredAuthErrorCodes instead\n */\nexport const InteractionRequiredAuthErrorMessage = {\n    noTokensFoundError: {\n        code: InteractionRequiredAuthErrorCodes.noTokensFound,\n        desc: InteractionRequiredAuthErrorMessages[\n            InteractionRequiredAuthErrorCodes.noTokensFound\n        ],\n    },\n    native_account_unavailable: {\n        code: InteractionRequiredAuthErrorCodes.nativeAccountUnavailable,\n        desc: InteractionRequiredAuthErrorMessages[\n            InteractionRequiredAuthErrorCodes.nativeAccountUnavailable\n        ],\n    },\n};\n\n/**\n * Error thrown when user interaction is required.\n */\nexport class InteractionRequiredAuthError extends AuthError {\n    /**\n     * The time the error occured at\n     */\n    timestamp: string;\n\n    /**\n     * TraceId associated with the error\n     */\n    traceId: string;\n\n    /**\n     * https://github.com/AzureAD/microsoft-authentication-library-for-js/blob/dev/lib/msal-common/docs/claims-challenge.md\n     *\n     * A string with extra claims needed for the token request to succeed\n     * web site: redirect the user to the authorization page and set the extra claims\n     * web api: include the claims in the WWW-Authenticate header that are sent back to the client so that it knows to request a token with the extra claims\n     * desktop application or browser context: include the claims when acquiring the token interactively\n     * app to app context (client_credentials): include the claims in the AcquireTokenByClientCredential request\n     */\n    claims: string;\n\n    constructor(\n        errorCode?: string,\n        errorMessage?: string,\n        subError?: string,\n        timestamp?: string,\n        traceId?: string,\n        correlationId?: string,\n        claims?: string\n    ) {\n        super(errorCode, errorMessage, subError);\n        Object.setPrototypeOf(this, InteractionRequiredAuthError.prototype);\n\n        this.timestamp = timestamp || Constants.EMPTY_STRING;\n        this.traceId = traceId || Constants.EMPTY_STRING;\n        this.correlationId = correlationId || Constants.EMPTY_STRING;\n        this.claims = claims || Constants.EMPTY_STRING;\n        this.name = \"InteractionRequiredAuthError\";\n    }\n}\n\n/**\n * Helper function used to determine if an error thrown by the server requires interaction to resolve\n * @param errorCode\n * @param errorString\n * @param subError\n */\nexport function isInteractionRequiredError(\n    errorCode?: string,\n    errorString?: string,\n    subError?: string\n): boolean {\n    const isInteractionRequiredErrorCode =\n        !!errorCode &&\n        InteractionRequiredServerErrorMessage.indexOf(errorCode) > -1;\n    const isInteractionRequiredSubError =\n        !!subError &&\n        InteractionRequiredAuthSubErrorMessage.indexOf(subError) > -1;\n    const isInteractionRequiredErrorDesc =\n        !!errorString &&\n        InteractionRequiredServerErrorMessage.some((irErrorCode) => {\n            return errorString.indexOf(irErrorCode) > -1;\n        });\n\n    return (\n        isInteractionRequiredErrorCode ||\n        isInteractionRequiredErrorDesc ||\n        isInteractionRequiredSubError\n    );\n}\n\n/**\n * Creates an InteractionRequiredAuthError\n */\nexport function createInteractionRequiredAuthError(\n    errorCode: string\n): InteractionRequiredAuthError {\n    return new InteractionRequiredAuthError(\n        errorCode,\n        InteractionRequiredAuthErrorMessages[errorCode]\n    );\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport { LoggerOptions } from \"../config/ClientConfiguration\";\nimport { Constants } from \"../utils/Constants\";\n\n/**\n * Options for logger messages.\n */\nexport type LoggerMessageOptions = {\n    logLevel: LogLevel;\n    containsPii?: boolean;\n    context?: string;\n    correlationId?: string;\n};\n\n/**\n * Log message level.\n */\nexport enum LogLevel {\n    Error,\n    Warning,\n    Info,\n    Verbose,\n    Trace,\n}\n\n/**\n * Callback to send the messages to.\n */\nexport interface ILoggerCallback {\n    (level: LogLevel, message: string, containsPii: boolean): void;\n}\n\n/**\n * Class which facilitates logging of messages to a specific place.\n */\nexport class Logger {\n    // Correlation ID for request, usually set by user.\n    private correlationId: string;\n\n    // Current log level, defaults to info.\n    private level: LogLevel = LogLevel.Info;\n\n    // Boolean describing whether PII logging is allowed.\n    private piiLoggingEnabled: boolean;\n\n    // Callback to send messages to.\n    private localCallback: ILoggerCallback;\n\n    // Package name implementing this logger\n    private packageName: string;\n\n    // Package version implementing this logger\n    private packageVersion: string;\n\n    constructor(\n        loggerOptions: LoggerOptions,\n        packageName?: string,\n        packageVersion?: string\n    ) {\n        const defaultLoggerCallback = () => {\n            return;\n        };\n        const setLoggerOptions =\n            loggerOptions || Logger.createDefaultLoggerOptions();\n        this.localCallback =\n            setLoggerOptions.loggerCallback || defaultLoggerCallback;\n        this.piiLoggingEnabled = setLoggerOptions.piiLoggingEnabled || false;\n        this.level =\n            typeof setLoggerOptions.logLevel === \"number\"\n                ? setLoggerOptions.logLevel\n                : LogLevel.Info;\n        this.correlationId =\n            setLoggerOptions.correlationId || Constants.EMPTY_STRING;\n        this.packageName = packageName || Constants.EMPTY_STRING;\n        this.packageVersion = packageVersion || Constants.EMPTY_STRING;\n    }\n\n    private static createDefaultLoggerOptions(): LoggerOptions {\n        return {\n            loggerCallback: () => {\n                // allow users to not set loggerCallback\n            },\n            piiLoggingEnabled: false,\n            logLevel: LogLevel.Info,\n        };\n    }\n\n    /**\n     * Create new Logger with existing configurations.\n     */\n    public clone(\n        packageName: string,\n        packageVersion: string,\n        correlationId?: string\n    ): Logger {\n        return new Logger(\n            {\n                loggerCallback: this.localCallback,\n                piiLoggingEnabled: this.piiLoggingEnabled,\n                logLevel: this.level,\n                correlationId: correlationId || this.correlationId,\n            },\n            packageName,\n            packageVersion\n        );\n    }\n\n    /**\n     * Log message with required options.\n     */\n    private logMessage(\n        logMessage: string,\n        options: LoggerMessageOptions\n    ): void {\n        if (\n            options.logLevel > this.level ||\n            (!this.piiLoggingEnabled && options.containsPii)\n        ) {\n            return;\n        }\n        const timestamp = new Date().toUTCString();\n\n        // Add correlationId to logs if set, correlationId provided on log messages take precedence\n        const logHeader = `[${timestamp}] : [${\n            options.correlationId || this.correlationId || \"\"\n        }]`;\n\n        const log = `${logHeader} : ${this.packageName}@${\n            this.packageVersion\n        } : ${LogLevel[options.logLevel]} - ${logMessage}`;\n        // debug(`msal:${LogLevel[options.logLevel]}${options.containsPii ? \"-Pii\": Constants.EMPTY_STRING}${options.context ? `:${options.context}` : Constants.EMPTY_STRING}`)(logMessage);\n        this.executeCallback(\n            options.logLevel,\n            log,\n            options.containsPii || false\n        );\n    }\n\n    /**\n     * Execute callback with message.\n     */\n    executeCallback(\n        level: LogLevel,\n        message: string,\n        containsPii: boolean\n    ): void {\n        if (this.localCallback) {\n            this.localCallback(level, message, containsPii);\n        }\n    }\n\n    /**\n     * Logs error messages.\n     */\n    error(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Error,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs error messages with PII.\n     */\n    errorPii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Error,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs warning messages.\n     */\n    warning(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Warning,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs warning messages with PII.\n     */\n    warningPii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Warning,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs info messages.\n     */\n    info(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Info,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs info messages with PII.\n     */\n    infoPii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Info,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs verbose messages.\n     */\n    verbose(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Verbose,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs verbose messages with PII.\n     */\n    verbosePii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Verbose,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs trace messages.\n     */\n    trace(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Trace,\n            containsPii: false,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Logs trace messages with PII.\n     */\n    tracePii(message: string, correlationId?: string): void {\n        this.logMessage(message, {\n            logLevel: LogLevel.Trace,\n            containsPii: true,\n            correlationId: correlationId || Constants.EMPTY_STRING,\n        });\n    }\n\n    /**\n     * Returns whether PII Logging is enabled or not.\n     */\n    isPiiLoggingEnabled(): boolean {\n        return this.piiLoggingEnabled || false;\n    }\n}\n","/* eslint-disable header/header */\nexport const name = \"@azure/msal-common\";\nexport const version = \"14.1.0\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nimport {\n    createClientConfigurationError,\n    ClientConfigurationErrorCodes,\n} from \"../error/ClientConfigurationError\";\nimport { StringUtils } from \"../utils/StringUtils\";\nimport {\n    ClientAuthErrorCodes,\n    createClientAuthError,\n} from \"../error/ClientAuthError\";\nimport { Constants, OIDC_SCOPES } from \"../utils/Constants\";\n\n/**\n * The ScopeSet class creates a set of scopes. Scopes are case-insensitive, unique values, so the Set object in JS makes\n * the most sense to implement for this class. All scopes are trimmed and converted to lower case strings in intersection and union functions\n * to ensure uniqueness of strings.\n */\nexport class ScopeSet {\n    // Scopes as a Set of strings\n    private scopes: Set<string>;\n\n    constructor(inputScopes: Array<string>) {\n        // Filter empty string and null/undefined array items\n        const scopeArr = inputScopes\n            ? StringUtils.trimArrayEntries([...inputScopes])\n            : [];\n        const filteredInput = scopeArr\n            ? StringUtils.removeEmptyStringsFromArray(scopeArr)\n            : [];\n\n        // Validate and filter scopes (validate function throws if validation fails)\n        this.validateInputScopes(filteredInput);\n\n        this.scopes = new Set<string>(); // Iterator in constructor not supported by IE11\n        filteredInput.forEach((scope) => this.scopes.add(scope));\n    }\n\n    /**\n     * Factory method to create ScopeSet from space-delimited string\n     * @param inputScopeString\n     * @param appClientId\n     * @param scopesRequired\n     */\n    static fromString(inputScopeString: string): ScopeSet {\n        const scopeString = inputScopeString || Constants.EMPTY_STRING;\n        const inputScopes: Array<string> = scopeString.split(\" \");\n        return new ScopeSet(inputScopes);\n    }\n\n    /**\n     * Creates the set of scopes to search for in cache lookups\n     * @param inputScopeString\n     * @returns\n     */\n    static createSearchScopes(inputScopeString: Array<string>): ScopeSet {\n        const scopeSet = new ScopeSet(inputScopeString);\n        if (!scopeSet.containsOnlyOIDCScopes()) {\n            scopeSet.removeOIDCScopes();\n        } else {\n            scopeSet.removeScope(Constants.OFFLINE_ACCESS_SCOPE);\n        }\n\n        return scopeSet;\n    }\n\n    /**\n     * Used to validate the scopes input parameter requested  by the developer.\n     * @param {Array<string>} inputScopes - Developer requested permissions. Not all scopes are guaranteed to be included in the access token returned.\n     * @param {boolean} scopesRequired - Boolean indicating whether the scopes array is required or not\n     */\n    private validateInputScopes(inputScopes: Array<string>): void {\n        // Check if scopes are required but not given or is an empty array\n        if (!inputScopes || inputScopes.length < 1) {\n            throw createClientConfigurationError(\n                ClientConfigurationErrorCodes.emptyInputScopesError\n            );\n        }\n    }\n\n    /**\n     * Check if a given scope is present in this set of scopes.\n     * @param scope\n     */\n    containsScope(scope: string): boolean {\n        const lowerCaseScopes = this.printScopesLowerCase().split(\" \");\n        const lowerCaseScopesSet = new ScopeSet(lowerCaseScopes);\n        // compare lowercase scopes\n        return scope\n            ? lowerCaseScopesSet.scopes.has(scope.toLowerCase())\n            : false;\n    }\n\n    /**\n     * Check if a set of scopes is present in this set of scopes.\n     * @param scopeSet\n     */\n    containsScopeSet(scopeSet: ScopeSet): boolean {\n        if (!scopeSet || scopeSet.scopes.size <= 0) {\n            return false;\n        }\n\n        return (\n            this.scopes.size >= scopeSet.scopes.size &&\n            scopeSet.asArray().every((scope) => this.containsScope(scope))\n        );\n    }\n\n    /**\n     * Check if set of scopes contains only the defaults\n     */\n    containsOnlyOIDCScopes(): boolean {\n        let defaultScopeCount = 0;\n        OIDC_SCOPES.forEach((defaultScope: string) => {\n            if (this.containsScope(defaultScope)) {\n                defaultScopeCount += 1;\n            }\n        });\n\n        return this.scopes.size === defaultScopeCount;\n    }\n\n    /**\n     * Appends single scope if passed\n     * @param newScope\n     */\n    appendScope(newScope: string): void {\n        if (newScope) {\n            this.scopes.add(newScope.trim());\n        }\n    }\n\n    /**\n     * Appends multiple scopes if passed\n     * @param newScopes\n     */\n    appendScopes(newScopes: Array<string>): void {\n        try {\n            newScopes.forEach((newScope) => this.appendScope(newScope));\n        } catch (e) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.cannotAppendScopeSet\n            );\n        }\n    }\n\n    /**\n     * Removes element from set of scopes.\n     * @param scope\n     */\n    removeScope(scope: string): void {\n        if (!scope) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.cannotRemoveEmptyScope\n            );\n        }\n        this.scopes.delete(scope.trim());\n    }\n\n    /**\n     * Removes default scopes from set of scopes\n     * Primarily used to prevent cache misses if the default scopes are not returned from the server\n     */\n    removeOIDCScopes(): void {\n        OIDC_SCOPES.forEach((defaultScope: string) => {\n            this.scopes.delete(defaultScope);\n        });\n    }\n\n    /**\n     * Combines an array of scopes with the current set of scopes.\n     * @param otherScopes\n     */\n    unionScopeSets(otherScopes: ScopeSet): Set<string> {\n        if (!otherScopes) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.emptyInputScopeSet\n            );\n        }\n        const unionScopes = new Set<string>(); // Iterator in constructor not supported in IE11\n        otherScopes.scopes.forEach((scope) =>\n            unionScopes.add(scope.toLowerCase())\n        );\n        this.scopes.forEach((scope) => unionScopes.add(scope.toLowerCase()));\n        return unionScopes;\n    }\n\n    /**\n     * Check if scopes intersect between this set and another.\n     * @param otherScopes\n     */\n    intersectingScopeSets(otherScopes: ScopeSet): boolean {\n        if (!otherScopes) {\n            throw createClientAuthError(\n                ClientAuthErrorCodes.emptyInputScopeSet\n            );\n        }\n\n        // Do not allow OIDC scopes to be the only intersecting scopes\n        if (!otherScopes.containsOnlyOIDCScopes()) {\n            otherScopes.removeOIDCScopes();\n        }\n        const unionScopes = this.unionScopeSets(otherScopes);\n        const sizeOtherScopes = otherScopes.getScopeCount();\n        const sizeThisScopes = this.getScopeCount();\n        const sizeUnionScopes = unionScopes.size;\n        return sizeUnionScopes < sizeThisScopes + sizeOtherScopes;\n    }\n\n    /**\n     * Returns size of set of scopes.\n     */\n    getScopeCount(): number {\n        return this.scopes.size;\n    }\n\n    /**\n     * Returns the scopes as an array of string values\n     */\n    asArray(): Array<string> {\n        const array: Array<string> = [];\n        this.scopes.forEach((val) => array.push(val));\n        return array;\n    }\n\n    /**\n     * Prints scopes into a space-delimited string\n     */\n    printScopes(): string {\n        if (this.scopes) {\n            const scopeArr = this.asArray();\n            return scopeArr.join(\" \");\n        }\n        return Constants.EMPTY_STRING;\n    }\n\n    /**\n     * Prints scopes into a space-delimited lower-case string (used for caching)\n     */\n    printScopesLowerCase(): string {\n        return this.printScopes().toLowerCase();\n    }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * Enumeration of operations that are instrumented by have their performance measured by the PerformanceClient.\n *\n * @export\n * @enum {number}\n */\nexport const PerformanceEvents = {\n    /**\n     * acquireTokenByCode API (msal-browser and msal-node).\n     * Used to acquire tokens by trading an authorization code against the token endpoint.\n     */\n    AcquireTokenByCode: \"acquireTokenByCode\",\n\n    /**\n     * acquireTokenByRefreshToken API (msal-browser and msal-node).\n     * Used to renew an access token using a refresh token against the token endpoint.\n     */\n    AcquireTokenByRefreshToken: \"acquireTokenByRefreshToken\",\n\n    /**\n     * acquireTokenSilent API (msal-browser and msal-node).\n     * Used to silently acquire a new access token (from the cache or the network).\n     */\n    AcquireTokenSilent: \"acquireTokenSilent\",\n\n    /**\n     * acquireTokenSilentAsync (msal-browser).\n     * Internal API for acquireTokenSilent.\n     */\n    AcquireTokenSilentAsync: \"acquireTokenSilentAsync\",\n\n    /**\n     * acquireTokenPopup (msal-browser).\n     * Used to acquire a new access token interactively through pop ups\n     */\n    AcquireTokenPopup: \"acquireTokenPopup\",\n\n    /**\n     * getPublicKeyThumbprint API in CryptoOpts class (msal-browser).\n     * Used to generate a public/private keypair and generate a public key thumbprint for pop requests.\n     */\n    CryptoOptsGetPublicKeyThumbprint: \"cryptoOptsGetPublicKeyThumbprint\",\n\n    /**\n     * signJwt API in CryptoOpts class (msal-browser).\n     * Used to signed a pop token.\n     */\n    CryptoOptsSignJwt: \"cryptoOptsSignJwt\",\n\n    /**\n     * acquireToken API in the SilentCacheClient class (msal-browser).\n     * Used to read access tokens from the cache.\n     */\n    SilentCacheClientAcquireToken: \"silentCacheClientAcquireToken\",\n\n    /**\n     * acquireToken API in the SilentIframeClient class (msal-browser).\n     * Used to acquire a new set of tokens from the authorize endpoint in a hidden iframe.\n     */\n    SilentIframeClientAcquireToken: \"silentIframeClientAcquireToken\",\n\n    /**\n     * acquireToken API in SilentRereshClient (msal-browser).\n     * Used to acquire a new set of tokens from the token endpoint using a refresh token.\n     */\n    SilentRefreshClientAcquireToken: \"silentRefreshClientAcquireToken\",\n\n    /**\n     * ssoSilent API (msal-browser).\n     * Used to silently acquire an authorization code and set of tokens using a hidden iframe.\n     */\n    SsoSilent: \"ssoSilent\",\n\n    /**\n     * getDiscoveredAuthority API in StandardInteractionClient class (msal-browser).\n     * Used to load authority metadata for a request.\n     */\n    StandardInteractionClientGetDiscoveredAuthority:\n        \"standardInteractionClientGetDiscoveredAuthority\",\n\n    /**\n     * acquireToken APIs in msal-browser.\n     * Used to make an /authorize endpoint call with native brokering enabled.\n     */\n    FetchAccountIdWithNativeBroker: \"fetchAccountIdWithNativeBroker\",\n\n    /**\n     * acquireToken API in NativeInteractionClient class (msal-browser).\n     * Used to acquire a token from Native component when native brokering is enabled.\n     */\n    NativeInteractionClientAcquireToken: \"nativeInteractionClientAcquireToken\",\n    /**\n     * Time spent creating default headers for requests to token endpoint\n     */\n    BaseClientCreateTokenRequestHeaders: \"baseClientCreateTokenRequestHeaders\",\n    /**\n     * Time spent sending/waiting for the response of a request to the token endpoint\n     */\n    BaseClientExecutePostToTokenEndpoint:\n        \"baseClientExecutePostToTokenEndpoint\",\n    /**\n     * Used to measure the time taken for completing embedded-broker handshake (PW-Broker).\n     */\n    BrokerHandhshake: \"brokerHandshake\",\n    /**\n     * acquireTokenByRefreshToken API in BrokerClientApplication (PW-Broker) .\n     */\n    AcquireTokenByRefreshTokenInBroker: \"acquireTokenByRefreshTokenInBroker\",\n    /**\n     * Time taken for token acquisition by broker\n     */\n    AcquireTokenByBroker: \"acquireTokenByBroker\",\n\n    /**\n     * Time spent on the network for refresh token acquisition\n     */\n    RefreshTokenClientExecuteTokenRequest:\n        \"refreshTokenClientExecuteTokenRequest\",\n\n    /**\n     * Time taken for acquiring refresh token , records RT size\n     */\n    RefreshTokenClientAcquireToken: \"refreshTokenClientAcquireToken\",\n\n    /**\n     * Time taken for acquiring cached refresh token\n     */\n    RefreshTokenClientAcquireTokenWithCachedRefreshToken:\n        \"refreshTokenClientAcquireTokenWithCachedRefreshToken\",\n\n    /**\n     * acquireTokenByRefreshToken API in RefreshTokenClient (msal-common).\n     */\n    RefreshTokenClientAcquireTokenByRefreshToken:\n        \"refreshTokenClientAcquireTokenByRefreshToken\",\n\n    /**\n     * Helper function to create token request body in RefreshTokenClient (msal-common).\n     */\n    RefreshTokenClientCreateTokenRequestBody:\n        \"refreshTokenClientCreateTokenRequestBody\",\n\n    /**\n     * acquireTokenFromCache (msal-browser).\n     * Internal API for acquiring token from cache\n     */\n    AcquireTokenFromCache: \"acquireTokenFromCache\",\n\n    /**\n     * acquireTokenBySilentIframe (msal-browser).\n     * Internal API for acquiring token by silent Iframe\n     */\n    AcquireTokenBySilentIframe: \"acquireTokenBySilentIframe\",\n\n    /**\n     * Internal API for initializing base request in BaseInteractionClient (msal-browser)\n     */\n    InitializeBaseRequest: \"initializeBaseRequest\",\n\n    /**\n     * Internal API for initializing silent request in SilentCacheClient (msal-browser)\n     */\n    InitializeSilentRequest: \"initializeSilentRequest\",\n\n    InitializeClientApplication: \"initializeClientApplication\",\n\n    /**\n     * Helper function in SilentIframeClient class (msal-browser).\n     */\n    SilentIframeClientTokenHelper: \"silentIframeClientTokenHelper\",\n\n    /**\n     * SilentHandler\n     */\n    SilentHandlerInitiateAuthRequest: \"silentHandlerInitiateAuthRequest\",\n    SilentHandlerMonitorIframeForHash: \"silentHandlerMonitorIframeForHash\",\n    SilentHandlerLoadFrame: \"silentHandlerLoadFrame\",\n\n    /**\n     * Helper functions in StandardInteractionClient class (msal-browser)\n     */\n    StandardInteractionClientCreateAuthCodeClient:\n        \"standardInteractionClientCreateAuthCodeClient\",\n    StandardInteractionClientGetClientConfiguration:\n        \"standardInteractionClientGetClientConfiguration\",\n    StandardInteractionClientInitializeAuthorizationRequest:\n        \"standardInteractionClientInitializeAuthorizationRequest\",\n    StandardInteractionClientInitializeAuthorizationCodeRequest:\n        \"standardInteractionClientInitializeAuthorizationCodeRequest\",\n\n    /**\n     * getAuthCodeUrl API (msal-browser and msal-node).\n     */\n    GetAuthCodeUrl: \"getAuthCodeUrl\",\n\n    /**\n     * Functions from InteractionHandler (msal-browser)\n     */\n    HandleCodeResponseFromServer: \"handleCodeResponseFromServer\",\n    HandleCodeResponseFromHash: \"handleCodeResponseFromHash\",\n    UpdateTokenEndpointAuthority: \"updateTokenEndpointAuthority\",\n\n    /**\n     * APIs in Authorization Code Client (msal-common)\n     */\n    AuthClientAcquireToken: \"authClientAcquireToken\",\n    AuthClientExecuteTokenRequest: \"authClientExecuteTokenRequest\",\n    AuthClientCreateTokenRequestBody: \"authClientCreateTokenRequestBody\",\n    AuthClientCreateQueryString: \"authClientCreateQueryString\",\n\n    /**\n     * Generate functions in PopTokenGenerator (msal-common)\n     */\n    PopTokenGenerateCnf: \"popTokenGenerateCnf\",\n    PopTokenGenerateKid: \"popTokenGenerateKid\",\n\n    /**\n     * handleServerTokenResponse API in ResponseHandler (msal-common)\n     */\n    HandleServerTokenResponse: \"handleServerTokenResponse\",\n\n    /**\n     * Authority functions\n     */\n    AuthorityFactoryCreateDiscoveredInstance:\n        \"authorityFactoryCreateDiscoveredInstance\",\n    AuthorityResolveEndpointsAsync: \"authorityResolveEndpointsAsync\",\n    AuthorityGetCloudDiscoveryMetadataFromNetwork:\n        \"authorityGetCloudDiscoveryMetadataFromNetwork\",\n    AuthorityUpdateCloudDiscoveryMetadata:\n        \"authorityUpdateCloudDiscoveryMetadata\",\n    AuthorityGetEndpointMetadataFromNetwork:\n        \"authorityGetEndpointMetadataFromNetwork\",\n    AuthorityUpdateEndpointMetadata: \"authorityUpdateEndpointMetadata\",\n    AuthorityUpdateMetadataWithRegionalInformation:\n        \"authorityUpdateMetadataWithRegionalInformation\",\n\n    /**\n     * Region Discovery functions\n     */\n    RegionDiscoveryDetectRegion: \"regionDiscoveryDetectRegion\",\n    RegionDiscoveryGetRegionFromIMDS: \"regionDiscoveryGetRegionFromIMDS\",\n    RegionDiscoveryGetCurrentVersion: \"regionDiscoveryGetCurrentVersion\",\n\n    AcquireTokenByCodeAsync: \"acquireTokenByCodeAsync\",\n\n    GetEndpointMetadataFromNetwork: \"getEndpointMetadataFromNetwork\",\n    GetCloudDiscoveryMetadataFromNetworkMeasurement:\n        \"getCloudDiscoveryMetadataFromNetworkMeasurement\",\n\n    HandleRedirectPromiseMeasurement: \"handleRedirectPromiseMeasurement\",\n\n    UpdateCloudDiscoveryMetadataMeasurement:\n        \"updateCloudDiscoveryMetadataMeasurement\",\n\n    UsernamePasswordClientAcquireToken: \"usernamePasswordClientAcquireToken\",\n\n    NativeMessageHandlerHandshake: \"nativeMessageHandlerHandshake\",\n\n    NativeGenerateAuthResult: \"nativeGenerateAuthResult\",\n\n    /**\n     * Cache operations\n     */\n    ClearTokensAndKeysWithClaims: \"clearTokensAndKeysWithClaims\",\n\n    /**\n     * Crypto Operations\n     */\n    GeneratePkceCodes: \"generatePkceCodes\",\n    GenerateCodeVerifier: \"generateCodeVerifier\",\n    GenerateCodeChallengeFromVerifier: \"generateCodeChallengeFromVerifier\",\n    Sha256Digest: \"sha256Digest\",\n    GetRandomValues: \"getRandomValues\",\n} as const;\nexport type PerformanceEvents =\n    (typeof PerformanceEvents)[keyof typeof PerformanceEvents];\n\n/**\n * State of the performance event.\n *\n * @export\n * @enum {number}\n */\nexport const PerformanceEventStatus = {\n    NotStarted: 0,\n    InProgress: 1,\n    Completed: 2,\n} as const;\nexport type PerformanceEventStatus =\n    (typeof PerformanceEventStatus)[keyof typeof PerformanceEventStatus];\n\nexport type SubMeasurement = {\n    name: string;\n    startTimeMs: number;\n};\n\n/**\n * Performance measurement taken by the library, including metadata about the request and application.\n *\n * @export\n * @typedef {PerformanceEvent}\n */\nexport type PerformanceEvent = {\n    /**\n     * Unique id for the event\n     *\n     * @type {string}\n     */\n    eventId: string;\n\n    /**\n     * State of the perforance measure.\n     *\n     * @type {PerformanceEventStatus}\n     */\n    status: PerformanceEventStatus;\n\n    /**\n     * Login authority used for the request\n     *\n     * @type {string}\n     */\n    authority: string;\n\n    /**\n     * Client id for the application\n     *\n     * @type {string}\n     */\n    clientId: string;\n\n    /**\n     * Correlation ID used for the request\n     *\n     * @type {string}\n     */\n    correlationId: string;\n\n    /**\n     * End-to-end duration in milliseconds.\n     * @date 3/22/2022 - 3:40:05 PM\n     *\n     * @type {number}\n     */\n    durationMs?: number;\n\n    /**\n     * Visibility of the page when the event completed.\n     * Read from: https://developer.mozilla.org/docs/Web/API/Page_Visibility_API\n     *\n     * @type {?(string | null)}\n     */\n    endPageVisibility?: string | null;\n\n    /**\n     * Whether the result was retrieved from the cache.\n     *\n     * @type {(boolean | null)}\n     */\n    fromCache?: boolean | null;\n\n    /**\n     * Event name (usually in the form of classNameFunctionName)\n     *\n     * @type {string}\n     */\n    name: string;\n\n    /**\n     * Visibility of the page when the event completed.\n     * Read from: https://developer.mozilla.org/docs/Web/API/Page_Visibility_API\n     *\n     * @type {?(string | null)}\n     */\n    startPageVisibility?: string | null;\n\n    /**\n     * Unix millisecond timestamp when the event was initiated.\n     *\n     * @type {number}\n     */\n    startTimeMs: number;\n\n    /**\n     * Whether or the operation completed successfully.\n     *\n     * @type {(boolean | null)}\n     */\n    success?: boolean | null;\n\n    /**\n     * Add specific error code in case of failure\n     *\n     * @type {string}\n     */\n    errorCode?: string;\n\n    /**\n     * Add specific sub error code in case of failure\n     *\n     * @type {string}\n     */\n    subErrorCode?: string;\n\n    /**\n     * Name of the library used for the operation.\n     *\n     * @type {string}\n     */\n    libraryName: string;\n\n    /**\n     * Version of the library used for the operation.\n     *\n     * @type {string}\n     */\n    libraryVersion: string;\n\n    /**\n     * Whether the response is from a native component (e.g., WAM)\n     *\n     * @type {?boolean}\n     */\n    isNativeBroker?: boolean;\n\n    /**\n     * Request ID returned from the response\n     *\n     * @type {?string}\n     */\n    requestId?: string;\n\n    /**\n     * Cache lookup policy\n     *\n     * @type {?number}\n     */\n    cacheLookupPolicy?: number | undefined;\n\n    /**\n     * Amount of time spent in the JS queue in milliseconds.\n     *\n     * @type {?number}\n     */\n    queuedTimeMs?: number;\n\n    /**\n     * Sub-measurements for internal use. To be deleted before flushing.\n     */\n    incompleteSubMeasurements?: Map<string, SubMeasurement>;\n\n    visibilityChangeCount?: number;\n    incompleteSubsCount?: number;\n    /**\n     * Amount of times queued in the JS event queue.\n     *\n     * @type {?number}\n     */\n    queuedCount?: number;\n    /**\n     * Amount of manually completed queue events.\n     *\n     * @type {?number}\n     */\n    queuedManuallyCompletedCount?: number;\n\n    /**\n     * Size of the id token\n     *\n     * @type {number}\n     */\n    idTokenSize?: number;\n\n    /**\n     *\n     * Size of the access token\n     *\n     * @type {number}\n     */\n\n    accessTokenSize?: number;\n\n    /**\n     *\n     * Size of the refresh token\n     *\n     * @type {number}\n     */\n\n    refreshTokenSize?: number | undefined;\n\n    /**\n     * Application name as specified by the app.\n     *\n     * @type {?string}\n     */\n    appName?: string;\n\n    /**\n     * Application version as specified by the app.\n     *\n     * @type {?string}\n     */\n    appVersion?: string;\n\n    /**\n     * The following are fields that may be emitted in native broker scenarios\n     */\n    extensionId?: string;\n    extensionVersion?: string;\n    matsBrokerVersion?: string;\n    matsAccountJoinOnStart?: string;\n    matsAccountJoinOnEnd?: string;\n    matsDeviceJoin?: string;\n    matsPromptBehavior?: string;\n    matsApiErrorCode?: number;\n    matsUiVisible?: boolean;\n    matsSilentCode?: number;\n    matsSilentBiSubCode?: number;\n    matsSilentMessage?: string;\n    matsSilentStatus?: number;\n    matsHttpStatus?: number;\n    matsHttpEventCount?: number;\n    httpVerToken?: string;\n\n    /**\n     * Native broker fields\n     */\n    allowNativeBroker?: boolean;\n    extensionInstalled?: boolean;\n    extensionHandshakeTimeoutMs?: number;\n    extensionHandshakeTimedOut?: boolean;\n};\n\nexport const IntFields: ReadonlySet<string> = new Set([\n    \"accessTokenSize\",\n    \"durationMs\",\n    \"idTokenSize\",\n    \"matsSilentStatus\",\n    \"matsHttpStatus\",\n    \"refreshTokenSize\",\n    \"queuedTimeMs\",\n    \"startTimeMs\",\n    \"status\",\n]);\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\nexport const Constants = {\n    LIBRARY_NAME: \"MSAL.JS\",\n    SKU: \"msal.js.common\",\n    // Prefix for all library cache entries\n    CACHE_PREFIX: \"msal\",\n    // default authority\n    DEFAULT_AUTHORITY: \"https://login.microsoftonline.com/common/\",\n    DEFAULT_AUTHORITY_HOST: \"login.microsoftonline.com\",\n    DEFAULT_COMMON_TENANT: \"common\",\n    // ADFS String\n    ADFS: \"adfs\",\n    DSTS: \"dstsv2\",\n    // Default AAD Instance Discovery Endpoint\n    AAD_INSTANCE_DISCOVERY_ENDPT:\n        \"https://login.microsoftonline.com/common/discovery/instance?api-version=1.1&authorization_endpoint=\",\n    // CIAM URL\n    CIAM_AUTH_URL: \".ciamlogin.com\",\n    AAD_TENANT_DOMAIN_SUFFIX: \".onmicrosoft.com\",\n    // Resource delimiter - used for certain cache entries\n    RESOURCE_DELIM: \"|\",\n    // Placeholder for non-existent account ids/objects\n    NO_ACCOUNT: \"NO_ACCOUNT\",\n    // Claims\n    CLAIMS: \"claims\",\n    // Consumer UTID\n    CONSUMER_UTID: \"9188040d-6c67-4c5b-b112-36a304b66dad\",\n    // Default scopes\n    OPENID_SCOPE: \"openid\",\n    PROFILE_SCOPE: \"profile\",\n    OFFLINE_ACCESS_SCOPE: \"offline_access\",\n    EMAIL_SCOPE: \"email\",\n    // Default response type for authorization code flow\n    CODE_RESPONSE_TYPE: \"code\",\n    CODE_GRANT_TYPE: \"authorization_code\",\n    RT_GRANT_TYPE: \"refresh_token\",\n    FRAGMENT_RESPONSE_MODE: \"fragment\",\n    S256_CODE_CHALLENGE_METHOD: \"S256\",\n    URL_FORM_CONTENT_TYPE: \"application/x-www-form-urlencoded;charset=utf-8\",\n    AUTHORIZATION_PENDING: \"authorization_pending\",\n    NOT_DEFINED: \"not_defined\",\n    EMPTY_STRING: \"\",\n    NOT_APPLICABLE: \"N/A\",\n    FORWARD_SLASH: \"/\",\n    IMDS_ENDPOINT: \"http://169.254.169.254/metadata/instance/compute/location\",\n    IMDS_VERSION: \"2020-06-01\",\n    IMDS_TIMEOUT: 2000,\n    AZURE_REGION_AUTO_DISCOVER_FLAG: \"TryAutoDetect\",\n    REGIONAL_AUTH_PUBLIC_CLOUD_SUFFIX: \"login.microsoft.com\",\n    REGIONAL_AUTH_NON_MSI_QUERY_STRING: \"allowestsrnonmsi=true\",\n    KNOWN_PUBLIC_CLOUDS: [\n        \"login.microsoftonline.com\",\n        \"login.windows.net\",\n        \"login.microsoft.com\",\n        \"sts.windows.net\",\n    ],\n    TOKEN_RESPONSE_TYPE: \"token\",\n    ID_TOKEN_RESPONSE_TYPE: \"id_token\",\n    SHR_NONCE_VALIDITY: 240,\n    INVALID_INSTANCE: \"invalid_instance\",\n};\n\nexport const HttpStatus = {\n    SUCCESS_RANGE_START: 200,\n    SUCCESS_RANGE_END: 299,\n    REDIRECT: 302,\n    CLIENT_ERROR_RANGE_START: 400,\n    CLIENT_ERROR_RANGE_END: 499,\n    SERVER_ERROR_RANGE_START: 500,\n    SERVER_ERROR_RANGE_END: 599,\n} as const;\nexport type HttpStatus = (typeof HttpStatus)[keyof typeof HttpStatus];\n\nexport const OIDC_DEFAULT_SCOPES = [\n    Constants.OPENID_SCOPE,\n    Constants.PROFILE_SCOPE,\n    Constants.OFFLINE_ACCESS_SCOPE,\n];\n\nexport const OIDC_SCOPES = [...OIDC_DEFAULT_SCOPES, Constants.EMAIL_SCOPE];\n\n/**\n * Request header names\n */\nexport const HeaderNames = {\n    CONTENT_TYPE: \"Content-Type\",\n    RETRY_AFTER: \"Retry-After\",\n    CCS_HEADER: \"X-AnchorMailbox\",\n    WWWAuthenticate: \"WWW-Authenticate\",\n    AuthenticationInfo: \"Authentication-Info\",\n    X_MS_REQUEST_ID: \"x-ms-request-id\",\n    X_MS_HTTP_VERSION: \"x-ms-httpver\",\n} as const;\nexport type HeaderNames = (typeof HeaderNames)[keyof typeof HeaderNames];\n\n/**\n * Persistent cache keys MSAL which stay while user is logged in.\n */\nexport const PersistentCacheKeys = {\n    ID_TOKEN: \"idtoken\",\n    CLIENT_INFO: \"client.info\",\n    ADAL_ID_TOKEN: \"adal.idtoken\",\n    ERROR: \"error\",\n    ERROR_DESC: \"error.description\",\n    ACTIVE_ACCOUNT: \"active-account\", // Legacy active-account cache key, use new key instead\n    ACTIVE_ACCOUNT_FILTERS: \"active-account-filters\", // new cache entry for active_account for a more robust version for browser\n} as const;\nexport type PersistentCacheKeys =\n    (typeof PersistentCacheKeys)[keyof typeof PersistentCacheKeys];\n\n/**\n * String constants related to AAD Authority\n */\nexport const AADAuthorityConstants = {\n    COMMON: \"common\",\n    ORGANIZATIONS: \"organizations\",\n    CONSUMERS: \"consumers\",\n} as const;\nexport type AADAuthorityConstants =\n    (typeof AADAuthorityConstants)[keyof typeof AADAuthorityConstants];\n\n/**\n * Keys in the hashParams sent by AAD Server\n */\nexport const AADServerParamKeys = {\n    CLIENT_ID: \"client_id\",\n    REDIRECT_URI: \"redirect_uri\",\n    RESPONSE_TYPE: \"response_type\",\n    RESPONSE_MODE: \"response_mode\",\n    GRANT_TYPE: \"grant_type\",\n    CLAIMS: \"claims\",\n    SCOPE: \"scope\",\n    ERROR: \"error\",\n    ERROR_DESCRIPTION: \"error_description\",\n    ACCESS_TOKEN: \"access_token\",\n    ID_TOKEN: \"id_token\",\n    REFRESH_TOKEN: \"refresh_token\",\n    EXPIRES_IN: \"expires_in\",\n    STATE: \"state\",\n    NONCE: \"nonce\",\n    PROMPT: \"prompt\",\n    SESSION_STATE: \"session_state\",\n    CLIENT_INFO: \"client_info\",\n    CODE: \"code\",\n    CODE_CHALLENGE: \"code_challenge\",\n    CODE_CHALLENGE_METHOD: \"code_challenge_method\",\n    CODE_VERIFIER: \"code_verifier\",\n    CLIENT_REQUEST_ID: \"client-request-id\",\n    X_CLIENT_SKU: \"x-client-SKU\",\n    X_CLIENT_VER: \"x-client-VER\",\n    X_CLIENT_OS: \"x-client-OS\",\n    X_CLIENT_CPU: \"x-client-CPU\",\n    X_CLIENT_CURR_TELEM: \"x-client-current-telemetry\",\n    X_CLIENT_LAST_TELEM: \"x-client-last-telemetry\",\n    X_MS_LIB_CAPABILITY: \"x-ms-lib-capability\",\n    X_APP_NAME: \"x-app-name\",\n    X_APP_VER: \"x-app-ver\",\n    POST_LOGOUT_URI: \"post_logout_redirect_uri\",\n    ID_TOKEN_HINT: \"id_token_hint\",\n    DEVICE_CODE: \"device_code\",\n    CLIENT_SECRET: \"client_secret\",\n    CLIENT_ASSERTION: \"client_assertion\",\n    CLIENT_ASSERTION_TYPE: \"client_assertion_type\",\n    TOKEN_TYPE: \"token_type\",\n    REQ_CNF: \"req_cnf\",\n    OBO_ASSERTION: \"assertion\",\n    REQUESTED_TOKEN_USE: \"requested_token_use\",\n    ON_BEHALF_OF: \"on_behalf_of\",\n    FOCI: \"foci\",\n    CCS_HEADER: \"X-AnchorMailbox\",\n    RETURN_SPA_CODE: \"return_spa_code\",\n    NATIVE_BROKER: \"nativebroker\",\n    LOGOUT_HINT: \"logout_hint\",\n} as const;\nexport type AADServerParamKeys =\n    (typeof AADServerParamKeys)[keyof typeof AADServerParamKeys];\n\n/**\n * Claims request keys\n */\nexport const ClaimsRequestKeys = {\n    ACCESS_TOKEN: \"access_token\",\n    XMS_CC: \"xms_cc\",\n} as const;\nexport type ClaimsRequestKeys =\n    (typeof ClaimsRequestKeys)[keyof typeof ClaimsRequestKeys];\n\n/**\n * we considered making this \"enum\" in the request instead of string, however it looks like the allowed list of\n * prompt values kept changing over past couple of years. There are some undocumented prompt values for some\n * internal partners too, hence the choice of generic \"string\" type instead of the \"enum\"\n */\nexport const PromptValue = {\n    LOGIN: \"login\",\n    SELECT_ACCOUNT: \"select_account\",\n    CONSENT: \"consent\",\n    NONE: \"none\",\n    CREATE: \"create\",\n    NO_SESSION: \"no_session\",\n};\n\n/**\n * SSO Types - generated to populate hints\n */\nexport const SSOTypes = {\n    ACCOUNT: \"account\",\n    SID: \"sid\",\n    LOGIN_HINT: \"login_hint\",\n    ID_TOKEN: \"id_token\",\n    DOMAIN_HINT: \"domain_hint\",\n    ORGANIZATIONS: \"organizations\",\n    CONSUMERS: \"consumers\",\n    ACCOUNT_ID: \"accountIdentifier\",\n    HOMEACCOUNT_ID: \"homeAccountIdentifier\",\n} as const;\nexport type SSOTypes = (typeof SSOTypes)[keyof typeof SSOTypes];\n\n/**\n * allowed values for codeVerifier\n */\nexport const CodeChallengeMethodValues = {\n    PLAIN: \"plain\",\n    S256: \"S256\",\n};\n\n/**\n * allowed values for server response type\n */\nexport const ServerResponseType = {\n    QUERY: \"query\",\n    FRAGMENT: \"fragment\",\n} as const;\nexport type ServerResponseType =\n    (typeof ServerResponseType)[keyof typeof ServerResponseType];\n\n/**\n * allowed values for response_mode\n */\nexport const ResponseMode = {\n    ...ServerResponseType,\n    FORM_POST: \"form_post\",\n} as const;\nexport type ResponseMode = (typeof ResponseMode)[keyof typeof ResponseMode];\n\n/**\n * allowed grant_type\n */\nexport const GrantType = {\n    IMPLICIT_GRANT: \"implicit\",\n    AUTHORIZATION_CODE_GRANT: \"authorization_code\",\n    CLIENT_CREDENTIALS_GRANT: \"client_credentials\",\n    RESOURCE_OWNER_PASSWORD_GRANT: \"password\",\n    REFRESH_TOKEN_GRANT: \"refresh_token\",\n    DEVICE_CODE_GRANT: \"device_code\",\n    JWT_BEARER: \"urn:ietf:params:oauth:grant-type:jwt-bearer\",\n} as const;\nexport type GrantType = (typeof GrantType)[keyof typeof GrantType];\n\n/**\n * Account types in Cache\n */\nexport const CacheAccountType = {\n    MSSTS_ACCOUNT_TYPE: \"MSSTS\",\n    ADFS_ACCOUNT_TYPE: \"ADFS\",\n    MSAV1_ACCOUNT_TYPE: \"MSA\",\n    GENERIC_ACCOUNT_TYPE: \"Generic\", // NTLM, Kerberos, FBA, Basic etc\n} as const;\nexport type CacheAccountType =\n    (typeof CacheAccountType)[keyof typeof CacheAccountType];\n\n/**\n * Separators used in cache\n */\nexport const Separators = {\n    CACHE_KEY_SEPARATOR: \"-\",\n    CLIENT_INFO_SEPARATOR: \".\",\n} as const;\nexport type Separators = (typeof Separators)[keyof typeof Separators];\n\n/**\n * Credential Type stored in the cache\n */\nexport const CredentialType = {\n    ID_TOKEN: \"IdToken\",\n    ACCESS_TOKEN: \"AccessToken\",\n    ACCESS_TOKEN_WITH_AUTH_SCHEME: \"AccessToken_With_AuthScheme\",\n    REFRESH_TOKEN: \"RefreshToken\",\n} as const;\nexport type CredentialType =\n    (typeof CredentialType)[keyof typeof CredentialType];\n\n/**\n * Combine all cache types\n */\nexport const CacheType = {\n    ADFS: 1001,\n    MSA: 1002,\n    MSSTS: 1003,\n    GENERIC: 1004,\n    ACCESS_TOKEN: 2001,\n    REFRESH_TOKEN: 2002,\n    ID_TOKEN: 2003,\n    APP_METADATA: 3001,\n    UNDEFINED: 9999,\n} as const;\nexport type CacheType = (typeof CacheType)[keyof typeof CacheType];\n\n/**\n * More Cache related constants\n */\nexport const APP_METADATA = \"appmetadata\";\nexport const CLIENT_INFO = \"client_info\";\nexport const THE_FAMILY_ID = \"1\";\n\nexport const AUTHORITY_METADATA_CONSTANTS = {\n    CACHE_KEY: \"authority-metadata\",\n    REFRESH_TIME_SECONDS: 3600 * 24, // 24 Hours\n};\n\nexport const AuthorityMetadataSource = {\n    CONFIG: \"config\",\n    CACHE: \"cache\",\n    NETWORK: \"network\",\n    HARDCODED_VALUES: \"hardcoded_values\",\n} as const;\nexport type AuthorityMetadataSource =\n    (typeof AuthorityMetadataSource)[keyof typeof AuthorityMetadataSource];\n\nexport const SERVER_TELEM_CONSTANTS = {\n    SCHEMA_VERSION: 5,\n    MAX_CUR_HEADER_BYTES: 80, // ESTS limit is 100B, set to 80 to provide a 20B buffer\n    MAX_LAST_HEADER_BYTES: 330, // ESTS limit is 350B, set to 330 to provide a 20B buffer,\n    MAX_CACHED_ERRORS: 50, // Limit the number of errors that can be stored to prevent uncontrolled size gains\n    CACHE_KEY: \"server-telemetry\",\n    CATEGORY_SEPARATOR: \"|\",\n    VALUE_SEPARATOR: \",\",\n    OVERFLOW_TRUE: \"1\",\n    OVERFLOW_FALSE: \"0\",\n    UNKNOWN_ERROR: \"unknown_error\",\n};\n\n/**\n * Type of the authentication request\n */\nexport const AuthenticationScheme = {\n    BEARER: \"Bearer\",\n    POP: \"pop\",\n    SSH: \"ssh-cert\",\n} as const;\nexport type AuthenticationScheme =\n    (typeof AuthenticationScheme)[keyof typeof AuthenticationScheme];\n\n/**\n * Constants related to throttling\n */\nexport const ThrottlingConstants = {\n    // Default time to throttle RequestThumbprint in seconds\n    DEFAULT_THROTTLE_TIME_SECONDS: 60,\n    // Default maximum time to throttle in seconds, overrides what the server sends back\n    DEFAULT_MAX_THROTTLE_TIME_SECONDS: 3600,\n    // Prefix for storing throttling entries\n    THROTTLING_PREFIX: \"throttling\",\n    // Value assigned to the x-ms-lib-capability header to indicate to the server the library supports throttling\n    X_MS_LIB_CAPABILITY_VALUE: \"retry-after, h429\",\n};\n\nexport const Errors = {\n    INVALID_GRANT_ERROR: \"invalid_grant\",\n    CLIENT_MISMATCH_ERROR: \"client_mismatch\",\n};\n\n/**\n * Password grant parameters\n */\nexport const PasswordGrantConstants = {\n    username: \"username\",\n    password: \"password\",\n} as const;\nexport type PasswordGrantConstants =\n    (typeof PasswordGrantConstants)[keyof typeof PasswordGrantConstants];\n\n/**\n * Response codes\n */\nexport const ResponseCodes = {\n    httpSuccess: 200,\n    httpBadRequest: 400,\n} as const;\nexport type ResponseCodes = (typeof ResponseCodes)[keyof typeof ResponseCodes];\n\n/**\n * Region Discovery Sources\n */\nexport const RegionDiscoverySources = {\n    FAILED_AUTO_DETECTION: \"1\",\n    INTERNAL_CACHE: \"2\",\n    ENVIRONMENT_VARIABLE: \"3\",\n    IMDS: \"4\",\n} as const;\nexport type RegionDiscoverySources =\n    (typeof RegionDiscoverySources)[keyof typeof RegionDiscoverySources];\n\n/**\n * Region Discovery Outcomes\n */\nexport const RegionDiscoveryOutcomes = {\n    CONFIGURED_MATCHES_DETECTED: \"1\",\n    CONFIGURED_NO_AUTO_DETECTION: \"2\",\n    CONFIGURED_NOT_DETECTED: \"3\",\n    AUTO_DETECTION_REQUESTED_SUCCESSFUL: \"4\",\n    AUTO_DETECTION_REQUESTED_FAILED: \"5\",\n} as const;\nexport type RegionDiscoveryOutcomes =\n    (typeof RegionDiscoveryOutcomes)[keyof typeof RegionDiscoveryOutcomes];\n\n/**\n * Specifies the reason for fetching the access token from the identity provider\n */\nexport const CacheOutcome = {\n    // When a token is found in the cache or the cache is not supposed to be hit when making the request\n    NOT_APPLICABLE: \"0\",\n    // When the token request goes to the identity provider because force_refresh was set to true. Also occurs if claims were requested\n    FORCE_REFRESH_OR_CLAIMS: \"1\",\n    // When the token request goes to the identity provider because no cached access token exists\n    NO_CACHED_ACCESS_TOKEN: \"2\",\n    // When the token request goes to the identity provider because cached access token expired\n    CACHED_ACCESS_TOKEN_EXPIRED: \"3\",\n    // When the token request goes to the identity provider because refresh_in was used and the existing token needs to be refreshed\n    PROACTIVELY_REFRESHED: \"4\",\n} as const;\nexport type CacheOutcome = (typeof CacheOutcome)[keyof typeof CacheOutcome];\n\nexport const JsonTypes = {\n    Jwt: \"JWT\",\n    Jwk: \"JWK\",\n    Pop: \"pop\",\n} as const;\nexport type JsonTypes = (typeof JsonTypes)[keyof typeof JsonTypes];\n\nexport const ONE_DAY_IN_MS = 86400000;\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License.\n */\n\n/**\n * @hidden\n */\nexport class StringUtils {\n    /**\n     * Check if stringified object is empty\n     * @param strObj\n     */\n    static isEmptyObj(strObj?: string): boolean {\n        if (strObj) {\n            try {\n                const obj = JSON.parse(strObj);\n                return Object.keys(obj).length === 0;\n            } catch (e) {}\n        }\n        return true;\n    }\n\n    static startsWith(str: string, search: string): boolean {\n        return str.indexOf(search) === 0;\n    }\n\n    static endsWith(str: string, search: string): boolean {\n        return (\n            str.length >= search.length &&\n            str.lastIndexOf(search) === str.length - search.length\n        );\n    }\n\n    /**\n     * Parses string into an object.\n     *\n     * @param query\n     */\n    static queryStringToObject<T>(query: string): T {\n        const obj: {} = {};\n        const params = query.split(\"&\");\n        const decode = (s: string) => decodeURIComponent(s.replace(/\\+/g, \" \"));\n        params.forEach((pair) => {\n            if (pair.trim()) {\n                const [key, value] = pair.split(/=(.+)/g, 2); // Split on the first occurence of the '=' character\n                if (key && value) {\n                    obj[decode(key)] = decode(value);\n                }\n            }\n        });\n        return obj as T;\n    }\n\n    /**\n     * Trims entries in an array.\n     *\n     * @param arr\n     */\n    static trimArrayEntries(arr: Array<string>): Array<string> {\n        return arr.map((entry) => entry.trim());\n    }\n\n    /**\n     * Removes empty strings from array\n     * @param arr\n     */\n    static removeEmptyStringsFromArray(arr: Array<string>): Array<string> {\n        return arr.filter((entry) => {\n            return !!entry;\n        });\n    }\n\n    /**\n     * Attempts to parse a string into JSON\n     * @param str\n     */\n    static jsonParseHelper<T>(str: string): T | null {\n        try {\n            return JSON.parse(str) as T;\n        } catch (e) {\n            return null;\n        }\n    }\n\n    /**\n     * Tests if a given string matches a given pattern, with support for wildcards and queries.\n     * @param pattern Wildcard pattern to string match. Supports \"*\" for wildcards and \"?\" for queries\n     * @param input String to match against\n     */\n    static matchPattern(pattern: string, input: string): boolean {\n        /**\n         * Wildcard support: https://stackoverflow.com/a/3117248/4888559\n         * Queries: replaces \"?\" in string with escaped \"\\?\" for regex test\n         */\n        // eslint-disable-next-line security/detect-non-literal-regexp\n        const regex: RegExp = new RegExp(\n            pattern\n                .replace(/\\\\/g, \"\\\\\\\\\")\n                .replace(/\\*/g, \"[^ ]*\")\n                .replace(/\\?/g, \"\\\\?\")\n        );\n\n        return regex.test(input);\n    }\n}\n","const consoleLogger = {\n  type: 'logger',\n  log(args) {\n    this.output('log', args);\n  },\n  warn(args) {\n    this.output('warn', args);\n  },\n  error(args) {\n    this.output('error', args);\n  },\n  output(type, args) {\n    if (console && console[type]) console[type].apply(console, args);\n  }\n};\nclass Logger {\n  constructor(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.init(concreteLogger, options);\n  }\n  init(concreteLogger) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.prefix = options.prefix || 'i18next:';\n    this.logger = concreteLogger || consoleLogger;\n    this.options = options;\n    this.debug = options.debug;\n  }\n  log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return this.forward(args, 'log', '', true);\n  }\n  warn() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return this.forward(args, 'warn', '', true);\n  }\n  error() {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n    return this.forward(args, 'error', '');\n  }\n  deprecate() {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n    return this.forward(args, 'warn', 'WARNING DEPRECATED: ', true);\n  }\n  forward(args, lvl, prefix, debugOnly) {\n    if (debugOnly && !this.debug) return null;\n    if (typeof args[0] === 'string') args[0] = `${prefix}${this.prefix} ${args[0]}`;\n    return this.logger[lvl](args);\n  }\n  create(moduleName) {\n    return new Logger(this.logger, {\n      ...{\n        prefix: `${this.prefix}:${moduleName}:`\n      },\n      ...this.options\n    });\n  }\n  clone(options) {\n    options = options || this.options;\n    options.prefix = options.prefix || this.prefix;\n    return new Logger(this.logger, options);\n  }\n}\nvar baseLogger = new Logger();\n\nclass EventEmitter {\n  constructor() {\n    this.observers = {};\n  }\n  on(events, listener) {\n    events.split(' ').forEach(event => {\n      this.observers[event] = this.observers[event] || [];\n      this.observers[event].push(listener);\n    });\n    return this;\n  }\n  off(event, listener) {\n    if (!this.observers[event]) return;\n    if (!listener) {\n      delete this.observers[event];\n      return;\n    }\n    this.observers[event] = this.observers[event].filter(l => l !== listener);\n  }\n  emit(event) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (this.observers[event]) {\n      const cloned = [].concat(this.observers[event]);\n      cloned.forEach(observer => {\n        observer(...args);\n      });\n    }\n    if (this.observers['*']) {\n      const cloned = [].concat(this.observers['*']);\n      cloned.forEach(observer => {\n        observer.apply(observer, [event, ...args]);\n      });\n    }\n  }\n}\n\nfunction defer() {\n  let res;\n  let rej;\n  const promise = new Promise((resolve, reject) => {\n    res = resolve;\n    rej = reject;\n  });\n  promise.resolve = res;\n  promise.reject = rej;\n  return promise;\n}\nfunction makeString(object) {\n  if (object == null) return '';\n  return '' + object;\n}\nfunction copy(a, s, t) {\n  a.forEach(m => {\n    if (s[m]) t[m] = s[m];\n  });\n}\nfunction getLastOfPath(object, path, Empty) {\n  function cleanKey(key) {\n    return key && key.indexOf('###') > -1 ? key.replace(/###/g, '.') : key;\n  }\n  function canNotTraverseDeeper() {\n    return !object || typeof object === 'string';\n  }\n  const stack = typeof path !== 'string' ? [].concat(path) : path.split('.');\n  while (stack.length > 1) {\n    if (canNotTraverseDeeper()) return {};\n    const key = cleanKey(stack.shift());\n    if (!object[key] && Empty) object[key] = new Empty();\n    if (Object.prototype.hasOwnProperty.call(object, key)) {\n      object = object[key];\n    } else {\n      object = {};\n    }\n  }\n  if (canNotTraverseDeeper()) return {};\n  return {\n    obj: object,\n    k: cleanKey(stack.shift())\n  };\n}\nfunction setPath(object, path, newValue) {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  obj[k] = newValue;\n}\nfunction pushPath(object, path, newValue, concat) {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path, Object);\n  obj[k] = obj[k] || [];\n  if (concat) obj[k] = obj[k].concat(newValue);\n  if (!concat) obj[k].push(newValue);\n}\nfunction getPath(object, path) {\n  const {\n    obj,\n    k\n  } = getLastOfPath(object, path);\n  if (!obj) return undefined;\n  return obj[k];\n}\nfunction getPathWithDefaults(data, defaultData, key) {\n  const value = getPath(data, key);\n  if (value !== undefined) {\n    return value;\n  }\n  return getPath(defaultData, key);\n}\nfunction deepExtend(target, source, overwrite) {\n  for (const prop in source) {\n    if (prop !== '__proto__' && prop !== 'constructor') {\n      if (prop in target) {\n        if (typeof target[prop] === 'string' || target[prop] instanceof String || typeof source[prop] === 'string' || source[prop] instanceof String) {\n          if (overwrite) target[prop] = source[prop];\n        } else {\n          deepExtend(target[prop], source[prop], overwrite);\n        }\n      } else {\n        target[prop] = source[prop];\n      }\n    }\n  }\n  return target;\n}\nfunction regexEscape(str) {\n  return str.replace(/[\\-\\[\\]\\/\\{\\}\\(\\)\\*\\+\\?\\.\\\\\\^\\$\\|]/g, '\\\\$&');\n}\nvar _entityMap = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;',\n  '/': '&#x2F;'\n};\nfunction escape(data) {\n  if (typeof data === 'string') {\n    return data.replace(/[&<>\"'\\/]/g, s => _entityMap[s]);\n  }\n  return data;\n}\nconst chars = [' ', ',', '?', '!', ';'];\nfunction looksLikeObjectPath(key, nsSeparator, keySeparator) {\n  nsSeparator = nsSeparator || '';\n  keySeparator = keySeparator || '';\n  const possibleChars = chars.filter(c => nsSeparator.indexOf(c) < 0 && keySeparator.indexOf(c) < 0);\n  if (possibleChars.length === 0) return true;\n  const r = new RegExp(`(${possibleChars.map(c => c === '?' ? '\\\\?' : c).join('|')})`);\n  let matched = !r.test(key);\n  if (!matched) {\n    const ki = key.indexOf(keySeparator);\n    if (ki > 0 && !r.test(key.substring(0, ki))) {\n      matched = true;\n    }\n  }\n  return matched;\n}\nfunction deepFind(obj, path) {\n  let keySeparator = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '.';\n  if (!obj) return undefined;\n  if (obj[path]) return obj[path];\n  const paths = path.split(keySeparator);\n  let current = obj;\n  for (let i = 0; i < paths.length; ++i) {\n    if (!current) return undefined;\n    if (typeof current[paths[i]] === 'string' && i + 1 < paths.length) {\n      return undefined;\n    }\n    if (current[paths[i]] === undefined) {\n      let j = 2;\n      let p = paths.slice(i, i + j).join(keySeparator);\n      let mix = current[p];\n      while (mix === undefined && paths.length > i + j) {\n        j++;\n        p = paths.slice(i, i + j).join(keySeparator);\n        mix = current[p];\n      }\n      if (mix === undefined) return undefined;\n      if (mix === null) return null;\n      if (path.endsWith(p)) {\n        if (typeof mix === 'string') return mix;\n        if (p && typeof mix[p] === 'string') return mix[p];\n      }\n      const joinedPath = paths.slice(i + j).join(keySeparator);\n      if (joinedPath) return deepFind(mix, joinedPath, keySeparator);\n      return undefined;\n    }\n    current = current[paths[i]];\n  }\n  return current;\n}\nfunction getCleanedCode(code) {\n  if (code && code.indexOf('_') > 0) return code.replace('_', '-');\n  return code;\n}\n\nclass ResourceStore extends EventEmitter {\n  constructor(data) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      ns: ['translation'],\n      defaultNS: 'translation'\n    };\n    super();\n    this.data = data || {};\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    if (this.options.ignoreJSONStructure === undefined) {\n      this.options.ignoreJSONStructure = true;\n    }\n  }\n  addNamespaces(ns) {\n    if (this.options.ns.indexOf(ns) < 0) {\n      this.options.ns.push(ns);\n    }\n  }\n  removeNamespaces(ns) {\n    const index = this.options.ns.indexOf(ns);\n    if (index > -1) {\n      this.options.ns.splice(index, 1);\n    }\n  }\n  getResource(lng, ns, key) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const ignoreJSONStructure = options.ignoreJSONStructure !== undefined ? options.ignoreJSONStructure : this.options.ignoreJSONStructure;\n    let path = [lng, ns];\n    if (key && typeof key !== 'string') path = path.concat(key);\n    if (key && typeof key === 'string') path = path.concat(keySeparator ? key.split(keySeparator) : key);\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n    }\n    const result = getPath(this.data, path);\n    if (result || !ignoreJSONStructure || typeof key !== 'string') return result;\n    return deepFind(this.data && this.data[lng] && this.data[lng][ns], key, keySeparator);\n  }\n  addResource(lng, ns, key, value) {\n    let options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {\n      silent: false\n    };\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let path = [lng, ns];\n    if (key) path = path.concat(keySeparator ? key.split(keySeparator) : key);\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      value = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    setPath(this.data, path, value);\n    if (!options.silent) this.emit('added', lng, ns, key, value);\n  }\n  addResources(lng, ns, resources) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {\n      silent: false\n    };\n    for (const m in resources) {\n      if (typeof resources[m] === 'string' || Object.prototype.toString.apply(resources[m]) === '[object Array]') this.addResource(lng, ns, m, resources[m], {\n        silent: true\n      });\n    }\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  addResourceBundle(lng, ns, resources, deep, overwrite) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {\n      silent: false\n    };\n    let path = [lng, ns];\n    if (lng.indexOf('.') > -1) {\n      path = lng.split('.');\n      deep = resources;\n      resources = ns;\n      ns = path[1];\n    }\n    this.addNamespaces(ns);\n    let pack = getPath(this.data, path) || {};\n    if (deep) {\n      deepExtend(pack, resources, overwrite);\n    } else {\n      pack = {\n        ...pack,\n        ...resources\n      };\n    }\n    setPath(this.data, path, pack);\n    if (!options.silent) this.emit('added', lng, ns, resources);\n  }\n  removeResourceBundle(lng, ns) {\n    if (this.hasResourceBundle(lng, ns)) {\n      delete this.data[lng][ns];\n    }\n    this.removeNamespaces(ns);\n    this.emit('removed', lng, ns);\n  }\n  hasResourceBundle(lng, ns) {\n    return this.getResource(lng, ns) !== undefined;\n  }\n  getResourceBundle(lng, ns) {\n    if (!ns) ns = this.options.defaultNS;\n    if (this.options.compatibilityAPI === 'v1') return {\n      ...{},\n      ...this.getResource(lng, ns)\n    };\n    return this.getResource(lng, ns);\n  }\n  getDataByLanguage(lng) {\n    return this.data[lng];\n  }\n  hasLanguageSomeTranslations(lng) {\n    const data = this.getDataByLanguage(lng);\n    const n = data && Object.keys(data) || [];\n    return !!n.find(v => data[v] && Object.keys(data[v]).length > 0);\n  }\n  toJSON() {\n    return this.data;\n  }\n}\n\nvar postProcessor = {\n  processors: {},\n  addPostProcessor(module) {\n    this.processors[module.name] = module;\n  },\n  handle(processors, value, key, options, translator) {\n    processors.forEach(processor => {\n      if (this.processors[processor]) value = this.processors[processor].process(value, key, options, translator);\n    });\n    return value;\n  }\n};\n\nconst checkedLoadedFor = {};\nclass Translator extends EventEmitter {\n  constructor(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    super();\n    copy(['resourceStore', 'languageUtils', 'pluralResolver', 'interpolator', 'backendConnector', 'i18nFormat', 'utils'], services, this);\n    this.options = options;\n    if (this.options.keySeparator === undefined) {\n      this.options.keySeparator = '.';\n    }\n    this.logger = baseLogger.create('translator');\n  }\n  changeLanguage(lng) {\n    if (lng) this.language = lng;\n  }\n  exists(key) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n    if (key === undefined || key === null) {\n      return false;\n    }\n    const resolved = this.resolve(key, options);\n    return resolved && resolved.res !== undefined;\n  }\n  extractFromKey(key, options) {\n    let nsSeparator = options.nsSeparator !== undefined ? options.nsSeparator : this.options.nsSeparator;\n    if (nsSeparator === undefined) nsSeparator = ':';\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    let namespaces = options.ns || this.options.defaultNS || [];\n    const wouldCheckForNsInKey = nsSeparator && key.indexOf(nsSeparator) > -1;\n    const seemsNaturalLanguage = !this.options.userDefinedKeySeparator && !options.keySeparator && !this.options.userDefinedNsSeparator && !options.nsSeparator && !looksLikeObjectPath(key, nsSeparator, keySeparator);\n    if (wouldCheckForNsInKey && !seemsNaturalLanguage) {\n      const m = key.match(this.interpolator.nestingRegexp);\n      if (m && m.length > 0) {\n        return {\n          key,\n          namespaces\n        };\n      }\n      const parts = key.split(nsSeparator);\n      if (nsSeparator !== keySeparator || nsSeparator === keySeparator && this.options.ns.indexOf(parts[0]) > -1) namespaces = parts.shift();\n      key = parts.join(keySeparator);\n    }\n    if (typeof namespaces === 'string') namespaces = [namespaces];\n    return {\n      key,\n      namespaces\n    };\n  }\n  translate(keys, options, lastKey) {\n    if (typeof options !== 'object' && this.options.overloadTranslationOptionHandler) {\n      options = this.options.overloadTranslationOptionHandler(arguments);\n    }\n    if (typeof options === 'object') options = {\n      ...options\n    };\n    if (!options) options = {};\n    if (keys === undefined || keys === null) return '';\n    if (!Array.isArray(keys)) keys = [String(keys)];\n    const returnDetails = options.returnDetails !== undefined ? options.returnDetails : this.options.returnDetails;\n    const keySeparator = options.keySeparator !== undefined ? options.keySeparator : this.options.keySeparator;\n    const {\n      key,\n      namespaces\n    } = this.extractFromKey(keys[keys.length - 1], options);\n    const namespace = namespaces[namespaces.length - 1];\n    const lng = options.lng || this.language;\n    const appendNamespaceToCIMode = options.appendNamespaceToCIMode || this.options.appendNamespaceToCIMode;\n    if (lng && lng.toLowerCase() === 'cimode') {\n      if (appendNamespaceToCIMode) {\n        const nsSeparator = options.nsSeparator || this.options.nsSeparator;\n        if (returnDetails) {\n          return {\n            res: `${namespace}${nsSeparator}${key}`,\n            usedKey: key,\n            exactUsedKey: key,\n            usedLng: lng,\n            usedNS: namespace\n          };\n        }\n        return `${namespace}${nsSeparator}${key}`;\n      }\n      if (returnDetails) {\n        return {\n          res: key,\n          usedKey: key,\n          exactUsedKey: key,\n          usedLng: lng,\n          usedNS: namespace\n        };\n      }\n      return key;\n    }\n    const resolved = this.resolve(keys, options);\n    let res = resolved && resolved.res;\n    const resUsedKey = resolved && resolved.usedKey || key;\n    const resExactUsedKey = resolved && resolved.exactUsedKey || key;\n    const resType = Object.prototype.toString.apply(res);\n    const noObject = ['[object Number]', '[object Function]', '[object RegExp]'];\n    const joinArrays = options.joinArrays !== undefined ? options.joinArrays : this.options.joinArrays;\n    const handleAsObjectInI18nFormat = !this.i18nFormat || this.i18nFormat.handleAsObject;\n    const handleAsObject = typeof res !== 'string' && typeof res !== 'boolean' && typeof res !== 'number';\n    if (handleAsObjectInI18nFormat && res && handleAsObject && noObject.indexOf(resType) < 0 && !(typeof joinArrays === 'string' && resType === '[object Array]')) {\n      if (!options.returnObjects && !this.options.returnObjects) {\n        if (!this.options.returnedObjectHandler) {\n          this.logger.warn('accessing an object - but returnObjects options is not enabled!');\n        }\n        const r = this.options.returnedObjectHandler ? this.options.returnedObjectHandler(resUsedKey, res, {\n          ...options,\n          ns: namespaces\n        }) : `key '${key} (${this.language})' returned an object instead of string.`;\n        if (returnDetails) {\n          resolved.res = r;\n          return resolved;\n        }\n        return r;\n      }\n      if (keySeparator) {\n        const resTypeIsArray = resType === '[object Array]';\n        const copy = resTypeIsArray ? [] : {};\n        const newKeyToUse = resTypeIsArray ? resExactUsedKey : resUsedKey;\n        for (const m in res) {\n          if (Object.prototype.hasOwnProperty.call(res, m)) {\n            const deepKey = `${newKeyToUse}${keySeparator}${m}`;\n            copy[m] = this.translate(deepKey, {\n              ...options,\n              ...{\n                joinArrays: false,\n                ns: namespaces\n              }\n            });\n            if (copy[m] === deepKey) copy[m] = res[m];\n          }\n        }\n        res = copy;\n      }\n    } else if (handleAsObjectInI18nFormat && typeof joinArrays === 'string' && resType === '[object Array]') {\n      res = res.join(joinArrays);\n      if (res) res = this.extendTranslation(res, keys, options, lastKey);\n    } else {\n      let usedDefault = false;\n      let usedKey = false;\n      const needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n      const hasDefaultValue = Translator.hasDefaultValue(options);\n      const defaultValueSuffix = needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, options) : '';\n      const defaultValueSuffixOrdinalFallback = options.ordinal && needsPluralHandling ? this.pluralResolver.getSuffix(lng, options.count, {\n        ordinal: false\n      }) : '';\n      const defaultValue = options[`defaultValue${defaultValueSuffix}`] || options[`defaultValue${defaultValueSuffixOrdinalFallback}`] || options.defaultValue;\n      if (!this.isValidLookup(res) && hasDefaultValue) {\n        usedDefault = true;\n        res = defaultValue;\n      }\n      if (!this.isValidLookup(res)) {\n        usedKey = true;\n        res = key;\n      }\n      const missingKeyNoValueFallbackToKey = options.missingKeyNoValueFallbackToKey || this.options.missingKeyNoValueFallbackToKey;\n      const resForMissing = missingKeyNoValueFallbackToKey && usedKey ? undefined : res;\n      const updateMissing = hasDefaultValue && defaultValue !== res && this.options.updateMissing;\n      if (usedKey || usedDefault || updateMissing) {\n        this.logger.log(updateMissing ? 'updateKey' : 'missingKey', lng, namespace, key, updateMissing ? defaultValue : res);\n        if (keySeparator) {\n          const fk = this.resolve(key, {\n            ...options,\n            keySeparator: false\n          });\n          if (fk && fk.res) this.logger.warn('Seems the loaded translations were in flat JSON format instead of nested. Either set keySeparator: false on init or make sure your translations are published in nested format.');\n        }\n        let lngs = [];\n        const fallbackLngs = this.languageUtils.getFallbackCodes(this.options.fallbackLng, options.lng || this.language);\n        if (this.options.saveMissingTo === 'fallback' && fallbackLngs && fallbackLngs[0]) {\n          for (let i = 0; i < fallbackLngs.length; i++) {\n            lngs.push(fallbackLngs[i]);\n          }\n        } else if (this.options.saveMissingTo === 'all') {\n          lngs = this.languageUtils.toResolveHierarchy(options.lng || this.language);\n        } else {\n          lngs.push(options.lng || this.language);\n        }\n        const send = (l, k, specificDefaultValue) => {\n          const defaultForMissing = hasDefaultValue && specificDefaultValue !== res ? specificDefaultValue : resForMissing;\n          if (this.options.missingKeyHandler) {\n            this.options.missingKeyHandler(l, namespace, k, defaultForMissing, updateMissing, options);\n          } else if (this.backendConnector && this.backendConnector.saveMissing) {\n            this.backendConnector.saveMissing(l, namespace, k, defaultForMissing, updateMissing, options);\n          }\n          this.emit('missingKey', l, namespace, k, res);\n        };\n        if (this.options.saveMissing) {\n          if (this.options.saveMissingPlurals && needsPluralHandling) {\n            lngs.forEach(language => {\n              this.pluralResolver.getSuffixes(language, options).forEach(suffix => {\n                send([language], key + suffix, options[`defaultValue${suffix}`] || defaultValue);\n              });\n            });\n          } else {\n            send(lngs, key, defaultValue);\n          }\n        }\n      }\n      res = this.extendTranslation(res, keys, options, resolved, lastKey);\n      if (usedKey && res === key && this.options.appendNamespaceToMissingKey) res = `${namespace}:${key}`;\n      if ((usedKey || usedDefault) && this.options.parseMissingKeyHandler) {\n        if (this.options.compatibilityAPI !== 'v1') {\n          res = this.options.parseMissingKeyHandler(this.options.appendNamespaceToMissingKey ? `${namespace}:${key}` : key, usedDefault ? res : undefined);\n        } else {\n          res = this.options.parseMissingKeyHandler(res);\n        }\n      }\n    }\n    if (returnDetails) {\n      resolved.res = res;\n      return resolved;\n    }\n    return res;\n  }\n  extendTranslation(res, key, options, resolved, lastKey) {\n    var _this = this;\n    if (this.i18nFormat && this.i18nFormat.parse) {\n      res = this.i18nFormat.parse(res, {\n        ...this.options.interpolation.defaultVariables,\n        ...options\n      }, options.lng || this.language || resolved.usedLng, resolved.usedNS, resolved.usedKey, {\n        resolved\n      });\n    } else if (!options.skipInterpolation) {\n      if (options.interpolation) this.interpolator.init({\n        ...options,\n        ...{\n          interpolation: {\n            ...this.options.interpolation,\n            ...options.interpolation\n          }\n        }\n      });\n      const skipOnVariables = typeof res === 'string' && (options && options.interpolation && options.interpolation.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables);\n      let nestBef;\n      if (skipOnVariables) {\n        const nb = res.match(this.interpolator.nestingRegexp);\n        nestBef = nb && nb.length;\n      }\n      let data = options.replace && typeof options.replace !== 'string' ? options.replace : options;\n      if (this.options.interpolation.defaultVariables) data = {\n        ...this.options.interpolation.defaultVariables,\n        ...data\n      };\n      res = this.interpolator.interpolate(res, data, options.lng || this.language, options);\n      if (skipOnVariables) {\n        const na = res.match(this.interpolator.nestingRegexp);\n        const nestAft = na && na.length;\n        if (nestBef < nestAft) options.nest = false;\n      }\n      if (!options.lng && this.options.compatibilityAPI !== 'v1' && resolved && resolved.res) options.lng = resolved.usedLng;\n      if (options.nest !== false) res = this.interpolator.nest(res, function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        if (lastKey && lastKey[0] === args[0] && !options.context) {\n          _this.logger.warn(`It seems you are nesting recursively key: ${args[0]} in key: ${key[0]}`);\n          return null;\n        }\n        return _this.translate(...args, key);\n      }, options);\n      if (options.interpolation) this.interpolator.reset();\n    }\n    const postProcess = options.postProcess || this.options.postProcess;\n    const postProcessorNames = typeof postProcess === 'string' ? [postProcess] : postProcess;\n    if (res !== undefined && res !== null && postProcessorNames && postProcessorNames.length && options.applyPostProcessor !== false) {\n      res = postProcessor.handle(postProcessorNames, res, key, this.options && this.options.postProcessPassResolved ? {\n        i18nResolved: resolved,\n        ...options\n      } : options, this);\n    }\n    return res;\n  }\n  resolve(keys) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    let found;\n    let usedKey;\n    let exactUsedKey;\n    let usedLng;\n    let usedNS;\n    if (typeof keys === 'string') keys = [keys];\n    keys.forEach(k => {\n      if (this.isValidLookup(found)) return;\n      const extracted = this.extractFromKey(k, options);\n      const key = extracted.key;\n      usedKey = key;\n      let namespaces = extracted.namespaces;\n      if (this.options.fallbackNS) namespaces = namespaces.concat(this.options.fallbackNS);\n      const needsPluralHandling = options.count !== undefined && typeof options.count !== 'string';\n      const needsZeroSuffixLookup = needsPluralHandling && !options.ordinal && options.count === 0 && this.pluralResolver.shouldUseIntlApi();\n      const needsContextHandling = options.context !== undefined && (typeof options.context === 'string' || typeof options.context === 'number') && options.context !== '';\n      const codes = options.lngs ? options.lngs : this.languageUtils.toResolveHierarchy(options.lng || this.language, options.fallbackLng);\n      namespaces.forEach(ns => {\n        if (this.isValidLookup(found)) return;\n        usedNS = ns;\n        if (!checkedLoadedFor[`${codes[0]}-${ns}`] && this.utils && this.utils.hasLoadedNamespace && !this.utils.hasLoadedNamespace(usedNS)) {\n          checkedLoadedFor[`${codes[0]}-${ns}`] = true;\n          this.logger.warn(`key \"${usedKey}\" for languages \"${codes.join(', ')}\" won't get resolved as namespace \"${usedNS}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n        }\n        codes.forEach(code => {\n          if (this.isValidLookup(found)) return;\n          usedLng = code;\n          const finalKeys = [key];\n          if (this.i18nFormat && this.i18nFormat.addLookupKeys) {\n            this.i18nFormat.addLookupKeys(finalKeys, key, code, ns, options);\n          } else {\n            let pluralSuffix;\n            if (needsPluralHandling) pluralSuffix = this.pluralResolver.getSuffix(code, options.count, options);\n            const zeroSuffix = `${this.options.pluralSeparator}zero`;\n            const ordinalPrefix = `${this.options.pluralSeparator}ordinal${this.options.pluralSeparator}`;\n            if (needsPluralHandling) {\n              finalKeys.push(key + pluralSuffix);\n              if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                finalKeys.push(key + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n              }\n              if (needsZeroSuffixLookup) {\n                finalKeys.push(key + zeroSuffix);\n              }\n            }\n            if (needsContextHandling) {\n              const contextKey = `${key}${this.options.contextSeparator}${options.context}`;\n              finalKeys.push(contextKey);\n              if (needsPluralHandling) {\n                finalKeys.push(contextKey + pluralSuffix);\n                if (options.ordinal && pluralSuffix.indexOf(ordinalPrefix) === 0) {\n                  finalKeys.push(contextKey + pluralSuffix.replace(ordinalPrefix, this.options.pluralSeparator));\n                }\n                if (needsZeroSuffixLookup) {\n                  finalKeys.push(contextKey + zeroSuffix);\n                }\n              }\n            }\n          }\n          let possibleKey;\n          while (possibleKey = finalKeys.pop()) {\n            if (!this.isValidLookup(found)) {\n              exactUsedKey = possibleKey;\n              found = this.getResource(code, ns, possibleKey, options);\n            }\n          }\n        });\n      });\n    });\n    return {\n      res: found,\n      usedKey,\n      exactUsedKey,\n      usedLng,\n      usedNS\n    };\n  }\n  isValidLookup(res) {\n    return res !== undefined && !(!this.options.returnNull && res === null) && !(!this.options.returnEmptyString && res === '');\n  }\n  getResource(code, ns, key) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    if (this.i18nFormat && this.i18nFormat.getResource) return this.i18nFormat.getResource(code, ns, key, options);\n    return this.resourceStore.getResource(code, ns, key, options);\n  }\n  static hasDefaultValue(options) {\n    const prefix = 'defaultValue';\n    for (const option in options) {\n      if (Object.prototype.hasOwnProperty.call(options, option) && prefix === option.substring(0, prefix.length) && undefined !== options[option]) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n\nfunction capitalize(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\nclass LanguageUtil {\n  constructor(options) {\n    this.options = options;\n    this.supportedLngs = this.options.supportedLngs || false;\n    this.logger = baseLogger.create('languageUtils');\n  }\n  getScriptPartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return null;\n    const p = code.split('-');\n    if (p.length === 2) return null;\n    p.pop();\n    if (p[p.length - 1].toLowerCase() === 'x') return null;\n    return this.formatLanguageCode(p.join('-'));\n  }\n  getLanguagePartFromCode(code) {\n    code = getCleanedCode(code);\n    if (!code || code.indexOf('-') < 0) return code;\n    const p = code.split('-');\n    return this.formatLanguageCode(p[0]);\n  }\n  formatLanguageCode(code) {\n    if (typeof code === 'string' && code.indexOf('-') > -1) {\n      const specialCases = ['hans', 'hant', 'latn', 'cyrl', 'cans', 'mong', 'arab'];\n      let p = code.split('-');\n      if (this.options.lowerCaseLng) {\n        p = p.map(part => part.toLowerCase());\n      } else if (p.length === 2) {\n        p[0] = p[0].toLowerCase();\n        p[1] = p[1].toUpperCase();\n        if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n      } else if (p.length === 3) {\n        p[0] = p[0].toLowerCase();\n        if (p[1].length === 2) p[1] = p[1].toUpperCase();\n        if (p[0] !== 'sgn' && p[2].length === 2) p[2] = p[2].toUpperCase();\n        if (specialCases.indexOf(p[1].toLowerCase()) > -1) p[1] = capitalize(p[1].toLowerCase());\n        if (specialCases.indexOf(p[2].toLowerCase()) > -1) p[2] = capitalize(p[2].toLowerCase());\n      }\n      return p.join('-');\n    }\n    return this.options.cleanCode || this.options.lowerCaseLng ? code.toLowerCase() : code;\n  }\n  isSupportedCode(code) {\n    if (this.options.load === 'languageOnly' || this.options.nonExplicitSupportedLngs) {\n      code = this.getLanguagePartFromCode(code);\n    }\n    return !this.supportedLngs || !this.supportedLngs.length || this.supportedLngs.indexOf(code) > -1;\n  }\n  getBestMatchFromCodes(codes) {\n    if (!codes) return null;\n    let found;\n    codes.forEach(code => {\n      if (found) return;\n      const cleanedLng = this.formatLanguageCode(code);\n      if (!this.options.supportedLngs || this.isSupportedCode(cleanedLng)) found = cleanedLng;\n    });\n    if (!found && this.options.supportedLngs) {\n      codes.forEach(code => {\n        if (found) return;\n        const lngOnly = this.getLanguagePartFromCode(code);\n        if (this.isSupportedCode(lngOnly)) return found = lngOnly;\n        found = this.options.supportedLngs.find(supportedLng => {\n          if (supportedLng === lngOnly) return supportedLng;\n          if (supportedLng.indexOf('-') < 0 && lngOnly.indexOf('-') < 0) return;\n          if (supportedLng.indexOf(lngOnly) === 0) return supportedLng;\n        });\n      });\n    }\n    if (!found) found = this.getFallbackCodes(this.options.fallbackLng)[0];\n    return found;\n  }\n  getFallbackCodes(fallbacks, code) {\n    if (!fallbacks) return [];\n    if (typeof fallbacks === 'function') fallbacks = fallbacks(code);\n    if (typeof fallbacks === 'string') fallbacks = [fallbacks];\n    if (Object.prototype.toString.apply(fallbacks) === '[object Array]') return fallbacks;\n    if (!code) return fallbacks.default || [];\n    let found = fallbacks[code];\n    if (!found) found = fallbacks[this.getScriptPartFromCode(code)];\n    if (!found) found = fallbacks[this.formatLanguageCode(code)];\n    if (!found) found = fallbacks[this.getLanguagePartFromCode(code)];\n    if (!found) found = fallbacks.default;\n    return found || [];\n  }\n  toResolveHierarchy(code, fallbackCode) {\n    const fallbackCodes = this.getFallbackCodes(fallbackCode || this.options.fallbackLng || [], code);\n    const codes = [];\n    const addCode = c => {\n      if (!c) return;\n      if (this.isSupportedCode(c)) {\n        codes.push(c);\n      } else {\n        this.logger.warn(`rejecting language code not found in supportedLngs: ${c}`);\n      }\n    };\n    if (typeof code === 'string' && (code.indexOf('-') > -1 || code.indexOf('_') > -1)) {\n      if (this.options.load !== 'languageOnly') addCode(this.formatLanguageCode(code));\n      if (this.options.load !== 'languageOnly' && this.options.load !== 'currentOnly') addCode(this.getScriptPartFromCode(code));\n      if (this.options.load !== 'currentOnly') addCode(this.getLanguagePartFromCode(code));\n    } else if (typeof code === 'string') {\n      addCode(this.formatLanguageCode(code));\n    }\n    fallbackCodes.forEach(fc => {\n      if (codes.indexOf(fc) < 0) addCode(this.formatLanguageCode(fc));\n    });\n    return codes;\n  }\n}\n\nlet sets = [{\n  lngs: ['ach', 'ak', 'am', 'arn', 'br', 'fil', 'gun', 'ln', 'mfe', 'mg', 'mi', 'oc', 'pt', 'pt-BR', 'tg', 'tl', 'ti', 'tr', 'uz', 'wa'],\n  nr: [1, 2],\n  fc: 1\n}, {\n  lngs: ['af', 'an', 'ast', 'az', 'bg', 'bn', 'ca', 'da', 'de', 'dev', 'el', 'en', 'eo', 'es', 'et', 'eu', 'fi', 'fo', 'fur', 'fy', 'gl', 'gu', 'ha', 'hi', 'hu', 'hy', 'ia', 'it', 'kk', 'kn', 'ku', 'lb', 'mai', 'ml', 'mn', 'mr', 'nah', 'nap', 'nb', 'ne', 'nl', 'nn', 'no', 'nso', 'pa', 'pap', 'pms', 'ps', 'pt-PT', 'rm', 'sco', 'se', 'si', 'so', 'son', 'sq', 'sv', 'sw', 'ta', 'te', 'tk', 'ur', 'yo'],\n  nr: [1, 2],\n  fc: 2\n}, {\n  lngs: ['ay', 'bo', 'cgg', 'fa', 'ht', 'id', 'ja', 'jbo', 'ka', 'km', 'ko', 'ky', 'lo', 'ms', 'sah', 'su', 'th', 'tt', 'ug', 'vi', 'wo', 'zh'],\n  nr: [1],\n  fc: 3\n}, {\n  lngs: ['be', 'bs', 'cnr', 'dz', 'hr', 'ru', 'sr', 'uk'],\n  nr: [1, 2, 5],\n  fc: 4\n}, {\n  lngs: ['ar'],\n  nr: [0, 1, 2, 3, 11, 100],\n  fc: 5\n}, {\n  lngs: ['cs', 'sk'],\n  nr: [1, 2, 5],\n  fc: 6\n}, {\n  lngs: ['csb', 'pl'],\n  nr: [1, 2, 5],\n  fc: 7\n}, {\n  lngs: ['cy'],\n  nr: [1, 2, 3, 8],\n  fc: 8\n}, {\n  lngs: ['fr'],\n  nr: [1, 2],\n  fc: 9\n}, {\n  lngs: ['ga'],\n  nr: [1, 2, 3, 7, 11],\n  fc: 10\n}, {\n  lngs: ['gd'],\n  nr: [1, 2, 3, 20],\n  fc: 11\n}, {\n  lngs: ['is'],\n  nr: [1, 2],\n  fc: 12\n}, {\n  lngs: ['jv'],\n  nr: [0, 1],\n  fc: 13\n}, {\n  lngs: ['kw'],\n  nr: [1, 2, 3, 4],\n  fc: 14\n}, {\n  lngs: ['lt'],\n  nr: [1, 2, 10],\n  fc: 15\n}, {\n  lngs: ['lv'],\n  nr: [1, 2, 0],\n  fc: 16\n}, {\n  lngs: ['mk'],\n  nr: [1, 2],\n  fc: 17\n}, {\n  lngs: ['mnk'],\n  nr: [0, 1, 2],\n  fc: 18\n}, {\n  lngs: ['mt'],\n  nr: [1, 2, 11, 20],\n  fc: 19\n}, {\n  lngs: ['or'],\n  nr: [2, 1],\n  fc: 2\n}, {\n  lngs: ['ro'],\n  nr: [1, 2, 20],\n  fc: 20\n}, {\n  lngs: ['sl'],\n  nr: [5, 1, 2, 3],\n  fc: 21\n}, {\n  lngs: ['he', 'iw'],\n  nr: [1, 2, 20, 21],\n  fc: 22\n}];\nlet _rulesPluralsTypes = {\n  1: function (n) {\n    return Number(n > 1);\n  },\n  2: function (n) {\n    return Number(n != 1);\n  },\n  3: function (n) {\n    return 0;\n  },\n  4: function (n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  5: function (n) {\n    return Number(n == 0 ? 0 : n == 1 ? 1 : n == 2 ? 2 : n % 100 >= 3 && n % 100 <= 10 ? 3 : n % 100 >= 11 ? 4 : 5);\n  },\n  6: function (n) {\n    return Number(n == 1 ? 0 : n >= 2 && n <= 4 ? 1 : 2);\n  },\n  7: function (n) {\n    return Number(n == 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  8: function (n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n != 8 && n != 11 ? 2 : 3);\n  },\n  9: function (n) {\n    return Number(n >= 2);\n  },\n  10: function (n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n < 7 ? 2 : n < 11 ? 3 : 4);\n  },\n  11: function (n) {\n    return Number(n == 1 || n == 11 ? 0 : n == 2 || n == 12 ? 1 : n > 2 && n < 20 ? 2 : 3);\n  },\n  12: function (n) {\n    return Number(n % 10 != 1 || n % 100 == 11);\n  },\n  13: function (n) {\n    return Number(n !== 0);\n  },\n  14: function (n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : n == 3 ? 2 : 3);\n  },\n  15: function (n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n % 10 >= 2 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2);\n  },\n  16: function (n) {\n    return Number(n % 10 == 1 && n % 100 != 11 ? 0 : n !== 0 ? 1 : 2);\n  },\n  17: function (n) {\n    return Number(n == 1 || n % 10 == 1 && n % 100 != 11 ? 0 : 1);\n  },\n  18: function (n) {\n    return Number(n == 0 ? 0 : n == 1 ? 1 : 2);\n  },\n  19: function (n) {\n    return Number(n == 1 ? 0 : n == 0 || n % 100 > 1 && n % 100 < 11 ? 1 : n % 100 > 10 && n % 100 < 20 ? 2 : 3);\n  },\n  20: function (n) {\n    return Number(n == 1 ? 0 : n == 0 || n % 100 > 0 && n % 100 < 20 ? 1 : 2);\n  },\n  21: function (n) {\n    return Number(n % 100 == 1 ? 1 : n % 100 == 2 ? 2 : n % 100 == 3 || n % 100 == 4 ? 3 : 0);\n  },\n  22: function (n) {\n    return Number(n == 1 ? 0 : n == 2 ? 1 : (n < 0 || n > 10) && n % 10 == 0 ? 2 : 3);\n  }\n};\nconst nonIntlVersions = ['v1', 'v2', 'v3'];\nconst intlVersions = ['v4'];\nconst suffixesOrder = {\n  zero: 0,\n  one: 1,\n  two: 2,\n  few: 3,\n  many: 4,\n  other: 5\n};\nfunction createRules() {\n  const rules = {};\n  sets.forEach(set => {\n    set.lngs.forEach(l => {\n      rules[l] = {\n        numbers: set.nr,\n        plurals: _rulesPluralsTypes[set.fc]\n      };\n    });\n  });\n  return rules;\n}\nclass PluralResolver {\n  constructor(languageUtils) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    this.languageUtils = languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('pluralResolver');\n    if ((!this.options.compatibilityJSON || intlVersions.includes(this.options.compatibilityJSON)) && (typeof Intl === 'undefined' || !Intl.PluralRules)) {\n      this.options.compatibilityJSON = 'v3';\n      this.logger.error('Your environment seems not to be Intl API compatible, use an Intl.PluralRules polyfill. Will fallback to the compatibilityJSON v3 format handling.');\n    }\n    this.rules = createRules();\n  }\n  addRule(lng, obj) {\n    this.rules[lng] = obj;\n  }\n  getRule(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (this.shouldUseIntlApi()) {\n      try {\n        return new Intl.PluralRules(getCleanedCode(code), {\n          type: options.ordinal ? 'ordinal' : 'cardinal'\n        });\n      } catch {\n        return;\n      }\n    }\n    return this.rules[code] || this.rules[this.languageUtils.getLanguagePartFromCode(code)];\n  }\n  needsPlural(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const rule = this.getRule(code, options);\n    if (this.shouldUseIntlApi()) {\n      return rule && rule.resolvedOptions().pluralCategories.length > 1;\n    }\n    return rule && rule.numbers.length > 1;\n  }\n  getPluralFormsOfKey(code, key) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    return this.getSuffixes(code, options).map(suffix => `${key}${suffix}`);\n  }\n  getSuffixes(code) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const rule = this.getRule(code, options);\n    if (!rule) {\n      return [];\n    }\n    if (this.shouldUseIntlApi()) {\n      return rule.resolvedOptions().pluralCategories.sort((pluralCategory1, pluralCategory2) => suffixesOrder[pluralCategory1] - suffixesOrder[pluralCategory2]).map(pluralCategory => `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${pluralCategory}`);\n    }\n    return rule.numbers.map(number => this.getSuffix(code, number, options));\n  }\n  getSuffix(code, count) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    const rule = this.getRule(code, options);\n    if (rule) {\n      if (this.shouldUseIntlApi()) {\n        return `${this.options.prepend}${options.ordinal ? `ordinal${this.options.prepend}` : ''}${rule.select(count)}`;\n      }\n      return this.getSuffixRetroCompatible(rule, count);\n    }\n    this.logger.warn(`no plural rule found for: ${code}`);\n    return '';\n  }\n  getSuffixRetroCompatible(rule, count) {\n    const idx = rule.noAbs ? rule.plurals(count) : rule.plurals(Math.abs(count));\n    let suffix = rule.numbers[idx];\n    if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n      if (suffix === 2) {\n        suffix = 'plural';\n      } else if (suffix === 1) {\n        suffix = '';\n      }\n    }\n    const returnSuffix = () => this.options.prepend && suffix.toString() ? this.options.prepend + suffix.toString() : suffix.toString();\n    if (this.options.compatibilityJSON === 'v1') {\n      if (suffix === 1) return '';\n      if (typeof suffix === 'number') return `_plural_${suffix.toString()}`;\n      return returnSuffix();\n    } else if (this.options.compatibilityJSON === 'v2') {\n      return returnSuffix();\n    } else if (this.options.simplifyPluralSuffix && rule.numbers.length === 2 && rule.numbers[0] === 1) {\n      return returnSuffix();\n    }\n    return this.options.prepend && idx.toString() ? this.options.prepend + idx.toString() : idx.toString();\n  }\n  shouldUseIntlApi() {\n    return !nonIntlVersions.includes(this.options.compatibilityJSON);\n  }\n}\n\nfunction deepFindWithDefaults(data, defaultData, key) {\n  let keySeparator = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : '.';\n  let ignoreJSONStructure = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n  let path = getPathWithDefaults(data, defaultData, key);\n  if (!path && ignoreJSONStructure && typeof key === 'string') {\n    path = deepFind(data, key, keySeparator);\n    if (path === undefined) path = deepFind(defaultData, key, keySeparator);\n  }\n  return path;\n}\nclass Interpolator {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('interpolator');\n    this.options = options;\n    this.format = options.interpolation && options.interpolation.format || (value => value);\n    this.init(options);\n  }\n  init() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!options.interpolation) options.interpolation = {\n      escapeValue: true\n    };\n    const iOpts = options.interpolation;\n    this.escape = iOpts.escape !== undefined ? iOpts.escape : escape;\n    this.escapeValue = iOpts.escapeValue !== undefined ? iOpts.escapeValue : true;\n    this.useRawValueToEscape = iOpts.useRawValueToEscape !== undefined ? iOpts.useRawValueToEscape : false;\n    this.prefix = iOpts.prefix ? regexEscape(iOpts.prefix) : iOpts.prefixEscaped || '{{';\n    this.suffix = iOpts.suffix ? regexEscape(iOpts.suffix) : iOpts.suffixEscaped || '}}';\n    this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ',';\n    this.unescapePrefix = iOpts.unescapeSuffix ? '' : iOpts.unescapePrefix || '-';\n    this.unescapeSuffix = this.unescapePrefix ? '' : iOpts.unescapeSuffix || '';\n    this.nestingPrefix = iOpts.nestingPrefix ? regexEscape(iOpts.nestingPrefix) : iOpts.nestingPrefixEscaped || regexEscape('$t(');\n    this.nestingSuffix = iOpts.nestingSuffix ? regexEscape(iOpts.nestingSuffix) : iOpts.nestingSuffixEscaped || regexEscape(')');\n    this.nestingOptionsSeparator = iOpts.nestingOptionsSeparator ? iOpts.nestingOptionsSeparator : iOpts.nestingOptionsSeparator || ',';\n    this.maxReplaces = iOpts.maxReplaces ? iOpts.maxReplaces : 1000;\n    this.alwaysFormat = iOpts.alwaysFormat !== undefined ? iOpts.alwaysFormat : false;\n    this.resetRegExp();\n  }\n  reset() {\n    if (this.options) this.init(this.options);\n  }\n  resetRegExp() {\n    const regexpStr = `${this.prefix}(.+?)${this.suffix}`;\n    this.regexp = new RegExp(regexpStr, 'g');\n    const regexpUnescapeStr = `${this.prefix}${this.unescapePrefix}(.+?)${this.unescapeSuffix}${this.suffix}`;\n    this.regexpUnescape = new RegExp(regexpUnescapeStr, 'g');\n    const nestingRegexpStr = `${this.nestingPrefix}(.+?)${this.nestingSuffix}`;\n    this.nestingRegexp = new RegExp(nestingRegexpStr, 'g');\n  }\n  interpolate(str, data, lng, options) {\n    let match;\n    let value;\n    let replaces;\n    const defaultData = this.options && this.options.interpolation && this.options.interpolation.defaultVariables || {};\n    function regexSafe(val) {\n      return val.replace(/\\$/g, '$$$$');\n    }\n    const handleFormat = key => {\n      if (key.indexOf(this.formatSeparator) < 0) {\n        const path = deepFindWithDefaults(data, defaultData, key, this.options.keySeparator, this.options.ignoreJSONStructure);\n        return this.alwaysFormat ? this.format(path, undefined, lng, {\n          ...options,\n          ...data,\n          interpolationkey: key\n        }) : path;\n      }\n      const p = key.split(this.formatSeparator);\n      const k = p.shift().trim();\n      const f = p.join(this.formatSeparator).trim();\n      return this.format(deepFindWithDefaults(data, defaultData, k, this.options.keySeparator, this.options.ignoreJSONStructure), f, lng, {\n        ...options,\n        ...data,\n        interpolationkey: k\n      });\n    };\n    this.resetRegExp();\n    const missingInterpolationHandler = options && options.missingInterpolationHandler || this.options.missingInterpolationHandler;\n    const skipOnVariables = options && options.interpolation && options.interpolation.skipOnVariables !== undefined ? options.interpolation.skipOnVariables : this.options.interpolation.skipOnVariables;\n    const todos = [{\n      regex: this.regexpUnescape,\n      safeValue: val => regexSafe(val)\n    }, {\n      regex: this.regexp,\n      safeValue: val => this.escapeValue ? regexSafe(this.escape(val)) : regexSafe(val)\n    }];\n    todos.forEach(todo => {\n      replaces = 0;\n      while (match = todo.regex.exec(str)) {\n        const matchedVar = match[1].trim();\n        value = handleFormat(matchedVar);\n        if (value === undefined) {\n          if (typeof missingInterpolationHandler === 'function') {\n            const temp = missingInterpolationHandler(str, match, options);\n            value = typeof temp === 'string' ? temp : '';\n          } else if (options && Object.prototype.hasOwnProperty.call(options, matchedVar)) {\n            value = '';\n          } else if (skipOnVariables) {\n            value = match[0];\n            continue;\n          } else {\n            this.logger.warn(`missed to pass in variable ${matchedVar} for interpolating ${str}`);\n            value = '';\n          }\n        } else if (typeof value !== 'string' && !this.useRawValueToEscape) {\n          value = makeString(value);\n        }\n        const safeValue = todo.safeValue(value);\n        str = str.replace(match[0], safeValue);\n        if (skipOnVariables) {\n          todo.regex.lastIndex += value.length;\n          todo.regex.lastIndex -= match[0].length;\n        } else {\n          todo.regex.lastIndex = 0;\n        }\n        replaces++;\n        if (replaces >= this.maxReplaces) {\n          break;\n        }\n      }\n    });\n    return str;\n  }\n  nest(str, fc) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let match;\n    let value;\n    let clonedOptions;\n    function handleHasOptions(key, inheritedOptions) {\n      const sep = this.nestingOptionsSeparator;\n      if (key.indexOf(sep) < 0) return key;\n      const c = key.split(new RegExp(`${sep}[ ]*{`));\n      let optionsString = `{${c[1]}`;\n      key = c[0];\n      optionsString = this.interpolate(optionsString, clonedOptions);\n      const matchedSingleQuotes = optionsString.match(/'/g);\n      const matchedDoubleQuotes = optionsString.match(/\"/g);\n      if (matchedSingleQuotes && matchedSingleQuotes.length % 2 === 0 && !matchedDoubleQuotes || matchedDoubleQuotes.length % 2 !== 0) {\n        optionsString = optionsString.replace(/'/g, '\"');\n      }\n      try {\n        clonedOptions = JSON.parse(optionsString);\n        if (inheritedOptions) clonedOptions = {\n          ...inheritedOptions,\n          ...clonedOptions\n        };\n      } catch (e) {\n        this.logger.warn(`failed parsing options string in nesting for key ${key}`, e);\n        return `${key}${sep}${optionsString}`;\n      }\n      delete clonedOptions.defaultValue;\n      return key;\n    }\n    while (match = this.nestingRegexp.exec(str)) {\n      let formatters = [];\n      clonedOptions = {\n        ...options\n      };\n      clonedOptions = clonedOptions.replace && typeof clonedOptions.replace !== 'string' ? clonedOptions.replace : clonedOptions;\n      clonedOptions.applyPostProcessor = false;\n      delete clonedOptions.defaultValue;\n      let doReduce = false;\n      if (match[0].indexOf(this.formatSeparator) !== -1 && !/{.*}/.test(match[1])) {\n        const r = match[1].split(this.formatSeparator).map(elem => elem.trim());\n        match[1] = r.shift();\n        formatters = r;\n        doReduce = true;\n      }\n      value = fc(handleHasOptions.call(this, match[1].trim(), clonedOptions), clonedOptions);\n      if (value && match[0] === str && typeof value !== 'string') return value;\n      if (typeof value !== 'string') value = makeString(value);\n      if (!value) {\n        this.logger.warn(`missed to resolve ${match[1]} for nesting ${str}`);\n        value = '';\n      }\n      if (doReduce) {\n        value = formatters.reduce((v, f) => this.format(v, f, options.lng, {\n          ...options,\n          interpolationkey: match[1].trim()\n        }), value.trim());\n      }\n      str = str.replace(match[0], value);\n      this.regexp.lastIndex = 0;\n    }\n    return str;\n  }\n}\n\nfunction parseFormatStr(formatStr) {\n  let formatName = formatStr.toLowerCase().trim();\n  const formatOptions = {};\n  if (formatStr.indexOf('(') > -1) {\n    const p = formatStr.split('(');\n    formatName = p[0].toLowerCase().trim();\n    const optStr = p[1].substring(0, p[1].length - 1);\n    if (formatName === 'currency' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.currency) formatOptions.currency = optStr.trim();\n    } else if (formatName === 'relativetime' && optStr.indexOf(':') < 0) {\n      if (!formatOptions.range) formatOptions.range = optStr.trim();\n    } else {\n      const opts = optStr.split(';');\n      opts.forEach(opt => {\n        if (!opt) return;\n        const [key, ...rest] = opt.split(':');\n        const val = rest.join(':').trim().replace(/^'+|'+$/g, '');\n        if (!formatOptions[key.trim()]) formatOptions[key.trim()] = val;\n        if (val === 'false') formatOptions[key.trim()] = false;\n        if (val === 'true') formatOptions[key.trim()] = true;\n        if (!isNaN(val)) formatOptions[key.trim()] = parseInt(val, 10);\n      });\n    }\n  }\n  return {\n    formatName,\n    formatOptions\n  };\n}\nfunction createCachedFormatter(fn) {\n  const cache = {};\n  return function invokeFormatter(val, lng, options) {\n    const key = lng + JSON.stringify(options);\n    let formatter = cache[key];\n    if (!formatter) {\n      formatter = fn(getCleanedCode(lng), options);\n      cache[key] = formatter;\n    }\n    return formatter(val);\n  };\n}\nclass Formatter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.logger = baseLogger.create('formatter');\n    this.options = options;\n    this.formats = {\n      number: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      currency: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.NumberFormat(lng, {\n          ...opt,\n          style: 'currency'\n        });\n        return val => formatter.format(val);\n      }),\n      datetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.DateTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      }),\n      relativetime: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.RelativeTimeFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val, opt.range || 'day');\n      }),\n      list: createCachedFormatter((lng, opt) => {\n        const formatter = new Intl.ListFormat(lng, {\n          ...opt\n        });\n        return val => formatter.format(val);\n      })\n    };\n    this.init(options);\n  }\n  init(services) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n      interpolation: {}\n    };\n    const iOpts = options.interpolation;\n    this.formatSeparator = iOpts.formatSeparator ? iOpts.formatSeparator : iOpts.formatSeparator || ',';\n  }\n  add(name, fc) {\n    this.formats[name.toLowerCase().trim()] = fc;\n  }\n  addCached(name, fc) {\n    this.formats[name.toLowerCase().trim()] = createCachedFormatter(fc);\n  }\n  format(value, format, lng) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    const formats = format.split(this.formatSeparator);\n    const result = formats.reduce((mem, f) => {\n      const {\n        formatName,\n        formatOptions\n      } = parseFormatStr(f);\n      if (this.formats[formatName]) {\n        let formatted = mem;\n        try {\n          const valOptions = options && options.formatParams && options.formatParams[options.interpolationkey] || {};\n          const l = valOptions.locale || valOptions.lng || options.locale || options.lng || lng;\n          formatted = this.formats[formatName](mem, l, {\n            ...formatOptions,\n            ...options,\n            ...valOptions\n          });\n        } catch (error) {\n          this.logger.warn(error);\n        }\n        return formatted;\n      } else {\n        this.logger.warn(`there was no format function for ${formatName}`);\n      }\n      return mem;\n    }, value);\n    return result;\n  }\n}\n\nfunction removePending(q, name) {\n  if (q.pending[name] !== undefined) {\n    delete q.pending[name];\n    q.pendingCount--;\n  }\n}\nclass Connector extends EventEmitter {\n  constructor(backend, store, services) {\n    let options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    super();\n    this.backend = backend;\n    this.store = store;\n    this.services = services;\n    this.languageUtils = services.languageUtils;\n    this.options = options;\n    this.logger = baseLogger.create('backendConnector');\n    this.waitingReads = [];\n    this.maxParallelReads = options.maxParallelReads || 10;\n    this.readingCalls = 0;\n    this.maxRetries = options.maxRetries >= 0 ? options.maxRetries : 5;\n    this.retryTimeout = options.retryTimeout >= 1 ? options.retryTimeout : 350;\n    this.state = {};\n    this.queue = [];\n    if (this.backend && this.backend.init) {\n      this.backend.init(services, options.backend, options);\n    }\n  }\n  queueLoad(languages, namespaces, options, callback) {\n    const toLoad = {};\n    const pending = {};\n    const toLoadLanguages = {};\n    const toLoadNamespaces = {};\n    languages.forEach(lng => {\n      let hasAllNamespaces = true;\n      namespaces.forEach(ns => {\n        const name = `${lng}|${ns}`;\n        if (!options.reload && this.store.hasResourceBundle(lng, ns)) {\n          this.state[name] = 2;\n        } else if (this.state[name] < 0) ; else if (this.state[name] === 1) {\n          if (pending[name] === undefined) pending[name] = true;\n        } else {\n          this.state[name] = 1;\n          hasAllNamespaces = false;\n          if (pending[name] === undefined) pending[name] = true;\n          if (toLoad[name] === undefined) toLoad[name] = true;\n          if (toLoadNamespaces[ns] === undefined) toLoadNamespaces[ns] = true;\n        }\n      });\n      if (!hasAllNamespaces) toLoadLanguages[lng] = true;\n    });\n    if (Object.keys(toLoad).length || Object.keys(pending).length) {\n      this.queue.push({\n        pending,\n        pendingCount: Object.keys(pending).length,\n        loaded: {},\n        errors: [],\n        callback\n      });\n    }\n    return {\n      toLoad: Object.keys(toLoad),\n      pending: Object.keys(pending),\n      toLoadLanguages: Object.keys(toLoadLanguages),\n      toLoadNamespaces: Object.keys(toLoadNamespaces)\n    };\n  }\n  loaded(name, err, data) {\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    if (err) this.emit('failedLoading', lng, ns, err);\n    if (data) {\n      this.store.addResourceBundle(lng, ns, data);\n    }\n    this.state[name] = err ? -1 : 2;\n    const loaded = {};\n    this.queue.forEach(q => {\n      pushPath(q.loaded, [lng], ns);\n      removePending(q, name);\n      if (err) q.errors.push(err);\n      if (q.pendingCount === 0 && !q.done) {\n        Object.keys(q.loaded).forEach(l => {\n          if (!loaded[l]) loaded[l] = {};\n          const loadedKeys = q.loaded[l];\n          if (loadedKeys.length) {\n            loadedKeys.forEach(n => {\n              if (loaded[l][n] === undefined) loaded[l][n] = true;\n            });\n          }\n        });\n        q.done = true;\n        if (q.errors.length) {\n          q.callback(q.errors);\n        } else {\n          q.callback();\n        }\n      }\n    });\n    this.emit('loaded', loaded);\n    this.queue = this.queue.filter(q => !q.done);\n  }\n  read(lng, ns, fcName) {\n    let tried = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n    let wait = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : this.retryTimeout;\n    let callback = arguments.length > 5 ? arguments[5] : undefined;\n    if (!lng.length) return callback(null, {});\n    if (this.readingCalls >= this.maxParallelReads) {\n      this.waitingReads.push({\n        lng,\n        ns,\n        fcName,\n        tried,\n        wait,\n        callback\n      });\n      return;\n    }\n    this.readingCalls++;\n    const resolver = (err, data) => {\n      this.readingCalls--;\n      if (this.waitingReads.length > 0) {\n        const next = this.waitingReads.shift();\n        this.read(next.lng, next.ns, next.fcName, next.tried, next.wait, next.callback);\n      }\n      if (err && data && tried < this.maxRetries) {\n        setTimeout(() => {\n          this.read.call(this, lng, ns, fcName, tried + 1, wait * 2, callback);\n        }, wait);\n        return;\n      }\n      callback(err, data);\n    };\n    const fc = this.backend[fcName].bind(this.backend);\n    if (fc.length === 2) {\n      try {\n        const r = fc(lng, ns);\n        if (r && typeof r.then === 'function') {\n          r.then(data => resolver(null, data)).catch(resolver);\n        } else {\n          resolver(null, r);\n        }\n      } catch (err) {\n        resolver(err);\n      }\n      return;\n    }\n    return fc(lng, ns, resolver);\n  }\n  prepareLoading(languages, namespaces) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    let callback = arguments.length > 3 ? arguments[3] : undefined;\n    if (!this.backend) {\n      this.logger.warn('No backend was added via i18next.use. Will not load resources.');\n      return callback && callback();\n    }\n    if (typeof languages === 'string') languages = this.languageUtils.toResolveHierarchy(languages);\n    if (typeof namespaces === 'string') namespaces = [namespaces];\n    const toLoad = this.queueLoad(languages, namespaces, options, callback);\n    if (!toLoad.toLoad.length) {\n      if (!toLoad.pending.length) callback();\n      return null;\n    }\n    toLoad.toLoad.forEach(name => {\n      this.loadOne(name);\n    });\n  }\n  load(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {}, callback);\n  }\n  reload(languages, namespaces, callback) {\n    this.prepareLoading(languages, namespaces, {\n      reload: true\n    }, callback);\n  }\n  loadOne(name) {\n    let prefix = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    const s = name.split('|');\n    const lng = s[0];\n    const ns = s[1];\n    this.read(lng, ns, 'read', undefined, undefined, (err, data) => {\n      if (err) this.logger.warn(`${prefix}loading namespace ${ns} for language ${lng} failed`, err);\n      if (!err && data) this.logger.log(`${prefix}loaded namespace ${ns} for language ${lng}`, data);\n      this.loaded(name, err, data);\n    });\n  }\n  saveMissing(languages, namespace, key, fallbackValue, isUpdate) {\n    let options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n    let clb = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : () => {};\n    if (this.services.utils && this.services.utils.hasLoadedNamespace && !this.services.utils.hasLoadedNamespace(namespace)) {\n      this.logger.warn(`did not save key \"${key}\" as the namespace \"${namespace}\" was not yet loaded`, 'This means something IS WRONG in your setup. You access the t function before i18next.init / i18next.loadNamespace / i18next.changeLanguage was done. Wait for the callback or Promise to resolve before accessing it!!!');\n      return;\n    }\n    if (key === undefined || key === null || key === '') return;\n    if (this.backend && this.backend.create) {\n      const opts = {\n        ...options,\n        isUpdate\n      };\n      const fc = this.backend.create.bind(this.backend);\n      if (fc.length < 6) {\n        try {\n          let r;\n          if (fc.length === 5) {\n            r = fc(languages, namespace, key, fallbackValue, opts);\n          } else {\n            r = fc(languages, namespace, key, fallbackValue);\n          }\n          if (r && typeof r.then === 'function') {\n            r.then(data => clb(null, data)).catch(clb);\n          } else {\n            clb(null, r);\n          }\n        } catch (err) {\n          clb(err);\n        }\n      } else {\n        fc(languages, namespace, key, fallbackValue, clb, opts);\n      }\n    }\n    if (!languages || !languages[0]) return;\n    this.store.addResource(languages[0], namespace, key, fallbackValue);\n  }\n}\n\nfunction get() {\n  return {\n    debug: false,\n    initImmediate: true,\n    ns: ['translation'],\n    defaultNS: ['translation'],\n    fallbackLng: ['dev'],\n    fallbackNS: false,\n    supportedLngs: false,\n    nonExplicitSupportedLngs: false,\n    load: 'all',\n    preload: false,\n    simplifyPluralSuffix: true,\n    keySeparator: '.',\n    nsSeparator: ':',\n    pluralSeparator: '_',\n    contextSeparator: '_',\n    partialBundledLanguages: false,\n    saveMissing: false,\n    updateMissing: false,\n    saveMissingTo: 'fallback',\n    saveMissingPlurals: true,\n    missingKeyHandler: false,\n    missingInterpolationHandler: false,\n    postProcess: false,\n    postProcessPassResolved: false,\n    returnNull: false,\n    returnEmptyString: true,\n    returnObjects: false,\n    joinArrays: false,\n    returnedObjectHandler: false,\n    parseMissingKeyHandler: false,\n    appendNamespaceToMissingKey: false,\n    appendNamespaceToCIMode: false,\n    overloadTranslationOptionHandler: function handle(args) {\n      let ret = {};\n      if (typeof args[1] === 'object') ret = args[1];\n      if (typeof args[1] === 'string') ret.defaultValue = args[1];\n      if (typeof args[2] === 'string') ret.tDescription = args[2];\n      if (typeof args[2] === 'object' || typeof args[3] === 'object') {\n        const options = args[3] || args[2];\n        Object.keys(options).forEach(key => {\n          ret[key] = options[key];\n        });\n      }\n      return ret;\n    },\n    interpolation: {\n      escapeValue: true,\n      format: (value, format, lng, options) => value,\n      prefix: '{{',\n      suffix: '}}',\n      formatSeparator: ',',\n      unescapePrefix: '-',\n      nestingPrefix: '$t(',\n      nestingSuffix: ')',\n      nestingOptionsSeparator: ',',\n      maxReplaces: 1000,\n      skipOnVariables: true\n    }\n  };\n}\nfunction transformOptions(options) {\n  if (typeof options.ns === 'string') options.ns = [options.ns];\n  if (typeof options.fallbackLng === 'string') options.fallbackLng = [options.fallbackLng];\n  if (typeof options.fallbackNS === 'string') options.fallbackNS = [options.fallbackNS];\n  if (options.supportedLngs && options.supportedLngs.indexOf('cimode') < 0) {\n    options.supportedLngs = options.supportedLngs.concat(['cimode']);\n  }\n  return options;\n}\n\nfunction noop() {}\nfunction bindMemberFunctions(inst) {\n  const mems = Object.getOwnPropertyNames(Object.getPrototypeOf(inst));\n  mems.forEach(mem => {\n    if (typeof inst[mem] === 'function') {\n      inst[mem] = inst[mem].bind(inst);\n    }\n  });\n}\nclass I18n extends EventEmitter {\n  constructor() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    super();\n    this.options = transformOptions(options);\n    this.services = {};\n    this.logger = baseLogger;\n    this.modules = {\n      external: []\n    };\n    bindMemberFunctions(this);\n    if (callback && !this.isInitialized && !options.isClone) {\n      if (!this.options.initImmediate) {\n        this.init(options, callback);\n        return this;\n      }\n      setTimeout(() => {\n        this.init(options, callback);\n      }, 0);\n    }\n  }\n  init() {\n    var _this = this;\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    if (typeof options === 'function') {\n      callback = options;\n      options = {};\n    }\n    if (!options.defaultNS && options.defaultNS !== false && options.ns) {\n      if (typeof options.ns === 'string') {\n        options.defaultNS = options.ns;\n      } else if (options.ns.indexOf('translation') < 0) {\n        options.defaultNS = options.ns[0];\n      }\n    }\n    const defOpts = get();\n    this.options = {\n      ...defOpts,\n      ...this.options,\n      ...transformOptions(options)\n    };\n    if (this.options.compatibilityAPI !== 'v1') {\n      this.options.interpolation = {\n        ...defOpts.interpolation,\n        ...this.options.interpolation\n      };\n    }\n    if (options.keySeparator !== undefined) {\n      this.options.userDefinedKeySeparator = options.keySeparator;\n    }\n    if (options.nsSeparator !== undefined) {\n      this.options.userDefinedNsSeparator = options.nsSeparator;\n    }\n    function createClassOnDemand(ClassOrObject) {\n      if (!ClassOrObject) return null;\n      if (typeof ClassOrObject === 'function') return new ClassOrObject();\n      return ClassOrObject;\n    }\n    if (!this.options.isClone) {\n      if (this.modules.logger) {\n        baseLogger.init(createClassOnDemand(this.modules.logger), this.options);\n      } else {\n        baseLogger.init(null, this.options);\n      }\n      let formatter;\n      if (this.modules.formatter) {\n        formatter = this.modules.formatter;\n      } else if (typeof Intl !== 'undefined') {\n        formatter = Formatter;\n      }\n      const lu = new LanguageUtil(this.options);\n      this.store = new ResourceStore(this.options.resources, this.options);\n      const s = this.services;\n      s.logger = baseLogger;\n      s.resourceStore = this.store;\n      s.languageUtils = lu;\n      s.pluralResolver = new PluralResolver(lu, {\n        prepend: this.options.pluralSeparator,\n        compatibilityJSON: this.options.compatibilityJSON,\n        simplifyPluralSuffix: this.options.simplifyPluralSuffix\n      });\n      if (formatter && (!this.options.interpolation.format || this.options.interpolation.format === defOpts.interpolation.format)) {\n        s.formatter = createClassOnDemand(formatter);\n        s.formatter.init(s, this.options);\n        this.options.interpolation.format = s.formatter.format.bind(s.formatter);\n      }\n      s.interpolator = new Interpolator(this.options);\n      s.utils = {\n        hasLoadedNamespace: this.hasLoadedNamespace.bind(this)\n      };\n      s.backendConnector = new Connector(createClassOnDemand(this.modules.backend), s.resourceStore, s, this.options);\n      s.backendConnector.on('*', function (event) {\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        _this.emit(event, ...args);\n      });\n      if (this.modules.languageDetector) {\n        s.languageDetector = createClassOnDemand(this.modules.languageDetector);\n        if (s.languageDetector.init) s.languageDetector.init(s, this.options.detection, this.options);\n      }\n      if (this.modules.i18nFormat) {\n        s.i18nFormat = createClassOnDemand(this.modules.i18nFormat);\n        if (s.i18nFormat.init) s.i18nFormat.init(this);\n      }\n      this.translator = new Translator(this.services, this.options);\n      this.translator.on('*', function (event) {\n        for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n        _this.emit(event, ...args);\n      });\n      this.modules.external.forEach(m => {\n        if (m.init) m.init(this);\n      });\n    }\n    this.format = this.options.interpolation.format;\n    if (!callback) callback = noop;\n    if (this.options.fallbackLng && !this.services.languageDetector && !this.options.lng) {\n      const codes = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n      if (codes.length > 0 && codes[0] !== 'dev') this.options.lng = codes[0];\n    }\n    if (!this.services.languageDetector && !this.options.lng) {\n      this.logger.warn('init: no languageDetector is used and no lng is defined');\n    }\n    const storeApi = ['getResource', 'hasResourceBundle', 'getResourceBundle', 'getDataByLanguage'];\n    storeApi.forEach(fcName => {\n      this[fcName] = function () {\n        return _this.store[fcName](...arguments);\n      };\n    });\n    const storeApiChained = ['addResource', 'addResources', 'addResourceBundle', 'removeResourceBundle'];\n    storeApiChained.forEach(fcName => {\n      this[fcName] = function () {\n        _this.store[fcName](...arguments);\n        return _this;\n      };\n    });\n    const deferred = defer();\n    const load = () => {\n      const finish = (err, t) => {\n        if (this.isInitialized && !this.initializedStoreOnce) this.logger.warn('init: i18next is already initialized. You should call init just once!');\n        this.isInitialized = true;\n        if (!this.options.isClone) this.logger.log('initialized', this.options);\n        this.emit('initialized', this.options);\n        deferred.resolve(t);\n        callback(err, t);\n      };\n      if (this.languages && this.options.compatibilityAPI !== 'v1' && !this.isInitialized) return finish(null, this.t.bind(this));\n      this.changeLanguage(this.options.lng, finish);\n    };\n    if (this.options.resources || !this.options.initImmediate) {\n      load();\n    } else {\n      setTimeout(load, 0);\n    }\n    return deferred;\n  }\n  loadResources(language) {\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    let usedCallback = callback;\n    const usedLng = typeof language === 'string' ? language : this.language;\n    if (typeof language === 'function') usedCallback = language;\n    if (!this.options.resources || this.options.partialBundledLanguages) {\n      if (usedLng && usedLng.toLowerCase() === 'cimode' && (!this.options.preload || this.options.preload.length === 0)) return usedCallback();\n      const toLoad = [];\n      const append = lng => {\n        if (!lng) return;\n        if (lng === 'cimode') return;\n        const lngs = this.services.languageUtils.toResolveHierarchy(lng);\n        lngs.forEach(l => {\n          if (l === 'cimode') return;\n          if (toLoad.indexOf(l) < 0) toLoad.push(l);\n        });\n      };\n      if (!usedLng) {\n        const fallbacks = this.services.languageUtils.getFallbackCodes(this.options.fallbackLng);\n        fallbacks.forEach(l => append(l));\n      } else {\n        append(usedLng);\n      }\n      if (this.options.preload) {\n        this.options.preload.forEach(l => append(l));\n      }\n      this.services.backendConnector.load(toLoad, this.options.ns, e => {\n        if (!e && !this.resolvedLanguage && this.language) this.setResolvedLanguage(this.language);\n        usedCallback(e);\n      });\n    } else {\n      usedCallback(null);\n    }\n  }\n  reloadResources(lngs, ns, callback) {\n    const deferred = defer();\n    if (!lngs) lngs = this.languages;\n    if (!ns) ns = this.options.ns;\n    if (!callback) callback = noop;\n    this.services.backendConnector.reload(lngs, ns, err => {\n      deferred.resolve();\n      callback(err);\n    });\n    return deferred;\n  }\n  use(module) {\n    if (!module) throw new Error('You are passing an undefined module! Please check the object you are passing to i18next.use()');\n    if (!module.type) throw new Error('You are passing a wrong module! Please check the object you are passing to i18next.use()');\n    if (module.type === 'backend') {\n      this.modules.backend = module;\n    }\n    if (module.type === 'logger' || module.log && module.warn && module.error) {\n      this.modules.logger = module;\n    }\n    if (module.type === 'languageDetector') {\n      this.modules.languageDetector = module;\n    }\n    if (module.type === 'i18nFormat') {\n      this.modules.i18nFormat = module;\n    }\n    if (module.type === 'postProcessor') {\n      postProcessor.addPostProcessor(module);\n    }\n    if (module.type === 'formatter') {\n      this.modules.formatter = module;\n    }\n    if (module.type === '3rdParty') {\n      this.modules.external.push(module);\n    }\n    return this;\n  }\n  setResolvedLanguage(l) {\n    if (!l || !this.languages) return;\n    if (['cimode', 'dev'].indexOf(l) > -1) return;\n    for (let li = 0; li < this.languages.length; li++) {\n      const lngInLngs = this.languages[li];\n      if (['cimode', 'dev'].indexOf(lngInLngs) > -1) continue;\n      if (this.store.hasLanguageSomeTranslations(lngInLngs)) {\n        this.resolvedLanguage = lngInLngs;\n        break;\n      }\n    }\n  }\n  changeLanguage(lng, callback) {\n    var _this2 = this;\n    this.isLanguageChangingTo = lng;\n    const deferred = defer();\n    this.emit('languageChanging', lng);\n    const setLngProps = l => {\n      this.language = l;\n      this.languages = this.services.languageUtils.toResolveHierarchy(l);\n      this.resolvedLanguage = undefined;\n      this.setResolvedLanguage(l);\n    };\n    const done = (err, l) => {\n      if (l) {\n        setLngProps(l);\n        this.translator.changeLanguage(l);\n        this.isLanguageChangingTo = undefined;\n        this.emit('languageChanged', l);\n        this.logger.log('languageChanged', l);\n      } else {\n        this.isLanguageChangingTo = undefined;\n      }\n      deferred.resolve(function () {\n        return _this2.t(...arguments);\n      });\n      if (callback) callback(err, function () {\n        return _this2.t(...arguments);\n      });\n    };\n    const setLng = lngs => {\n      if (!lng && !lngs && this.services.languageDetector) lngs = [];\n      const l = typeof lngs === 'string' ? lngs : this.services.languageUtils.getBestMatchFromCodes(lngs);\n      if (l) {\n        if (!this.language) {\n          setLngProps(l);\n        }\n        if (!this.translator.language) this.translator.changeLanguage(l);\n        if (this.services.languageDetector && this.services.languageDetector.cacheUserLanguage) this.services.languageDetector.cacheUserLanguage(l);\n      }\n      this.loadResources(l, err => {\n        done(err, l);\n      });\n    };\n    if (!lng && this.services.languageDetector && !this.services.languageDetector.async) {\n      setLng(this.services.languageDetector.detect());\n    } else if (!lng && this.services.languageDetector && this.services.languageDetector.async) {\n      if (this.services.languageDetector.detect.length === 0) {\n        this.services.languageDetector.detect().then(setLng);\n      } else {\n        this.services.languageDetector.detect(setLng);\n      }\n    } else {\n      setLng(lng);\n    }\n    return deferred;\n  }\n  getFixedT(lng, ns, keyPrefix) {\n    var _this3 = this;\n    const fixedT = function (key, opts) {\n      let options;\n      if (typeof opts !== 'object') {\n        for (var _len3 = arguments.length, rest = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n          rest[_key3 - 2] = arguments[_key3];\n        }\n        options = _this3.options.overloadTranslationOptionHandler([key, opts].concat(rest));\n      } else {\n        options = {\n          ...opts\n        };\n      }\n      options.lng = options.lng || fixedT.lng;\n      options.lngs = options.lngs || fixedT.lngs;\n      options.ns = options.ns || fixedT.ns;\n      options.keyPrefix = options.keyPrefix || keyPrefix || fixedT.keyPrefix;\n      const keySeparator = _this3.options.keySeparator || '.';\n      let resultKey;\n      if (options.keyPrefix && Array.isArray(key)) {\n        resultKey = key.map(k => `${options.keyPrefix}${keySeparator}${k}`);\n      } else {\n        resultKey = options.keyPrefix ? `${options.keyPrefix}${keySeparator}${key}` : key;\n      }\n      return _this3.t(resultKey, options);\n    };\n    if (typeof lng === 'string') {\n      fixedT.lng = lng;\n    } else {\n      fixedT.lngs = lng;\n    }\n    fixedT.ns = ns;\n    fixedT.keyPrefix = keyPrefix;\n    return fixedT;\n  }\n  t() {\n    return this.translator && this.translator.translate(...arguments);\n  }\n  exists() {\n    return this.translator && this.translator.exists(...arguments);\n  }\n  setDefaultNamespace(ns) {\n    this.options.defaultNS = ns;\n  }\n  hasLoadedNamespace(ns) {\n    let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!this.isInitialized) {\n      this.logger.warn('hasLoadedNamespace: i18next was not initialized', this.languages);\n      return false;\n    }\n    if (!this.languages || !this.languages.length) {\n      this.logger.warn('hasLoadedNamespace: i18n.languages were undefined or empty', this.languages);\n      return false;\n    }\n    const lng = options.lng || this.resolvedLanguage || this.languages[0];\n    const fallbackLng = this.options ? this.options.fallbackLng : false;\n    const lastLng = this.languages[this.languages.length - 1];\n    if (lng.toLowerCase() === 'cimode') return true;\n    const loadNotPending = (l, n) => {\n      const loadState = this.services.backendConnector.state[`${l}|${n}`];\n      return loadState === -1 || loadState === 2;\n    };\n    if (options.precheck) {\n      const preResult = options.precheck(this, loadNotPending);\n      if (preResult !== undefined) return preResult;\n    }\n    if (this.hasResourceBundle(lng, ns)) return true;\n    if (!this.services.backendConnector.backend || this.options.resources && !this.options.partialBundledLanguages) return true;\n    if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n    return false;\n  }\n  loadNamespaces(ns, callback) {\n    const deferred = defer();\n    if (!this.options.ns) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    if (typeof ns === 'string') ns = [ns];\n    ns.forEach(n => {\n      if (this.options.ns.indexOf(n) < 0) this.options.ns.push(n);\n    });\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  loadLanguages(lngs, callback) {\n    const deferred = defer();\n    if (typeof lngs === 'string') lngs = [lngs];\n    const preloaded = this.options.preload || [];\n    const newLngs = lngs.filter(lng => preloaded.indexOf(lng) < 0);\n    if (!newLngs.length) {\n      if (callback) callback();\n      return Promise.resolve();\n    }\n    this.options.preload = preloaded.concat(newLngs);\n    this.loadResources(err => {\n      deferred.resolve();\n      if (callback) callback(err);\n    });\n    return deferred;\n  }\n  dir(lng) {\n    if (!lng) lng = this.resolvedLanguage || (this.languages && this.languages.length > 0 ? this.languages[0] : this.language);\n    if (!lng) return 'rtl';\n    const rtlLngs = ['ar', 'shu', 'sqr', 'ssh', 'xaa', 'yhd', 'yud', 'aao', 'abh', 'abv', 'acm', 'acq', 'acw', 'acx', 'acy', 'adf', 'ads', 'aeb', 'aec', 'afb', 'ajp', 'apc', 'apd', 'arb', 'arq', 'ars', 'ary', 'arz', 'auz', 'avl', 'ayh', 'ayl', 'ayn', 'ayp', 'bbz', 'pga', 'he', 'iw', 'ps', 'pbt', 'pbu', 'pst', 'prp', 'prd', 'ug', 'ur', 'ydd', 'yds', 'yih', 'ji', 'yi', 'hbo', 'men', 'xmn', 'fa', 'jpr', 'peo', 'pes', 'prs', 'dv', 'sam', 'ckb'];\n    const languageUtils = this.services && this.services.languageUtils || new LanguageUtil(get());\n    return rtlLngs.indexOf(languageUtils.getLanguagePartFromCode(lng)) > -1 || lng.toLowerCase().indexOf('-arab') > 1 ? 'rtl' : 'ltr';\n  }\n  static createInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 ? arguments[1] : undefined;\n    return new I18n(options, callback);\n  }\n  cloneInstance() {\n    let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : noop;\n    const forkResourceStore = options.forkResourceStore;\n    if (forkResourceStore) delete options.forkResourceStore;\n    const mergedOptions = {\n      ...this.options,\n      ...options,\n      ...{\n        isClone: true\n      }\n    };\n    const clone = new I18n(mergedOptions);\n    if (options.debug !== undefined || options.prefix !== undefined) {\n      clone.logger = clone.logger.clone(options);\n    }\n    const membersToCopy = ['store', 'services', 'language'];\n    membersToCopy.forEach(m => {\n      clone[m] = this[m];\n    });\n    clone.services = {\n      ...this.services\n    };\n    clone.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    if (forkResourceStore) {\n      clone.store = new ResourceStore(this.store.data, mergedOptions);\n      clone.services.resourceStore = clone.store;\n    }\n    clone.translator = new Translator(clone.services, mergedOptions);\n    clone.translator.on('*', function (event) {\n      for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n        args[_key4 - 1] = arguments[_key4];\n      }\n      clone.emit(event, ...args);\n    });\n    clone.init(mergedOptions, callback);\n    clone.translator.options = mergedOptions;\n    clone.translator.backendConnector.services.utils = {\n      hasLoadedNamespace: clone.hasLoadedNamespace.bind(clone)\n    };\n    return clone;\n  }\n  toJSON() {\n    return {\n      options: this.options,\n      store: this.store,\n      language: this.language,\n      languages: this.languages,\n      resolvedLanguage: this.resolvedLanguage\n    };\n  }\n}\nconst instance = I18n.createInstance();\ninstance.createInstance = I18n.createInstance;\n\nconst createInstance = instance.createInstance;\nconst dir = instance.dir;\nconst init = instance.init;\nconst loadResources = instance.loadResources;\nconst reloadResources = instance.reloadResources;\nconst use = instance.use;\nconst changeLanguage = instance.changeLanguage;\nconst getFixedT = instance.getFixedT;\nconst t = instance.t;\nconst exists = instance.exists;\nconst setDefaultNamespace = instance.setDefaultNamespace;\nconst hasLoadedNamespace = instance.hasLoadedNamespace;\nconst loadNamespaces = instance.loadNamespaces;\nconst loadLanguages = instance.loadLanguages;\n\nexport { changeLanguage, createInstance, instance as default, dir, exists, getFixedT, hasLoadedNamespace, init, loadLanguages, loadNamespaces, loadResources, reloadResources, setDefaultNamespace, t, use };\n","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","import lookup from 'void-elements'\nconst attrRE = /\\s([^'\"/\\s><]+?)[\\s/>]|([^\\s=]+)=\\s?(\".*?\"|'.*?')/g\n\nexport default function stringify(tag) {\n  const res = {\n    type: 'tag',\n    name: '',\n    voidElement: false,\n    attrs: {},\n    children: [],\n  }\n\n  const tagMatch = tag.match(/<\\/?([^\\s]+?)[/\\s>]/)\n  if (tagMatch) {\n    res.name = tagMatch[1]\n    if (\n      lookup[tagMatch[1]] ||\n      tag.charAt(tag.length - 2) === '/'\n    ) {\n      res.voidElement = true\n    }\n\n    // handle comment tag\n    if (res.name.startsWith('!--')) {\n      const endIndex = tag.indexOf('-->')\n      return {\n        type: 'comment',\n        comment: endIndex !== -1 ? tag.slice(4, endIndex) : '',\n      }\n    }\n  }\n\n  const reg = new RegExp(attrRE)\n  let result = null\n  for (;;) {\n    result = reg.exec(tag)\n\n    if (result === null) {\n      break\n    }\n\n    if (!result[0].trim()) {\n      continue\n    }\n\n    if (result[1]) {\n      const attr = result[1].trim()\n      let arr = [attr, '']\n\n      if (attr.indexOf('=') > -1) {\n        arr = attr.split('=')\n      }\n\n      res.attrs[arr[0]] = arr[1]\n      reg.lastIndex--\n    } else if (result[2]) {\n      res.attrs[result[2]] = result[3].trim().substring(1, result[3].length - 1)\n    }\n  }\n\n  return res\n}\n","import parseTag from './parse-tag'\n\nconst tagRE = /<[a-zA-Z0-9\\-\\!\\/](?:\"[^\"]*\"|'[^']*'|[^'\">])*>/g\nconst whitespaceRE = /^\\s*$/\n\n// re-used obj for quick lookups of components\nconst empty = Object.create(null)\n\nexport default function parse(html, options) {\n  options || (options = {})\n  options.components || (options.components = empty)\n  const result = []\n  const arr = []\n  let current\n  let level = -1\n  let inComponent = false\n\n  // handle text at top level\n  if (html.indexOf('<') !== 0) {\n    var end = html.indexOf('<')\n    result.push({\n      type: 'text',\n      content: end === -1 ? html : html.substring(0, end),\n    })\n  }\n\n  html.replace(tagRE, function (tag, index) {\n    if (inComponent) {\n      if (tag !== '</' + current.name + '>') {\n        return\n      } else {\n        inComponent = false\n      }\n    }\n    const isOpen = tag.charAt(1) !== '/'\n    const isComment = tag.startsWith('<!--')\n    const start = index + tag.length\n    const nextChar = html.charAt(start)\n    let parent\n\n    if (isComment) {\n      const comment = parseTag(tag)\n\n      // if we're at root, push new base node\n      if (level < 0) {\n        result.push(comment)\n        return result\n      }\n      parent = arr[level]\n      parent.children.push(comment)\n      return result\n    }\n\n    if (isOpen) {\n      level++\n\n      current = parseTag(tag)\n      if (current.type === 'tag' && options.components[current.name]) {\n        current.type = 'component'\n        inComponent = true\n      }\n\n      if (\n        !current.voidElement &&\n        !inComponent &&\n        nextChar &&\n        nextChar !== '<'\n      ) {\n        current.children.push({\n          type: 'text',\n          content: html.slice(start, html.indexOf('<', start)),\n        })\n      }\n\n      // if we're at root, push new base node\n      if (level === 0) {\n        result.push(current)\n      }\n\n      parent = arr[level - 1]\n\n      if (parent) {\n        parent.children.push(current)\n      }\n\n      arr[level] = current\n    }\n\n    if (!isOpen || current.voidElement) {\n      if (\n        level > -1 &&\n        (current.voidElement || current.name === tag.slice(2, -1))\n      ) {\n        level--\n        // move current up a level to match the end tag\n        current = level === -1 ? result : arr[level]\n      }\n      if (!inComponent && nextChar !== '<' && nextChar) {\n        // trailing text node\n        // if we're at the root, push a base text node. otherwise add as\n        // a child to the current node.\n        parent = level === -1 ? result : arr[level].children\n\n        // calculate correct end of the content slice in case there's\n        // no tag after the text node.\n        const end = html.indexOf('<', start)\n        let content = html.slice(start, end === -1 ? undefined : end)\n        // if a node is nothing but whitespace, collapse it as the spec states:\n        // https://www.w3.org/TR/html4/struct/text.html#h-9.1\n        if (whitespaceRE.test(content)) {\n          content = ' '\n        }\n        // don't add whitespace-only text nodes if they would be trailing text nodes\n        // or if they would be leading whitespace-only text nodes:\n        //  * end > -1 indicates this is not a trailing text node\n        //  * leading node is when level is -1 and parent has length 0\n        if ((end > -1 && level + parent.length >= 0) || content !== ' ') {\n          parent.push({\n            type: 'text',\n            content: content,\n          })\n        }\n      }\n    }\n  })\n\n  return result\n}\n","function attrString(attrs) {\n  const buff = []\n  for (let key in attrs) {\n    buff.push(key + '=\"' + attrs[key] + '\"')\n  }\n  if (!buff.length) {\n    return ''\n  }\n  return ' ' + buff.join(' ')\n}\n\nfunction stringify(buff, doc) {\n  switch (doc.type) {\n    case 'text':\n      return buff + doc.content\n    case 'tag':\n      buff +=\n        '<' +\n        doc.name +\n        (doc.attrs ? attrString(doc.attrs) : '') +\n        (doc.voidElement ? '/>' : '>')\n      if (doc.voidElement) {\n        return buff\n      }\n      return buff + doc.children.reduce(stringify, '') + '</' + doc.name + '>'\n    case 'comment':\n      buff += '<!--' + doc.comment + '-->'\n      return buff\n  }\n}\n\nexport default function (doc) {\n  return doc.reduce(function (token, rootEl) {\n    return token + stringify('', rootEl)\n  }, '')\n}\n","import parse from './parse'\nimport stringify from './stringify'\n\nexport default {\n  parse,\n  stringify,\n}\n","export function warn() {\n  if (console && console.warn) {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    if (typeof args[0] === 'string') args[0] = `react-i18next:: ${args[0]}`;\n    console.warn(...args);\n  }\n}\nconst alreadyWarned = {};\nexport function warnOnce() {\n  for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n  if (typeof args[0] === 'string' && alreadyWarned[args[0]]) return;\n  if (typeof args[0] === 'string') alreadyWarned[args[0]] = new Date();\n  warn(...args);\n}\nconst loadedClb = (i18n, cb) => () => {\n  if (i18n.isInitialized) {\n    cb();\n  } else {\n    const initialized = () => {\n      setTimeout(() => {\n        i18n.off('initialized', initialized);\n      }, 0);\n      cb();\n    };\n    i18n.on('initialized', initialized);\n  }\n};\nexport function loadNamespaces(i18n, ns, cb) {\n  i18n.loadNamespaces(ns, loadedClb(i18n, cb));\n}\nexport function loadLanguages(i18n, lng, ns, cb) {\n  if (typeof ns === 'string') ns = [ns];\n  ns.forEach(n => {\n    if (i18n.options.ns.indexOf(n) < 0) i18n.options.ns.push(n);\n  });\n  i18n.loadLanguages(lng, loadedClb(i18n, cb));\n}\nfunction oldI18nextHasLoadedNamespace(ns, i18n) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  const lng = i18n.languages[0];\n  const fallbackLng = i18n.options ? i18n.options.fallbackLng : false;\n  const lastLng = i18n.languages[i18n.languages.length - 1];\n  if (lng.toLowerCase() === 'cimode') return true;\n  const loadNotPending = (l, n) => {\n    const loadState = i18n.services.backendConnector.state[`${l}|${n}`];\n    return loadState === -1 || loadState === 2;\n  };\n  if (options.bindI18n && options.bindI18n.indexOf('languageChanging') > -1 && i18n.services.backendConnector.backend && i18n.isLanguageChangingTo && !loadNotPending(i18n.isLanguageChangingTo, ns)) return false;\n  if (i18n.hasResourceBundle(lng, ns)) return true;\n  if (!i18n.services.backendConnector.backend || i18n.options.resources && !i18n.options.partialBundledLanguages) return true;\n  if (loadNotPending(lng, ns) && (!fallbackLng || loadNotPending(lastLng, ns))) return true;\n  return false;\n}\nexport function hasLoadedNamespace(ns, i18n) {\n  let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (!i18n.languages || !i18n.languages.length) {\n    warnOnce('i18n.languages were undefined or empty', i18n.languages);\n    return true;\n  }\n  const isNewerI18next = i18n.options.ignoreJSONStructure !== undefined;\n  if (!isNewerI18next) {\n    return oldI18nextHasLoadedNamespace(ns, i18n, options);\n  }\n  return i18n.hasLoadedNamespace(ns, {\n    lng: options.lng,\n    precheck: (i18nInstance, loadNotPending) => {\n      if (options.bindI18n && options.bindI18n.indexOf('languageChanging') > -1 && i18nInstance.services.backendConnector.backend && i18nInstance.isLanguageChangingTo && !loadNotPending(i18nInstance.isLanguageChangingTo, ns)) return false;\n    }\n  });\n}\nexport function getDisplayName(Component) {\n  return Component.displayName || Component.name || (typeof Component === 'string' && Component.length > 0 ? Component : 'Unknown');\n}","const matchHtmlEntity = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34|nbsp|#160|copy|#169|reg|#174|hellip|#8230|#x2F|#47);/g;\nconst htmlEntities = {\n  '&amp;': '&',\n  '&#38;': '&',\n  '&lt;': '<',\n  '&#60;': '<',\n  '&gt;': '>',\n  '&#62;': '>',\n  '&apos;': \"'\",\n  '&#39;': \"'\",\n  '&quot;': '\"',\n  '&#34;': '\"',\n  '&nbsp;': ' ',\n  '&#160;': ' ',\n  '&copy;': '©',\n  '&#169;': '©',\n  '&reg;': '®',\n  '&#174;': '®',\n  '&hellip;': '…',\n  '&#8230;': '…',\n  '&#x2F;': '/',\n  '&#47;': '/'\n};\nconst unescapeHtmlEntity = m => htmlEntities[m];\nexport const unescape = text => text.replace(matchHtmlEntity, unescapeHtmlEntity);","let i18nInstance;\nexport function setI18n(instance) {\n  i18nInstance = instance;\n}\nexport function getI18n() {\n  return i18nInstance;\n}","import { unescape } from './unescape.js';\nlet defaultOptions = {\n  bindI18n: 'languageChanged',\n  bindI18nStore: '',\n  transEmptyNodeValue: '',\n  transSupportBasicHtmlNodes: true,\n  transWrapTextNodes: '',\n  transKeepBasicHtmlNodesFor: ['br', 'strong', 'i', 'p'],\n  useSuspense: true,\n  unescape\n};\nexport function setDefaults() {\n  let options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  defaultOptions = {\n    ...defaultOptions,\n    ...options\n  };\n}\nexport function getDefaults() {\n  return defaultOptions;\n}","import _extends from \"@babel/runtime/helpers/extends\";\nimport React, { isValidElement, cloneElement, createElement, Children } from 'react';\nimport HTML from 'html-parse-stringify';\nimport { warn, warnOnce } from './utils.js';\nimport { getDefaults } from './defaults.js';\nimport { getI18n } from './i18nInstance.js';\nfunction hasChildren(node, checkLength) {\n  if (!node) return false;\n  const base = node.props ? node.props.children : node.children;\n  if (checkLength) return base.length > 0;\n  return !!base;\n}\nfunction getChildren(node) {\n  if (!node) return [];\n  const children = node.props ? node.props.children : node.children;\n  return node.props && node.props.i18nIsDynamicList ? getAsArray(children) : children;\n}\nfunction hasValidReactChildren(children) {\n  if (Object.prototype.toString.call(children) !== '[object Array]') return false;\n  return children.every(child => isValidElement(child));\n}\nfunction getAsArray(data) {\n  return Array.isArray(data) ? data : [data];\n}\nfunction mergeProps(source, target) {\n  const newTarget = {\n    ...target\n  };\n  newTarget.props = Object.assign(source.props, target.props);\n  return newTarget;\n}\nexport function nodesToString(children, i18nOptions) {\n  if (!children) return '';\n  let stringNode = '';\n  const childrenArray = getAsArray(children);\n  const keepArray = i18nOptions.transSupportBasicHtmlNodes && i18nOptions.transKeepBasicHtmlNodesFor ? i18nOptions.transKeepBasicHtmlNodesFor : [];\n  childrenArray.forEach((child, childIndex) => {\n    if (typeof child === 'string') {\n      stringNode += `${child}`;\n    } else if (isValidElement(child)) {\n      const childPropsCount = Object.keys(child.props).length;\n      const shouldKeepChild = keepArray.indexOf(child.type) > -1;\n      const childChildren = child.props.children;\n      if (!childChildren && shouldKeepChild && childPropsCount === 0) {\n        stringNode += `<${child.type}/>`;\n      } else if (!childChildren && (!shouldKeepChild || childPropsCount !== 0)) {\n        stringNode += `<${childIndex}></${childIndex}>`;\n      } else if (child.props.i18nIsDynamicList) {\n        stringNode += `<${childIndex}></${childIndex}>`;\n      } else if (shouldKeepChild && childPropsCount === 1 && typeof childChildren === 'string') {\n        stringNode += `<${child.type}>${childChildren}</${child.type}>`;\n      } else {\n        const content = nodesToString(childChildren, i18nOptions);\n        stringNode += `<${childIndex}>${content}</${childIndex}>`;\n      }\n    } else if (child === null) {\n      warn(`Trans: the passed in value is invalid - seems you passed in a null child.`);\n    } else if (typeof child === 'object') {\n      const {\n        format,\n        ...clone\n      } = child;\n      const keys = Object.keys(clone);\n      if (keys.length === 1) {\n        const value = format ? `${keys[0]}, ${format}` : keys[0];\n        stringNode += `{{${value}}}`;\n      } else {\n        warn(`react-i18next: the passed in object contained more than one variable - the object should look like {{ value, format }} where format is optional.`, child);\n      }\n    } else {\n      warn(`Trans: the passed in value is invalid - seems you passed in a variable like {number} - please pass in variables for interpolation as full objects like {{number}}.`, child);\n    }\n  });\n  return stringNode;\n}\nfunction renderNodes(children, targetString, i18n, i18nOptions, combinedTOpts, shouldUnescape) {\n  if (targetString === '') return [];\n  const keepArray = i18nOptions.transKeepBasicHtmlNodesFor || [];\n  const emptyChildrenButNeedsHandling = targetString && new RegExp(keepArray.map(keep => `<${keep}`).join('|')).test(targetString);\n  if (!children && !emptyChildrenButNeedsHandling && !shouldUnescape) return [targetString];\n  const data = {};\n  function getData(childs) {\n    const childrenArray = getAsArray(childs);\n    childrenArray.forEach(child => {\n      if (typeof child === 'string') return;\n      if (hasChildren(child)) getData(getChildren(child));else if (typeof child === 'object' && !isValidElement(child)) Object.assign(data, child);\n    });\n  }\n  getData(children);\n  const ast = HTML.parse(`<0>${targetString}</0>`);\n  const opts = {\n    ...data,\n    ...combinedTOpts\n  };\n  function renderInner(child, node, rootReactNode) {\n    const childs = getChildren(child);\n    const mappedChildren = mapAST(childs, node.children, rootReactNode);\n    return hasValidReactChildren(childs) && mappedChildren.length === 0 || child.props && child.props.i18nIsDynamicList ? childs : mappedChildren;\n  }\n  function pushTranslatedJSX(child, inner, mem, i, isVoid) {\n    if (child.dummy) {\n      child.children = inner;\n      mem.push(cloneElement(child, {\n        key: i\n      }, isVoid ? undefined : inner));\n    } else {\n      mem.push(...Children.map([child], c => {\n        const props = {\n          ...c.props\n        };\n        delete props.i18nIsDynamicList;\n        return React.createElement(c.type, _extends({}, props, {\n          key: i,\n          ref: c.ref\n        }, isVoid ? {} : {\n          children: inner\n        }));\n      }));\n    }\n  }\n  function mapAST(reactNode, astNode, rootReactNode) {\n    const reactNodes = getAsArray(reactNode);\n    const astNodes = getAsArray(astNode);\n    return astNodes.reduce((mem, node, i) => {\n      const translationContent = node.children && node.children[0] && node.children[0].content && i18n.services.interpolator.interpolate(node.children[0].content, opts, i18n.language);\n      if (node.type === 'tag') {\n        let tmp = reactNodes[parseInt(node.name, 10)];\n        if (rootReactNode.length === 1 && !tmp) tmp = rootReactNode[0][node.name];\n        if (!tmp) tmp = {};\n        const child = Object.keys(node.attrs).length !== 0 ? mergeProps({\n          props: node.attrs\n        }, tmp) : tmp;\n        const isElement = isValidElement(child);\n        const isValidTranslationWithChildren = isElement && hasChildren(node, true) && !node.voidElement;\n        const isEmptyTransWithHTML = emptyChildrenButNeedsHandling && typeof child === 'object' && child.dummy && !isElement;\n        const isKnownComponent = typeof children === 'object' && children !== null && Object.hasOwnProperty.call(children, node.name);\n        if (typeof child === 'string') {\n          const value = i18n.services.interpolator.interpolate(child, opts, i18n.language);\n          mem.push(value);\n        } else if (hasChildren(child) || isValidTranslationWithChildren) {\n          const inner = renderInner(child, node, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i);\n        } else if (isEmptyTransWithHTML) {\n          const inner = mapAST(reactNodes, node.children, rootReactNode);\n          pushTranslatedJSX(child, inner, mem, i);\n        } else if (Number.isNaN(parseFloat(node.name))) {\n          if (isKnownComponent) {\n            const inner = renderInner(child, node, rootReactNode);\n            pushTranslatedJSX(child, inner, mem, i, node.voidElement);\n          } else if (i18nOptions.transSupportBasicHtmlNodes && keepArray.indexOf(node.name) > -1) {\n            if (node.voidElement) {\n              mem.push(createElement(node.name, {\n                key: `${node.name}-${i}`\n              }));\n            } else {\n              const inner = mapAST(reactNodes, node.children, rootReactNode);\n              mem.push(createElement(node.name, {\n                key: `${node.name}-${i}`\n              }, inner));\n            }\n          } else if (node.voidElement) {\n            mem.push(`<${node.name} />`);\n          } else {\n            const inner = mapAST(reactNodes, node.children, rootReactNode);\n            mem.push(`<${node.name}>${inner}</${node.name}>`);\n          }\n        } else if (typeof child === 'object' && !isElement) {\n          const content = node.children[0] ? translationContent : null;\n          if (content) mem.push(content);\n        } else {\n          pushTranslatedJSX(child, translationContent, mem, i, node.children.length !== 1 || !translationContent);\n        }\n      } else if (node.type === 'text') {\n        const wrapTextNodes = i18nOptions.transWrapTextNodes;\n        const content = shouldUnescape ? i18nOptions.unescape(i18n.services.interpolator.interpolate(node.content, opts, i18n.language)) : i18n.services.interpolator.interpolate(node.content, opts, i18n.language);\n        if (wrapTextNodes) {\n          mem.push(createElement(wrapTextNodes, {\n            key: `${node.name}-${i}`\n          }, content));\n        } else {\n          mem.push(content);\n        }\n      }\n      return mem;\n    }, []);\n  }\n  const result = mapAST([{\n    dummy: true,\n    children: children || []\n  }], ast, getAsArray(children || []));\n  return getChildren(result[0]);\n}\nexport function Trans(_ref) {\n  let {\n    children,\n    count,\n    parent,\n    i18nKey,\n    context,\n    tOptions = {},\n    values,\n    defaults,\n    components,\n    ns,\n    i18n: i18nFromProps,\n    t: tFromProps,\n    shouldUnescape,\n    ...additionalProps\n  } = _ref;\n  const i18n = i18nFromProps || getI18n();\n  if (!i18n) {\n    warnOnce('You will need to pass in an i18next instance by using i18nextReactModule');\n    return children;\n  }\n  const t = tFromProps || i18n.t.bind(i18n) || (k => k);\n  if (context) tOptions.context = context;\n  const reactI18nextOptions = {\n    ...getDefaults(),\n    ...(i18n.options && i18n.options.react)\n  };\n  let namespaces = ns || t.ns || i18n.options && i18n.options.defaultNS;\n  namespaces = typeof namespaces === 'string' ? [namespaces] : namespaces || ['translation'];\n  const nodeAsString = nodesToString(children, reactI18nextOptions);\n  const defaultValue = defaults || nodeAsString || reactI18nextOptions.transEmptyNodeValue || i18nKey;\n  const {\n    hashTransKey\n  } = reactI18nextOptions;\n  const key = i18nKey || (hashTransKey ? hashTransKey(nodeAsString || defaultValue) : nodeAsString || defaultValue);\n  let interpolationOverride = values ? tOptions.interpolation : {\n    interpolation: {\n      ...tOptions.interpolation,\n      prefix: '#$?',\n      suffix: '?$#'\n    }\n  };\n  if (i18n.options && i18n.options.interpolation && i18n.options.interpolation.defaultVariables) {\n    if (!interpolationOverride) interpolationOverride = {};\n    interpolationOverride.interpolation = {\n      defaultVariables: {\n        ...i18n.options.interpolation.defaultVariables,\n        ...(interpolationOverride.interpolation && interpolationOverride.interpolation.defaultVariables || {})\n      }\n    };\n  }\n  const combinedTOpts = {\n    ...tOptions,\n    count,\n    ...values,\n    ...interpolationOverride,\n    defaultValue,\n    ns: namespaces\n  };\n  const translation = key ? t(key, combinedTOpts) : defaultValue;\n  const content = renderNodes(components || children, translation, i18n, reactI18nextOptions, combinedTOpts, shouldUnescape);\n  const useAsParent = parent !== undefined ? parent : reactI18nextOptions.defaultTransParent;\n  return useAsParent ? createElement(useAsParent, additionalProps, content) : content;\n}","import { setDefaults } from './defaults.js';\nimport { setI18n } from './i18nInstance.js';\nexport const initReactI18next = {\n  type: '3rdParty',\n  init(instance) {\n    setDefaults(instance.options.react);\n    setI18n(instance);\n  }\n};","import { createContext } from 'react';\nimport { getDefaults, setDefaults } from './defaults.js';\nimport { getI18n, setI18n } from './i18nInstance.js';\nimport { initReactI18next } from './initReactI18next.js';\nexport { getDefaults, setDefaults, getI18n, setI18n, initReactI18next };\nexport const I18nContext = createContext();\nexport class ReportNamespaces {\n  constructor() {\n    this.usedNamespaces = {};\n  }\n  addUsedNamespaces(namespaces) {\n    namespaces.forEach(ns => {\n      if (!this.usedNamespaces[ns]) this.usedNamespaces[ns] = true;\n    });\n  }\n  getUsedNamespaces() {\n    return Object.keys(this.usedNamespaces);\n  }\n}\nexport function composeInitialProps(ForComponent) {\n  return ctx => new Promise(resolve => {\n    const i18nInitialProps = getInitialProps();\n    if (ForComponent.getInitialProps) {\n      ForComponent.getInitialProps(ctx).then(componentsInitialProps => {\n        resolve({\n          ...componentsInitialProps,\n          ...i18nInitialProps\n        });\n      });\n    } else {\n      resolve(i18nInitialProps);\n    }\n  });\n}\nexport function getInitialProps() {\n  const i18n = getI18n();\n  const namespaces = i18n.reportNamespaces ? i18n.reportNamespaces.getUsedNamespaces() : [];\n  const ret = {};\n  const initialI18nStore = {};\n  i18n.languages.forEach(l => {\n    initialI18nStore[l] = {};\n    namespaces.forEach(ns => {\n      initialI18nStore[l][ns] = i18n.getResourceBundle(l, ns) || {};\n    });\n  });\n  ret.initialI18nStore = initialI18nStore;\n  ret.initialLanguage = i18n.language;\n  return ret;\n}","import { useContext } from 'react';\nimport { nodesToString, Trans as TransWithoutContext } from './TransWithoutContext.js';\nimport { getI18n, I18nContext } from './context.js';\nexport { nodesToString };\nexport function Trans(_ref) {\n  let {\n    children,\n    count,\n    parent,\n    i18nKey,\n    context,\n    tOptions = {},\n    values,\n    defaults,\n    components,\n    ns,\n    i18n: i18nFromProps,\n    t: tFromProps,\n    shouldUnescape,\n    ...additionalProps\n  } = _ref;\n  const {\n    i18n: i18nFromContext,\n    defaultNS: defaultNSFromContext\n  } = useContext(I18nContext) || {};\n  const i18n = i18nFromProps || i18nFromContext || getI18n();\n  const t = tFromProps || i18n && i18n.t.bind(i18n);\n  return TransWithoutContext({\n    children,\n    count,\n    parent,\n    i18nKey,\n    context,\n    tOptions,\n    values,\n    defaults,\n    components,\n    ns: ns || t && t.ns || defaultNSFromContext || i18n && i18n.options && i18n.options.defaultNS,\n    i18n,\n    t: tFromProps,\n    shouldUnescape,\n    ...additionalProps\n  });\n}","import { useState, useEffect, useContext, useRef } from 'react';\nimport { getI18n, getDefaults, ReportNamespaces, I18nContext } from './context.js';\nimport { warnOnce, loadNamespaces, loadLanguages, hasLoadedNamespace } from './utils.js';\nconst usePrevious = (value, ignore) => {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = ignore ? ref.current : value;\n  }, [value, ignore]);\n  return ref.current;\n};\nexport function useTranslation(ns) {\n  let props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n    i18n: i18nFromProps\n  } = props;\n  const {\n    i18n: i18nFromContext,\n    defaultNS: defaultNSFromContext\n  } = useContext(I18nContext) || {};\n  const i18n = i18nFromProps || i18nFromContext || getI18n();\n  if (i18n && !i18n.reportNamespaces) i18n.reportNamespaces = new ReportNamespaces();\n  if (!i18n) {\n    warnOnce('You will need to pass in an i18next instance by using initReactI18next');\n    const notReadyT = (k, optsOrDefaultValue) => {\n      if (typeof optsOrDefaultValue === 'string') return optsOrDefaultValue;\n      if (optsOrDefaultValue && typeof optsOrDefaultValue === 'object' && typeof optsOrDefaultValue.defaultValue === 'string') return optsOrDefaultValue.defaultValue;\n      return Array.isArray(k) ? k[k.length - 1] : k;\n    };\n    const retNotReady = [notReadyT, {}, false];\n    retNotReady.t = notReadyT;\n    retNotReady.i18n = {};\n    retNotReady.ready = false;\n    return retNotReady;\n  }\n  if (i18n.options.react && i18n.options.react.wait !== undefined) warnOnce('It seems you are still using the old wait option, you may migrate to the new useSuspense behaviour.');\n  const i18nOptions = {\n    ...getDefaults(),\n    ...i18n.options.react,\n    ...props\n  };\n  const {\n    useSuspense,\n    keyPrefix\n  } = i18nOptions;\n  let namespaces = ns || defaultNSFromContext || i18n.options && i18n.options.defaultNS;\n  namespaces = typeof namespaces === 'string' ? [namespaces] : namespaces || ['translation'];\n  if (i18n.reportNamespaces.addUsedNamespaces) i18n.reportNamespaces.addUsedNamespaces(namespaces);\n  const ready = (i18n.isInitialized || i18n.initializedStoreOnce) && namespaces.every(n => hasLoadedNamespace(n, i18n, i18nOptions));\n  function getT() {\n    return i18n.getFixedT(props.lng || null, i18nOptions.nsMode === 'fallback' ? namespaces : namespaces[0], keyPrefix);\n  }\n  const [t, setT] = useState(getT);\n  let joinedNS = namespaces.join();\n  if (props.lng) joinedNS = `${props.lng}${joinedNS}`;\n  const previousJoinedNS = usePrevious(joinedNS);\n  const isMounted = useRef(true);\n  useEffect(() => {\n    const {\n      bindI18n,\n      bindI18nStore\n    } = i18nOptions;\n    isMounted.current = true;\n    if (!ready && !useSuspense) {\n      if (props.lng) {\n        loadLanguages(i18n, props.lng, namespaces, () => {\n          if (isMounted.current) setT(getT);\n        });\n      } else {\n        loadNamespaces(i18n, namespaces, () => {\n          if (isMounted.current) setT(getT);\n        });\n      }\n    }\n    if (ready && previousJoinedNS && previousJoinedNS !== joinedNS && isMounted.current) {\n      setT(getT);\n    }\n    function boundReset() {\n      if (isMounted.current) setT(getT);\n    }\n    if (bindI18n && i18n) i18n.on(bindI18n, boundReset);\n    if (bindI18nStore && i18n) i18n.store.on(bindI18nStore, boundReset);\n    return () => {\n      isMounted.current = false;\n      if (bindI18n && i18n) bindI18n.split(' ').forEach(e => i18n.off(e, boundReset));\n      if (bindI18nStore && i18n) bindI18nStore.split(' ').forEach(e => i18n.store.off(e, boundReset));\n    };\n  }, [i18n, joinedNS]);\n  const isInitial = useRef(true);\n  useEffect(() => {\n    if (isMounted.current && !isInitial.current) {\n      setT(getT);\n    }\n    isInitial.current = false;\n  }, [i18n, keyPrefix]);\n  const ret = [t, i18n, ready];\n  ret.t = t;\n  ret.i18n = i18n;\n  ret.ready = ready;\n  if (ready) return ret;\n  if (!ready && !useSuspense) return ret;\n  throw new Promise(resolve => {\n    if (props.lng) {\n      loadLanguages(i18n, props.lng, namespaces, () => resolve());\n    } else {\n      loadNamespaces(i18n, namespaces, () => resolve());\n    }\n  });\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = function(chunkId) {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce(function(promises, key) {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks\n__webpack_require__.u = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + {\"27\":\"f906878e\",\"429\":\"d3036fa9\",\"496\":\"4f93eb4e\",\"827\":\"c252ad44\",\"869\":\"0171a3df\",\"914\":\"d983d4f7\",\"924\":\"bc7abb99\"}[chunkId] + \".chunk.js\";\n};","// This function allow to reference async chunks\n__webpack_require__.miniCssF = function(chunkId) {\n\t// return url for filenames based on template\n\treturn \"static/css/\" + chunkId + \".\" + {\"827\":\"54991a14\",\"924\":\"d4785440\"}[chunkId] + \".chunk.css\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","var inProgress = {};\nvar dataWebpackPrefix = \"plaain:\";\n// loadScript function to load a script via script tag\n__webpack_require__.l = function(url, done, key, chunkId) {\n\tif(inProgress[url]) { inProgress[url].push(done); return; }\n\tvar script, needAttach;\n\tif(key !== undefined) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tfor(var i = 0; i < scripts.length; i++) {\n\t\t\tvar s = scripts[i];\n\t\t\tif(s.getAttribute(\"src\") == url || s.getAttribute(\"data-webpack\") == dataWebpackPrefix + key) { script = s; break; }\n\t\t}\n\t}\n\tif(!script) {\n\t\tneedAttach = true;\n\t\tscript = document.createElement('script');\n\n\t\tscript.charset = 'utf-8';\n\t\tscript.timeout = 120;\n\t\tif (__webpack_require__.nc) {\n\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n\t\t}\n\t\tscript.setAttribute(\"data-webpack\", dataWebpackPrefix + key);\n\t\tscript.src = url;\n\t}\n\tinProgress[url] = [done];\n\tvar onScriptComplete = function(prev, event) {\n\t\t// avoid mem leaks in IE.\n\t\tscript.onerror = script.onload = null;\n\t\tclearTimeout(timeout);\n\t\tvar doneFns = inProgress[url];\n\t\tdelete inProgress[url];\n\t\tscript.parentNode && script.parentNode.removeChild(script);\n\t\tdoneFns && doneFns.forEach(function(fn) { return fn(event); });\n\t\tif(prev) return prev(event);\n\t};\n\tvar timeout = setTimeout(onScriptComplete.bind(null, undefined, { type: 'timeout', target: script }), 120000);\n\tscript.onerror = onScriptComplete.bind(null, script.onerror);\n\tscript.onload = onScriptComplete.bind(null, script.onload);\n\tneedAttach && document.head.appendChild(script);\n};","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = function(module) {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/plaain/\";","var createStylesheet = function(chunkId, fullhref, resolve, reject) {\n\tvar linkTag = document.createElement(\"link\");\n\n\tlinkTag.rel = \"stylesheet\";\n\tlinkTag.type = \"text/css\";\n\tvar onLinkComplete = function(event) {\n\t\t// avoid mem leaks.\n\t\tlinkTag.onerror = linkTag.onload = null;\n\t\tif (event.type === 'load') {\n\t\t\tresolve();\n\t\t} else {\n\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\tvar realHref = event && event.target && event.target.href || fullhref;\n\t\t\tvar err = new Error(\"Loading CSS chunk \" + chunkId + \" failed.\\n(\" + realHref + \")\");\n\t\t\terr.code = \"CSS_CHUNK_LOAD_FAILED\";\n\t\t\terr.type = errorType;\n\t\t\terr.request = realHref;\n\t\t\tlinkTag.parentNode.removeChild(linkTag)\n\t\t\treject(err);\n\t\t}\n\t}\n\tlinkTag.onerror = linkTag.onload = onLinkComplete;\n\tlinkTag.href = fullhref;\n\n\tdocument.head.appendChild(linkTag);\n\treturn linkTag;\n};\nvar findStylesheet = function(href, fullhref) {\n\tvar existingLinkTags = document.getElementsByTagName(\"link\");\n\tfor(var i = 0; i < existingLinkTags.length; i++) {\n\t\tvar tag = existingLinkTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\") || tag.getAttribute(\"href\");\n\t\tif(tag.rel === \"stylesheet\" && (dataHref === href || dataHref === fullhref)) return tag;\n\t}\n\tvar existingStyleTags = document.getElementsByTagName(\"style\");\n\tfor(var i = 0; i < existingStyleTags.length; i++) {\n\t\tvar tag = existingStyleTags[i];\n\t\tvar dataHref = tag.getAttribute(\"data-href\");\n\t\tif(dataHref === href || dataHref === fullhref) return tag;\n\t}\n};\nvar loadStylesheet = function(chunkId) {\n\treturn new Promise(function(resolve, reject) {\n\t\tvar href = __webpack_require__.miniCssF(chunkId);\n\t\tvar fullhref = __webpack_require__.p + href;\n\t\tif(findStylesheet(href, fullhref)) return resolve();\n\t\tcreateStylesheet(chunkId, fullhref, resolve, reject);\n\t});\n}\n// object to store loaded CSS chunks\nvar installedCssChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.miniCss = function(chunkId, promises) {\n\tvar cssChunks = {\"827\":1,\"924\":1};\n\tif(installedCssChunks[chunkId]) promises.push(installedCssChunks[chunkId]);\n\telse if(installedCssChunks[chunkId] !== 0 && cssChunks[chunkId]) {\n\t\tpromises.push(installedCssChunks[chunkId] = loadStylesheet(chunkId).then(function() {\n\t\t\tinstalledCssChunks[chunkId] = 0;\n\t\t}, function(e) {\n\t\t\tdelete installedCssChunks[chunkId];\n\t\t\tthrow e;\n\t\t}));\n\t}\n};\n\n// no hmr","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n__webpack_require__.f.j = function(chunkId, promises) {\n\t\t// JSONP chunk loading for javascript\n\t\tvar installedChunkData = __webpack_require__.o(installedChunks, chunkId) ? installedChunks[chunkId] : undefined;\n\t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n\t\t\t// a Promise means \"currently loading\".\n\t\t\tif(installedChunkData) {\n\t\t\t\tpromises.push(installedChunkData[2]);\n\t\t\t} else {\n\t\t\t\tif(true) { // all chunks have JS\n\t\t\t\t\t// setup Promise in chunk cache\n\t\t\t\t\tvar promise = new Promise(function(resolve, reject) { installedChunkData = installedChunks[chunkId] = [resolve, reject]; });\n\t\t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n\t\t\t\t\t// start chunk loading\n\t\t\t\t\tvar url = __webpack_require__.p + __webpack_require__.u(chunkId);\n\t\t\t\t\t// create error before stack unwound to get useful stacktrace later\n\t\t\t\t\tvar error = new Error();\n\t\t\t\t\tvar loadingEnded = function(event) {\n\t\t\t\t\t\tif(__webpack_require__.o(installedChunks, chunkId)) {\n\t\t\t\t\t\t\tinstalledChunkData = installedChunks[chunkId];\n\t\t\t\t\t\t\tif(installedChunkData !== 0) installedChunks[chunkId] = undefined;\n\t\t\t\t\t\t\tif(installedChunkData) {\n\t\t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n\t\t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n\t\t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n\t\t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n\t\t\t\t\t\t\t\terror.type = errorType;\n\t\t\t\t\t\t\t\terror.request = realSrc;\n\t\t\t\t\t\t\t\tinstalledChunkData[1](error);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t__webpack_require__.l(url, loadingEnded, \"chunk-\" + chunkId, chunkId);\n\t\t\t\t} else installedChunks[chunkId] = 0;\n\t\t\t}\n\t\t}\n};\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n// no on chunks loaded\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkplaain\"] = self[\"webpackChunkplaain\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","/* eslint-disable no-prototype-builtins */\nvar g =\n  (typeof globalThis !== 'undefined' && globalThis) ||\n  (typeof self !== 'undefined' && self) ||\n  // eslint-disable-next-line no-undef\n  (typeof global !== 'undefined' && global) ||\n  {}\n\nvar support = {\n  searchParams: 'URLSearchParams' in g,\n  iterable: 'Symbol' in g && 'iterator' in Symbol,\n  blob:\n    'FileReader' in g &&\n    'Blob' in g &&\n    (function() {\n      try {\n        new Blob()\n        return true\n      } catch (e) {\n        return false\n      }\n    })(),\n  formData: 'FormData' in g,\n  arrayBuffer: 'ArrayBuffer' in g\n}\n\nfunction isDataView(obj) {\n  return obj && DataView.prototype.isPrototypeOf(obj)\n}\n\nif (support.arrayBuffer) {\n  var viewClasses = [\n    '[object Int8Array]',\n    '[object Uint8Array]',\n    '[object Uint8ClampedArray]',\n    '[object Int16Array]',\n    '[object Uint16Array]',\n    '[object Int32Array]',\n    '[object Uint32Array]',\n    '[object Float32Array]',\n    '[object Float64Array]'\n  ]\n\n  var isArrayBufferView =\n    ArrayBuffer.isView ||\n    function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n}\n\nfunction normalizeName(name) {\n  if (typeof name !== 'string') {\n    name = String(name)\n  }\n  if (/[^a-z0-9\\-#$%&'*+.^_`|~!]/i.test(name) || name === '') {\n    throw new TypeError('Invalid character in header field name: \"' + name + '\"')\n  }\n  return name.toLowerCase()\n}\n\nfunction normalizeValue(value) {\n  if (typeof value !== 'string') {\n    value = String(value)\n  }\n  return value\n}\n\n// Build a destructive iterator for the value list\nfunction iteratorFor(items) {\n  var iterator = {\n    next: function() {\n      var value = items.shift()\n      return {done: value === undefined, value: value}\n    }\n  }\n\n  if (support.iterable) {\n    iterator[Symbol.iterator] = function() {\n      return iterator\n    }\n  }\n\n  return iterator\n}\n\nexport function Headers(headers) {\n  this.map = {}\n\n  if (headers instanceof Headers) {\n    headers.forEach(function(value, name) {\n      this.append(name, value)\n    }, this)\n  } else if (Array.isArray(headers)) {\n    headers.forEach(function(header) {\n      if (header.length != 2) {\n        throw new TypeError('Headers constructor: expected name/value pair to be length 2, found' + header.length)\n      }\n      this.append(header[0], header[1])\n    }, this)\n  } else if (headers) {\n    Object.getOwnPropertyNames(headers).forEach(function(name) {\n      this.append(name, headers[name])\n    }, this)\n  }\n}\n\nHeaders.prototype.append = function(name, value) {\n  name = normalizeName(name)\n  value = normalizeValue(value)\n  var oldValue = this.map[name]\n  this.map[name] = oldValue ? oldValue + ', ' + value : value\n}\n\nHeaders.prototype['delete'] = function(name) {\n  delete this.map[normalizeName(name)]\n}\n\nHeaders.prototype.get = function(name) {\n  name = normalizeName(name)\n  return this.has(name) ? this.map[name] : null\n}\n\nHeaders.prototype.has = function(name) {\n  return this.map.hasOwnProperty(normalizeName(name))\n}\n\nHeaders.prototype.set = function(name, value) {\n  this.map[normalizeName(name)] = normalizeValue(value)\n}\n\nHeaders.prototype.forEach = function(callback, thisArg) {\n  for (var name in this.map) {\n    if (this.map.hasOwnProperty(name)) {\n      callback.call(thisArg, this.map[name], name, this)\n    }\n  }\n}\n\nHeaders.prototype.keys = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push(name)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.values = function() {\n  var items = []\n  this.forEach(function(value) {\n    items.push(value)\n  })\n  return iteratorFor(items)\n}\n\nHeaders.prototype.entries = function() {\n  var items = []\n  this.forEach(function(value, name) {\n    items.push([name, value])\n  })\n  return iteratorFor(items)\n}\n\nif (support.iterable) {\n  Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n}\n\nfunction consumed(body) {\n  if (body._noBody) return\n  if (body.bodyUsed) {\n    return Promise.reject(new TypeError('Already read'))\n  }\n  body.bodyUsed = true\n}\n\nfunction fileReaderReady(reader) {\n  return new Promise(function(resolve, reject) {\n    reader.onload = function() {\n      resolve(reader.result)\n    }\n    reader.onerror = function() {\n      reject(reader.error)\n    }\n  })\n}\n\nfunction readBlobAsArrayBuffer(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  reader.readAsArrayBuffer(blob)\n  return promise\n}\n\nfunction readBlobAsText(blob) {\n  var reader = new FileReader()\n  var promise = fileReaderReady(reader)\n  var match = /charset=([A-Za-z0-9_-]+)/.exec(blob.type)\n  var encoding = match ? match[1] : 'utf-8'\n  reader.readAsText(blob, encoding)\n  return promise\n}\n\nfunction readArrayBufferAsText(buf) {\n  var view = new Uint8Array(buf)\n  var chars = new Array(view.length)\n\n  for (var i = 0; i < view.length; i++) {\n    chars[i] = String.fromCharCode(view[i])\n  }\n  return chars.join('')\n}\n\nfunction bufferClone(buf) {\n  if (buf.slice) {\n    return buf.slice(0)\n  } else {\n    var view = new Uint8Array(buf.byteLength)\n    view.set(new Uint8Array(buf))\n    return view.buffer\n  }\n}\n\nfunction Body() {\n  this.bodyUsed = false\n\n  this._initBody = function(body) {\n    /*\n      fetch-mock wraps the Response object in an ES6 Proxy to\n      provide useful test harness features such as flush. However, on\n      ES5 browsers without fetch or Proxy support pollyfills must be used;\n      the proxy-pollyfill is unable to proxy an attribute unless it exists\n      on the object before the Proxy is created. This change ensures\n      Response.bodyUsed exists on the instance, while maintaining the\n      semantic of setting Request.bodyUsed in the constructor before\n      _initBody is called.\n    */\n    // eslint-disable-next-line no-self-assign\n    this.bodyUsed = this.bodyUsed\n    this._bodyInit = body\n    if (!body) {\n      this._noBody = true;\n      this._bodyText = ''\n    } else if (typeof body === 'string') {\n      this._bodyText = body\n    } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n      this._bodyBlob = body\n    } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n      this._bodyFormData = body\n    } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n      this._bodyText = body.toString()\n    } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n      this._bodyArrayBuffer = bufferClone(body.buffer)\n      // IE 10-11 can't handle a DataView body.\n      this._bodyInit = new Blob([this._bodyArrayBuffer])\n    } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n      this._bodyArrayBuffer = bufferClone(body)\n    } else {\n      this._bodyText = body = Object.prototype.toString.call(body)\n    }\n\n    if (!this.headers.get('content-type')) {\n      if (typeof body === 'string') {\n        this.headers.set('content-type', 'text/plain;charset=UTF-8')\n      } else if (this._bodyBlob && this._bodyBlob.type) {\n        this.headers.set('content-type', this._bodyBlob.type)\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n      }\n    }\n  }\n\n  if (support.blob) {\n    this.blob = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return Promise.resolve(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as blob')\n      } else {\n        return Promise.resolve(new Blob([this._bodyText]))\n      }\n    }\n  }\n\n  this.arrayBuffer = function() {\n    if (this._bodyArrayBuffer) {\n      var isConsumed = consumed(this)\n      if (isConsumed) {\n        return isConsumed\n      } else if (ArrayBuffer.isView(this._bodyArrayBuffer)) {\n        return Promise.resolve(\n          this._bodyArrayBuffer.buffer.slice(\n            this._bodyArrayBuffer.byteOffset,\n            this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength\n          )\n        )\n      } else {\n        return Promise.resolve(this._bodyArrayBuffer)\n      }\n    } else if (support.blob) {\n      return this.blob().then(readBlobAsArrayBuffer)\n    } else {\n      throw new Error('could not read as ArrayBuffer')\n    }\n  }\n\n  this.text = function() {\n    var rejected = consumed(this)\n    if (rejected) {\n      return rejected\n    }\n\n    if (this._bodyBlob) {\n      return readBlobAsText(this._bodyBlob)\n    } else if (this._bodyArrayBuffer) {\n      return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n    } else if (this._bodyFormData) {\n      throw new Error('could not read FormData body as text')\n    } else {\n      return Promise.resolve(this._bodyText)\n    }\n  }\n\n  if (support.formData) {\n    this.formData = function() {\n      return this.text().then(decode)\n    }\n  }\n\n  this.json = function() {\n    return this.text().then(JSON.parse)\n  }\n\n  return this\n}\n\n// HTTP methods whose capitalization should be normalized\nvar methods = ['CONNECT', 'DELETE', 'GET', 'HEAD', 'OPTIONS', 'PATCH', 'POST', 'PUT', 'TRACE']\n\nfunction normalizeMethod(method) {\n  var upcased = method.toUpperCase()\n  return methods.indexOf(upcased) > -1 ? upcased : method\n}\n\nexport function Request(input, options) {\n  if (!(this instanceof Request)) {\n    throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n  }\n\n  options = options || {}\n  var body = options.body\n\n  if (input instanceof Request) {\n    if (input.bodyUsed) {\n      throw new TypeError('Already read')\n    }\n    this.url = input.url\n    this.credentials = input.credentials\n    if (!options.headers) {\n      this.headers = new Headers(input.headers)\n    }\n    this.method = input.method\n    this.mode = input.mode\n    this.signal = input.signal\n    if (!body && input._bodyInit != null) {\n      body = input._bodyInit\n      input.bodyUsed = true\n    }\n  } else {\n    this.url = String(input)\n  }\n\n  this.credentials = options.credentials || this.credentials || 'same-origin'\n  if (options.headers || !this.headers) {\n    this.headers = new Headers(options.headers)\n  }\n  this.method = normalizeMethod(options.method || this.method || 'GET')\n  this.mode = options.mode || this.mode || null\n  this.signal = options.signal || this.signal || (function () {\n    if ('AbortController' in g) {\n      var ctrl = new AbortController();\n      return ctrl.signal;\n    }\n  }());\n  this.referrer = null\n\n  if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n    throw new TypeError('Body not allowed for GET or HEAD requests')\n  }\n  this._initBody(body)\n\n  if (this.method === 'GET' || this.method === 'HEAD') {\n    if (options.cache === 'no-store' || options.cache === 'no-cache') {\n      // Search for a '_' parameter in the query string\n      var reParamSearch = /([?&])_=[^&]*/\n      if (reParamSearch.test(this.url)) {\n        // If it already exists then set the value with the current time\n        this.url = this.url.replace(reParamSearch, '$1_=' + new Date().getTime())\n      } else {\n        // Otherwise add a new '_' parameter to the end with the current time\n        var reQueryString = /\\?/\n        this.url += (reQueryString.test(this.url) ? '&' : '?') + '_=' + new Date().getTime()\n      }\n    }\n  }\n}\n\nRequest.prototype.clone = function() {\n  return new Request(this, {body: this._bodyInit})\n}\n\nfunction decode(body) {\n  var form = new FormData()\n  body\n    .trim()\n    .split('&')\n    .forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n  return form\n}\n\nfunction parseHeaders(rawHeaders) {\n  var headers = new Headers()\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ')\n  // Avoiding split via regex to work around a common IE11 bug with the core-js 3.6.0 regex polyfill\n  // https://github.com/github/fetch/issues/748\n  // https://github.com/zloirock/core-js/issues/751\n  preProcessedHeaders\n    .split('\\r')\n    .map(function(header) {\n      return header.indexOf('\\n') === 0 ? header.substr(1, header.length) : header\n    })\n    .forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        try {\n          headers.append(key, value)\n        } catch (error) {\n          console.warn('Response ' + error.message)\n        }\n      }\n    })\n  return headers\n}\n\nBody.call(Request.prototype)\n\nexport function Response(bodyInit, options) {\n  if (!(this instanceof Response)) {\n    throw new TypeError('Please use the \"new\" operator, this DOM object constructor cannot be called as a function.')\n  }\n  if (!options) {\n    options = {}\n  }\n\n  this.type = 'default'\n  this.status = options.status === undefined ? 200 : options.status\n  if (this.status < 200 || this.status > 599) {\n    throw new RangeError(\"Failed to construct 'Response': The status provided (0) is outside the range [200, 599].\")\n  }\n  this.ok = this.status >= 200 && this.status < 300\n  this.statusText = options.statusText === undefined ? '' : '' + options.statusText\n  this.headers = new Headers(options.headers)\n  this.url = options.url || ''\n  this._initBody(bodyInit)\n}\n\nBody.call(Response.prototype)\n\nResponse.prototype.clone = function() {\n  return new Response(this._bodyInit, {\n    status: this.status,\n    statusText: this.statusText,\n    headers: new Headers(this.headers),\n    url: this.url\n  })\n}\n\nResponse.error = function() {\n  var response = new Response(null, {status: 200, statusText: ''})\n  response.status = 0\n  response.type = 'error'\n  return response\n}\n\nvar redirectStatuses = [301, 302, 303, 307, 308]\n\nResponse.redirect = function(url, status) {\n  if (redirectStatuses.indexOf(status) === -1) {\n    throw new RangeError('Invalid status code')\n  }\n\n  return new Response(null, {status: status, headers: {location: url}})\n}\n\nexport var DOMException = g.DOMException\ntry {\n  new DOMException()\n} catch (err) {\n  DOMException = function(message, name) {\n    this.message = message\n    this.name = name\n    var error = Error(message)\n    this.stack = error.stack\n  }\n  DOMException.prototype = Object.create(Error.prototype)\n  DOMException.prototype.constructor = DOMException\n}\n\nexport function fetch(input, init) {\n  return new Promise(function(resolve, reject) {\n    var request = new Request(input, init)\n\n    if (request.signal && request.signal.aborted) {\n      return reject(new DOMException('Aborted', 'AbortError'))\n    }\n\n    var xhr = new XMLHttpRequest()\n\n    function abortXhr() {\n      xhr.abort()\n    }\n\n    xhr.onload = function() {\n      var options = {\n        statusText: xhr.statusText,\n        headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n      }\n      // This check if specifically for when a user fetches a file locally from the file system\n      // Only if the status is out of a normal range\n      if (request.url.startsWith('file://') && (xhr.status < 200 || xhr.status > 599)) {\n        options.status = 200;\n      } else {\n        options.status = xhr.status;\n      }\n      options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n      var body = 'response' in xhr ? xhr.response : xhr.responseText\n      setTimeout(function() {\n        resolve(new Response(body, options))\n      }, 0)\n    }\n\n    xhr.onerror = function() {\n      setTimeout(function() {\n        reject(new TypeError('Network request failed'))\n      }, 0)\n    }\n\n    xhr.ontimeout = function() {\n      setTimeout(function() {\n        reject(new TypeError('Network request timed out'))\n      }, 0)\n    }\n\n    xhr.onabort = function() {\n      setTimeout(function() {\n        reject(new DOMException('Aborted', 'AbortError'))\n      }, 0)\n    }\n\n    function fixUrl(url) {\n      try {\n        return url === '' && g.location.href ? g.location.href : url\n      } catch (e) {\n        return url\n      }\n    }\n\n    xhr.open(request.method, fixUrl(request.url), true)\n\n    if (request.credentials === 'include') {\n      xhr.withCredentials = true\n    } else if (request.credentials === 'omit') {\n      xhr.withCredentials = false\n    }\n\n    if ('responseType' in xhr) {\n      if (support.blob) {\n        xhr.responseType = 'blob'\n      } else if (\n        support.arrayBuffer\n      ) {\n        xhr.responseType = 'arraybuffer'\n      }\n    }\n\n    if (init && typeof init.headers === 'object' && !(init.headers instanceof Headers || (g.Headers && init.headers instanceof g.Headers))) {\n      var names = [];\n      Object.getOwnPropertyNames(init.headers).forEach(function(name) {\n        names.push(normalizeName(name))\n        xhr.setRequestHeader(name, normalizeValue(init.headers[name]))\n      })\n      request.headers.forEach(function(value, name) {\n        if (names.indexOf(name) === -1) {\n          xhr.setRequestHeader(name, value)\n        }\n      })\n    } else {\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n    }\n\n    if (request.signal) {\n      request.signal.addEventListener('abort', abortXhr)\n\n      xhr.onreadystatechange = function() {\n        // DONE (success or failure)\n        if (xhr.readyState === 4) {\n          request.signal.removeEventListener('abort', abortXhr)\n        }\n      }\n    }\n\n    xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n  })\n}\n\nfetch.polyfill = true\n\nif (!g.fetch) {\n  g.fetch = fetch\n  g.Headers = Headers\n  g.Request = Request\n  g.Response = Response\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA',\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.',\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import { Icon } from '../Icon'\nimport React from 'react'\n\nexport const CloseIcon = () => (\n  <Icon className=\"e-remove\" width={24} height={24}>\n    <title>Remove</title>\n    <g fill=\"#ffffff\" stroke=\"#ffffff\">\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"19\" y1=\"5\" x2=\"5\" y2=\"19\" />\n      <line fill=\"none\" stroke=\"#ffffff\" x1=\"19\" y1=\"19\" x2=\"5\" y2=\"5\" />\n    </g>\n  </Icon>\n)\n","import './Toast.scss'\nimport { CloseIcon } from './icons/Nucleo/CloseIcon'\nimport React from 'react'\n\ntype ToastProps = {\n  title: string\n  text: string\n  action?: {\n    text: string\n    url: string\n  }\n\n  onClose: () => void\n}\n\nexport const Toast = ({ title, text, action, onClose }: ToastProps) => (\n  <div className=\"Toast\">\n    <div className=\"Toast__header\">\n      <h2>{title}</h2>\n      <div className=\"Toast__header__close\" onClick={onClose}>\n        <CloseIcon />\n      </div>\n    </div>\n    <p>{text}</p>\n    {action && (\n      <a href={action.url} target=\"_blank\" rel=\"noopener noreferrer\">\n        {action.text}\n      </a>\n    )}\n  </div>\n)\n","import { APIError } from '../../types/Notification'\nimport React from 'react'\nimport { Toast } from '../Toast'\nimport { useTranslation } from 'react-i18next'\n\ntype APIErrorToastProps = {\n  notification: APIError\n\n  onClose: () => void\n}\n\nexport const APIErrorToast = ({\n  notification,\n  onClose,\n}: APIErrorToastProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <Toast\n      title={t('Error connecting to service')}\n      text={t(\n        \"Plaain wasn't able to connect to one of your services. Please report this incident. Status code: {{status}}. Message: {{message}}.\",\n        {\n          status: notification.status,\n          message: notification.message || t('None'),\n        },\n      )}\n      action={{\n        text: t('Report'),\n        url: 'https://github.com/jonhue/plaain/issues/new/choose',\n      }}\n      onClose={onClose}\n    />\n  )\n}\n","import { AuthenticationFailure } from '../../types/Notification'\nimport React from 'react'\nimport { Toast } from '../Toast'\nimport { buildProviderKindName } from '../../util'\nimport { useTranslation } from 'react-i18next'\n\ntype AuthenticationFailureToastProps = {\n  notification: AuthenticationFailure\n\n  onClose: () => void\n}\n\nexport const AuthenticationFailureToast = ({\n  notification,\n  onClose,\n}: AuthenticationFailureToastProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <Toast\n      title={t('Authentication unsuccessful')}\n      text={t(\n        \"Plaain wasn't able to authenticate with {{provider}}. Please report this error if it persists.\",\n        { provider: buildProviderKindName(t, notification.provider) },\n      )}\n      action={{\n        text: t('Report'),\n        url: 'https://github.com/jonhue/plaain/issues/new/choose',\n      }}\n      onClose={onClose}\n    />\n  )\n}\n","import { CannotFindFile } from '../../types/Notification'\nimport React from 'react'\nimport { Toast } from '../Toast'\nimport { buildProviderKindName } from '../../util'\nimport { useTranslation } from 'react-i18next'\n\ntype CannotFindFileToastProps = {\n  notification: CannotFindFile\n\n  onClose: () => void\n}\n\nexport const CannotFindFileToast = ({\n  notification,\n  onClose,\n}: CannotFindFileToastProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <Toast\n      title={t('Unable to locate file')}\n      text={t(\n        \"We weren't able to locate the file named {{name}} located in your {{provider}} provider.\",\n        {\n          name: notification.file.name,\n          provider: buildProviderKindName(t, notification.file.provider.kind),\n        },\n      )}\n      onClose={onClose}\n    />\n  )\n}\n","import { GenericError } from '../../types/Notification'\nimport React from 'react'\nimport { Toast } from '../Toast'\nimport { useTranslation } from 'react-i18next'\n\ntype GenericErrorToastProps = {\n  notification: GenericError\n\n  onClose: () => void\n}\n\nexport const GenericErrorToast = ({\n  notification,\n  onClose,\n}: GenericErrorToastProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <Toast\n      title={t('An error occurred')}\n      text={notification.error.message}\n      onClose={onClose}\n    />\n  )\n}\n","import { ProviderAlreadyExists } from '../../types/Notification'\nimport React from 'react'\nimport { Toast } from '../Toast'\nimport { buildProviderKindName } from '../../util'\nimport { useTranslation } from 'react-i18next'\n\ntype ProviderAlreadyExistsToastProps = {\n  notification: ProviderAlreadyExists\n\n  onClose: () => void\n}\n\nexport const ProviderAlreadyExistsToast = ({\n  notification,\n  onClose,\n}: ProviderAlreadyExistsToastProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <Toast\n      title={t('Provider already exists')}\n      text={t(\n        'You already linked your {{provider}} account {{name}} with Plaain. You can change your settings by clicking on the service in the authentication list on the settings page.',\n        {\n          name: notification.provider.name,\n          provider: buildProviderKindName(t, notification.provider.kind),\n        },\n      )}\n      onClose={onClose}\n    />\n  )\n}\n","import { Notification, NotificationKind } from '../../types/Notification'\nimport React, { useCallback } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { APIErrorToast } from './APIErrorToast'\nimport { AuthenticationFailureToast } from './AuthenticationFailureToast'\nimport { CannotFindFileToast } from './CannotFindFileToast'\nimport { GenericErrorToast } from './GenericErrorToast'\nimport { ProviderAlreadyExistsToast } from './ProviderAlreadyExistsToast'\nimport { RootState } from '../../store'\nimport { removeNotification } from '../../store/ui/actions'\n\nexport const NotificationsViewer = () => {\n  const dispatch = useDispatch()\n\n  const notifications = useSelector(\n    (state: RootState) => state.ui.notifications,\n  )\n\n  const handleClose = useCallback(\n    (notification: Notification) => () =>\n      dispatch(removeNotification(notification)),\n    [dispatch],\n  )\n\n  const renderNotification = useCallback(\n    (notification: Notification, index: number): JSX.Element => {\n      switch (notification.kind) {\n        case NotificationKind.APIError:\n          return (\n            <APIErrorToast\n              notification={notification}\n              onClose={handleClose(notification)}\n              key={index}\n            />\n          )\n        case NotificationKind.AuthenticationFailure:\n          return (\n            <AuthenticationFailureToast\n              notification={notification}\n              onClose={handleClose(notification)}\n              key={index}\n            />\n          )\n        case NotificationKind.CannotFindFile:\n          return (\n            <CannotFindFileToast\n              notification={notification}\n              onClose={handleClose(notification)}\n              key={index}\n            />\n          )\n        case NotificationKind.GenericError:\n          return (\n            <GenericErrorToast\n              notification={notification}\n              onClose={handleClose(notification)}\n              key={index}\n            />\n          )\n        case NotificationKind.ProviderAlreadyExists:\n          return (\n            <ProviderAlreadyExistsToast\n              notification={notification}\n              onClose={handleClose(notification)}\n              key={index}\n            />\n          )\n      }\n    },\n    [handleClose],\n  )\n\n  return notifications.length > 0 ? (\n    <div className=\"NotificationsViewer\">\n      {notifications.map(renderNotification)}\n    </div>\n  ) : null\n}\n","import { useEffect } from 'react'\nimport { useLocation } from 'react-router-dom'\n\nexport const ScrollToTop = () => {\n  const { pathname } = useLocation()\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [pathname])\n\n  return null\n}\n","import './Welcome.scss'\nimport { Backdrop } from '../components/Backdrop'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\nexport const Welcome = () => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"Welcome\">\n      <div className=\"Welcome__backdrop\">\n        <Backdrop url={process.env.PUBLIC_URL + '/welcome.png'} />\n      </div>\n      <div className=\"Welcome__wrapper\">\n        <h1>\n          {t('Your movies & TV shows.')}\n          <br />\n          {t('Anywhere.')}\n        </h1>\n        <div className=\"Welcome__details\">\n          <h3>\n            {t(\n              'Plaain lets you stream and maintain your media library from anywhere. No server needed, no fee required.',\n            )}\n          </h3>\n          <div className=\"Welcome__details__actions\">\n            <Link to=\"/app\" className=\"button primary\">\n              {t('Launch')}\n            </Link>\n            <a\n              href=\"https://github.com/jonhue/plaain#getting-started\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              className=\"button\"\n            >\n              {t('How it works')}\n            </a>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import React, { lazy } from 'react'\nimport { Route, BrowserRouter as Router, Routes } from 'react-router-dom'\nimport { Loading } from './Loading'\nimport { NotFound } from './NotFound'\nimport { NotificationsViewer } from '../components/notifications/NotificationsViewer'\nimport { RootState } from '../store'\nimport { ScrollToTop } from '../components/ScrollToTop'\nimport { Welcome } from './Welcome'\nimport { useAuthRedirect } from '../hooks/auth'\nimport { useSelector } from 'react-redux'\n\nconst App = lazy(() => import('./app'))\nconst Player = lazy(() => import('./Player'))\n\nconst Base = () => {\n  const isLoading = useSelector((state: RootState) => state.ui.isLoading)\n\n  useAuthRedirect()\n\n  return (\n    <div className=\"Base\">\n      {isLoading && <Loading />}\n      <Router basename=\"/plaain\">\n        <ScrollToTop />\n        <Routes>\n          <Route path=\"/\" element={<Welcome />} />\n          <Route path=\"app/*\" element={<App />} />\n          <Route path=\"player\" element={<Player />} />\n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n      </Router>\n\n      <NotificationsViewer />\n    </div>\n  )\n}\n\nexport default Base\n","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { PureComponent } from 'react'; // eslint-disable-line import/no-unresolved\n\nexport var PersistGate =\n/*#__PURE__*/\nfunction (_PureComponent) {\n  _inherits(PersistGate, _PureComponent);\n\n  function PersistGate() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, PersistGate);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(PersistGate)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      bootstrapped: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"_unsubscribe\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePersistorState\", function () {\n      var persistor = _this.props.persistor;\n\n      var _persistor$getState = persistor.getState(),\n          bootstrapped = _persistor$getState.bootstrapped;\n\n      if (bootstrapped) {\n        if (_this.props.onBeforeLift) {\n          Promise.resolve(_this.props.onBeforeLift()).finally(function () {\n            return _this.setState({\n              bootstrapped: true\n            });\n          });\n        } else {\n          _this.setState({\n            bootstrapped: true\n          });\n        }\n\n        _this._unsubscribe && _this._unsubscribe();\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(PersistGate, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._unsubscribe = this.props.persistor.subscribe(this.handlePersistorState);\n      this.handlePersistorState();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._unsubscribe && this._unsubscribe();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (process.env.NODE_ENV !== 'production') {\n        if (typeof this.props.children === 'function' && this.props.loading) console.error('redux-persist: PersistGate expects either a function child or loading prop, but not both. The loading prop will be ignored.');\n      }\n\n      if (typeof this.props.children === 'function') {\n        return this.props.children(this.state.bootstrapped);\n      }\n\n      return this.state.bootstrapped ? this.props.children : this.props.loading;\n    }\n  }]);\n\n  return PersistGate;\n}(PureComponent);\n\n_defineProperty(PersistGate, \"defaultProps\", {\n  children: null,\n  loading: null\n});","export var KEY_PREFIX = 'persist:';\nexport var FLUSH = 'persist/FLUSH';\nexport var REHYDRATE = 'persist/REHYDRATE';\nexport var PAUSE = 'persist/PAUSE';\nexport var PERSIST = 'persist/PERSIST';\nexport var PURGE = 'persist/PURGE';\nexport var REGISTER = 'persist/REGISTER';\nexport var DEFAULT_VERSION = -1;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/*\n  autoMergeLevel1: \n    - merges 1 level of substate\n    - skips substate if already modified\n*/\nexport default function autoMergeLevel1(inboundState, originalState, reducedState, _ref) {\n  var debug = _ref.debug;\n\n  var newState = _objectSpread({}, reducedState); // only rehydrate if inboundState exists and is an object\n\n\n  if (inboundState && _typeof(inboundState) === 'object') {\n    Object.keys(inboundState).forEach(function (key) {\n      // ignore _persist data\n      if (key === '_persist') return; // if reducer modifies substate, skip auto rehydration\n\n      if (originalState[key] !== reducedState[key]) {\n        if (process.env.NODE_ENV !== 'production' && debug) console.log('redux-persist/stateReconciler: sub state for key `%s` modified, skipping.', key);\n        return;\n      } // otherwise hard set the new value\n\n\n      newState[key] = inboundState[key];\n    });\n  }\n\n  if (process.env.NODE_ENV !== 'production' && debug && inboundState && _typeof(inboundState) === 'object') console.log(\"redux-persist/stateReconciler: rehydrated keys '\".concat(Object.keys(inboundState).join(', '), \"'\"));\n  return newState;\n}","import { KEY_PREFIX, REHYDRATE } from './constants';\n// @TODO remove once flow < 0.63 support is no longer required.\nexport default function createPersistoid(config) {\n  // defaults\n  var blacklist = config.blacklist || null;\n  var whitelist = config.whitelist || null;\n  var transforms = config.transforms || [];\n  var throttle = config.throttle || 0;\n  var storageKey = \"\".concat(config.keyPrefix !== undefined ? config.keyPrefix : KEY_PREFIX).concat(config.key);\n  var storage = config.storage;\n  var serialize;\n\n  if (config.serialize === false) {\n    serialize = function serialize(x) {\n      return x;\n    };\n  } else if (typeof config.serialize === 'function') {\n    serialize = config.serialize;\n  } else {\n    serialize = defaultSerialize;\n  }\n\n  var writeFailHandler = config.writeFailHandler || null; // initialize stateful values\n\n  var lastState = {};\n  var stagedState = {};\n  var keysToProcess = [];\n  var timeIterator = null;\n  var writePromise = null;\n\n  var update = function update(state) {\n    // add any changed keys to the queue\n    Object.keys(state).forEach(function (key) {\n      if (!passWhitelistBlacklist(key)) return; // is keyspace ignored? noop\n\n      if (lastState[key] === state[key]) return; // value unchanged? noop\n\n      if (keysToProcess.indexOf(key) !== -1) return; // is key already queued? noop\n\n      keysToProcess.push(key); // add key to queue\n    }); //if any key is missing in the new state which was present in the lastState,\n    //add it for processing too\n\n    Object.keys(lastState).forEach(function (key) {\n      if (state[key] === undefined && passWhitelistBlacklist(key) && keysToProcess.indexOf(key) === -1 && lastState[key] !== undefined) {\n        keysToProcess.push(key);\n      }\n    }); // start the time iterator if not running (read: throttle)\n\n    if (timeIterator === null) {\n      timeIterator = setInterval(processNextKey, throttle);\n    }\n\n    lastState = state;\n  };\n\n  function processNextKey() {\n    if (keysToProcess.length === 0) {\n      if (timeIterator) clearInterval(timeIterator);\n      timeIterator = null;\n      return;\n    }\n\n    var key = keysToProcess.shift();\n    var endState = transforms.reduce(function (subState, transformer) {\n      return transformer.in(subState, key, lastState);\n    }, lastState[key]);\n\n    if (endState !== undefined) {\n      try {\n        stagedState[key] = serialize(endState);\n      } catch (err) {\n        console.error('redux-persist/createPersistoid: error serializing state', err);\n      }\n    } else {\n      //if the endState is undefined, no need to persist the existing serialized content\n      delete stagedState[key];\n    }\n\n    if (keysToProcess.length === 0) {\n      writeStagedState();\n    }\n  }\n\n  function writeStagedState() {\n    // cleanup any removed keys just before write.\n    Object.keys(stagedState).forEach(function (key) {\n      if (lastState[key] === undefined) {\n        delete stagedState[key];\n      }\n    });\n    writePromise = storage.setItem(storageKey, serialize(stagedState)).catch(onWriteFail);\n  }\n\n  function passWhitelistBlacklist(key) {\n    if (whitelist && whitelist.indexOf(key) === -1 && key !== '_persist') return false;\n    if (blacklist && blacklist.indexOf(key) !== -1) return false;\n    return true;\n  }\n\n  function onWriteFail(err) {\n    // @TODO add fail handlers (typically storage full)\n    if (writeFailHandler) writeFailHandler(err);\n\n    if (err && process.env.NODE_ENV !== 'production') {\n      console.error('Error storing data', err);\n    }\n  }\n\n  var flush = function flush() {\n    while (keysToProcess.length !== 0) {\n      processNextKey();\n    }\n\n    return writePromise || Promise.resolve();\n  }; // return `persistoid`\n\n\n  return {\n    update: update,\n    flush: flush\n  };\n} // @NOTE in the future this may be exposed via config\n\nfunction defaultSerialize(data) {\n  return JSON.stringify(data);\n}","import { KEY_PREFIX } from './constants';\nexport default function getStoredState(config) {\n  var transforms = config.transforms || [];\n  var storageKey = \"\".concat(config.keyPrefix !== undefined ? config.keyPrefix : KEY_PREFIX).concat(config.key);\n  var storage = config.storage;\n  var debug = config.debug;\n  var deserialize;\n\n  if (config.deserialize === false) {\n    deserialize = function deserialize(x) {\n      return x;\n    };\n  } else if (typeof config.deserialize === 'function') {\n    deserialize = config.deserialize;\n  } else {\n    deserialize = defaultDeserialize;\n  }\n\n  return storage.getItem(storageKey).then(function (serialized) {\n    if (!serialized) return undefined;else {\n      try {\n        var state = {};\n        var rawState = deserialize(serialized);\n        Object.keys(rawState).forEach(function (key) {\n          state[key] = transforms.reduceRight(function (subState, transformer) {\n            return transformer.out(subState, key, rawState);\n          }, deserialize(rawState[key]));\n        });\n        return state;\n      } catch (err) {\n        if (process.env.NODE_ENV !== 'production' && debug) console.log(\"redux-persist/getStoredState: Error restoring data \".concat(serialized), err);\n        throw err;\n      }\n    }\n  });\n}\n\nfunction defaultDeserialize(serial) {\n  return JSON.parse(serial);\n}","import { KEY_PREFIX } from './constants';\nexport default function purgeStoredState(config) {\n  var storage = config.storage;\n  var storageKey = \"\".concat(config.keyPrefix !== undefined ? config.keyPrefix : KEY_PREFIX).concat(config.key);\n  return storage.removeItem(storageKey, warnIfRemoveError);\n}\n\nfunction warnIfRemoveError(err) {\n  if (err && process.env.NODE_ENV !== 'production') {\n    console.error('redux-persist/purgeStoredState: Error purging data stored state', err);\n  }\n}","function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { FLUSH, PAUSE, PERSIST, PURGE, REHYDRATE, DEFAULT_VERSION } from './constants';\nimport autoMergeLevel1 from './stateReconciler/autoMergeLevel1';\nimport createPersistoid from './createPersistoid';\nimport defaultGetStoredState from './getStoredState';\nimport purgeStoredState from './purgeStoredState';\nvar DEFAULT_TIMEOUT = 5000;\n/*\n  @TODO add validation / handling for:\n  - persisting a reducer which has nested _persist\n  - handling actions that fire before reydrate is called\n*/\n\nexport default function persistReducer(config, baseReducer) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (!config) throw new Error('config is required for persistReducer');\n    if (!config.key) throw new Error('key is required in persistor config');\n    if (!config.storage) throw new Error(\"redux-persist: config.storage is required. Try using one of the provided storage engines `import storage from 'redux-persist/lib/storage'`\");\n  }\n\n  var version = config.version !== undefined ? config.version : DEFAULT_VERSION;\n  var debug = config.debug || false;\n  var stateReconciler = config.stateReconciler === undefined ? autoMergeLevel1 : config.stateReconciler;\n  var getStoredState = config.getStoredState || defaultGetStoredState;\n  var timeout = config.timeout !== undefined ? config.timeout : DEFAULT_TIMEOUT;\n  var _persistoid = null;\n  var _purge = false;\n  var _paused = true;\n\n  var conditionalUpdate = function conditionalUpdate(state) {\n    // update the persistoid only if we are rehydrated and not paused\n    state._persist.rehydrated && _persistoid && !_paused && _persistoid.update(state);\n    return state;\n  };\n\n  return function (state, action) {\n    var _ref = state || {},\n        _persist = _ref._persist,\n        rest = _objectWithoutProperties(_ref, [\"_persist\"]); // $FlowIgnore need to update State type\n\n\n    var restState = rest;\n\n    if (action.type === PERSIST) {\n      var _sealed = false;\n\n      var _rehydrate = function _rehydrate(payload, err) {\n        // dev warning if we are already sealed\n        if (process.env.NODE_ENV !== 'production' && _sealed) console.error(\"redux-persist: rehydrate for \\\"\".concat(config.key, \"\\\" called after timeout.\"), payload, err); // only rehydrate if we are not already sealed\n\n        if (!_sealed) {\n          action.rehydrate(config.key, payload, err);\n          _sealed = true;\n        }\n      };\n\n      timeout && setTimeout(function () {\n        !_sealed && _rehydrate(undefined, new Error(\"redux-persist: persist timed out for persist key \\\"\".concat(config.key, \"\\\"\")));\n      }, timeout); // @NOTE PERSIST resumes if paused.\n\n      _paused = false; // @NOTE only ever create persistoid once, ensure we call it at least once, even if _persist has already been set\n\n      if (!_persistoid) _persistoid = createPersistoid(config); // @NOTE PERSIST can be called multiple times, noop after the first\n\n      if (_persist) {\n        // We still need to call the base reducer because there might be nested\n        // uses of persistReducer which need to be aware of the PERSIST action\n        return _objectSpread({}, baseReducer(restState, action), {\n          _persist: _persist\n        });\n      }\n\n      if (typeof action.rehydrate !== 'function' || typeof action.register !== 'function') throw new Error('redux-persist: either rehydrate or register is not a function on the PERSIST action. This can happen if the action is being replayed. This is an unexplored use case, please open an issue and we will figure out a resolution.');\n      action.register(config.key);\n      getStoredState(config).then(function (restoredState) {\n        var migrate = config.migrate || function (s, v) {\n          return Promise.resolve(s);\n        };\n\n        migrate(restoredState, version).then(function (migratedState) {\n          _rehydrate(migratedState);\n        }, function (migrateErr) {\n          if (process.env.NODE_ENV !== 'production' && migrateErr) console.error('redux-persist: migration error', migrateErr);\n\n          _rehydrate(undefined, migrateErr);\n        });\n      }, function (err) {\n        _rehydrate(undefined, err);\n      });\n      return _objectSpread({}, baseReducer(restState, action), {\n        _persist: {\n          version: version,\n          rehydrated: false\n        }\n      });\n    } else if (action.type === PURGE) {\n      _purge = true;\n      action.result(purgeStoredState(config));\n      return _objectSpread({}, baseReducer(restState, action), {\n        _persist: _persist\n      });\n    } else if (action.type === FLUSH) {\n      action.result(_persistoid && _persistoid.flush());\n      return _objectSpread({}, baseReducer(restState, action), {\n        _persist: _persist\n      });\n    } else if (action.type === PAUSE) {\n      _paused = true;\n    } else if (action.type === REHYDRATE) {\n      // noop on restState if purging\n      if (_purge) return _objectSpread({}, restState, {\n        _persist: _objectSpread({}, _persist, {\n          rehydrated: true\n        }) // @NOTE if key does not match, will continue to default else below\n\n      });\n\n      if (action.key === config.key) {\n        var reducedState = baseReducer(restState, action);\n        var inboundState = action.payload; // only reconcile state if stateReconciler and inboundState are both defined\n\n        var reconciledRest = stateReconciler !== false && inboundState !== undefined ? stateReconciler(inboundState, state, reducedState, config) : reducedState;\n\n        var _newState = _objectSpread({}, reconciledRest, {\n          _persist: _objectSpread({}, _persist, {\n            rehydrated: true\n          })\n        });\n\n        return conditionalUpdate(_newState);\n      }\n    } // if we have not already handled PERSIST, straight passthrough\n\n\n    if (!_persist) return baseReducer(state, action); // run base reducer:\n    // is state modified ? return original : return updated\n\n    var newState = baseReducer(restState, action);\n    if (newState === restState) return state;\n    return conditionalUpdate(_objectSpread({}, newState, {\n      _persist: _persist\n    }));\n  };\n}","import _objectSpread from '@babel/runtime/helpers/esm/objectSpread2';\n\n/**\n * Adapted from React: https://github.com/facebook/react/blob/master/packages/shared/formatProdErrorMessage.js\n *\n * Do not require this module directly! Use normal throw error calls. These messages will be replaced with error codes\n * during build.\n * @param {number} code\n */\nfunction formatProdErrorMessage(code) {\n  return \"Minified Redux error #\" + code + \"; visit https://redux.js.org/Errors?code=\" + code + \" for the full message or \" + 'use the non-minified dev environment for full errors. ';\n}\n\n// Inlined version of the `symbol-observable` polyfill\nvar $$observable = (function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n})();\n\n/**\n * These are private action types reserved by Redux.\n * For any unknown actions, you must return the current state.\n * If the current state is undefined, you must return the initial state.\n * Do not reference these action types directly in your code.\n */\nvar randomString = function randomString() {\n  return Math.random().toString(36).substring(7).split('').join('.');\n};\n\nvar ActionTypes = {\n  INIT: \"@@redux/INIT\" + randomString(),\n  REPLACE: \"@@redux/REPLACE\" + randomString(),\n  PROBE_UNKNOWN_ACTION: function PROBE_UNKNOWN_ACTION() {\n    return \"@@redux/PROBE_UNKNOWN_ACTION\" + randomString();\n  }\n};\n\n/**\n * @param {any} obj The object to inspect.\n * @returns {boolean} True if the argument appears to be a plain object.\n */\nfunction isPlainObject(obj) {\n  if (typeof obj !== 'object' || obj === null) return false;\n  var proto = obj;\n\n  while (Object.getPrototypeOf(proto) !== null) {\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return Object.getPrototypeOf(obj) === proto;\n}\n\n// Inlined / shortened version of `kindOf` from https://github.com/jonschlinkert/kind-of\nfunction miniKindOf(val) {\n  if (val === void 0) return 'undefined';\n  if (val === null) return 'null';\n  var type = typeof val;\n\n  switch (type) {\n    case 'boolean':\n    case 'string':\n    case 'number':\n    case 'symbol':\n    case 'function':\n      {\n        return type;\n      }\n  }\n\n  if (Array.isArray(val)) return 'array';\n  if (isDate(val)) return 'date';\n  if (isError(val)) return 'error';\n  var constructorName = ctorName(val);\n\n  switch (constructorName) {\n    case 'Symbol':\n    case 'Promise':\n    case 'WeakMap':\n    case 'WeakSet':\n    case 'Map':\n    case 'Set':\n      return constructorName;\n  } // other\n\n\n  return type.slice(8, -1).toLowerCase().replace(/\\s/g, '');\n}\n\nfunction ctorName(val) {\n  return typeof val.constructor === 'function' ? val.constructor.name : null;\n}\n\nfunction isError(val) {\n  return val instanceof Error || typeof val.message === 'string' && val.constructor && typeof val.constructor.stackTraceLimit === 'number';\n}\n\nfunction isDate(val) {\n  if (val instanceof Date) return true;\n  return typeof val.toDateString === 'function' && typeof val.getDate === 'function' && typeof val.setDate === 'function';\n}\n\nfunction kindOf(val) {\n  var typeOfVal = typeof val;\n\n  if (process.env.NODE_ENV !== 'production') {\n    typeOfVal = miniKindOf(val);\n  }\n\n  return typeOfVal;\n}\n\n/**\n * @deprecated\n *\n * **We recommend using the `configureStore` method\n * of the `@reduxjs/toolkit` package**, which replaces `createStore`.\n *\n * Redux Toolkit is our recommended approach for writing Redux logic today,\n * including store setup, reducers, data fetching, and more.\n *\n * **For more details, please read this Redux docs page:**\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * `configureStore` from Redux Toolkit is an improved version of `createStore` that\n * simplifies setup and helps avoid common bugs.\n *\n * You should not be using the `redux` core package by itself today, except for learning purposes.\n * The `createStore` method from the core `redux` package will not be removed, but we encourage\n * all users to migrate to using Redux Toolkit for all Redux code.\n *\n * If you want to use `createStore` without this visual deprecation warning, use\n * the `legacy_createStore` import instead:\n *\n * `import { legacy_createStore as createStore} from 'redux'`\n *\n */\n\nfunction createStore(reducer, preloadedState, enhancer) {\n  var _ref2;\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'function' || typeof enhancer === 'function' && typeof arguments[3] === 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(0) : 'It looks like you are passing several store enhancers to ' + 'createStore(). This is not supported. Instead, compose them ' + 'together to a single function. See https://redux.js.org/tutorials/fundamentals/part-4-store#creating-a-store-with-enhancers for an example.');\n  }\n\n  if (typeof preloadedState === 'function' && typeof enhancer === 'undefined') {\n    enhancer = preloadedState;\n    preloadedState = undefined;\n  }\n\n  if (typeof enhancer !== 'undefined') {\n    if (typeof enhancer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(1) : \"Expected the enhancer to be a function. Instead, received: '\" + kindOf(enhancer) + \"'\");\n    }\n\n    return enhancer(createStore)(reducer, preloadedState);\n  }\n\n  if (typeof reducer !== 'function') {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(2) : \"Expected the root reducer to be a function. Instead, received: '\" + kindOf(reducer) + \"'\");\n  }\n\n  var currentReducer = reducer;\n  var currentState = preloadedState;\n  var currentListeners = [];\n  var nextListeners = currentListeners;\n  var isDispatching = false;\n  /**\n   * This makes a shallow copy of currentListeners so we can use\n   * nextListeners as a temporary list while dispatching.\n   *\n   * This prevents any bugs around consumers calling\n   * subscribe/unsubscribe in the middle of a dispatch.\n   */\n\n  function ensureCanMutateNextListeners() {\n    if (nextListeners === currentListeners) {\n      nextListeners = currentListeners.slice();\n    }\n  }\n  /**\n   * Reads the state tree managed by the store.\n   *\n   * @returns {any} The current state tree of your application.\n   */\n\n\n  function getState() {\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(3) : 'You may not call store.getState() while the reducer is executing. ' + 'The reducer has already received the state as an argument. ' + 'Pass it down from the top reducer instead of reading it from the store.');\n    }\n\n    return currentState;\n  }\n  /**\n   * Adds a change listener. It will be called any time an action is dispatched,\n   * and some part of the state tree may potentially have changed. You may then\n   * call `getState()` to read the current state tree inside the callback.\n   *\n   * You may call `dispatch()` from a change listener, with the following\n   * caveats:\n   *\n   * 1. The subscriptions are snapshotted just before every `dispatch()` call.\n   * If you subscribe or unsubscribe while the listeners are being invoked, this\n   * will not have any effect on the `dispatch()` that is currently in progress.\n   * However, the next `dispatch()` call, whether nested or not, will use a more\n   * recent snapshot of the subscription list.\n   *\n   * 2. The listener should not expect to see all state changes, as the state\n   * might have been updated multiple times during a nested `dispatch()` before\n   * the listener is called. It is, however, guaranteed that all subscribers\n   * registered before the `dispatch()` started will be called with the latest\n   * state by the time it exits.\n   *\n   * @param {Function} listener A callback to be invoked on every dispatch.\n   * @returns {Function} A function to remove this change listener.\n   */\n\n\n  function subscribe(listener) {\n    if (typeof listener !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(4) : \"Expected the listener to be a function. Instead, received: '\" + kindOf(listener) + \"'\");\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(5) : 'You may not call store.subscribe() while the reducer is executing. ' + 'If you would like to be notified after the store has been updated, subscribe from a ' + 'component and invoke store.getState() in the callback to access the latest state. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n    }\n\n    var isSubscribed = true;\n    ensureCanMutateNextListeners();\n    nextListeners.push(listener);\n    return function unsubscribe() {\n      if (!isSubscribed) {\n        return;\n      }\n\n      if (isDispatching) {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(6) : 'You may not unsubscribe from a store listener while the reducer is executing. ' + 'See https://redux.js.org/api/store#subscribelistener for more details.');\n      }\n\n      isSubscribed = false;\n      ensureCanMutateNextListeners();\n      var index = nextListeners.indexOf(listener);\n      nextListeners.splice(index, 1);\n      currentListeners = null;\n    };\n  }\n  /**\n   * Dispatches an action. It is the only way to trigger a state change.\n   *\n   * The `reducer` function, used to create the store, will be called with the\n   * current state tree and the given `action`. Its return value will\n   * be considered the **next** state of the tree, and the change listeners\n   * will be notified.\n   *\n   * The base implementation only supports plain object actions. If you want to\n   * dispatch a Promise, an Observable, a thunk, or something else, you need to\n   * wrap your store creating function into the corresponding middleware. For\n   * example, see the documentation for the `redux-thunk` package. Even the\n   * middleware will eventually dispatch plain object actions using this method.\n   *\n   * @param {Object} action A plain object representing “what changed”. It is\n   * a good idea to keep actions serializable so you can record and replay user\n   * sessions, or use the time travelling `redux-devtools`. An action must have\n   * a `type` property which may not be `undefined`. It is a good idea to use\n   * string constants for action types.\n   *\n   * @returns {Object} For convenience, the same action object you dispatched.\n   *\n   * Note that, if you use a custom middleware, it may wrap `dispatch()` to\n   * return something else (for example, a Promise you can await).\n   */\n\n\n  function dispatch(action) {\n    if (!isPlainObject(action)) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(7) : \"Actions must be plain objects. Instead, the actual type was: '\" + kindOf(action) + \"'. You may need to add middleware to your store setup to handle dispatching other values, such as 'redux-thunk' to handle dispatching functions. See https://redux.js.org/tutorials/fundamentals/part-4-store#middleware and https://redux.js.org/tutorials/fundamentals/part-6-async-logic#using-the-redux-thunk-middleware for examples.\");\n    }\n\n    if (typeof action.type === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(8) : 'Actions may not have an undefined \"type\" property. You may have misspelled an action type string constant.');\n    }\n\n    if (isDispatching) {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(9) : 'Reducers may not dispatch actions.');\n    }\n\n    try {\n      isDispatching = true;\n      currentState = currentReducer(currentState, action);\n    } finally {\n      isDispatching = false;\n    }\n\n    var listeners = currentListeners = nextListeners;\n\n    for (var i = 0; i < listeners.length; i++) {\n      var listener = listeners[i];\n      listener();\n    }\n\n    return action;\n  }\n  /**\n   * Replaces the reducer currently used by the store to calculate the state.\n   *\n   * You might need this if your app implements code splitting and you want to\n   * load some of the reducers dynamically. You might also need this if you\n   * implement a hot reloading mechanism for Redux.\n   *\n   * @param {Function} nextReducer The reducer for the store to use instead.\n   * @returns {void}\n   */\n\n\n  function replaceReducer(nextReducer) {\n    if (typeof nextReducer !== 'function') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(10) : \"Expected the nextReducer to be a function. Instead, received: '\" + kindOf(nextReducer));\n    }\n\n    currentReducer = nextReducer; // This action has a similiar effect to ActionTypes.INIT.\n    // Any reducers that existed in both the new and old rootReducer\n    // will receive the previous state. This effectively populates\n    // the new state tree with any relevant data from the old one.\n\n    dispatch({\n      type: ActionTypes.REPLACE\n    });\n  }\n  /**\n   * Interoperability point for observable/reactive libraries.\n   * @returns {observable} A minimal observable of state changes.\n   * For more information, see the observable proposal:\n   * https://github.com/tc39/proposal-observable\n   */\n\n\n  function observable() {\n    var _ref;\n\n    var outerSubscribe = subscribe;\n    return _ref = {\n      /**\n       * The minimal observable subscription method.\n       * @param {Object} observer Any object that can be used as an observer.\n       * The observer object should have a `next` method.\n       * @returns {subscription} An object with an `unsubscribe` method that can\n       * be used to unsubscribe the observable from the store, and prevent further\n       * emission of values from the observable.\n       */\n      subscribe: function subscribe(observer) {\n        if (typeof observer !== 'object' || observer === null) {\n          throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(11) : \"Expected the observer to be an object. Instead, received: '\" + kindOf(observer) + \"'\");\n        }\n\n        function observeState() {\n          if (observer.next) {\n            observer.next(getState());\n          }\n        }\n\n        observeState();\n        var unsubscribe = outerSubscribe(observeState);\n        return {\n          unsubscribe: unsubscribe\n        };\n      }\n    }, _ref[$$observable] = function () {\n      return this;\n    }, _ref;\n  } // When a store is created, an \"INIT\" action is dispatched so that every\n  // reducer returns their initial state. This effectively populates\n  // the initial state tree.\n\n\n  dispatch({\n    type: ActionTypes.INIT\n  });\n  return _ref2 = {\n    dispatch: dispatch,\n    subscribe: subscribe,\n    getState: getState,\n    replaceReducer: replaceReducer\n  }, _ref2[$$observable] = observable, _ref2;\n}\n/**\n * Creates a Redux store that holds the state tree.\n *\n * **We recommend using `configureStore` from the\n * `@reduxjs/toolkit` package**, which replaces `createStore`:\n * **https://redux.js.org/introduction/why-rtk-is-redux-today**\n *\n * The only way to change the data in the store is to call `dispatch()` on it.\n *\n * There should only be a single store in your app. To specify how different\n * parts of the state tree respond to actions, you may combine several reducers\n * into a single reducer function by using `combineReducers`.\n *\n * @param {Function} reducer A function that returns the next state tree, given\n * the current state tree and the action to handle.\n *\n * @param {any} [preloadedState] The initial state. You may optionally specify it\n * to hydrate the state from the server in universal apps, or to restore a\n * previously serialized user session.\n * If you use `combineReducers` to produce the root reducer function, this must be\n * an object with the same shape as `combineReducers` keys.\n *\n * @param {Function} [enhancer] The store enhancer. You may optionally specify it\n * to enhance the store with third-party capabilities such as middleware,\n * time travel, persistence, etc. The only store enhancer that ships with Redux\n * is `applyMiddleware()`.\n *\n * @returns {Store} A Redux store that lets you read the state, dispatch actions\n * and subscribe to changes.\n */\n\nvar legacy_createStore = createStore;\n\n/**\n * Prints a warning in the console if it exists.\n *\n * @param {String} message The warning message.\n * @returns {void}\n */\nfunction warning(message) {\n  /* eslint-disable no-console */\n  if (typeof console !== 'undefined' && typeof console.error === 'function') {\n    console.error(message);\n  }\n  /* eslint-enable no-console */\n\n\n  try {\n    // This error was thrown as a convenience so that if you enable\n    // \"break on all exceptions\" in your console,\n    // it would pause the execution at this line.\n    throw new Error(message);\n  } catch (e) {} // eslint-disable-line no-empty\n\n}\n\nfunction getUnexpectedStateShapeWarningMessage(inputState, reducers, action, unexpectedKeyCache) {\n  var reducerKeys = Object.keys(reducers);\n  var argumentName = action && action.type === ActionTypes.INIT ? 'preloadedState argument passed to createStore' : 'previous state received by the reducer';\n\n  if (reducerKeys.length === 0) {\n    return 'Store does not have a valid reducer. Make sure the argument passed ' + 'to combineReducers is an object whose values are reducers.';\n  }\n\n  if (!isPlainObject(inputState)) {\n    return \"The \" + argumentName + \" has unexpected type of \\\"\" + kindOf(inputState) + \"\\\". Expected argument to be an object with the following \" + (\"keys: \\\"\" + reducerKeys.join('\", \"') + \"\\\"\");\n  }\n\n  var unexpectedKeys = Object.keys(inputState).filter(function (key) {\n    return !reducers.hasOwnProperty(key) && !unexpectedKeyCache[key];\n  });\n  unexpectedKeys.forEach(function (key) {\n    unexpectedKeyCache[key] = true;\n  });\n  if (action && action.type === ActionTypes.REPLACE) return;\n\n  if (unexpectedKeys.length > 0) {\n    return \"Unexpected \" + (unexpectedKeys.length > 1 ? 'keys' : 'key') + \" \" + (\"\\\"\" + unexpectedKeys.join('\", \"') + \"\\\" found in \" + argumentName + \". \") + \"Expected to find one of the known reducer keys instead: \" + (\"\\\"\" + reducerKeys.join('\", \"') + \"\\\". Unexpected keys will be ignored.\");\n  }\n}\n\nfunction assertReducerShape(reducers) {\n  Object.keys(reducers).forEach(function (key) {\n    var reducer = reducers[key];\n    var initialState = reducer(undefined, {\n      type: ActionTypes.INIT\n    });\n\n    if (typeof initialState === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(12) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined during initialization. \" + \"If the state passed to the reducer is undefined, you must \" + \"explicitly return the initial state. The initial state may \" + \"not be undefined. If you don't want to set a value for this reducer, \" + \"you can use null instead of undefined.\");\n    }\n\n    if (typeof reducer(undefined, {\n      type: ActionTypes.PROBE_UNKNOWN_ACTION()\n    }) === 'undefined') {\n      throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(13) : \"The slice reducer for key \\\"\" + key + \"\\\" returned undefined when probed with a random type. \" + (\"Don't try to handle '\" + ActionTypes.INIT + \"' or other actions in \\\"redux/*\\\" \") + \"namespace. They are considered private. Instead, you must return the \" + \"current state for any unknown actions, unless it is undefined, \" + \"in which case you must return the initial state, regardless of the \" + \"action type. The initial state may not be undefined, but can be null.\");\n    }\n  });\n}\n/**\n * Turns an object whose values are different reducer functions, into a single\n * reducer function. It will call every child reducer, and gather their results\n * into a single state object, whose keys correspond to the keys of the passed\n * reducer functions.\n *\n * @param {Object} reducers An object whose values correspond to different\n * reducer functions that need to be combined into one. One handy way to obtain\n * it is to use ES6 `import * as reducers` syntax. The reducers may never return\n * undefined for any action. Instead, they should return their initial state\n * if the state passed to them was undefined, and the current state for any\n * unrecognized action.\n *\n * @returns {Function} A reducer function that invokes every reducer inside the\n * passed object, and builds a state object with the same shape.\n */\n\n\nfunction combineReducers(reducers) {\n  var reducerKeys = Object.keys(reducers);\n  var finalReducers = {};\n\n  for (var i = 0; i < reducerKeys.length; i++) {\n    var key = reducerKeys[i];\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof reducers[key] === 'undefined') {\n        warning(\"No reducer provided for key \\\"\" + key + \"\\\"\");\n      }\n    }\n\n    if (typeof reducers[key] === 'function') {\n      finalReducers[key] = reducers[key];\n    }\n  }\n\n  var finalReducerKeys = Object.keys(finalReducers); // This is used to make sure we don't warn about the same\n  // keys multiple times.\n\n  var unexpectedKeyCache;\n\n  if (process.env.NODE_ENV !== 'production') {\n    unexpectedKeyCache = {};\n  }\n\n  var shapeAssertionError;\n\n  try {\n    assertReducerShape(finalReducers);\n  } catch (e) {\n    shapeAssertionError = e;\n  }\n\n  return function combination(state, action) {\n    if (state === void 0) {\n      state = {};\n    }\n\n    if (shapeAssertionError) {\n      throw shapeAssertionError;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      var warningMessage = getUnexpectedStateShapeWarningMessage(state, finalReducers, action, unexpectedKeyCache);\n\n      if (warningMessage) {\n        warning(warningMessage);\n      }\n    }\n\n    var hasChanged = false;\n    var nextState = {};\n\n    for (var _i = 0; _i < finalReducerKeys.length; _i++) {\n      var _key = finalReducerKeys[_i];\n      var reducer = finalReducers[_key];\n      var previousStateForKey = state[_key];\n      var nextStateForKey = reducer(previousStateForKey, action);\n\n      if (typeof nextStateForKey === 'undefined') {\n        var actionType = action && action.type;\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(14) : \"When called with an action of type \" + (actionType ? \"\\\"\" + String(actionType) + \"\\\"\" : '(unknown type)') + \", the slice reducer for key \\\"\" + _key + \"\\\" returned undefined. \" + \"To ignore an action, you must explicitly return the previous state. \" + \"If you want this reducer to hold no value, you can return null instead of undefined.\");\n      }\n\n      nextState[_key] = nextStateForKey;\n      hasChanged = hasChanged || nextStateForKey !== previousStateForKey;\n    }\n\n    hasChanged = hasChanged || finalReducerKeys.length !== Object.keys(state).length;\n    return hasChanged ? nextState : state;\n  };\n}\n\nfunction bindActionCreator(actionCreator, dispatch) {\n  return function () {\n    return dispatch(actionCreator.apply(this, arguments));\n  };\n}\n/**\n * Turns an object whose values are action creators, into an object with the\n * same keys, but with every function wrapped into a `dispatch` call so they\n * may be invoked directly. This is just a convenience method, as you can call\n * `store.dispatch(MyActionCreators.doSomething())` yourself just fine.\n *\n * For convenience, you can also pass an action creator as the first argument,\n * and get a dispatch wrapped function in return.\n *\n * @param {Function|Object} actionCreators An object whose values are action\n * creator functions. One handy way to obtain it is to use ES6 `import * as`\n * syntax. You may also pass a single function.\n *\n * @param {Function} dispatch The `dispatch` function available on your Redux\n * store.\n *\n * @returns {Function|Object} The object mimicking the original object, but with\n * every action creator wrapped into the `dispatch` call. If you passed a\n * function as `actionCreators`, the return value will also be a single\n * function.\n */\n\n\nfunction bindActionCreators(actionCreators, dispatch) {\n  if (typeof actionCreators === 'function') {\n    return bindActionCreator(actionCreators, dispatch);\n  }\n\n  if (typeof actionCreators !== 'object' || actionCreators === null) {\n    throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(16) : \"bindActionCreators expected an object or a function, but instead received: '\" + kindOf(actionCreators) + \"'. \" + \"Did you write \\\"import ActionCreators from\\\" instead of \\\"import * as ActionCreators from\\\"?\");\n  }\n\n  var boundActionCreators = {};\n\n  for (var key in actionCreators) {\n    var actionCreator = actionCreators[key];\n\n    if (typeof actionCreator === 'function') {\n      boundActionCreators[key] = bindActionCreator(actionCreator, dispatch);\n    }\n  }\n\n  return boundActionCreators;\n}\n\n/**\n * Composes single-argument functions from right to left. The rightmost\n * function can take multiple arguments as it provides the signature for\n * the resulting composite function.\n *\n * @param {...Function} funcs The functions to compose.\n * @returns {Function} A function obtained by composing the argument functions\n * from right to left. For example, compose(f, g, h) is identical to doing\n * (...args) => f(g(h(...args))).\n */\nfunction compose() {\n  for (var _len = arguments.length, funcs = new Array(_len), _key = 0; _key < _len; _key++) {\n    funcs[_key] = arguments[_key];\n  }\n\n  if (funcs.length === 0) {\n    return function (arg) {\n      return arg;\n    };\n  }\n\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n\n  return funcs.reduce(function (a, b) {\n    return function () {\n      return a(b.apply(void 0, arguments));\n    };\n  });\n}\n\n/**\n * Creates a store enhancer that applies middleware to the dispatch method\n * of the Redux store. This is handy for a variety of tasks, such as expressing\n * asynchronous actions in a concise manner, or logging every action payload.\n *\n * See `redux-thunk` package as an example of the Redux middleware.\n *\n * Because middleware is potentially asynchronous, this should be the first\n * store enhancer in the composition chain.\n *\n * Note that each middleware will be given the `dispatch` and `getState` functions\n * as named arguments.\n *\n * @param {...Function} middlewares The middleware chain to be applied.\n * @returns {Function} A store enhancer applying the middleware.\n */\n\nfunction applyMiddleware() {\n  for (var _len = arguments.length, middlewares = new Array(_len), _key = 0; _key < _len; _key++) {\n    middlewares[_key] = arguments[_key];\n  }\n\n  return function (createStore) {\n    return function () {\n      var store = createStore.apply(void 0, arguments);\n\n      var _dispatch = function dispatch() {\n        throw new Error(process.env.NODE_ENV === \"production\" ? formatProdErrorMessage(15) : 'Dispatching while constructing your middleware is not allowed. ' + 'Other middleware would not be applied to this dispatch.');\n      };\n\n      var middlewareAPI = {\n        getState: store.getState,\n        dispatch: function dispatch() {\n          return _dispatch.apply(void 0, arguments);\n        }\n      };\n      var chain = middlewares.map(function (middleware) {\n        return middleware(middlewareAPI);\n      });\n      _dispatch = compose.apply(void 0, chain)(store.dispatch);\n      return _objectSpread(_objectSpread({}, store), {}, {\n        dispatch: _dispatch\n      });\n    };\n  };\n}\n\nexport { ActionTypes as __DO_NOT_USE__ActionTypes, applyMiddleware, bindActionCreators, combineReducers, compose, createStore, legacy_createStore };\n","function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { createStore } from 'redux';\nimport { FLUSH, PAUSE, PERSIST, PURGE, REGISTER, REHYDRATE } from './constants';\nvar initialState = {\n  registry: [],\n  bootstrapped: false\n};\n\nvar persistorReducer = function persistorReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case REGISTER:\n      return _objectSpread({}, state, {\n        registry: [].concat(_toConsumableArray(state.registry), [action.key])\n      });\n\n    case REHYDRATE:\n      var firstIndex = state.registry.indexOf(action.key);\n\n      var registry = _toConsumableArray(state.registry);\n\n      registry.splice(firstIndex, 1);\n      return _objectSpread({}, state, {\n        registry: registry,\n        bootstrapped: registry.length === 0\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default function persistStore(store, options, cb) {\n  // help catch incorrect usage of passing PersistConfig in as PersistorOptions\n  if (process.env.NODE_ENV !== 'production') {\n    var optionsToTest = options || {};\n    var bannedKeys = ['blacklist', 'whitelist', 'transforms', 'storage', 'keyPrefix', 'migrate'];\n    bannedKeys.forEach(function (k) {\n      if (!!optionsToTest[k]) console.error(\"redux-persist: invalid option passed to persistStore: \\\"\".concat(k, \"\\\". You may be incorrectly passing persistConfig into persistStore, whereas it should be passed into persistReducer.\"));\n    });\n  }\n\n  var boostrappedCb = cb || false;\n\n  var _pStore = createStore(persistorReducer, initialState, options && options.enhancer ? options.enhancer : undefined);\n\n  var register = function register(key) {\n    _pStore.dispatch({\n      type: REGISTER,\n      key: key\n    });\n  };\n\n  var rehydrate = function rehydrate(key, payload, err) {\n    var rehydrateAction = {\n      type: REHYDRATE,\n      payload: payload,\n      err: err,\n      key: key // dispatch to `store` to rehydrate and `persistor` to track result\n\n    };\n    store.dispatch(rehydrateAction);\n\n    _pStore.dispatch(rehydrateAction);\n\n    if (boostrappedCb && persistor.getState().bootstrapped) {\n      boostrappedCb();\n      boostrappedCb = false;\n    }\n  };\n\n  var persistor = _objectSpread({}, _pStore, {\n    purge: function purge() {\n      var results = [];\n      store.dispatch({\n        type: PURGE,\n        result: function result(purgeResult) {\n          results.push(purgeResult);\n        }\n      });\n      return Promise.all(results);\n    },\n    flush: function flush() {\n      var results = [];\n      store.dispatch({\n        type: FLUSH,\n        result: function result(flushResult) {\n          results.push(flushResult);\n        }\n      });\n      return Promise.all(results);\n    },\n    pause: function pause() {\n      store.dispatch({\n        type: PAUSE\n      });\n    },\n    persist: function persist() {\n      store.dispatch({\n        type: PERSIST,\n        register: register,\n        rehydrate: rehydrate\n      });\n    }\n  });\n\n  if (!(options && options.manualPersist)) {\n    persistor.persist();\n  }\n\n  return persistor;\n}","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import {\n  AuthActionTypes,\n  AuthState,\n  EXPECT_LOGIN_REDIRECT,\n  EXPECT_SETUP_REDIRECT,\n  HANDLED_REDIRECT,\n  REMOVE_PROVIDER,\n  RedirectCacheOrigin,\n  UPDATE_PROVIDER,\n  UPDATE_VERSION,\n} from './types'\nimport { VERSION } from '../../constants'\n\nconst initialState: AuthState = {\n  providers: {},\n  redirectCache: undefined,\n  version: VERSION,\n}\n\nexport default (state = initialState, action: AuthActionTypes): AuthState => {\n  switch (action.type) {\n    case EXPECT_LOGIN_REDIRECT:\n      return {\n        ...state,\n        redirectCache: {\n          origin: RedirectCacheOrigin.Login,\n          provider: action.payload.provider,\n        },\n      }\n    case EXPECT_SETUP_REDIRECT:\n      return {\n        ...state,\n        redirectCache: {\n          origin: RedirectCacheOrigin.Setup,\n          kind: action.payload.kind,\n        },\n      }\n    case HANDLED_REDIRECT:\n      return {\n        ...state,\n        redirectCache: undefined,\n      }\n    case UPDATE_PROVIDER:\n      return {\n        ...state,\n        providers: {\n          ...state.providers,\n          [action.payload.provider.id]: action.payload.provider,\n        },\n      }\n    case UPDATE_VERSION:\n      return {\n        ...state,\n        version: action.payload.version,\n      }\n    case REMOVE_PROVIDER:\n      const { [action.payload.id]: provider, ...providers } = state.providers\n\n      return {\n        ...state,\n        providers,\n      }\n    default:\n      return state\n  }\n}\n","import {\n  EpisodesActionTypes,\n  EpisodesState,\n  REMOVE_EPISODE,\n  UPDATE_EPISODE,\n} from './types'\n\nconst initialState: EpisodesState = {}\n\nexport default (\n  state = initialState,\n  action: EpisodesActionTypes,\n): EpisodesState => {\n  switch (action.type) {\n    case UPDATE_EPISODE:\n      return { ...state, [action.payload.episode.id]: action.payload.episode }\n    case REMOVE_EPISODE:\n      const { [action.payload.id]: episode, ...episodes } = state\n\n      return episodes\n    default:\n      return state\n  }\n}\n","import {\n  MoviesActionTypes,\n  MoviesState,\n  REMOVE_MOVIE,\n  UPDATE_MOVIE,\n} from './types'\n\nconst initialState: MoviesState = {}\n\nexport default (\n  state = initialState,\n  action: MoviesActionTypes,\n): MoviesState => {\n  switch (action.type) {\n    case UPDATE_MOVIE:\n      return { ...state, [action.payload.movie.id]: action.payload.movie }\n    case REMOVE_MOVIE:\n      const { [action.payload.id]: movie, ...movies } = state\n\n      return movies\n    default:\n      return state\n  }\n}\n","import {\n  ADD_PERSON,\n  PeopleActionTypes,\n  PeopleState,\n  RESET_PEOPLE,\n} from './types'\n\nconst initialState: PeopleState = {\n  ids: [],\n}\n\nexport default (\n  state = initialState,\n  action: PeopleActionTypes,\n): PeopleState => {\n  switch (action.type) {\n    case ADD_PERSON:\n      return { ids: [...new Set([...state.ids, action.payload.id])] }\n    case RESET_PEOPLE:\n      return initialState\n    default:\n      return state\n  }\n}\n","import {\n  REMOVE_SEASON,\n  SeasonsActionTypes,\n  SeasonsState,\n  UPDATE_SEASON,\n} from './types'\n\nconst initialState: SeasonsState = {}\n\nexport default (\n  state = initialState,\n  action: SeasonsActionTypes,\n): SeasonsState => {\n  switch (action.type) {\n    case UPDATE_SEASON:\n      return { ...state, [action.payload.season.id]: action.payload.season }\n    case REMOVE_SEASON:\n      const { [action.payload.id]: season, ...seasons } = state\n\n      return seasons\n    default:\n      return state\n  }\n}\n","import { REMOVE_SHOW, ShowsActionTypes, ShowsState, UPDATE_SHOW } from './types'\n\nconst initialState: ShowsState = {}\n\nexport default (state = initialState, action: ShowsActionTypes): ShowsState => {\n  switch (action.type) {\n    case UPDATE_SHOW:\n      return { ...state, [action.payload.show.id]: action.payload.show }\n    case REMOVE_SHOW:\n      const { [action.payload.id]: show, ...shows } = state\n\n      return shows\n    default:\n      return state\n  }\n}\n","/** A function that accepts a potential \"extra argument\" value to be injected later,\r\n * and returns an instance of the thunk middleware that uses that value\r\n */\nfunction createThunkMiddleware(extraArgument) {\n  // Standard Redux middleware definition pattern:\n  // See: https://redux.js.org/tutorials/fundamentals/part-4-store#writing-custom-middleware\n  var middleware = function middleware(_ref) {\n    var dispatch = _ref.dispatch,\n        getState = _ref.getState;\n    return function (next) {\n      return function (action) {\n        // The thunk middleware looks for any functions that were passed to `store.dispatch`.\n        // If this \"action\" is really a function, call it and return the result.\n        if (typeof action === 'function') {\n          // Inject the store's `dispatch` and `getState` methods, as well as any \"extra arg\"\n          return action(dispatch, getState, extraArgument);\n        } // Otherwise, pass the action down the middleware chain as usual\n\n\n        return next(action);\n      };\n    };\n  };\n\n  return middleware;\n}\n\nvar thunk = createThunkMiddleware(); // Attach the factory function so users can create a customized version\n// with whatever \"extra arg\" they want to inject into their thunks\n\nthunk.withExtraArgument = createThunkMiddleware;\nexport default thunk;","import {\n  ADD_NOTIFICATION,\n  ASYNC_BEGIN,\n  ASYNC_END,\n  REMOVE_NOTIFICATION,\n  UIActionTypes,\n  UIState,\n} from './types'\n\nconst initialState: UIState = {\n  isLoading: false,\n  notifications: [],\n}\n\nexport default (state = initialState, action: UIActionTypes): UIState => {\n  switch (action.type) {\n    case ASYNC_BEGIN:\n      return {\n        ...state,\n        isLoading: true,\n      }\n    case ASYNC_END:\n      return {\n        ...state,\n        isLoading: false,\n      }\n    case ADD_NOTIFICATION:\n      return {\n        ...state,\n        notifications: [...state.notifications, action.payload.notification],\n      }\n    case REMOVE_NOTIFICATION:\n      return {\n        ...state,\n        notifications: state.notifications.filter(\n          (notification) => notification !== action.payload.notification,\n        ),\n      }\n    default:\n      return state\n  }\n}\n","import { Action, applyMiddleware, createStore } from 'redux'\nimport { ThunkAction, ThunkDispatch } from 'redux-thunk'\nimport auth from './auth/reducers'\nimport { combineReducers } from 'redux'\nimport episodes from './episodes/reducers'\nimport movies from './movies/reducers'\nimport people from './people/reducers'\nimport { persistReducer } from 'redux-persist'\nimport seasons from './seasons/reducers'\nimport shows from './shows/reducers'\nimport storage from 'redux-persist/lib/storage'\nimport thunk from 'redux-thunk'\nimport ui from './ui/reducers'\n\nconst rootReducer = combineReducers({\n  auth,\n  episodes,\n  people,\n  movies,\n  seasons,\n  shows,\n  ui,\n})\n\nconst persistedReducer = persistReducer(\n  {\n    key: 'root',\n    storage: storage,\n    whitelist: ['auth', 'episodes', 'people', 'movies', 'seasons', 'shows'],\n    debug: process.env.NODE_ENV === 'development',\n  },\n  rootReducer,\n)\n\nexport default createStore(persistedReducer, applyMiddleware(thunk))\n\nexport type RootState = ReturnType<typeof rootReducer>\n\nexport type AppThunk<ReturnType> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action\n>\n\nexport type AppDispatch = ThunkDispatch<RootState, unknown, Action>\n","import './i18n.ts'\nimport './index.scss'\nimport 'whatwg-fetch'\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration'\nimport React, { Suspense } from 'react'\nimport Base from './views'\nimport { Loading } from './views/Loading'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport { Provider } from 'react-redux'\nimport { createRoot } from 'react-dom/client'\nimport { persistStore } from 'redux-persist'\nimport reportWebVitals from './reportWebVitals'\nimport store from './store'\n\nconst container = document.getElementById('root')\nconst root = createRoot(container!)\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={<Loading />} persistor={persistStore(store)}>\n        <Suspense fallback={<Loading />}>\n          <Base />\n        </Suspense>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register()\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log) // eslint-disable-line no-console\n"],"names":["Backdrop","url","className","src","alt","Icon","children","height","width","x","y","classNames","viewBox","xmlns","VERSION","RECENTLY_WATCHED_THRESHOLD","Date","setMonth","getMonth","FALLBACK_BACKDROP_URL","FALLBACK_COVER_URL","APIError","status","message","Error","captureStackTrace","name","AuthenticationFailure","provider","CannotFindFileError","file","ProviderAlreadyExists","useAuthRedirect","dispatch","useDispatch","redirectCache","useSelector","state","auth","useEffect","undefined","origin","RedirectCacheOrigin","load","authHandleRedirect","handledRedirect","useSetupAuthRedirect","callback","useAsyncEffect","setupAuthHandleRedirect","response","_typeof","obj","Symbol","iterator","constructor","prototype","arr","each","forEach","slice","defaults","call","arguments","source","prop","hasXMLHttpRequest","XMLHttpRequest","fetchApi","XmlHttpRequestApi","ActiveXObjectApi","fetch","global","window","ActiveXObject","fetchNode","addQueryString","params","queryString","paramName","encodeURIComponent","indexOf","fetchIt","fetchOptions","resolver","ok","statusText","text","then","data","catch","omitFetchOptions","options","payload","queryStringParams","headers","customHeaders","reqOptions","requestOptions","method","body","stringify","e","Object","keys","length","opt","err","requestWithFetch","open","crossDomain","setRequestHeader","withCredentials","overrideMimeType","h","i","onreadystatechange","readyState","responseText","send","console","log","requestWithXmlHttpRequest","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","_toPropertyKey","key","arg","input","hint","prim","toPrimitive","res","String","Number","_toPrimitive","getDefaults","loadPath","addPath","parse","JSON","parsePayload","namespace","fallbackValue","value","_defineProperty","parseLoadPayload","languages","namespaces","request","reloadInterval","mode","credentials","cache","Backend","services","allOptions","this","type","init","protoProps","staticProps","_this","setInterval","reload","_readAny","language","loadUrlLanguages","loadUrlNamespaces","maybePromise","_this2","isPromise","Promise","resolve","resolvedLoadPath","interpolator","interpolate","lng","join","ns","loadUrl","_this3","ret","parseErr","_this4","finished","dataArray","resArray","push","_this5","_this$services","backendConnector","languageUtils","logger","currentLanguage","toLowerCase","toLoad","append","toResolveHierarchy","l","preload","read","warn","concat","loaded","fieldContentRegExp","serializeCookie","val","path","str","maxAge","isNaN","Math","floor","domain","test","expires","toUTCString","httpOnly","secure","sameSite","cookie","minutes","cookieOptions","setTime","getTime","document","nameEQ","ca","split","c","charAt","substring","cookie$1","lookup","found","lookupCookie","cacheUserLanguage","cookieMinutes","cookieDomain","querystring","search","location","hash","pos","lookupQuerystring","hasLocalStorageSupport","localStorageAvailable","localStorage","testKey","setItem","removeItem","lookupLocalStorage","getItem","hasSessionStorageSupport","sessionStorageAvailable","sessionStorage","lookupSessionStorage","navigator$1","navigator","userLanguage","htmlTag","documentElement","getAttribute","pathname","match","Array","lookupFromPathIndex","replace","subdomain","lookupFromSubdomainIndex","hostname","Browser","detectors","_createClass","i18nOptions","order","caches","excludeCacheFor","convertDetectedLanguage","lookupFromUrlIndex","addDetector","detector","detectionOrder","detected","detectorName","map","d","getBestMatchFromCodes","cacheName","EN","LANGUAGES","resources","translation","de","en","i18next","initReactI18next","use","HttpApi","LanguageDetector","fallbackLng","supportedLngs","keySeparator","nsSeparator","interpolation","escapeValue","debug","process","buildItemId","tmdbId","buildTrailerUrl","title","buildTMDbImageUrl","size","buildEpisode","showId","seasonId","seasonNumber","showTmdbId","sources","captions","usage","airDate","air_date","crew","number","episode_number","guestStars","guest_stars","summary","overview","id","stillPath","still_path","kind","ItemKind","parseDateToISOString","buildCastMember","buildCrewMember","filter","notUndefined","buildMovie","isAdult","adult","backdropPath","backdrop_path","budget","homepage","posterPath","poster_path","releaseDate","release_date","revenue","duration","runtime","cast","trailerUrl","buildGender","gender","Gender","buildJob","job","Job","values","includes","character","rawGender","profile_path","department","rawJob","buildSeason","showTitle","showBackdropPath","season_number","episodes","episode","buildShow","episodeRunTime","episode_run_time","firstAirDate","first_air_date","lastAirDate","last_air_date","seasons","season","expectLoginRedirect","EXPECT_LOGIN_REDIRECT","expectSetupRedirect","EXPECT_SETUP_REDIRECT","HANDLED_REDIRECT","updateProvider","UPDATE_PROVIDER","removeProvider","REMOVE_PROVIDER","providerSelector","providers","providersSelector","buildAuthId","CLIENT_ID","SCOPES","buildAuthResponse","accessToken","account","expiresOn","ProviderKind","token","validUntil","toISOString","username","silentLogIn","app","acquireTokenSilent","scopes","newAccount","popupLogIn","loginPopup","redirectLogIn","loginRedirect","interactiveLogIn","onRedirect","isMobile","performAuth","InteractionRequiredAuthError","PublicClientApplication","clientId","handleRedirectPromise","host","port","authHandleProvider","ftpAuthCall","oneDriveAuthCall","setupAuthHandleProvider","config","authHandleRedirectHandleProvider","oneDriveAuthHandleRedirectCall","authHandleResponse","updatedProvider","moviesPath","showsPath","setupAuthHandleResponse","_","getState","find","setupAuth","UPDATE_VERSION","UPDATE_EPISODE","REMOVE_EPISODE","UPDATE_MOVIE","REMOVE_MOVIE","ADD_PERSON","RESET_PEOPLE","UPDATE_SEASON","REMOVE_SEASON","UPDATE_SHOW","REMOVE_SHOW","asyncBegin","ASYNC_BEGIN","asyncEnd","ASYNC_END","addNotification","notification","ADD_NOTIFICATION","removeNotification","REMOVE_NOTIFICATION","fn","result","error","NotificationKind","MP4_EXTENSION","M4V_EXTENSION","MKV_EXTENSION","WEBM_EXTENSION","PROVIDER_KINDS","OneDrive","FTP","DISABLED_PROVIDER_KINDS","FTPIcon","fill","OneDriveIcon","isInProgress","item","progress","wasRecentlyWatched","thresh","lastWatched","sortByNumber","items","getAttr","sort","a","b","sortByLastWatched","sortAlphabetically","splitHoursAndMinutes","t","hours","buildBackdropUrl","buildCoverUrl","buildItemUrl","buildFileDownloadUrl","password","fileName","downloadUrl","buildVideoType","buildVideoSize","buildCaptionSrcLang","caption","ISO6391","buildProviderKindName","buildProviderIcon","buildJobTitle","buildCommitId","sha","date","SoundWaveIcon","Loading","NotFound","useTranslation","href","rel","to","Action","ResultType","PopStateEventType","createBrowserHistory","getUrlBasedHistory","globalHistory","createLocation","usr","createPath","invariant","warning","cond","getHistoryState","index","idx","current","parsePath","random","toString","substr","parsedPath","hashIndex","searchIndex","getLocation","createHref","validateLocation","defaultView","v5Compat","history","action","Pop","listener","getIndex","handlePop","nextIndex","delta","createURL","base","URL","replaceState","listen","addEventListener","removeEventListener","encodeLocation","Push","historyState","pushState","DOMException","assign","Replace","go","n","Set","matchRoutes","routes","locationArg","basename","stripBasename","branches","flattenRoutes","score","siblings","every","compareIndexes","routesMeta","meta","childrenIndex","rankRouteBranches","matches","matchRouteBranch","safelyDecodeURI","parentsMeta","parentPath","flattenRoute","route","relativePath","caseSensitive","startsWith","joinPaths","computeScore","explodeOptionalSegments","exploded","segments","first","rest","isOptional","endsWith","required","restExploded","subpath","paramRe","isSplat","s","initialScore","some","reduce","segment","branch","matchedParams","matchedPathname","end","remainingPathname","matchPath","pathnameBase","normalizePathname","pattern","paramNames","regexpSource","RegExp","compilePath","matcher","captureGroups","memo","splatValue","decodeURIComponent","safelyDecodeURIComponent","decodeURI","startIndex","nextChar","getInvalidPathError","char","field","dest","getPathContributingMatches","resolveTo","toArg","routePathnames","locationPathname","isPathRelative","from","isEmptyPath","toPathname","routePathnameIndex","toSegments","shift","fromPathname","pop","resolvePathname","normalizeSearch","normalizeHash","resolvePath","hasExplicitTrailingSlash","hasCurrentTrailingSlash","paths","AbortedDeferredError","isRouteErrorResponse","internal","validMutationMethodsArr","validRequestMethodsArr","hasOwn","hasOwnProperty","classes","argType","isArray","inner","apply","module","exports","default","reactIs","require","REACT_STATICS","childContextTypes","contextType","contextTypes","defaultProps","displayName","getDefaultProps","getDerivedStateFromError","getDerivedStateFromProps","mixins","propTypes","KNOWN_STATICS","caller","callee","arity","MEMO_STATICS","compare","TYPE_STATICS","getStatics","component","isMemo","ForwardRef","render","Memo","getOwnPropertyNames","getOwnPropertySymbols","getOwnPropertyDescriptor","getPrototypeOf","objectPrototype","hoistNonReactStatics","targetComponent","sourceComponent","blacklist","inheritedComponent","targetStatics","sourceStatics","ex","React","React__default","UAParser","ClientUAInstance","browser","getBrowser","cpu","getCPU","device","getDevice","engine","getEngine","os","getOS","ua","getUA","setUa","userAgentString","setUA","parseUserAgent","userAgent","UserAgentInstance","UA","setUserAgent","UAHelper","freeze","ownKeys","object","enumerableOnly","symbols","sym","_extends","_getPrototypeOf","o","setPrototypeOf","__proto__","_setPrototypeOf","p","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","_assertThisInitialized","self","ReferenceError","_slicedToArray","_arrayWithHoles","_i","_s","_e","_arr","_n","_d","next","done","_iterableToArrayLimit","minLen","_arrayLikeToArray","_unsupportedIterableToArray","_nonIterableRest","len","arr2","DeviceTypes","BrowserTypes","Chrome","Firefox","Opera","Yandex","Safari","InternetExplorer","Edge","Chromium","Ie","MobileSafari","EdgeChromium","MIUI","SamsungBrowser","OsTypes","IOS","Android","WindowsPhone","Windows","MAC_OS","InitialDeviceTypes","isTablet","isBrowser","isSmartTV","isConsole","isWearable","setDefaults","getNavigatorInstance","isIOS13Check","nav","platform","maxTouchPoints","MSStream","mobilePayload","getOwnPropertyDescriptors","defineProperties","_objectSpread2","vendor","model","osVersion","version","isMobileType","_ref","isTabletType","_ref2","isMobileAndTabletType","_ref3","isSmartTVType","_ref4","isBrowserType","_ref5","isWearableType","_ref6","isConsoleType","_ref7","isEmbeddedType","_ref8","getMobileVendor","_ref9","getMobileModel","_ref10","getDeviceType","_ref11","isAndroidType","_ref12","isWindowsType","_ref13","isMacOsType","_ref14","isWinPhoneType","_ref15","isIOSType","_ref16","getOsVersion","_ref17","getOsName","_ref18","isChromeType","_ref19","isFirefoxType","_ref20","isChromiumType","_ref21","isEdgeType","_ref22","isYandexType","_ref23","isSafariType","_ref24","isMobileSafariType","_ref25","isOperaType","_ref26","isIEType","_ref27","isMIUIType","_ref28","isSamsungBrowserType","_ref29","getBrowserFullVersion","_ref30","getBrowserVersion","_ref31","major","getBrowserName","_ref32","getEngineName","_ref33","getEngineVersion","_ref34","isElectronType","isEdgeChromiumType","getIOS13","getIPad13","getIphone13","getIPod13","getUseragent","userAg","buildSelectorsObject","isEmbedded","isMobileSafari","isChromium","isMobileOnly","isDesktop","isAndroid","isWinPhone","isIOS","isChrome","isFirefox","isSafari","isOpera","isIE","osName","fullBrowserVersion","browserVersion","browserName","mobileVendor","mobileModel","engineName","engineVersion","isEdge","isYandex","deviceType","isIOS13","isIPad13","isIPhone13","isIPod13","isElectron","isEdgeChromium","isLegacyEdge","isWindows","isMacOs","isMIUI","isSamsungBrowser","useDeviceData","hookUserAgent","aa","da","ea","fa","ha","add","ia","createElement","ja","ka","la","ma","v","f","g","acceptsBooleans","attributeName","attributeNamespace","mustUseProperty","propertyName","sanitizeURL","removeEmptyString","z","ra","sa","toUpperCase","ta","pa","qa","oa","removeAttribute","setAttribute","setAttributeNS","xlinkHref","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","va","for","wa","ya","za","Aa","Ba","Ca","Da","Ea","Fa","Ga","Ha","Ia","Ja","Ka","La","A","Ma","stack","trim","Na","Oa","prepareStackTrace","set","Reflect","construct","k","Pa","tag","Qa","$$typeof","_context","_payload","_init","Ra","Sa","Ta","nodeName","Va","_valueTracker","get","getValue","setValue","stopTracking","Ua","Wa","checked","Xa","activeElement","Ya","defaultChecked","defaultValue","_wrapperState","initialChecked","Za","initialValue","controlled","ab","bb","cb","db","ownerDocument","eb","fb","selected","defaultSelected","disabled","gb","dangerouslySetInnerHTML","hb","ib","jb","textContent","kb","lb","mb","nb","namespaceURI","innerHTML","valueOf","firstChild","removeChild","appendChild","MSApp","execUnsafeLocalFunction","ob","lastChild","nodeType","nodeValue","pb","animationIterationCount","aspectRatio","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","columns","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridArea","gridRow","gridRowEnd","gridRowSpan","gridRowStart","gridColumn","gridColumnEnd","gridColumnSpan","gridColumnStart","fontWeight","lineClamp","lineHeight","opacity","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","qb","rb","sb","style","setProperty","tb","menuitem","area","br","col","embed","hr","img","keygen","link","param","track","wbr","ub","vb","is","wb","xb","srcElement","correspondingUseElement","parentNode","yb","zb","Ab","Bb","Cb","stateNode","Db","Eb","Fb","Gb","Hb","Ib","Jb","Kb","Lb","Mb","Nb","m","onError","Ob","Pb","Qb","Rb","Sb","Tb","Vb","alternate","return","flags","Wb","memoizedState","dehydrated","Xb","Zb","child","sibling","Yb","$b","ac","unstable_scheduleCallback","bc","unstable_cancelCallback","cc","unstable_shouldYield","dc","unstable_requestPaint","B","unstable_now","ec","unstable_getCurrentPriorityLevel","fc","unstable_ImmediatePriority","gc","unstable_UserBlockingPriority","hc","unstable_NormalPriority","ic","unstable_LowPriority","jc","unstable_IdlePriority","kc","lc","oc","clz32","pc","qc","LN2","rc","sc","tc","uc","pendingLanes","suspendedLanes","pingedLanes","entangledLanes","entanglements","vc","xc","yc","zc","Ac","eventTimes","Cc","C","Dc","Ec","Fc","Gc","Hc","Ic","Jc","Kc","Lc","Mc","Nc","Oc","Map","Pc","Qc","Rc","Sc","delete","pointerId","Tc","nativeEvent","blockedOn","domEventName","eventSystemFlags","targetContainers","Vc","Wc","priority","isDehydrated","containerInfo","Xc","Yc","dispatchEvent","Zc","$c","ad","bd","cd","ReactCurrentBatchConfig","dd","ed","transition","fd","gd","hd","Uc","stopPropagation","jd","kd","ld","md","nd","od","keyCode","charCode","pd","qd","rd","_reactName","_targetInst","currentTarget","isDefaultPrevented","defaultPrevented","returnValue","isPropagationStopped","preventDefault","cancelBubble","persist","isPersistent","wd","xd","yd","sd","eventPhase","bubbles","cancelable","timeStamp","now","isTrusted","td","ud","view","detail","vd","Ad","screenX","screenY","clientX","clientY","pageX","pageY","ctrlKey","shiftKey","altKey","metaKey","getModifierState","zd","button","buttons","relatedTarget","fromElement","toElement","movementX","movementY","Bd","Dd","dataTransfer","Fd","Hd","animationName","elapsedTime","pseudoElement","Id","clipboardData","Jd","Ld","Md","Esc","Spacebar","Left","Up","Right","Down","Del","Win","Menu","Apps","Scroll","MozPrintableKey","Nd","Od","Alt","Control","Meta","Shift","Pd","Qd","fromCharCode","code","repeat","locale","which","Rd","Td","pressure","tangentialPressure","tiltX","tiltY","twist","pointerType","isPrimary","Vd","touches","targetTouches","changedTouches","Xd","Yd","deltaX","wheelDeltaX","deltaY","wheelDeltaY","wheelDelta","deltaZ","deltaMode","Zd","$d","ae","be","documentMode","ce","ee","fe","ge","he","ie","le","color","datetime","email","month","range","tel","time","week","me","ne","oe","event","listeners","pe","qe","re","se","te","ue","ve","we","xe","ye","ze","oninput","Ae","detachEvent","Be","Ce","attachEvent","De","Ee","Fe","He","Je","Ke","node","offset","nextSibling","Le","contains","compareDocumentPosition","Me","HTMLIFrameElement","contentWindow","Ne","contentEditable","Oe","focusedElem","selectionRange","start","selectionStart","selectionEnd","min","getSelection","extend","rangeCount","anchorNode","anchorOffset","focusNode","focusOffset","createRange","setStart","removeAllRanges","addRange","setEnd","element","left","scrollLeft","top","scrollTop","focus","Pe","Qe","Re","Se","Te","Ue","Ve","We","animationend","animationiteration","animationstart","transitionend","Xe","Ye","Ze","animation","$e","af","bf","cf","df","ef","ff","gf","hf","lf","mf","nf","Ub","D","of","has","pf","qf","rf","sf","bind","capture","passive","J","u","w","F","tf","uf","parentWindow","vf","wf","na","xa","$a","ba","je","ke","unshift","xf","yf","zf","Af","Bf","Cf","Df","Ef","__html","Ff","setTimeout","Gf","clearTimeout","Hf","Jf","queueMicrotask","If","Kf","Lf","Mf","previousSibling","Nf","Of","Pf","Qf","Rf","Sf","Tf","Uf","E","G","Vf","H","Wf","Xf","Yf","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","Zf","$f","ag","bg","getChildContext","cg","__reactInternalMemoizedMergedChildContext","dg","eg","fg","gg","hg","jg","kg","lg","mg","ng","og","pg","qg","rg","sg","tg","ug","vg","wg","xg","yg","I","zg","Ag","Bg","elementType","deletions","Cg","pendingProps","overflow","treeContext","retryLane","Dg","Eg","Fg","Gg","memoizedProps","Hg","Ig","Jg","Kg","Lg","Mg","Ng","Og","Pg","Qg","Rg","_currentValue","Sg","childLanes","Tg","dependencies","firstContext","lanes","Ug","Vg","context","memoizedValue","Wg","Xg","Yg","interleaved","Zg","$g","ah","updateQueue","baseState","firstBaseUpdate","lastBaseUpdate","shared","pending","effects","bh","ch","eventTime","lane","dh","K","eh","fh","gh","q","r","hh","ih","jh","Component","refs","kh","nh","isMounted","_reactInternals","enqueueSetState","L","lh","mh","enqueueReplaceState","enqueueForceUpdate","oh","shouldComponentUpdate","isPureReactComponent","ph","updater","qh","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","rh","getSnapshotBeforeUpdate","UNSAFE_componentWillMount","componentWillMount","componentDidMount","sh","ref","_owner","_stringRef","th","uh","vh","wh","xh","yh","implementation","zh","Ah","Bh","Ch","Dh","Eh","Fh","Gh","Hh","Ih","tagName","Jh","Kh","Lh","M","Mh","revealOrder","Nh","Oh","_workInProgressVersionPrimary","Ph","ReactCurrentDispatcher","Qh","Rh","N","O","P","Sh","Th","Uh","Vh","Q","Wh","Xh","Yh","Zh","$h","ai","bi","ci","baseQueue","queue","di","ei","fi","lastRenderedReducer","hasEagerState","eagerState","lastRenderedState","gi","hi","ii","ji","ki","getSnapshot","li","mi","R","ni","lastEffect","stores","oi","pi","qi","ri","create","destroy","deps","si","ti","ui","vi","wi","xi","yi","zi","Ai","Bi","Ci","Di","Ei","Fi","Gi","Hi","Ii","Ji","readContext","useCallback","useContext","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useDebugValue","useDeferredValue","useTransition","useMutableSource","useSyncExternalStore","useId","unstable_isNewReconciler","identifierPrefix","Ki","digest","Li","Mi","Ni","WeakMap","Oi","Pi","Qi","Ri","componentDidCatch","Si","componentStack","Ti","pingCache","Ui","Vi","Wi","Xi","ReactCurrentOwner","Yi","Zi","$i","aj","bj","cj","dj","ej","baseLanes","cachePool","transitions","fj","gj","hj","ij","jj","UNSAFE_componentWillUpdate","componentWillUpdate","componentDidUpdate","kj","lj","pendingContext","mj","Aj","Cj","Dj","nj","oj","pj","fallback","qj","rj","tj","dataset","dgst","uj","vj","_reactRetry","sj","subtreeFlags","wj","xj","isBackwards","rendering","renderingStartTime","last","tail","tailMode","yj","Ej","S","Fj","Gj","wasMultiple","multiple","suppressHydrationWarning","onClick","onclick","createElementNS","autoFocus","createTextNode","T","Hj","Ij","Jj","Kj","U","Lj","WeakSet","V","Mj","W","Nj","Oj","Qj","Rj","Sj","Tj","Uj","Vj","Wj","insertBefore","_reactRootContainer","Xj","X","Yj","Zj","ak","onCommitFiberUnmount","componentWillUnmount","bk","ck","dk","ek","fk","isHidden","gk","hk","display","ik","jk","kk","lk","__reactInternalSnapshotBeforeUpdate","Wk","mk","ceil","nk","pk","Y","Z","qk","rk","sk","tk","uk","Infinity","vk","wk","xk","yk","zk","Ak","Bk","Ck","Dk","Ek","callbackNode","expirationTimes","expiredLanes","wc","callbackPriority","ig","Fk","Gk","Hk","Ik","Jk","Kk","Lk","Mk","Nk","Ok","Pk","finishedWork","finishedLanes","Qk","timeoutHandle","Rk","Sk","Tk","Uk","Vk","mutableReadLanes","Bc","Pj","onCommitFiberRoot","mc","onRecoverableError","Xk","onPostCommitFiberRoot","Yk","Zk","al","isReactComponent","pendingChildren","bl","mutableSourceEagerHydrationData","cl","pendingSuspenseBoundaries","dl","el","fl","gl","hl","il","jl","zj","$k","ll","reportError","ml","_internalRoot","nl","ol","pl","ql","sl","rl","unmount","unstable_scheduleHydration","splice","querySelectorAll","form","tl","usingClientEntryPoint","Events","ul","findFiberByHostInstance","bundleType","rendererPackageName","vl","rendererConfig","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","setErrorHandler","setSuspenseHandler","scheduleUpdate","currentDispatcherRef","findHostInstanceByFiber","findHostInstancesForRefresh","scheduleRefresh","scheduleRoot","setRefreshHandler","getCurrentFiber","reconcilerVersion","__REACT_DEVTOOLS_GLOBAL_HOOK__","wl","isDisabled","supportsFiber","inject","createPortal","createRoot","unstable_strictMode","findDOMNode","flushSync","hydrate","hydrateRoot","hydratedSources","_getVersion","_source","unmountComponentAtNode","unstable_batchedUpdates","unstable_renderSubtreeIntoContainer","checkDCE","AsyncMode","ConcurrentMode","ContextConsumer","ContextProvider","Element","Fragment","Lazy","Portal","Profiler","StrictMode","Suspense","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isElement","isForwardRef","isFragment","isLazy","isPortal","isProfiler","isStrictMode","isSuspense","isValidElementType","typeOf","batch","getBatch","ContextKey","gT","globalThis","getContext","_gT$ContextKey","contextMap","realContext","ReactReduxContext","createReduxContextHook","useReduxContext","notInitialized","useSyncExternalStoreWithSelector","refEquality","createSelectorHook","useDefaultReduxContext","selector","equalityFnOrOptions","equalityFn","stabilityCheck","noopCheck","store","subscription","getServerState","globalStabilityCheck","wrappedSelector","selectedState","addNestedSub","nullListeners","notify","createSubscription","parentSub","unsubscribe","subscriptionsAmount","selfSubscribed","handleChangeWrapper","onStateChange","trySubscribe","subscribe","clear","isSubscribed","prev","createListenerCollection","tryUnsubscribe","cleanupListener","removed","notifyNestedSubs","getListeners","useIsomorphicLayoutEffect","serverState","contextValue","previousState","Context","Provider","createStoreHook","useStore","createDispatchHook","useDefaultStore","newBatch","initializeConnect","startTransitionImpl","BrowserRouter","future","historyRef","setStateImpl","v7_startTransition","setState","newState","Router","navigationType","ABSOLUTE_URL_REGEX","Link","LinkWithRef","absoluteHref","relative","reloadDocument","preventScrollReset","NavigationContext","isExternal","currentUrl","targetUrl","protocol","useHref","internalOnClick","replaceProp","navigate","useNavigate","useLocation","useResolvedPath","isModifiedEvent","shouldProcessLinkClick","useLinkClickHandler","DataRouterHook","DataRouterStateHook","DataRouterContext","DataRouterStateContext","AwaitContext","LocationContext","RouteContext","outlet","isDataRoute","RouteErrorContext","useInRouterContext","joinedPathname","useMatch","static","router","useDataRouterContext","UseNavigateStable","useCurrentRouteId","activeRef","fromRouteId","useNavigateStable","dataRouterContext","routePathnamesJson","useNavigateUnstable","useParams","routeMatch","useRoutesImpl","dataRouterState","parentMatches","parentParams","parentPathnameBase","locationFromContext","parsedLocationArg","renderedMatches","_renderMatches","NavigationType","DefaultErrorComponent","useDataRouterState","UseRouteError","routeId","errors","useRouteError","lightgrey","preStyles","padding","backgroundColor","fontStyle","defaultErrorElement","RenderErrorBoundary","revalidation","errorInfo","routeContext","RenderedRoute","staticContext","errorElement","ErrorBoundary","_deepestRenderedBoundaryId","errorIndex","findIndex","reduceRight","getChildren","hookName","ctx","useRouteContext","thisRoute","Navigate","jsonPath","Route","_props","basenameProp","locationProp","staticProp","navigationContext","locationContext","trailingPathname","Routes","createRoutesFromChildren","AwaitRenderStatus","neverSettledPromise","treePath","loader","hasErrorBoundary","shouldRevalidate","handle","lazy","__self","__source","jsx","jsxs","forceUpdate","escape","_status","_result","Children","count","toArray","only","PureComponent","cloneElement","createContext","_currentValue2","_threadCount","Consumer","_defaultValue","_globalName","createFactory","createRef","forwardRef","isValidElement","startTransition","unstable_act","__esModule","storage","_getStorage","reject","noop","storageType","hasStorage","noopStorage","_default","sortIndex","performance","setImmediate","startTime","expirationTime","priorityLevel","scheduling","isInputPending","MessageChannel","port2","port1","onmessage","postMessage","unstable_Profiling","unstable_continueExecution","unstable_forceFrameRate","unstable_getFirstCallbackNode","unstable_next","unstable_pauseExecution","unstable_runWithPriority","delay","unstable_wrapCallback","FUNC_TYPE","UNDEF_TYPE","OBJ_TYPE","STR_TYPE","MODEL","NAME","TYPE","VENDOR","ARCHITECTURE","CONSOLE","MOBILE","TABLET","SMARTTV","WEARABLE","EMBEDDED","AMAZON","APPLE","ASUS","BLACKBERRY","FIREFOX","GOOGLE","HUAWEI","LG","MICROSOFT","MOTOROLA","OPERA","SAMSUNG","SHARP","SONY","XIAOMI","ZEBRA","FACEBOOK","enumerize","enums","str1","str2","lowerize","rgxMapper","arrays","j","regex","exec","strMapper","windowsVersionMap","ME","XP","Vista","RT","regexes","CHROME","EDGE","extensions","getResult","_ua","_rgxmap","mergedRegexes","_browser","_cpu","_device","_engine","_os","BROWSER","CPU","DEVICE","ENGINE","OS","define","$","jQuery","Zepto","parser","effect","inputs","hasDestroy","mounted","inst","hasValue","toPropertyKey","_regeneratorRuntime","Op","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","makeInvokeMethod","tryCatch","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","record","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isGeneratorFunction","genFun","ctor","mark","awrap","async","iter","reverse","skipTempReset","stop","rootRecord","rval","exception","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","nativeName","am","an","ar","as","av","ay","az","bm","bn","bo","bs","co","cr","cs","cu","cv","cy","dv","dz","eo","es","et","eu","fo","fr","fy","ga","gn","gu","gv","ho","ht","hu","hy","hz","io","it","iu","jv","kl","km","kn","ko","kr","ks","ku","kv","kw","ky","ln","lo","lt","lu","lv","mn","mr","ms","mt","my","nn","no","nr","nv","ny","om","or","ps","pt","qu","rm","rn","ro","ru","rw","sm","sn","so","sq","sr","ss","st","su","sv","sw","tn","tr","ts","tt","tw","ty","ur","uz","vo","wo","yo","zu","LANGUAGES_LIST","LANGUAGES_BY_NAME","LANGUAGE_CODES","LANGUAGE_NAMES","LANGUAGE_NATIVE_NAMES","codes","validate","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","_construct","Parent","Class","_createForOfIteratorHelper","allowArrayLike","normalCompletion","didErr","step","_e2","_createSuper","Derived","hasNativeReflectConstruct","Super","NewTarget","_superPropBase","property","_get","receiver","_inherits","subClass","superClass","_isNativeReflectConstruct","sham","Proxy","Boolean","_iterableToArray","_possibleConstructorReturn","arrayWithHoles","_x","_r","unsupportedIterableToArray","nonIterableRest","_toArray","_toConsumableArray","arrayLikeToArray","iterableToArray","_wrapNativeSuper","_cache","Wrapper","refreshToken","appMetadata","browserCrypto","IdTokenEntity","telemetryRequest","NativeAuthError","NativeInteractionClient","SilentIframeClient","SilentAuthCodeClient","ProtocolMode","correlationId","ScopeSet","CacheOutcome","consoleLogger","output","Logger","concreteLogger","prefix","_len","_key","forward","_len2","_key2","_len3","_key3","_len4","_key4","lvl","debugOnly","moduleName","baseLogger","EventEmitter","observers","events","cloned","observer","defer","rej","promise","makeString","copy","getLastOfPath","Empty","cleanKey","canNotTraverseDeeper","setPath","newValue","getPath","getPathWithDefaults","defaultData","deepExtend","overwrite","regexEscape","_entityMap","chars","deepFind","mix","joinedPath","getCleanedCode","ResourceStore","defaultNS","ignoreJSONStructure","silent","addNamespaces","emit","addResource","deep","pack","hasResourceBundle","removeNamespaces","getResource","compatibilityAPI","getDataByLanguage","postProcessor","processors","addPostProcessor","translator","processor","checkedLoadedFor","Translator","resolved","wouldCheckForNsInKey","seemsNaturalLanguage","userDefinedKeySeparator","userDefinedNsSeparator","possibleChars","matched","looksLikeObjectPath","nestingRegexp","parts","lastKey","overloadTranslationOptionHandler","returnDetails","extractFromKey","appendNamespaceToCIMode","usedKey","exactUsedKey","usedLng","usedNS","resUsedKey","resExactUsedKey","resType","noObject","joinArrays","handleAsObjectInI18nFormat","i18nFormat","handleAsObject","returnObjects","returnedObjectHandler","resTypeIsArray","newKeyToUse","deepKey","translate","extendTranslation","usedDefault","needsPluralHandling","hasDefaultValue","defaultValueSuffix","pluralResolver","getSuffix","defaultValueSuffixOrdinalFallback","ordinal","isValidLookup","missingKeyNoValueFallbackToKey","resForMissing","updateMissing","lngs","fallbackLngs","getFallbackCodes","saveMissingTo","specificDefaultValue","defaultForMissing","missingKeyHandler","saveMissing","saveMissingPlurals","getSuffixes","suffix","appendNamespaceToMissingKey","parseMissingKeyHandler","defaultVariables","skipInterpolation","nestBef","skipOnVariables","nest","postProcess","postProcessorNames","applyPostProcessor","postProcessPassResolved","i18nResolved","extracted","fallbackNS","needsZeroSuffixLookup","shouldUseIntlApi","needsContextHandling","utils","hasLoadedNamespace","possibleKey","finalKeys","addLookupKeys","pluralSuffix","zeroSuffix","pluralSeparator","ordinalPrefix","contextKey","contextSeparator","returnNull","returnEmptyString","resourceStore","option","capitalize","string","LanguageUtil","formatLanguageCode","specialCases","lowerCaseLng","part","cleanCode","nonExplicitSupportedLngs","getLanguagePartFromCode","cleanedLng","isSupportedCode","lngOnly","supportedLng","fallbacks","getScriptPartFromCode","fallbackCode","fallbackCodes","addCode","sets","_rulesPluralsTypes","nonIntlVersions","intlVersions","suffixesOrder","zero","one","two","few","many","other","createRules","rules","numbers","plurals","PluralResolver","compatibilityJSON","Intl","PluralRules","rule","getRule","resolvedOptions","pluralCategories","pluralCategory1","pluralCategory2","pluralCategory","prepend","select","getSuffixRetroCompatible","noAbs","abs","simplifyPluralSuffix","returnSuffix","deepFindWithDefaults","Interpolator","format","iOpts","useRawValueToEscape","prefixEscaped","suffixEscaped","formatSeparator","unescapePrefix","unescapeSuffix","nestingPrefix","nestingPrefixEscaped","nestingSuffix","nestingSuffixEscaped","nestingOptionsSeparator","maxReplaces","alwaysFormat","resetRegExp","regexpStr","regexp","regexpUnescapeStr","regexpUnescape","nestingRegexpStr","replaces","regexSafe","handleFormat","interpolationkey","missingInterpolationHandler","safeValue","todo","matchedVar","temp","lastIndex","clonedOptions","handleHasOptions","inheritedOptions","sep","optionsString","matchedSingleQuotes","matchedDoubleQuotes","formatters","doReduce","elem","parseFormatStr","formatStr","formatName","formatOptions","optStr","currency","parseInt","createCachedFormatter","formatter","Formatter","formats","NumberFormat","DateTimeFormat","relativetime","RelativeTimeFormat","list","ListFormat","mem","formatted","valOptions","formatParams","Connector","backend","waitingReads","maxParallelReads","readingCalls","maxRetries","retryTimeout","toLoadLanguages","toLoadNamespaces","hasAllNamespaces","pendingCount","addResourceBundle","pushPath","removePending","loadedKeys","fcName","tried","wait","queueLoad","loadOne","prepareLoading","isUpdate","clb","opts","initImmediate","partialBundledLanguages","tDescription","transformOptions","bindMemberFunctions","I18n","modules","external","isInitialized","isClone","defOpts","createClassOnDemand","ClassOrObject","on","languageDetector","detection","storeApi","storeApiChained","deferred","initializedStoreOnce","changeLanguage","usedCallback","resolvedLanguage","setResolvedLanguage","lngInLngs","hasLanguageSomeTranslations","isLanguageChangingTo","setLngProps","setLng","loadResources","detect","keyPrefix","fixedT","resultKey","exists","lastLng","loadNotPending","loadState","precheck","preResult","preloaded","newLngs","forkResourceStore","mergedOptions","clone","membersToCopy","createInstance","dir","reloadResources","getFixedT","setDefaultNamespace","loadNamespaces","loadLanguages","attrRE","voidElement","attrs","tagMatch","endIndex","comment","reg","attr","tagRE","whitespaceRE","empty","buff","doc","content","attrString","html","components","level","inComponent","parent","isOpen","isComment","parseTag","rootEl","alreadyWarned","warnOnce","loadedClb","i18n","initialized","off","oldI18nextHasLoadedNamespace","bindI18n","isNewerI18next","i18nInstance","matchHtmlEntity","htmlEntities","unescapeHtmlEntity","defaultOptions","bindI18nStore","transEmptyNodeValue","transSupportBasicHtmlNodes","transWrapTextNodes","transKeepBasicHtmlNodesFor","useSuspense","unescape","getI18n","hasChildren","checkLength","i18nIsDynamicList","getAsArray","nodesToString","stringNode","childrenArray","keepArray","childIndex","childPropsCount","shouldKeepChild","childChildren","renderNodes","targetString","combinedTOpts","shouldUnescape","emptyChildrenButNeedsHandling","keep","getData","childs","ast","HTML","renderInner","rootReactNode","mappedChildren","mapAST","hasValidReactChildren","pushTranslatedJSX","isVoid","dummy","reactNode","astNode","reactNodes","translationContent","tmp","newTarget","mergeProps","isValidTranslationWithChildren","isEmptyTransWithHTML","isKnownComponent","parseFloat","wrapTextNodes","Trans","i18nKey","tOptions","i18nFromProps","tFromProps","additionalProps","reactI18nextOptions","react","nodeAsString","hashTransKey","interpolationOverride","useAsParent","defaultTransParent","setI18n","I18nContext","ReportNamespaces","usedNamespaces","i18nFromContext","defaultNSFromContext","TransWithoutContext","usePrevious","ignore","reportNamespaces","notReadyT","optsOrDefaultValue","retNotReady","ready","addUsedNamespaces","getT","nsMode","setT","joinedNS","previousJoinedNS","boundReset","isInitial","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","amdO","getter","leafPrototypes","def","definition","chunkId","all","promises","miniCssF","inProgress","dataWebpackPrefix","script","needAttach","scripts","getElementsByTagName","charset","timeout","nc","onScriptComplete","onerror","onload","doneFns","head","nmd","loadStylesheet","fullhref","existingLinkTags","dataHref","existingStyleTags","findStylesheet","linkTag","errorType","realHref","createStylesheet","installedCssChunks","miniCss","installedChunks","installedChunkData","realSrc","webpackJsonpCallback","parentChunkLoadingFunction","chunkIds","moreModules","chunkLoadingGlobal","support","Blob","viewClasses","isArrayBufferView","ArrayBuffer","isView","normalizeName","normalizeValue","iteratorFor","Headers","header","consumed","_noBody","bodyUsed","fileReaderReady","reader","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","bufferClone","buf","Uint8Array","byteLength","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","rejected","arrayBuffer","isConsumed","byteOffset","encoding","readAsText","readBlobAsText","readArrayBufferAsText","formData","decode","json","oldValue","thisArg","entries","methods","Request","signal","upcased","normalizeMethod","AbortController","referrer","reParamSearch","bytes","parseHeaders","rawHeaders","line","Response","bodyInit","RangeError","redirectStatuses","redirect","aborted","xhr","abortXhr","abort","getAllResponseHeaders","responseURL","ontimeout","onabort","fixUrl","responseType","names","polyfill","isLocalhost","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","CloseIcon","stroke","x1","y1","x2","y2","Toast","onClose","APIErrorToast","AuthenticationFailureToast","CannotFindFileToast","GenericErrorToast","ProviderAlreadyExistsToast","NotificationsViewer","notifications","handleClose","renderNotification","ScrollToTop","scrollTo","Welcome","App","Player","isLoading","PersistGate","_PureComponent","_getPrototypeOf2","bootstrapped","persistor","onBeforeLift","finally","_unsubscribe","handlePersistorState","loading","KEY_PREFIX","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","autoMergeLevel1","inboundState","originalState","reducedState","_objectSpread","createPersistoid","serialize","whitelist","transforms","throttle","storageKey","defaultSerialize","writeFailHandler","lastState","stagedState","keysToProcess","timeIterator","writePromise","processNextKey","clearInterval","endState","subState","transformer","in","onWriteFail","passWhitelistBlacklist","update","flush","getStoredState","deserialize","defaultDeserialize","serialized","rawState","out","serial","warnIfRemoveError","formatProdErrorMessage","$$observable","observable","randomString","ActionTypes","INIT","REPLACE","PROBE_UNKNOWN_ACTION","isPlainObject","proto","createStore","reducer","preloadedState","enhancer","currentReducer","currentState","currentListeners","nextListeners","isDispatching","ensureCanMutateNextListeners","replaceReducer","nextReducer","outerSubscribe","observeState","compose","funcs","_arrayWithoutHoles","_nonIterableSpread","initialState","registry","persistorReducer","firstIndex","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ids","createThunkMiddleware","extraArgument","thunk","withExtraArgument","rootReducer","reducers","reducerKeys","finalReducers","shapeAssertionError","finalReducerKeys","assertReducerShape","hasChanged","nextState","previousStateForKey","nextStateForKey","combineReducers","people","movies","movie","shows","show","persistedReducer","baseReducer","stateReconciler","defaultGetStoredState","_persistoid","_purge","_paused","conditionalUpdate","_persist","rehydrated","restState","_sealed","_rehydrate","rehydrate","restoredState","migrate","migratedState","migrateErr","purgeStoredState","_newState","persistReducer","middlewares","_dispatch","middlewareAPI","chain","middleware","applyMiddleware","container","getElementById","boostrappedCb","_pStore","rehydrateAction","purge","results","purgeResult","flushResult","pause","manualPersist","persistStore","contentType","unregister","checkValidServiceWorker","serviceWorkerRegistration","reportWebVitals"],"sourceRoot":""}