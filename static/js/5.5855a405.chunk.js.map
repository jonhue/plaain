{"version":3,"sources":["components/Cover.tsx","components/HorizontalSlide.tsx","views/app/Find.tsx","store/selectors.ts","components/get_started/Authenticated.tsx","components/ForYou.tsx","components/get_started/Setup.tsx","components/get_started/Unauthenticated.tsx","views/app/Home.tsx","components/Backdrop.tsx","components/FileList.tsx","components/PersonList.tsx","views/app/Movie.tsx","components/icons/Nucleo/FindIcon.tsx","components/ItemGrid.tsx","components/VerticalSlide.tsx","views/app/Movies.tsx","components/icons/Nucleo/ForYouIcon.tsx","components/icons/Nucleo/MovieIcon.tsx","components/icons/Nucleo/SettingsIcon.tsx","components/icons/Nucleo/ShowIcon.tsx","components/Tab.tsx","components/Nav.tsx","views/app/Person.tsx","components/EpisodeEntry.tsx","views/app/Season.tsx","components/icons/Nucleo/AddIcon.tsx","components/ProviderButton.tsx","components/authentication/ChooseProvider.tsx","components/Modal.tsx","components/icons/Nucleo/CheckIcon.tsx","components/authentication/ProviderForm.tsx","components/authentication/SetupProvider.tsx","components/authentication/AddProviderModal.tsx","components/authentication/UpdateProviderModal.tsx","views/app/Settings.tsx","views/app/Show.tsx","views/app/Shows.tsx","views/app/index.tsx"],"names":["Cover","url","alt","className","src","HorizontalSlide","id","items","t","useTranslation","spaceBetween","slidesPerView","slidesOffsetBefore","slidesOffsetAfter","grabCursor","length","map","item","index","to","buildItemUrl","buildCoverUrl","posterPath","title","buildIndex","itemToText","FlexSearch","create","forEach","key","add","Find","history","useHistory","location","useLocation","initialQuery","useMemo","URLSearchParams","search","get","useSelector","state","movies","shows","useState","query","setQuery","moviesIndex","moviesSelector","movie","summary","showsIndex","showsSelector","show","foundMovies","useAsyncMemo","a","result","movieSelector","filter","notUndefined","foundShows","showSelector","handleInputChange","useCallback","event","replace","target","value","autoFocus","placeholder","onChange","Object","keys","inProgressSelector","createSelector","inProgressMoviesSelector","inProgressSeasonsSelector","seasons","recentlyWatchedSelector","recentlyWatchedMoviesSelector","recentlyWatchedSeasonsSelector","Authenticated","onIndex","href","rel","onClick","ForYou","inProgress","recentlyWatched","Setup","Unauthenticated","Trans","Home","dispatch","useDispatch","sortByLastWatched","providers","providersSelector","auth","handleIndex","load","Backdrop","FileList","files","file","name","PersonList","people","details","isWrapped","setIsWrapped","toggleIsWrapped","displayedPeople","slice","person","Movie","match","params","handleContinue","undefined","push","kind","usage","progress","handleWatch","buildBackdropUrl","backdropPath","Date","releaseDate","getFullYear","duration","splitHoursAndMinutes","isInProgress","disabled","sources","classNames","primary","trailerUrl","cast","character","crew","job","captions","NotFound","FindIcon","color","Icon","width","height","fill","stroke","x1","x2","y1","y2","cx","cy","r","ItemGrid","SwiperCore","use","EffectCoverflow","VerticalSlide","path","direction","effect","coverflowEffect","rotate","stretch","depth","modifier","slideShadows","replaceState","data-history","Movies","sortAlphabetically","styles","white","ForYouIcon","points","d","MovieIcon","x","y","SettingsIcon","ShowIcon","Tab","children","exact","isActive","matchPath","pathname","active","Nav","moviesDisabled","showsDisabled","Person","moviesPersonSelector","seasonsPersonSelector","season","moviesCast","moviesCrew","seasonsCast","seasonsCrew","reduce","acc","ItemKind","tmdbId","gender","profilePath","jobs","Set","moviesByPersonSelector","seasonsByPersonSelector","showBackdropPath","join","EpisodeEntry","episode","number","airDate","toDateString","Season","seasonSelector","showId","episodes","sortByNumber","episodesBySeasonSelector","currentEpisode","find","showEpisodes","setShowEpisodes","toggleEpisodes","episodeNumber","shown","AddIcon","ProviderButton","icon","ChooseProvider","onChoose","handleChoose","PROVIDER_KINDS","buildProviderIcon","Modal","onClose","modalRef","useRef","useOnClickOutside","ref","CheckIcon","ProviderForm","submitCaption","provider","onSubmit","initalState","moviesPath","showsPath","setState","handleChange","currentTarget","handleSubmit","preventDefault","isSetupInput","isValidInput","startsWith","isValid","useEffect","setup","valid","type","SetupProvider","onSetup","AddProviderModal","onSetupAuth","onAddProvider","authResponse","setAuthResponse","handleSetup","UpdateProviderModal","onUpdateProvider","onRemoveProvider","handleUpdate","handleRemoveProvider","window","confirm","buildProviderKindName","Settings","handleSetupAuth","setupAuth","handleUpdateProvider","updateProvider","handleFetchMetadataAll","fetchAllMetadata","removeProvider","showAddProviderModal","setShowAddProviderModal","_","showUpdateProviderModals","setShowUpdateProviderModals","handleShowUpdateProviderModal","handleCloseUpdateProviderModal","handleShowAddProviderModal","handleCloseAddProviderModal","warn","version","VERSION","Show","seasonsByShowSelector","firstAirDate","lastAirDate","Shows","App","moviesCount","showsCount","component"],"mappings":"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","file":"static/js/5.5855a405.chunk.js","sourcesContent":["import './Cover.scss'\nimport React from 'react'\n\ntype CoverProps = {\n  url: string\n  alt: string\n}\n\nexport const Cover = ({ url, alt }: CoverProps) => (\n  <img className=\"Cover\" src={url} alt={alt} />\n)\n","import './HorizontalSlide.scss'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport { buildCoverUrl, buildItemUrl } from '../util'\nimport { Cover } from './Cover'\nimport { Link } from 'react-router-dom'\nimport { Movie } from '../types/items/Movie'\nimport React from 'react'\nimport { Season } from '../types/items/Season'\nimport { Show } from '../types/items/Show'\nimport { useTranslation } from 'react-i18next'\n\ntype HorizontalSlideProps = {\n  id: string\n  items: (Movie | Season | Show)[]\n}\n\nexport const HorizontalSlide = ({ id, items }: HorizontalSlideProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"HorizontalSlide\" id={id}>\n      <Swiper\n        spaceBetween={15}\n        slidesPerView=\"auto\"\n        slidesOffsetBefore={20}\n        slidesOffsetAfter={20}\n        grabCursor\n      >\n        {items.length > 0 ? (\n          items.map((item, index) => (\n            <SwiperSlide key={index}>\n              <Link to={buildItemUrl(item)}>\n                <Cover url={buildCoverUrl(item.posterPath)} alt={item.title} />\n              </Link>\n            </SwiperSlide>\n          ))\n        ) : (\n          <SwiperSlide>\n            <h3>{t('Nothing found.')}</h3>\n          </SwiperSlide>\n        )}\n      </Swiper>\n    </div>\n  )\n}\n","import './Find.scss'\nimport FlexSearch, { Index } from 'flexsearch'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { movieSelector, moviesSelector } from '../../store/movies/selectors'\nimport { showSelector, showsSelector } from '../../store/shows/selectors'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { HorizontalSlide } from '../../components/HorizontalSlide'\nimport { Item } from '../../types/items/Item'\nimport { RootState } from '../../store'\nimport { notUndefined } from '../../util'\nimport { useAsyncMemo } from 'use-async-memo'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\nconst QUERY_PARAMETER = 'q'\n\nconst buildIndex = <T extends Item>(\n  items: T[],\n  itemToText: (item: T) => string,\n) => {\n  const index: Index<string> = FlexSearch.create()\n  items.forEach((item) => {\n    // a workaround to use strings as keys\n    const key = (item.id as unknown) as number\n\n    index.add(key, itemToText(item))\n  })\n  return index\n}\n\nexport const Find = () => {\n  const { t } = useTranslation()\n  const history = useHistory()\n  const location = useLocation()\n\n  const initialQuery = useMemo(\n    () => new URLSearchParams(location.search).get(QUERY_PARAMETER),\n    [location],\n  )\n\n  const { movies, shows } = useSelector((state: RootState) => ({\n    movies: state.movies,\n    shows: state.shows,\n  }))\n\n  const [query, setQuery] = useState(initialQuery || '')\n\n  const moviesIndex = useMemo(\n    () =>\n      buildIndex(\n        moviesSelector(movies),\n        (movie) => `${movie.title};${movie.summary}`,\n      ),\n    [movies],\n  )\n  const showsIndex = useMemo(\n    () =>\n      buildIndex(\n        showsSelector(shows),\n        (show) => `${show.title};${show.summary}`,\n      ),\n    [shows],\n  )\n\n  const foundMovies = useAsyncMemo(async () => {\n    const result = await moviesIndex.search(query)\n    return result.map((id) => movieSelector(id)(movies)).filter(notUndefined)\n  }, [moviesIndex, query])\n  const foundShows = useAsyncMemo(async () => {\n    const result = await showsIndex.search(query)\n    return result.map((id) => showSelector(id)(shows)).filter(notUndefined)\n  }, [showsIndex, query])\n\n  const handleInputChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>) => {\n      history.replace(`/app/find?${QUERY_PARAMETER}=${event.target.value}`)\n      setQuery(event.target.value)\n    },\n    [history, setQuery],\n  )\n\n  return (\n    <div className=\"Find\">\n      <form>\n        <input\n          autoFocus\n          value={query}\n          placeholder={t('Search your library')}\n          onChange={handleInputChange}\n        />\n      </form>\n\n      {foundMovies && Object.keys(foundMovies).length > 0 && (\n        <section>\n          <h2>{t('Movies')}</h2>\n          <HorizontalSlide items={foundMovies} id=\"movies\" />\n        </section>\n      )}\n\n      {foundShows && Object.keys(foundShows).length > 0 && (\n        <section>\n          <h2>{t('TV shows')}</h2>\n          <HorizontalSlide items={foundShows} id=\"shows\" />\n        </section>\n      )}\n    </div>\n  )\n}\n","import { AccPerson, Person } from '../types/items/Person'\nimport {\n  inProgressSelector as inProgressMoviesSelector,\n  moviesPersonSelector,\n  recentlyWatchedSelector as recentlyWatchedMoviesSelector,\n} from './movies/selectors'\nimport {\n  inProgressSelector as inProgressSeasonsSelector,\n  recentlyWatchedSelector as recentlyWatchedSeasonsSelector,\n  seasonsPersonSelector,\n} from './seasons/selectors'\nimport { ItemKind } from '../types/items/Item'\nimport { MoviesState } from './movies/types'\nimport { RootState } from '.'\nimport { SeasonsState } from './seasons/types'\nimport { createSelector } from 'reselect'\n\nexport const inProgressSelector = createSelector(\n  [\n    (state: RootState) => inProgressMoviesSelector(state.movies),\n    (state: RootState) => inProgressSeasonsSelector(state.seasons),\n  ],\n  (movies, seasons) => [...movies, ...seasons],\n)\n\nexport const recentlyWatchedSelector = createSelector(\n  [\n    (state: RootState) => recentlyWatchedMoviesSelector(state.movies),\n    (state: RootState) => recentlyWatchedSeasonsSelector(state.seasons),\n  ],\n  (movies, seasons) => [...movies, ...seasons],\n)\n\nexport const personSelector = (id: string) =>\n  createSelector<\n    { movies: MoviesState; seasons: SeasonsState },\n    Person[],\n    AccPerson | undefined\n  >(\n    [\n      ({ movies }) => moviesPersonSelector(id, (movie) => movie.cast)(movies),\n      ({ movies }) => moviesPersonSelector(id, (movie) => movie.crew)(movies),\n      ({ seasons }) =>\n        seasonsPersonSelector(id, (season) => season.cast)(seasons),\n      ({ seasons }) =>\n        seasonsPersonSelector(id, (season) => season.crew)(seasons),\n    ],\n    (moviesCast, moviesCrew, seasonsCast, seasonsCrew) => {\n      const roles = [\n        ...moviesCast,\n        ...moviesCrew,\n        ...seasonsCast,\n        ...seasonsCrew,\n      ]\n\n      return roles.reduce<AccPerson | undefined>(\n        (acc, person) => ({\n          kind: ItemKind.Person,\n          id,\n          tmdbId: person.tmdbId,\n          name: person.name,\n          gender: person.gender,\n          profilePath: person.profilePath,\n          jobs:\n            acc !== undefined\n              ? [...new Set([...acc.jobs, person.job])]\n              : [person.job],\n        }),\n        undefined,\n      )\n    },\n  )\n","import './Authenticated.scss'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\ntype AuthenticatedProps = {\n  onIndex: () => void\n}\n\nexport const Authenticated = ({ onIndex }: AuthenticatedProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"Authenticated\">\n      <h2>{t('Get started')}</h2>\n      <p>\n        {t(\n          \"You signed into a cloud service, but we didn't find any movies or TV shows.\",\n        )}\n      </p>\n      <p>\n        {t(\n          \"It's likely that you just have to move some of your files around and create some folders to make it work.\",\n        )}\n      </p>\n      <p>\n        {t(\n          \"Reference the getting started guide to learn how to organize your files so that Plaain finds them. After you're done, just re-index.\",\n        )}\n      </p>\n      <div className=\"Authenticated__buttons\">\n        <a\n          className=\"button primary\"\n          href=\"https://github.com/jonhue/plaain#getting-started\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          {t('Getting started')}\n        </a>\n        <button onClick={onIndex}>{t('Index')}</button>\n      </div>\n    </div>\n  )\n}\n","import './ForYou.scss'\nimport { HorizontalSlide } from './HorizontalSlide'\nimport { Movie } from '../types/items/Movie'\nimport React from 'react'\nimport { Season } from '../types/items/Season'\nimport { useTranslation } from 'react-i18next'\n\ntype ForYouProps = {\n  inProgress: (Movie | Season)[]\n  recentlyWatched: (Movie | Season)[]\n}\n\nexport const ForYou = ({ inProgress, recentlyWatched }: ForYouProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"ForYou\">\n      {inProgress.length > 0 && (\n        <section>\n          <h2>{t('Continue watching')}</h2>\n          <HorizontalSlide items={inProgress} id=\"inProgress\" />\n        </section>\n      )}\n\n      {recentlyWatched.length > 0 && (\n        <section>\n          <h2>{t('Recently watched')}</h2>\n          <HorizontalSlide items={recentlyWatched} id=\"recentlyWatched\" />\n        </section>\n      )}\n    </div>\n  )\n}\n","import './Setup.scss'\nimport { Link } from 'react-router-dom'\nimport { Movie } from '../../types/items/Movie'\nimport React from 'react'\nimport { Show } from '../../types/items/Show'\nimport { useTranslation } from 'react-i18next'\n\ntype SetupProps = {\n  movies: Movie[]\n  shows: Show[]\n}\n\nexport const Setup = ({ movies, shows }: SetupProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"Setup\">\n      <h2>{t('Get started')}</h2>\n      <p>\n        {t(\n          \"Here, you'll be able to find your recently watched movie or the show you didn't finish yet.\",\n        )}\n      </p>\n      <div className=\"Setup__buttons\">\n        {movies.length > 0 && (\n          <Link to=\"/app/movies\" className=\"button\">\n            {t('Discover your movies')}\n          </Link>\n        )}\n        {shows.length > 0 && (\n          <Link to=\"/app/shows\" className=\"button\">\n            {t('Discover your shows')}\n          </Link>\n        )}\n      </div>\n    </div>\n  )\n}\n","import './Unauthenticated.scss'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\n\nexport const Unauthenticated = () => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"Unauthenticated\">\n      <h2>{t('Get started')}</h2>\n      <p>\n        {t(\n          'To watch your movies and TV shows, you first have to sign in with the cloud service that hosts your media.',\n        )}\n      </p>\n      <Link to=\"/app/settings\" className=\"button\">\n        {t('Authenticate')}\n      </Link>\n      <p className=\"small\">\n        <Trans>\n          Note that Plaain may <span className=\"bold\">not</span> be used to\n          stream pirated content or publicly share your private media library.\n          You may only connect to your private cloud storage.\n        </Trans>\n      </p>\n    </div>\n  )\n}\n","import React, { useCallback } from 'react'\nimport {\n  inProgressSelector,\n  recentlyWatchedSelector,\n} from '../../store/selectors'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Authenticated } from '../../components/get_started/Authenticated'\nimport { ForYou } from '../../components/ForYou'\nimport { RootState } from '../../store'\nimport { Setup } from '../../components/get_started/Setup'\nimport { Unauthenticated } from '../../components/get_started/Unauthenticated'\nimport { index } from '../../store/thunks'\nimport { load } from '../../store/ui/thunks'\nimport { moviesSelector } from '../../store/movies/selectors'\nimport { providersSelector } from '../../store/auth/selectors'\nimport { showsSelector } from '../../store/shows/selectors'\nimport { sortByLastWatched } from '../../util'\n\nexport const Home = () => {\n  const dispatch = useDispatch()\n\n  const { inProgress, movies, providers, recentlyWatched, shows } = useSelector(\n    (state: RootState) => ({\n      inProgress: sortByLastWatched(inProgressSelector(state)),\n      movies: moviesSelector(state.movies),\n      providers: providersSelector(state.auth),\n      recentlyWatched: sortByLastWatched(recentlyWatchedSelector(state)),\n      shows: showsSelector(state.shows),\n    }),\n  )\n\n  const handleIndex = useCallback(() => {\n    dispatch(load(index(providers)))\n  }, [dispatch, providers])\n\n  return inProgress.length > 0 || recentlyWatched.length > 0 ? (\n    <ForYou inProgress={inProgress} recentlyWatched={recentlyWatched} />\n  ) : providers.length === 0 ? (\n    <Unauthenticated />\n  ) : movies.length === 0 && shows.length === 0 ? (\n    <Authenticated onIndex={handleIndex} />\n  ) : (\n    <Setup movies={movies} shows={shows} />\n  )\n}\n","import './Backdrop.scss'\nimport React from 'react'\n\ntype BackdropProps = {\n  url: string\n}\n\nexport const Backdrop = ({ url }: BackdropProps) => (\n  <picture className=\"Backdrop\">\n    <img src={url} alt=\"backdrop\" />\n  </picture>\n)\n","import { File } from '../types/files/File'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\ntype FileListProps = {\n  files: File[]\n}\n\nexport const FileList = ({ files }: FileListProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"FileList\">\n      {files.map((file, index) => {\n        return (\n          <p className=\"small\" key={index}>\n            {file.name}\n          </p>\n        )\n      })}\n      {files.length === 0 && <p className=\"small\">{t('None')}</p>}\n    </div>\n  )\n}\n","import './PersonList.scss'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Person } from '../types/items/Person'\nimport { buildItemUrl } from '../util'\nimport { useTranslation } from 'react-i18next'\n\nconst WRAPPED_SIZE = 10\n\ntype PersonListProps<T extends Person> = {\n  people: T[]\n\n  details: (person: T) => string\n}\n\nexport const PersonList = <T extends Person>({\n  people,\n  details,\n}: PersonListProps<T>) => {\n  const { t } = useTranslation()\n\n  const [isWrapped, setIsWrapped] = useState(true)\n  const toggleIsWrapped = useCallback(() => setIsWrapped((state) => !state), [\n    setIsWrapped,\n  ])\n\n  const displayedPeople = useMemo(\n    () => people.slice(0, isWrapped ? WRAPPED_SIZE : people.length),\n    [isWrapped, people],\n  )\n\n  return (\n    <div className=\"PersonList\">\n      {people.length > 0 ? (\n        displayedPeople.map((person, index) => {\n          return (\n            <p key={index}>\n              <Link to={buildItemUrl(person)}>{person.name}</Link> ·{' '}\n              <span>{details(person)}</span>\n            </p>\n          )\n        })\n      ) : (\n        <p>{t('None')}</p>\n      )}\n      {people.length > WRAPPED_SIZE && (\n        <span onClick={toggleIsWrapped}>\n          {isWrapped ? t('Show more') : t('Show less')}\n        </span>\n      )}\n    </div>\n  )\n}\n","import './Movie.scss'\nimport React, { useCallback } from 'react'\nimport { RouteComponentProps, useHistory } from 'react-router-dom'\nimport {\n  buildBackdropUrl,\n  buildCoverUrl,\n  isInProgress,\n  splitHoursAndMinutes,\n} from '../../util'\nimport { Backdrop } from '../../components/Backdrop'\nimport { Cover } from '../../components/Cover'\nimport { FileList } from '../../components/FileList'\nimport { NotFound } from '../NotFound'\nimport { PersonList } from '../../components/PersonList'\nimport { RootState } from '../../store'\nimport classNames from 'classnames'\nimport { movieSelector } from '../../store/movies/selectors'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\ninterface MovieParams {\n  id: string\n}\n\ntype MovieProps = RouteComponentProps<MovieParams>\n\nexport const Movie = ({ match }: MovieProps) => {\n  const { t } = useTranslation()\n  const history = useHistory()\n\n  const movie = useSelector((state: RootState) =>\n    movieSelector(match.params.id)(state.movies),\n  )\n\n  const handleContinue = useCallback(() => {\n    if (movie === undefined) return\n    history.push(\n      `/player?id=${movie.id}&type=${movie.kind}&s=${movie.usage.progress}`,\n    )\n  }, [history, movie])\n\n  const handleWatch = useCallback(() => {\n    if (movie === undefined) return\n    history.push(`/player?id=${movie.id}&type=${movie.kind}`)\n  }, [history, movie])\n\n  return movie !== undefined ? (\n    <div className=\"Movie\">\n      <Backdrop url={buildBackdropUrl(movie.backdropPath)} />\n      <div className=\"Movie__details\">\n        <Cover url={buildCoverUrl(movie.posterPath)} alt=\"poster\" />\n        <h1>{movie.title}</h1>\n        <div className=\"Movie__information\">\n          <p className=\"small\">{new Date(movie.releaseDate).getFullYear()}</p>\n          {movie.duration && (\n            <p className=\"small\">{splitHoursAndMinutes(t, movie.duration)}</p>\n          )}\n        </div>\n        <div className=\"Movie__actions\">\n          {isInProgress(movie) && (\n            <button\n              className=\"primary\"\n              onClick={handleContinue}\n              disabled={movie.sources.length === 0}\n            >\n              {t('Continue')}\n            </button>\n          )}\n          <button\n            className={classNames({ primary: !isInProgress(movie) })}\n            onClick={handleWatch}\n            disabled={movie.sources.length === 0}\n          >\n            {t('Watch')}\n          </button>\n          <a\n            className=\"button\"\n            href={movie.trailerUrl}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {t('Play trailer')}\n          </a>\n        </div>\n        <p className=\"Movie__overview\">{movie.summary}</p>\n        <div className=\"Movie__people\">\n          <div className=\"Movie__people__cast\">\n            <h4>{t('Starring')}</h4>\n            <PersonList\n              people={movie.cast}\n              details={(person) => person.character}\n            />\n          </div>\n          <div className=\"Movie__people__crew\">\n            <h4>{t('Crew')}</h4>\n            <PersonList people={movie.crew} details={(person) => person.job} />\n          </div>\n        </div>\n      </div>\n      <div className=\"Movie__sources\">\n        <div>\n          <h4>{t('Sources')}</h4>\n          <div>\n            <div className=\"Movie__sources__versions\">\n              <h5>{t('Versions')}</h5>\n              <FileList files={movie.sources} />\n            </div>\n            <div className=\"Movie__sources__captions\">\n              <h5>{t('Subtitles')}</h5>\n              <FileList files={movie.captions} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <NotFound />\n  )\n}\n","import { Icon } from '../Icon'\nimport React from 'react'\n\ntype FindIconProps = {\n  color: string\n}\n\nexport const FindIcon = ({ color }: FindIconProps) => (\n  <Icon className=\"zoom\" width={24} height={24}>\n    <title>zoom</title>\n    <g fill={color}>\n      <line\n        fill=\"none\"\n        stroke={color}\n        x1=\"22\"\n        x2=\"15.656\"\n        y1=\"22\"\n        y2=\"15.656\"\n      />\n      <circle cx=\"10\" cy=\"10\" fill=\"none\" r=\"8\" stroke={color} />\n    </g>\n  </Icon>\n)\n","import './ItemGrid.scss'\nimport { buildCoverUrl, buildItemUrl } from '../util'\nimport { Cover } from './Cover'\nimport { Link } from 'react-router-dom'\nimport { Movie } from '../types/items/Movie'\nimport React from 'react'\nimport { Season } from '../types/items/Season'\nimport { Show } from '../types/items/Show'\nimport { useTranslation } from 'react-i18next'\n\ntype ItemGridProps = {\n  items: (Movie | Season | Show)[]\n}\n\nexport const ItemGrid = ({ items }: ItemGridProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"ItemGrid\">\n      {items.length > 0 ? (\n        items.map((item, index) => (\n          <div className=\"ItemGrid__item\" key={index}>\n            <Link to={buildItemUrl(item)}>\n              <Cover url={buildCoverUrl(item.posterPath)} alt={item.title} />\n            </Link>\n          </div>\n        ))\n      ) : (\n        <div className=\"ItemGrid__item\">\n          <h3>{t('Nothing found.')}</h3>\n        </div>\n      )}\n    </div>\n  )\n}\n","import './VerticalSlide.scss'\nimport { Swiper, SwiperSlide } from 'swiper/react'\nimport SwiperCore, { EffectCoverflow } from 'swiper'\nimport { buildCoverUrl, buildItemUrl } from '../util'\nimport { Cover } from './Cover'\nimport { Link } from 'react-router-dom'\nimport { Movie } from '../types/items/Movie'\nimport React from 'react'\nimport { Season } from '../types/items/Season'\nimport { Show } from '../types/items/Show'\nimport { useTranslation } from 'react-i18next'\n\nSwiperCore.use([EffectCoverflow])\n\ntype VerticalSlideProps = {\n  id: string\n  items: (Movie | Season | Show)[]\n  path: string\n}\n\nexport const VerticalSlide = ({ id, items, path }: VerticalSlideProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"VerticalSlide\" id={id}>\n      <Swiper\n        direction=\"vertical\"\n        slidesPerView=\"auto\"\n        grabCursor\n        effect=\"coverflow\"\n        coverflowEffect={{\n          rotate: 0,\n          stretch: 425,\n          depth: 150,\n          modifier: 1,\n          slideShadows: false,\n        }}\n        history={{\n          replaceState: true,\n          key: path,\n        }}\n      >\n        {items.length > 0 ? (\n          items.map((item, index) => (\n            <SwiperSlide data-history={item.id} key={index}>\n              <Link to={buildItemUrl(item)}>\n                <Cover url={buildCoverUrl(item.posterPath)} alt={item.title} />\n              </Link>\n            </SwiperSlide>\n          ))\n        ) : (\n          <SwiperSlide>\n            <h3>{t('Nothing found.')}</h3>\n          </SwiperSlide>\n        )}\n      </Swiper>\n    </div>\n  )\n}\n","import './Movies.scss'\nimport { Link, Redirect } from 'react-router-dom'\nimport { FindIcon } from '../../components/icons/Nucleo/FindIcon'\nimport { ItemGrid } from '../../components/ItemGrid'\nimport React from 'react'\nimport { RootState } from '../../store'\nimport { VerticalSlide } from '../../components/VerticalSlide'\nimport { moviesSelector } from '../../store/movies/selectors'\nimport { sortAlphabetically } from '../../util'\nimport styles from '../../_variables.scss'\nimport { useSelector } from 'react-redux'\n\nexport const Movies = () => {\n  const movies = useSelector((state: RootState) =>\n    sortAlphabetically(moviesSelector(state.movies), (movie) => movie.title),\n  )\n\n  return movies.length > 0 ? (\n    <div className=\"Movies\">\n      <div className=\"Movies__find\">\n        <Link to=\"/app/find\">\n          <FindIcon color={styles.white} />\n        </Link>\n      </div>\n      <VerticalSlide items={movies} path=\"movies\" id=\"movies\" />\n      <ItemGrid items={movies} />\n    </div>\n  ) : (\n    <Redirect to=\"/app\" />\n  )\n}\n","import { Icon } from '../Icon'\nimport React from 'react'\n\ntype ForYouIconProps = {\n  color: string\n}\n\nexport const ForYouIcon = ({ color }: ForYouIconProps) => (\n  <Icon className=\"popcorn\" width={24} height={24}>\n    <title>popcorn</title>\n    <g fill={color}>\n      <polygon fill=\"none\" points=\"21 7 3 7 5 23 19 23 21 7\" stroke={color} />\n      <path\n        d=\"M19,5a3,3,0,0,0-3-3,2.97,2.97,0,0,0-1.47.4,2.986,2.986,0,0,0-5.06,0A2.97,2.97,0,0,0,8,2,3,3,0,0,0,5,5\"\n        fill=\"none\"\n        stroke={color}\n      />\n      <line fill=\"none\" stroke={color} x1=\"9\" x2=\"8\" y1=\"23\" y2=\"7\" />\n      <line fill=\"none\" stroke={color} x1=\"15\" x2=\"16\" y1=\"23\" y2=\"7\" />\n    </g>\n  </Icon>\n)\n","import { Icon } from '../Icon'\nimport React from 'react'\n\ntype MovieIconProps = {\n  color: string\n}\n\nexport const MovieIcon = ({ color }: MovieIconProps) => (\n  <Icon className=\"movie-61\" width={24} height={24}>\n    <title>movie 61</title>\n    <g fill={color}>\n      <line fill=\"none\" stroke={color} x1=\"1\" x2=\"1\" y1=\"1\" y2=\"23\" />\n      <line fill=\"none\" stroke={color} x1=\"23\" x2=\"23\" y1=\"1\" y2=\"23\" />\n      <rect height=\"22\" width=\"14\" fill=\"none\" stroke={color} x=\"5\" y=\"1\" />\n      <line fill=\"none\" stroke={color} x1=\"1\" x2=\"23\" y1=\"12\" y2=\"12\" />\n      <line fill=\"none\" stroke={color} x1=\"1\" x2=\"5\" y1=\"8\" y2=\"8\" />\n      <line fill=\"none\" stroke={color} x1=\"1\" x2=\"5\" y1=\"4\" y2=\"4\" />\n      <line fill=\"none\" stroke={color} x1=\"19\" x2=\"23\" y1=\"8\" y2=\"8\" />\n      <line fill=\"none\" stroke={color} x1=\"19\" x2=\"23\" y1=\"4\" y2=\"4\" />\n      <line fill=\"none\" stroke={color} x1=\"19\" x2=\"23\" y1=\"20\" y2=\"20\" />\n      <line fill=\"none\" stroke={color} x1=\"19\" x2=\"23\" y1=\"16\" y2=\"16\" />\n      <line fill=\"none\" stroke={color} x1=\"1\" x2=\"5\" y1=\"20\" y2=\"20\" />\n      <line fill=\"none\" stroke={color} x1=\"1\" x2=\"5\" y1=\"16\" y2=\"16\" />\n    </g>\n  </Icon>\n)\n","import { Icon } from '../Icon'\nimport React from 'react'\n\ntype SettingsIconProps = {\n  color: string\n}\n\nexport const SettingsIcon = ({ color }: SettingsIconProps) => (\n  <Icon className=\"settings-gear\" width={24} height={24}>\n    <title>settings gear</title>\n    <g fill={color} stroke={color}>\n      <circle cx=\"12\" cy=\"12\" fill=\"none\" r=\"3\" />\n      <path\n        d=\"M20,12a8.049,8.049,0,0,0-.188-1.713l2.714-2.055-2-3.464L17.383,6.094a7.987,7.987,0,0,0-2.961-1.719L14,1H10L9.578,4.375A7.987,7.987,0,0,0,6.617,6.094L3.474,4.768l-2,3.464,2.714,2.055a7.9,7.9,0,0,0,0,3.426L1.474,15.768l2,3.464,3.143-1.326a7.987,7.987,0,0,0,2.961,1.719L10,23h4l.422-3.375a7.987,7.987,0,0,0,2.961-1.719l3.143,1.326,2-3.464-2.714-2.055A8.049,8.049,0,0,0,20,12Z\"\n        fill=\"none\"\n        stroke={color}\n      />\n    </g>\n  </Icon>\n)\n","import { Icon } from '../Icon'\nimport React from 'react'\n\ntype ShowProps = {\n  color: string\n}\n\nexport const ShowIcon = ({ color }: ShowProps) => (\n  <Icon className=\"desktop-screen\" width={24} height={24}>\n    <title>desktop screen</title>\n    <g fill={color}>\n      <line fill=\"none\" stroke={color} x1=\"12\" x2=\"12\" y1=\"22\" y2=\"18\" />\n      <line fill=\"none\" stroke={color} x1=\"6\" x2=\"18\" y1=\"22\" y2=\"22\" />\n      <rect height=\"16\" width=\"22\" fill=\"none\" stroke={color} x=\"1\" y=\"2\" />\n    </g>\n  </Icon>\n)\n","import './Tab.scss'\nimport React, { FunctionComponent } from 'react'\nimport { matchPath, useLocation } from 'react-router'\nimport { Link } from 'react-router-dom'\nimport classNames from 'classnames'\n\ntype TabProps = {\n  to: string\n  exact?: boolean\n  disabled?: boolean\n}\n\nexport const Tab: FunctionComponent<TabProps> = ({\n  children,\n  to,\n  exact,\n  disabled,\n}) => {\n  const location = useLocation()\n  const isActive = !!matchPath(location.pathname, { path: to, exact })\n\n  return (\n    <Link className={classNames('Tab', { active: isActive, disabled })} to={to}>\n      {children}\n    </Link>\n  )\n}\n","import './Nav.scss'\nimport { ForYouIcon } from './icons/Nucleo/ForYouIcon'\nimport { MovieIcon } from './icons/Nucleo/MovieIcon'\nimport React from 'react'\nimport { SettingsIcon } from './icons/Nucleo/SettingsIcon'\nimport { ShowIcon } from './icons/Nucleo/ShowIcon'\nimport { Tab } from './Tab'\nimport styles from '../_variables.scss'\n\ntype NavProps = {\n  moviesDisabled?: boolean\n  showsDisabled?: boolean\n}\n\nexport const Nav = ({ moviesDisabled, showsDisabled }: NavProps) => (\n  <div className=\"Nav\">\n    <Tab to=\"/app\" exact>\n      <ForYouIcon color={styles.white} />\n      <p>For you</p>\n    </Tab>\n    <Tab disabled={moviesDisabled} to=\"/app/movies\">\n      <MovieIcon color={styles.white} />\n      <p>Movies</p>\n    </Tab>\n    <Tab disabled={showsDisabled} to=\"/app/shows\">\n      <ShowIcon color={styles.white} />\n      <p>Shows</p>\n    </Tab>\n    <Tab to=\"/app/settings\">\n      <SettingsIcon color={styles.white} />\n      <p>Settings</p>\n    </Tab>\n  </div>\n)\n","import './Person.scss'\nimport React, { useMemo } from 'react'\nimport { buildBackdropUrl, buildCoverUrl } from '../../util'\nimport { Backdrop } from '../../components/Backdrop'\nimport { Cover } from '../../components/Cover'\nimport { HorizontalSlide } from '../../components/HorizontalSlide'\nimport { NotFound } from '../NotFound'\nimport { RootState } from '../../store'\nimport { RouteComponentProps } from 'react-router'\nimport { moviesByPersonSelector } from '../../store/movies/selectors'\nimport { personSelector } from '../../store/selectors'\nimport { seasonsByPersonSelector } from '../../store/seasons/selectors'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\ninterface PersonParams {\n  id: string\n}\n\ntype PersonProps = RouteComponentProps<PersonParams>\n\nexport const Person = ({ match }: PersonProps) => {\n  const { t } = useTranslation()\n\n  const person = useSelector((state: RootState) =>\n    personSelector(match.params.id)(state),\n  )\n  const { movies, seasons } = useSelector((state: RootState) => ({\n    movies: person && moviesByPersonSelector(person.id)(state.movies),\n    seasons: person && seasonsByPersonSelector(person.id)(state.seasons),\n  }))\n\n  const backdropPath = useMemo(() => {\n    if (movies !== undefined && movies.length > 0) return movies[0].backdropPath\n    else if (seasons !== undefined && seasons.length > 0)\n      return seasons[0].showBackdropPath\n  }, [movies, seasons])\n\n  return person !== undefined &&\n    movies !== undefined &&\n    seasons !== undefined ? (\n    <div className=\"Person\">\n      <Backdrop url={buildBackdropUrl(backdropPath)} />\n      <div className=\"Person__details\">\n        <Cover url={buildCoverUrl(person.profilePath)} alt=\"profile\" />\n        <h1>{person.name}</h1>\n        <h5>{t('Known as')}</h5>\n        <p>{person.jobs.join(', ')}</p>\n      </div>\n\n      {movies.length > 0 && (\n        <div className=\"Person__movies\">\n          <h2>{t('Movies')}</h2>\n          <HorizontalSlide items={movies} id=\"movies\" />\n        </div>\n      )}\n\n      {seasons.length > 0 && (\n        <div className=\"Person__seasons\">\n          <h2>{t('TV seasons')}</h2>\n          <HorizontalSlide items={seasons} id=\"seasons\" />\n        </div>\n      )}\n    </div>\n  ) : (\n    <NotFound />\n  )\n}\n","import './EpisodeEntry.scss'\nimport { Episode } from '../types/items/Episode'\nimport React from 'react'\nimport classNames from 'classnames'\nimport { useTranslation } from 'react-i18next'\n\ntype EpisodeEntryProps = {\n  episode: Episode\n\n  onClick: () => void\n}\n\nexport const EpisodeEntry = ({ episode, onClick }: EpisodeEntryProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div\n      className={classNames('EpisodeEntry', {\n        disabled: episode.sources.length === 0,\n      })}\n      onClick={onClick}\n    >\n      <div className=\"EpisodeEntry__number\">{episode.number}</div>\n      <div className=\"EpisodeEntry__details\">\n        <h2>{episode.title}</h2>\n        <p className=\"small\">\n          {t('Aired')} {new Date(episode.airDate).toDateString()}\n        </p>\n        <p>{episode.summary}</p>\n      </div>\n    </div>\n  )\n}\n","import './Season.scss'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { RouteComponentProps, useHistory } from 'react-router-dom'\nimport { buildBackdropUrl, buildCoverUrl, sortByNumber } from '../../util'\nimport { Backdrop } from '../../components/Backdrop'\nimport { Cover } from '../../components/Cover'\nimport { Episode } from '../../types/items/Episode'\nimport { EpisodeEntry } from '../../components/EpisodeEntry'\nimport { NotFound } from '../NotFound'\nimport { PersonList } from '../../components/PersonList'\nimport { RootState } from '../../store'\nimport classNames from 'classnames'\nimport { episodesBySeasonSelector } from '../../store/episodes/selectors'\nimport { seasonSelector } from '../../store/seasons/selectors'\nimport { showSelector } from '../../store/shows/selectors'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\ninterface SeasonParams {\n  id: string\n}\n\ntype SeasonProps = RouteComponentProps<SeasonParams>\n\nexport const Season = ({ match }: SeasonProps) => {\n  const { t } = useTranslation()\n  const history = useHistory()\n\n  const season = useSelector((state: RootState) =>\n    seasonSelector(match.params.id)(state.seasons),\n  )\n  const { show, episodes } = useSelector((state: RootState) => ({\n    show: season && showSelector(season.showId)(state.shows),\n    episodes:\n      season &&\n      sortByNumber(\n        episodesBySeasonSelector(season.id)(state.episodes),\n        (episode) => episode.number,\n      ),\n  }))\n  const currentEpisode = useMemo(() => {\n    if (season !== undefined && episodes !== undefined)\n      return episodes.find(\n        (episode) => episode.number === season.usage.progress,\n      )\n  }, [season, episodes])\n\n  const [showEpisodes, setShowEpisodes] = useState(false)\n  const toggleEpisodes = useCallback(() => setShowEpisodes((state) => !state), [\n    setShowEpisodes,\n  ])\n\n  const handleContinue = useCallback(\n    (episode: Episode) => () => {\n      history.push(\n        `/player?id=${episode.id}&type=${episode.kind}&s=${episode.usage.progress}`,\n      )\n    },\n    [history],\n  )\n\n  const handleWatch = useCallback(\n    (episodeNumber: number) => () => {\n      if (episodes === undefined) return\n\n      const episode = episodes.find(\n        (episode) => episode.number === episodeNumber,\n      )!\n\n      history.push(`/player?id=${episode.id}&type=${episode.kind}`)\n    },\n    [episodes, history],\n  )\n\n  return show !== undefined &&\n    season !== undefined &&\n    episodes !== undefined ? (\n    <div className=\"Season\">\n      <Backdrop url={buildBackdropUrl(season.showBackdropPath)} />\n      <div className=\"Season__details\">\n        <Cover url={buildCoverUrl(season.posterPath)} alt=\"poster\" />\n        <h1>\n          {t('Season')} {season.number}\n        </h1>\n        <div className=\"Season__information\">\n          <p className=\"small\">{show.title}</p>\n          <p className=\"small\">{new Date(season.airDate).getFullYear()}</p>\n        </div>\n        <div className=\"Season__actions\">\n          {currentEpisode !== undefined && (\n            <button\n              className=\"primary\"\n              onClick={handleContinue(currentEpisode)}\n              disabled={currentEpisode.sources.length === 0}\n            >\n              {t('Continue episode')} {currentEpisode.number}\n            </button>\n          )}\n          {episodes.length > 0 && (\n            <button\n              className={classNames({ primary: currentEpisode === undefined })}\n              onClick={handleWatch(0)}\n              disabled={episodes[0].sources.length === 0}\n            >\n              {t('Watch')}\n            </button>\n          )}\n          <a\n            className=\"button\"\n            id=\"trailer\"\n            href={season.trailerUrl}\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            {t('Play trailer')}\n          </a>\n        </div>\n        <div className=\"Season__episodes\">\n          <div\n            className={classNames('Season__episodes__list', {\n              shown: showEpisodes,\n            })}\n          >\n            {episodes\n              .slice(0, showEpisodes ? episodes.length : 0)\n              .map((episode, index) => (\n                <EpisodeEntry\n                  episode={episode}\n                  onClick={handleWatch(episode.number)}\n                  key={index}\n                />\n              ))}\n          </div>\n          {episodes.length > 0 && (\n            <div className=\"Season__episodes__toggle\" onClick={toggleEpisodes}>\n              {showEpisodes ? t('Hide episodes') : t('Show all episodes')}\n            </div>\n          )}\n        </div>\n        <p className=\"Season__overview\">{season.summary}</p>\n        <div className=\"Season__people\">\n          <div className=\"Season__people__cast\">\n            <h4>{t('Starring')}</h4>\n            <PersonList\n              people={season.cast}\n              details={(person) => person.character}\n            />\n          </div>\n          <div className=\"Season__people__crew\">\n            <h4>{t('Crew')}</h4>\n            <PersonList people={season.crew} details={(person) => person.job} />\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <NotFound />\n  )\n}\n","import { Icon } from '../Icon'\nimport React from 'react'\n\ntype AddIconProps = {\n  color: string\n}\n\nexport const AddIcon = ({ color }: AddIconProps) => (\n  <Icon className=\"e-add\" width={32} height={32}>\n    <title>e add</title>\n    <g fill={color} stroke={color}>\n      <line fill=\"none\" stroke={color} x1=\"16\" x2=\"16\" y1=\"2\" y2=\"30\" />\n      <line fill=\"none\" stroke={color} x1=\"30\" x2=\"2\" y1=\"16\" y2=\"16\" />\n    </g>\n  </Icon>\n)\n","import './ProviderButton.scss'\nimport React from 'react'\n\ntype ProviderButtonProps = {\n  className?: string\n  icon: JSX.Element\n\n  onClick: (event: React.MouseEvent) => void\n}\n\nexport const ProviderButton = ({\n  className,\n  icon,\n  onClick,\n}: ProviderButtonProps) => (\n  <div className=\"ProviderButton\">\n    <button className={className} onClick={onClick}>\n      {icon}\n    </button>\n  </div>\n)\n","import './ChooseProvider.scss'\nimport { PROVIDER_KINDS, ProviderKind } from '../../types/providers/Provider'\nimport React, { useCallback } from 'react'\nimport { ProviderButton } from '../ProviderButton'\nimport { buildProviderIcon } from '../../util'\nimport styles from '../../_variables.scss'\nimport { useTranslation } from 'react-i18next'\n\ntype ChooseProviderProps = {\n  onChoose: (kind: ProviderKind) => Promise<void>\n}\n\nexport const ChooseProvider = ({ onChoose }: ChooseProviderProps) => {\n  const { t } = useTranslation()\n\n  const handleChoose = useCallback(\n    (kind: ProviderKind) => () => onChoose(kind),\n    [onChoose],\n  )\n\n  return (\n    <div className=\"ChooseProvider\">\n      <h2>{t('Add a provider')}</h2>\n      <p>\n        {t(\n          'Select which service you want to use to stream your movies & shows.',\n        )}\n      </p>\n      <div className=\"ChooseProvider__providers\">\n        {PROVIDER_KINDS.map((kind, index) => (\n          <ProviderButton\n            icon={buildProviderIcon(kind, styles.white)}\n            onClick={handleChoose(kind)}\n            key={index}\n          />\n        ))}\n      </div>\n    </div>\n  )\n}\n","import './Modal.scss'\nimport React, { FunctionComponent, useRef } from 'react'\nimport classNames from 'classnames'\nimport useOnClickOutside from 'use-onclickoutside'\n\ntype ModalProps = {\n  isActive: boolean\n\n  onClose: () => void\n}\n\nexport const Modal: FunctionComponent<ModalProps> = ({\n  isActive,\n  onClose,\n  children,\n}) => {\n  const modalRef = useRef(null)\n  useOnClickOutside(modalRef, onClose)\n\n  return (\n    <div className={classNames('Modal', { active: isActive })}>\n      <div className=\"Modal__wrapper\" ref={modalRef}>\n        {children}\n      </div>\n    </div>\n  )\n}\n","import { Icon } from '../Icon'\nimport React from 'react'\n\ntype CheckIconProps = {\n  color: string\n}\n\nexport const CheckIcon = ({ color }: CheckIconProps) => (\n  <Icon className=\"c-check\" width={24} height={24}>\n    <title>c check</title>\n    <g fill={color}>\n      <path\n        d=\"M12,0A12,12,0,1,0,24,12,12.035,12.035,0,0,0,12,0ZM10,17.414,4.586,12,6,10.586l4,4,8-8L19.414,8Z\"\n        fill={color}\n      />\n    </g>\n  </Icon>\n)\n","import './ProviderForm.scss'\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\nimport { CheckIcon } from '../icons/Nucleo/CheckIcon'\nimport { Provider } from '../../types/providers/Provider'\nimport classNames from 'classnames'\nimport styles from '../../_variables.scss'\nimport { useTranslation } from 'react-i18next'\n\ntype ProviderFormProps = {\n  submitCaption: string\n  provider?: Provider\n\n  onSubmit: (\n    moviesPath: string | undefined,\n    showsPath: string | undefined,\n  ) => void\n}\n\ntype ProviderFormState = {\n  moviesPath?: string\n  showsPath?: string\n}\n\nexport const ProviderForm = ({\n  submitCaption,\n  provider,\n  onSubmit,\n}: ProviderFormProps) => {\n  const { t } = useTranslation()\n\n  const initalState = useMemo<ProviderFormState>(\n    () => ({\n      moviesPath: provider?.moviesPath,\n      showsPath: provider?.showsPath,\n    }),\n    [provider],\n  )\n  const [state, setState] = useState<ProviderFormState>(initalState)\n\n  const handleChange = useCallback(\n    (event: React.ChangeEvent<HTMLInputElement>): void => {\n      const target = event.currentTarget\n      setState((state) => ({\n        ...state,\n        [target.name]: target.value === '' ? undefined : target.value,\n      }))\n    },\n    [setState],\n  )\n\n  const handleSubmit = useCallback(\n    (event: React.FormEvent<HTMLFormElement>): void => {\n      event.preventDefault()\n      onSubmit(state.moviesPath, state.showsPath)\n    },\n    [onSubmit, state],\n  )\n\n  const isSetupInput = useCallback(\n    (value: string | undefined) => value !== undefined,\n    [],\n  )\n\n  const isValidInput = useCallback(\n    (value: string | undefined) => value !== undefined && value.startsWith('/'),\n    [],\n  )\n\n  const isValid = useMemo(\n    () =>\n      (!isSetupInput(state.moviesPath) || isValidInput(state.moviesPath)) &&\n      (!isSetupInput(state.showsPath) || isValidInput(state.showsPath)),\n    [isSetupInput, isValidInput, state],\n  )\n\n  useEffect(() => {\n    setState(initalState)\n  }, [initalState, setState])\n\n  return (\n    <form className=\"ProviderForm\" onSubmit={handleSubmit}>\n      <label>\n        {t('Movies path')}\n        <p className=\"small\">\n          {t(\n            'The path from your home directory to where you keep your movies.',\n          )}\n        </p>\n        <div\n          className={classNames('ProviderForm__input', {\n            setup: isSetupInput(state.moviesPath),\n            valid: isValidInput(state.moviesPath),\n          })}\n        >\n          <input\n            type=\"text\"\n            name=\"moviesPath\"\n            value={state.moviesPath || ''}\n            placeholder=\"/Plaain/movies\"\n            onChange={handleChange}\n          />\n          <CheckIcon color={styles.white} />\n        </div>\n      </label>\n\n      <label>\n        {t('Shows path')}\n        <p className=\"small\">\n          {t('The path from your home directory to where you keep your shows.')}\n        </p>\n        <div\n          className={classNames('ProviderForm__input', {\n            setup: isSetupInput(state.showsPath),\n            valid: isValidInput(state.showsPath),\n          })}\n        >\n          <input\n            type=\"text\"\n            name=\"showsPath\"\n            value={state.showsPath || ''}\n            placeholder=\"/Plaain/shows\"\n            onChange={handleChange}\n          />\n          <CheckIcon color={styles.white} />\n        </div>\n      </label>\n\n      <div className=\"ProviderForm__actions\">\n        <button type=\"submit\" disabled={!isValid}>\n          {submitCaption}\n        </button>\n      </div>\n    </form>\n  )\n}\n","import './SetupProvider.scss'\nimport { ProviderForm } from './ProviderForm'\nimport React from 'react'\nimport { useTranslation } from 'react-i18next'\n\ntype SetupProviderProps = {\n  onSetup: (\n    moviesPath: string | undefined,\n    showsPath: string | undefined,\n  ) => void\n}\n\nexport const SetupProvider = ({ onSetup }: SetupProviderProps) => {\n  const { t } = useTranslation()\n\n  return (\n    <div className=\"SetupProvider\">\n      <h2>{t('Setup your provider')}</h2>\n      <p>\n        {t(\n          \"All that's left is to tell Plaain where to look for your movies and shows. You can always skip this step and come back later.\",\n        )}\n      </p>\n      <ProviderForm submitCaption={t('Complete')} onSubmit={onSetup} />\n    </div>\n  )\n}\n","import './AddProviderModal.scss'\nimport { Provider, ProviderKind } from '../../types/providers/Provider'\nimport React, { useCallback, useState } from 'react'\nimport { AuthResponse } from '../../services/auth/types'\nimport { ChooseProvider } from './ChooseProvider'\nimport { Modal } from '../Modal'\nimport { SetupProvider } from './SetupProvider'\n\ntype AddProviderModalProps = {\n  isActive: boolean\n\n  onClose: () => void\n  onSetupAuth: (kind: ProviderKind) => Promise<AuthResponse | undefined>\n  onAddProvider: (provider: Provider) => void\n}\n\nexport const AddProviderModal = ({\n  isActive,\n  onClose,\n  onSetupAuth,\n  onAddProvider,\n}: AddProviderModalProps) => {\n  const [authResponse, setAuthResponse] = useState<AuthResponse | undefined>()\n\n  const handleChoose = useCallback(\n    async (kind: ProviderKind) => {\n      const authResponse = await onSetupAuth(kind)\n      setAuthResponse(authResponse)\n    },\n    [setAuthResponse, onSetupAuth],\n  )\n\n  const handleSetup = useCallback(\n    (moviesPath: string | undefined, showsPath: string | undefined) => {\n      if (authResponse === undefined) return\n\n      const provider = { ...authResponse, moviesPath, showsPath }\n      onAddProvider(provider)\n      onClose()\n    },\n    [authResponse, onAddProvider, onClose],\n  )\n\n  return (\n    <div className=\"AddProviderModal\">\n      <Modal isActive={isActive} onClose={onClose}>\n        {authResponse === undefined ? (\n          <ChooseProvider onChoose={handleChoose} />\n        ) : (\n          <SetupProvider onSetup={handleSetup} />\n        )}\n      </Modal>\n    </div>\n  )\n}\n","import './UpdateProviderModal.scss'\nimport React, { useCallback } from 'react'\nimport { Modal } from '../Modal'\nimport { Provider } from '../../types/providers/Provider'\nimport { ProviderForm } from './ProviderForm'\nimport { buildProviderKindName } from '../../util'\nimport { useTranslation } from 'react-i18next'\n\ntype UpdateProviderModalProps = {\n  isActive: boolean\n  provider: Provider\n\n  onClose: () => void\n  onUpdateProvider: (provider: Provider) => void\n  onRemoveProvider: () => void\n}\n\nexport const UpdateProviderModal = ({\n  isActive,\n  provider,\n  onClose,\n  onUpdateProvider,\n  onRemoveProvider,\n}: UpdateProviderModalProps) => {\n  const { t } = useTranslation()\n\n  const handleUpdate = useCallback(\n    (moviesPath: string | undefined, showsPath: string | undefined) => {\n      onUpdateProvider({ ...provider, moviesPath, showsPath })\n      onClose()\n    },\n    [onClose, onUpdateProvider, provider],\n  )\n\n  const handleRemoveProvider = useCallback(() => {\n    if (!window.confirm(t('Are you sure?'))) return\n\n    onRemoveProvider()\n    onClose()\n  }, [onClose, onRemoveProvider, t])\n\n  return (\n    <div className=\"UpdateProviderModal\">\n      <Modal isActive={isActive} onClose={onClose}>\n        <h2>{buildProviderKindName(provider.kind)}</h2>\n        <p>{provider.name}</p>\n        <ProviderForm\n          submitCaption={t('Update')}\n          provider={provider}\n          onSubmit={handleUpdate}\n        />\n        <button className=\"secondary\" onClick={handleRemoveProvider}>\n          {t('Remove')}\n        </button>\n      </Modal>\n    </div>\n  )\n}\n","import './Settings.scss'\nimport { AppDispatch, RootState } from '../../store'\nimport { Provider, ProviderKind } from '../../types/providers/Provider'\nimport React, { useCallback, useState } from 'react'\nimport { Trans, useTranslation } from 'react-i18next'\nimport { fetchAllMetadata, index } from '../../store/thunks'\nimport { removeProvider, updateProvider } from '../../store/auth/actions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { AddIcon } from '../../components/icons/Nucleo/AddIcon'\nimport { AddProviderModal } from '../../components/authentication/AddProviderModal'\nimport { ProviderButton } from '../../components/ProviderButton'\nimport { UpdateProviderModal } from '../../components/authentication/UpdateProviderModal'\nimport { VERSION } from '../../constants'\nimport { buildProviderIcon } from '../../util'\nimport classNames from 'classnames'\nimport { load } from '../../store/ui/thunks'\nimport { providersSelector } from '../../store/auth/selectors'\nimport { setupAuth } from '../../store/auth/thunks'\nimport styles from '../../_variables.scss'\n\nexport const Settings = () => {\n  const dispatch = useDispatch<AppDispatch>()\n  const { t } = useTranslation()\n\n  const providers = useSelector((state: RootState) =>\n    providersSelector(state.auth),\n  )\n\n  const handleSetupAuth = useCallback(\n    (kind: ProviderKind) => dispatch(load(setupAuth(kind))),\n    [dispatch],\n  )\n\n  const handleUpdateProvider = useCallback(\n    (provider: Provider) => {\n      dispatch(updateProvider(provider))\n      dispatch(load(index([provider])))\n    },\n    [dispatch],\n  )\n\n  const handleIndex = useCallback(() => dispatch(load(index(providers))), [\n    dispatch,\n    providers,\n  ])\n\n  const handleFetchMetadataAll = useCallback(\n    () => dispatch(load(fetchAllMetadata())),\n    [dispatch],\n  )\n\n  const handleRemoveProvider = useCallback(\n    (id: string) => () => dispatch(removeProvider(id)),\n    [dispatch],\n  )\n\n  const [showAddProviderModal, setShowAddProviderModal] = useState(false)\n  const [showUpdateProviderModals, setShowUpdateProviderModals] = useState<{\n    [index: number]: boolean\n  }>(providers.reduce((acc, _, index) => ({ ...acc, [index]: false }), {}))\n\n  const handleShowUpdateProviderModal = useCallback(\n    (index: number) => () =>\n      setShowUpdateProviderModals((state) => ({ ...state, [index]: true })),\n    [setShowUpdateProviderModals],\n  )\n  const handleCloseUpdateProviderModal = useCallback(\n    (index: number) => () =>\n      setShowUpdateProviderModals((state) => ({ ...state, [index]: false })),\n    [setShowUpdateProviderModals],\n  )\n\n  const handleShowAddProviderModal = useCallback(\n    () => setShowAddProviderModal(true),\n    [setShowAddProviderModal],\n  )\n  const handleCloseAddProviderModal = useCallback(\n    () => setShowAddProviderModal(false),\n    [setShowAddProviderModal],\n  )\n\n  return (\n    <div className=\"Settings\">\n      <section className=\"Settings__auth\">\n        <h2>{t('Authentication')}</h2>\n        <p>\n          {t(\n            'Sign into your cloud to add your movies and TV shows to your library.',\n          )}\n        </p>\n        <div className=\"Settings__auth__scroll\">\n          <div className=\"Settings__auth__providers\">\n            {providers.map((provider, index) => (\n              <div className=\"Settings__auth__provider\" key={index}>\n                <ProviderButton\n                  className={classNames('primary', {\n                    warn:\n                      provider.moviesPath === undefined &&\n                      provider.showsPath === undefined,\n                  })}\n                  icon={buildProviderIcon(provider.kind, styles.white)}\n                  onClick={handleShowUpdateProviderModal(index)}\n                />\n                <UpdateProviderModal\n                  isActive={showUpdateProviderModals[index]}\n                  provider={provider}\n                  onClose={handleCloseUpdateProviderModal(index)}\n                  onUpdateProvider={handleUpdateProvider}\n                  onRemoveProvider={handleRemoveProvider(provider.id)}\n                  key={7}\n                />\n              </div>\n            ))}\n            <div className=\"Settings__auth__provider\" key={providers.length}>\n              <ProviderButton\n                icon={<AddIcon color={styles.white} />}\n                onClick={handleShowAddProviderModal}\n                key={5}\n              />\n              <AddProviderModal\n                isActive={showAddProviderModal}\n                onClose={handleCloseAddProviderModal}\n                onSetupAuth={handleSetupAuth}\n                onAddProvider={handleUpdateProvider}\n                key={7}\n              />\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"Settings__indexing\">\n        <h2>{t('Indexing')}</h2>\n        <p>\n          {t(\n            'Index to look for new media on your linked services or fetch the latest metadata.',\n          )}\n        </p>\n        <div className=\"Settings__indexing__actions\">\n          <button onClick={handleIndex}>{t('Index')}</button>\n          <button onClick={handleFetchMetadataAll}>\n            {t('Update metadata')}\n          </button>\n        </div>\n      </section>\n\n      <section className=\"Settings__version\">\n        <h2>{t('Version')}</h2>\n        <p>{t('Plaain {{version}}.', { version: VERSION })}</p>\n        <p className=\"small\">\n          <Trans>\n            Plaain is{' '}\n            <a\n              href=\"https://github.com/jonhue/plaain\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              open-source\n            </a>\n            . See the{' '}\n            <a\n              href=\"https://github.com/jonhue/plaain/releases\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              changelog\n            </a>\n            .\n          </Trans>\n        </p>\n        <p className=\"small\">\n          <Trans>\n            Note that Plaain may <span className=\"bold\">not</span> be used to\n            stream pirated content or publicly share your private media library.\n            You may only connect to your private cloud storage.\n          </Trans>\n        </p>\n      </section>\n    </div>\n  )\n}\n","import './Show.scss'\nimport { buildBackdropUrl, buildCoverUrl } from '../../util'\nimport { Backdrop } from '../../components/Backdrop'\nimport { Cover } from '../../components/Cover'\nimport { HorizontalSlide } from '../../components/HorizontalSlide'\nimport { NotFound } from '../NotFound'\nimport React from 'react'\nimport { RootState } from '../../store'\nimport { RouteComponentProps } from 'react-router'\nimport { seasonsByShowSelector } from '../../store/seasons/selectors'\nimport { showSelector } from '../../store/shows/selectors'\nimport { sortByNumber } from '../../util'\nimport { useSelector } from 'react-redux'\nimport { useTranslation } from 'react-i18next'\n\ninterface ShowParams {\n  id: string\n}\n\ntype ShowProps = RouteComponentProps<ShowParams>\n\nexport const Show = ({ match }: ShowProps) => {\n  const { t } = useTranslation()\n\n  const show = useSelector((state: RootState) =>\n    showSelector(match.params.id)(state.shows),\n  )\n\n  const seasons = useSelector(\n    (state: RootState) =>\n      show &&\n      sortByNumber(\n        seasonsByShowSelector(show.id)(state.seasons),\n        (season) => season.number,\n      ),\n  )\n\n  return show !== undefined && seasons !== undefined ? (\n    <div className=\"Show\">\n      <Backdrop url={buildBackdropUrl(show.backdropPath)} />\n      <div className=\"Show__details\">\n        <Cover url={buildCoverUrl(show.posterPath)} alt=\"poster\" />\n        <h1>{show.title}</h1>\n        <div className=\"Show__information\">\n          <p className=\"small\">\n            {new Date(show.firstAirDate).getFullYear()} -{' '}\n            {new Date(show.lastAirDate).getFullYear()}\n          </p>\n        </div>\n        <p className=\"Show__overview\">{show.summary}</p>\n      </div>\n      {seasons.length > 0 && (\n        <div className=\"Show__seasons\">\n          <h2>{t('Seasons')}</h2>\n          <HorizontalSlide items={seasons} id=\"seasons\" />\n        </div>\n      )}\n    </div>\n  ) : (\n    <NotFound />\n  )\n}\n","import './Shows.scss'\nimport { Link, Redirect } from 'react-router-dom'\nimport { FindIcon } from '../../components/icons/Nucleo/FindIcon'\nimport { ItemGrid } from '../../components/ItemGrid'\nimport React from 'react'\nimport { RootState } from '../../store'\nimport { VerticalSlide } from '../../components/VerticalSlide'\nimport { showsSelector } from '../../store/shows/selectors'\nimport { sortAlphabetically } from '../../util'\nimport styles from '../../_variables.scss'\nimport { useSelector } from 'react-redux'\n\nexport const Shows = () => {\n  const shows = useSelector((state: RootState) =>\n    sortAlphabetically(showsSelector(state.shows), (show) => show.title),\n  )\n\n  return shows.length > 0 ? (\n    <div className=\"Shows\">\n      <div className=\"Shows__find\">\n        <Link to=\"/app/find\">\n          <FindIcon color={styles.white} />\n        </Link>\n      </div>\n      <VerticalSlide items={shows} path=\"shows\" id=\"shows\" />\n      <ItemGrid items={shows} />\n    </div>\n  ) : (\n    <Redirect to=\"/app\" />\n  )\n}\n","import './index.scss'\nimport { Route, RouteComponentProps, Switch } from 'react-router-dom'\nimport { Find } from './Find'\nimport { Home } from './Home'\nimport { Movie } from './Movie'\nimport { Movies } from './Movies'\nimport { Nav } from '../../components/Nav'\nimport { NotFound } from '../NotFound'\nimport { Person } from './Person'\nimport React from 'react'\nimport { RootState } from '../../store'\nimport { Season } from './Season'\nimport { Settings } from './Settings'\nimport { Show } from './Show'\nimport { Shows } from './Shows'\nimport { useSelector } from 'react-redux'\n\ntype AppProps = RouteComponentProps\n\nconst App = ({ match }: AppProps) => {\n  const { moviesCount, showsCount } = useSelector((state: RootState) => ({\n    moviesCount: Object.keys(state.movies).length,\n    showsCount: Object.keys(state.shows).length,\n  }))\n\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route path={`${match.path}/`} exact component={Home} />\n        <Route path={`${match.path}/movies/:id`} exact component={Movie} />\n        <Route path={`${match.path}/movies`} component={Movies} />\n        <Route path={`${match.path}/shows/:id`} exact component={Show} />\n        <Route path={`${match.path}/shows`} component={Shows} />\n        <Route path={`${match.path}/seasons/:id`} exact component={Season} />\n        <Route path={`${match.path}/people/:id`} exact component={Person} />\n        <Route path={`${match.path}/settings`} exact component={Settings} />\n        <Route path={`${match.path}/find`} exact component={Find} />\n        <Route component={NotFound} />\n      </Switch>\n\n      <Nav\n        moviesDisabled={moviesCount === 0}\n        showsDisabled={showsCount === 0}\n      />\n    </div>\n  )\n}\n\nexport default App\n"],"sourceRoot":""}